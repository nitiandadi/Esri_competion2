import{gi as $,es as C,kN as O,kO as q,aN as x,t as I,px as z,jm as F,py as G,r as k,a2 as E}from"./MapView-d4248bee.js";import{a as N}from"./elevationInfoUtils-be893fde.js";async function B(s,d,p,f,r){const{elevationProvider:h,renderCoordsHelper:c,spatialReference:b}=s,{elevationInfo:y}=d,m=O(y,!0),w=await q(m,b,r);x(r);const i=[],u=new Set,l=new Set;for(const{objectId:e,points:a}of f){const n=p(e);if(I(n)){for(const o of a)i.push(o[2]);u.add(e);continue}n.isDraped&&l.add(e);const t=n.graphic.geometry;S.setFromElevationInfo(N(t,y)),S.updateFeatureExpressionInfoContext(w,n.graphic,d),g.spatialReference=s.spatialReference;for(const{x:o,y:R,z:D}of a)g.x=o,g.y=R,g.z=D??0,z(g,h,S,c,j),i.push(j.z)}return{elevations:i,drapedObjectIds:l,failedObjectIds:u}}const S=new F,g=$(0,0,0,C.WGS84),j=new G;async function H(s,d,p){if(I(s)||d.candidates.length===0)return v;const f=s.graphics3DGraphicsByObjectID??s.graphics3DGraphics,r=[],h=[],{renderer:c}=s,b=k(c)&&"arcadeRequired"in c&&c.arcadeRequired?E():null,y=async(e,{graphic:a,graphics3DSymbol:n})=>{const t=await b,o=await s.getRenderingInfoAsync(a,c,t,{signal:p});return I(o)?[]:n.queryForSnapping(e,w,o,p)},{candidates:m,spatialReference:w}=d;for(let e=0;e<m.length;++e){const a=m[e],{objectId:n}=a,t=typeof n=="number"?f==null?void 0:f.get(n):void 0;if(I(t))continue;const{graphics3DSymbol:o}=t;o.symbologySnappingSupported&&(r.push(y(a,t)),h.push(e))}if(r.length===0)return v;const i=await Promise.all(r);x(p);const u=[],l=[];for(let e=0;e<i.length;++e){const a=i[e],n=h[e];for(const t of a)u.push(t),l.push(n)}return{candidates:u,sourceCandidateIndices:l}}const v={candidates:[],sourceCandidateIndices:[]};export{H as a,B as m};
