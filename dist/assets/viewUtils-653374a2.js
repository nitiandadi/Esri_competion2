import{t as m,a3 as g,c4 as d,gg as h,gh as R,gi as j,bY as l,gj as $,fD as S,gk as x,gl as C,gm as f}from"./MapView-d4248bee.js";import{h as T}from"./elevationInfoUtils-be893fde.js";function D(t){var s,n;const r="metric";if(m(t))return r;const a=t.map,e=(a&&"portalItem"in a?(s=a.portalItem)==null?void 0:s.portal:null)??g.getDefault();switch(((n=e.user)==null?void 0:n.units)??e.units){case r:return r;case"english":return"imperial"}return d(h(t.spatialReference),r)}function I(t,r,a,e){a.projectToRenderScreen(t,u),a.projectToRenderScreen(r,p),x(e,p,u),C(e,e)}function b(t,r,a,e,s=l()){const n=S(i,t);return n[2]=T(e,n,r,a)||0,e.renderCoordsHelper.toRenderCoords(n,r,s),s}function k(t,r,a,e){return e.type==="2d"?(o.x=t[0],o.y=t[1],o.spatialReference=r,e.toScreen(o)):(b(t,r,a,e,i),e.state.camera.projectToScreen(i,c),R(c[0],c[1]))}const o=j(0,0,0,null),i=l(),u=f(),p=f(),c=$();export{b as f,D as i,I as p,k as u};
