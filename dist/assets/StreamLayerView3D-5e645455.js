import{e as r,y as o,a as d,k as $,as as k,v as P,au as f,eL as T,m as g,r as u,a4 as U,dM as x,dS as R,b as E,x as G}from"./MapView-d4248bee.js";import{n as j}from"./StreamFeatureManager-f1e947dc.js";import{createConnection as V}from"./createConnection-7a1aa335.js";import{r as L}from"./EventedSet-0c6da25d.js";import{w as C}from"./FeatureLikeLayerView3D-db0c636c.js";import{n as F}from"./LayerView3D-d82b3e07.js";import{u as N}from"./LayerView-374f7208.js";import"./index-9ba3f23e.js";import"./CircularArray-40ee6476.js";import"./dehydratedFeatureComparison-0ac2f54e.js";import"./queryForSymbologySnapping-bff12345.js";import"./elevationInfoUtils-be893fde.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-b1c745af.js";import"./rendererConversion-90e15c15.js";import"./optimizedFeatureQueryEngineAdapter-fa5b86b1.js";import"./centroid-589c262e.js";import"./PooledRBush-848b4499.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-0e5abd53.js";import"./QueryEngineResult-000a2eb4.js";import"./WhereClause-34fcc82f.js";import"./executionError-fb3f283a.js";import"./utils-5fb83578.js";import"./ClassBreaksDefinition-6b9f5256.js";import"./projectionSupport-96272605.js";import"./json-48e3ea08.js";import"./utils-f77fba44.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-ae1793ee.js";import"./FeatureStore-15f08eb6.js";import"./BoundsStore-eb68ff23.js";import"./heatmapTextureUtils-d3b5e305.js";import"./projectExtentUtils-9657433f.js";const z=2500;let p=class extends U{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],p.prototype,"objectId",void 0),p=r([d("esri.layers.graphics.controllers.StreamGraphic")],p);class B{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const s=this._idToGraphic.get(t);return s?(s.sourceLayer=s.layer=null,this._idToGraphic.delete(t),s):null}update(t,s){this.onUpdate(t,s)}get size(){return this._idToGraphic.size}}let a=class extends $(k(P)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new L,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=f(this.connection),this.store=f(this.store),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:e,layerView:t}=this,{spatialReference:s,definitionExpression:i,geometryDefinition:l,objectIdField:h,timeInfo:v,purgeOptions:_,maxReconnectionAttempts:I,maxReconnectionInterval:w,customParameters:S}=e,b=e.geometryType?T.toJSON(e.geometryType):null,M=s,m=t.view.spatialReference,O={geometry:l,where:i};this.clear(),this._set("connection",V(e.parsedUrl,M,m,b,O,I,w,S??void 0)),this._outSpatialReference=m.toJSON(),this.store=new B(this._onUpdate.bind(this)),this.featuresManager=new j(this.store,h,v.toJSON(),_);const y="startup-watches";this.handles.remove(y),this.handles.add([e.on("send-message-to-socket",c=>this.connection.sendMessageToSocket(c)),e.on("send-message-to-client",c=>this.connection.sendMessageToClient(c)),this.connection.on("data-received",c=>this._onFeature(c)),this.connection.on("message-received",c=>this._onWebSocketMessage(c)),g(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],y),this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{u(e.geometry)&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._outSpatialReference);const t=p.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){u(t)&&this.graphics.removeMany(t),u(e)&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const s=performance.now(),i=s-t;if(i>z){t=s;const l=Math.round(this._updateInfo.client/(i/1e3)),h=Math.round(this._updateInfo.websocket/(i/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:l,websocket:h})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};r([o()],a.prototype,"isPaused",void 0),r([o({constructOnly:!0})],a.prototype,"layer",void 0),r([o({constructOnly:!0})],a.prototype,"layerView",void 0),r([o()],a.prototype,"connection",void 0),r([o({readOnly:!0})],a.prototype,"updating",null),a=r([d("esri.layers.graphics.controllers.StreamController")],a);const J=e=>{let t=class extends e{constructor(...s){super(...s),this.connectionError=null,this.filter=null}get connectionStatus(){var s,i,l;return(s=this.controller)!=null&&s.isPaused?"paused":((l=(i=this.controller)==null?void 0:i.connection)==null?void 0:l.connectionStatus)??"disconnected"}};return r([o({readOnly:!0})],t.prototype,"connectionError",void 0),r([o({readOnly:!0})],t.prototype,"connectionStatus",null),r([o({type:x})],t.prototype,"filter",void 0),t=r([d("esri.layers.mixins.StreamLayerView")],t),t};let n=class extends J(C(F(N))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=R.ASYNC,this.hasZ=!0,this.hasM=!1,this._isUserPaused=!1}initialize(){this.handles.add(g(()=>this.suspended,e=>{this.controller&&(e?this.controller.pauseStream():this._isUserPaused||this.controller.resumeStream())}))}get connectionError(){const e=this.get("controller.connection.errorString");if(e)return new E("stream-controller",e)}pause(){this._isUserPaused=!0,this.controller.pauseStream()}resume(){this._isUserPaused=!1,this.controller.resumeStream()}createQuery(){return new G({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t==null?void 0:t.signal)}createController(){return new a({layer:this.layer,layerView:this})}beforeSetController(){}};r([o({readOnly:!0})],n.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],n.prototype,"connectionError",null),r([o()],n.prototype,"controller",void 0),r([o({readOnly:!0})],n.prototype,"hasZ",void 0),r([o({readOnly:!0})],n.prototype,"hasM",void 0),n=r([d("esri.views.3d.layers.StreamLayerView3D")],n);const Oe=n;export{Oe as default};
