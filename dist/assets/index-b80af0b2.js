import{j as xt,k as Vt,d as re,b as z,o as ie,l as Ue,a as k,c as R,f as y,g as _,w as q,G as Gt,S as Jt,B as qe,T as We,p as bt,i as Et,v as H,_ as Ze,r as zt,u as w,L as qt,M as J,O as X,P as Y,Q as K,n as me,q as pe,J as Ht,F as Ut,N as Le}from"./index-9ba3f23e.js";import{u as Q}from"./mapviewstore-4805ae67.js";import{a as De}from"./useTime-ca88e827.js";import{H as M,P as Ae,aC as Wt,b as f,a2 as Zt,aD as Xt,aE as Yt,aF as Kt,r as A,t as Be,a5 as Re,aG as ea,x as Lt,aH as ta,aI as aa,_ as ra,aJ as fe,aK as ia,e as F,y as L,a as B,aL as Ct,aM as sa,a0 as na,aN as T,aO as oa,ad as la,aP as ua,j as Z,aQ as Tt,s as ca,ah as da,aR as Xe,ag as $t,ai as U,aS as ma,aT as pa,aU as fa,aV as te,o as $,a4 as it,a1 as ya,N as Qe,aW as st,u as kt}from"./MapView-d4248bee.js";import{u as nt}from"./visitorLayer-9a30f3f8.js";import{w as ot,u as ha,c as ga}from"./onLayerstore-2aa4cd13.js";import"./PointSizeSplatAlgorithm-89325c27.js";import{a as wa,n as va}from"./ClassBreaksDefinition-6b9f5256.js";import{x as we,N as C,d as ae,p as Ye,c as Ke,b as Ce,v as et,z as Fa,j as lt}from"./statsWorker-6ee59616.js";import{n as Sa}from"./QueryTask-ea23d82b.js";import{$ as Pe,c as Te,T as Fe,m as _a,x as ye,N as ut,S as ct,s as xa}from"./utils-5fb83578.js";import"./liquidFillView-0a9aeed9.js";import Va from"./MapImageLayer-f30b1705.js";import"./GraphicsLayer-7eb64ef4.js";import{a as ba}from"./axios-760d4776.js";import{E as Nt}from"./EhcartsLayer-9a927d9d.js";import"./EffectView-a19236b0.js";import"./ExportImageParameters-90912122.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-1691c184.js";import"./pixelRangeUtils-03719dd8.js";import"./rendererConversion-90e15c15.js";import"./executeForIds-0ada4d1c.js";import"./SublayersOwner-418493a7.js";import"./imageBitmapUtils-b51eba16.js";const Ea=xt("hotelheatmap",()=>{Q();let e=Q().getView();new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E9%9D%92%E6%B5%B7%E4%BD%8F%E5%AE%BF%E6%95%B0%E6%8D%AE/FeatureServer"});const t=new Ae({field:"name",colorStops:[{ratio:0,color:"rgba(255, 0, 0, 0)"},{ratio:.2,color:"rgba(255, 0, 0, 0.3)"},{ratio:.4,color:"rgba(255, 0, 0, 0.6)"},{ratio:.6,color:"rgba(255, 0, 0, 0.8)"},{ratio:1,color:"rgba(255, 0, 0, 1)"}]});function a(){var r=new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E9%9D%92%E6%B5%B7%E4%BD%8F%E5%AE%BF%E6%95%B0%E6%8D%AE/FeatureServer",renderer:t});e.map.add(r)}return{initmap:a}});let ge=class oe{async open(t){this.connection=await Wt("statsWorker",{strategy:"distributed",signal:t})}destroy(){var t;(t=this.connection)==null||t.close()}static getInstance(){return oe.instance||(oe.instance=new oe),oe.instance}async summaryStatistics(t,a){if(!this.connection)throw new f("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new f("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new f("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new f("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new f("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};const D=",",xe={light:["streets","gray","topo","terrain","national-geographic","oceans","osm","gray-vector","streets-vector","topo-vector","streets-relief-vector","streets-navigation-vector","arcgis-light-gray","arcgis-navigation","arcgis-streets","arcgis-streets-relief","arcgis-topographic","arcgis-oceans","osm-standard","osm-standard-relief","osm-streets","osm-streets-relief","osm-light-gray","arcgis-terrain","arcgis-charted-territory","arcgis-community","arcgis-colored-pencil","arcgis-modern-antique","arcgis-midcentury","arcgis-newspaper","arcgis-hillshade-light"],dark:["satellite","hybrid","dark-gray","dark-gray-vector","streets-night-vector","arcgis-imagery","arcgis-imagery-standard","arcgis-dark-gray","arcgis-navigation-night","arcgis-streets-night","osm-dark-gray","arcgis-nova","arcgis-hillshade-dark"]},dt={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},za=["integer","small-integer"];let $e=null;async function ee(e){const{field:t,field2:a,field3:r,normalizationField:i,valueExpression:s}=e;let n=[];if(s){if(!$e){const{arcadeUtils:o}=await Zt();$e=o}n=$e.extractFieldNames(s)}return t&&n.push(t),a&&n.push(a),r&&n.push(r),i&&n.push(i),n}function ne(e){return String(e).padStart(2,"0")}function mt(e,t,a){let r;return t==="date"||t==="number"?(t==="number"&&(e=new Date(e)),r=`TIMESTAMP'${a?e.getFullYear():e.getUTCFullYear()}-${ne((a?e.getMonth():e.getUTCMonth())+1)}-${ne(a?e.getDate():e.getUTCDate())} ${ne(a?e.getHours():e.getUTCHours())}:${ne(a?e.getMinutes():e.getUTCMinutes())}:${ne(a?e.getSeconds():e.getUTCSeconds())}'`):r=e,r}function qa(e,t,a,r){const{hasQueryEngine:i}=e;let s=`(${mt(a,pt(e,a),i)} - ${mt(t,pt(e,t),i)})`;i&&(s=`(${s} * ${dt.milliseconds})`);let n=dt[r],o="/";return n<1&&(n=1/n,o="*"),{sqlExpression:n===1?s:`(${s} ${o} ${n})`,sqlWhere:null}}function pt(e,t){if(t instanceof Date)return"date";if(typeof t=="number")return"number";if(typeof t=="string"){const a=e.getField(t);if(t.toLowerCase()==="<now>")return;if(a&&a.type==="date")return"field"}}function It(e,t=xe){for(const a in t)if(t[a].includes(e))return a}function Mt(e,t,a=!0){let r=null;return e&&(typeof e=="string"?t.includes(e)&&(r=e):r=Xt(e)),a?r||"gray":r}function Ot(e,t){const a=t&&e.getField(t);return a&&za.includes(a.type)}function le(e){return`cast(${e} as float)`}async function La(e,t,a,r){return Ca(e,t,a,r).then(i=>$a(t,i,a,r))}async function Ca(e,t,a,r){var c;const i={...r},s=ka(t,a),n=((c=t.outStatistics)==null?void 0:c[0])!=null,o=Yt("featurelayer-pbf-statistics"),l=!n||o;let u;if((a==null?void 0:a.format)==="pbf"&&l)try{u=await Sa(e,s,i)}catch(d){if(d.name!=="query:parsing-pbf")throw d;a.format="json"}return(a==null?void 0:a.format)!=="json"&&l||(u=await Kt(e,s,i)),Ta(a==null?void 0:a.fieldsIndex,u.fields),u}function Ta(e,t){if(A(e)&&A(t))for(const a of t){const r=e.get(a.name);r&&Object.assign(a,r.toJSON())}}async function $a(e,t,a,r){const i=a==null?void 0:a.infoFor3D;if(!Dt(e,i)||Be(i)||!t.assetMaps||!t.features||!t.features.length)return Re.fromJSON(t);const{meshFeatureSetFromJSON:s}=await ea(Vt(()=>import("./meshFeatureSet-bef357ae.js"),["assets/meshFeatureSet-bef357ae.js","assets/MapView-d4248bee.js","assets/index-9ba3f23e.js","assets/index-fecf00a2.css","assets/georeference-6dd2b68f.js"]),r);return s(e,i,t)}function ka(e,t){let a=Lt.from(e);a.sourceSpatialReference=a.sourceSpatialReference??(t==null?void 0:t.sourceSpatialReference)??null,(t!=null&&t.gdbVersion||t!=null&&t.dynamicDataSource)&&(a=a===e?a.clone():a,a.gdbVersion=e.gdbVersion||t.gdbVersion,a.dynamicDataSource=e.dynamicDataSource?ta.from(e.dynamicDataSource):t.dynamicDataSource);const r=t==null?void 0:t.infoFor3D;if(A(r)&&Dt(e,r)){a=a===e?a.clone():a,a.formatOf3DObjects=null;for(const i of r.queryFormats){if(i==="3D_glb"){a.formatOf3DObjects=i;break}i!=="3D_gltf"||a.formatOf3DObjects||(a.formatOf3DObjects=i)}if(!a.formatOf3DObjects)throw new f("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(Be(a.outFields)||!a.outFields.includes("*")){a=a===e?a.clone():a,Be(a.outFields)&&(a.outFields=[]);const{originX:i,originY:s,originZ:n,translationX:o,translationY:l,translationZ:u,scaleX:c,scaleY:d,scaleZ:m,rotationX:p,rotationY:g,rotationZ:h,rotationDeg:v}=r.transformFieldRoles;a.outFields.push(i,s,n,o,l,u,c,d,m,p,g,h,v)}}return a}function Dt(e,t){return A(t)&&e.returnGeometry===!0&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}async function Na(e,t,a,r){const i=aa(e),{source:s,checkValueRange:n}=t,{classificationDefinition:o}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=(o==null?void 0:o.type)==="class-breaks-definition"?o.classificationField:o==null?void 0:o.attributeField,s){const p={source:s==null?void 0:s.toJSON()};l.layer=JSON.stringify(p)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let c={query:l};r&&(c={...r,...c});const d={url:i.path,field:u,checkValueRange:n},m=i.path+"/generateRenderer";return ra(m,c).then(p=>Ia(d,p))}function Ia(e,t){const{field:a,checkValueRange:r,url:i}=e,s=t&&t.data;if(!s)return;if(!r){const u=ft(s);return Promise.resolve(u)}const n=new fe({statisticType:"min",onStatisticField:a}),o=new fe({statisticType:"max",onStatisticField:a}),l=new Lt({outStatistics:[n,o]});return La(i,l).then(u=>{const c=u.features[0].attributes;let d=null,m=null;for(const p in c)p.toLowerCase().indexOf("min")===0?d=c[p]:m=c[p];return ft(s,d,m)})}function ft(e,t,a){if(e.type==="classBreaks"){const i=ia(e);return{classBreaks:i.classBreakInfos.map((s,n)=>(n===0&&t!=null&&(s.minValue=t),n===i.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label})),normalizationTotal:i.normalizationTotal}}const{uniqueValueInfos:r}=e;return{uniqueValues:(r==null?void 0:r.map((i,s)=>(s===0&&t!=null&&(i.value=t),s===r.length-1&&a!=null&&(i.value=a),{count:i.count,value:i.value,label:i.label})))??[]}}let ue=class extends Ct{constructor(t){super(t),this.classificationDefinition=null,this.where=null}};F([L({json:{name:"classificationDef",write:!0}})],ue.prototype,"classificationDefinition",void 0),F([L({type:String,json:{write:!0}})],ue.prototype,"where",void 0),ue=F([B("esri.rest.support.GenerateRendererParameters")],ue);const ke=ue;let O=class extends Ct{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};F([sa({uniqueValueDef:"unique-value-definition"})],O.prototype,"type",void 0),F([L()],O.prototype,"attributeField",void 0),F([L()],O.prototype,"attributeField2",void 0),F([L()],O.prototype,"attributeField3",void 0),F([L({json:{write:!0}})],O.prototype,"fieldDelimiter",void 0),F([L({json:{write:!0}})],O.prototype,"uniqueValueFields",null),O=F([B("esri.rest.support.UniqueValueDefinition")],O);const Ma=O,At="no_dominant_category";function Oa(e){return{expression:Da(e,{returnFieldName:!0,defaultValue:`'${At}'`})}}function Da(e,t){const{returnFieldName:a,defaultValue:r,layer:i}=t,s=[];if(a&&r){const n=e.map(o=>`${o} <= 0`).join(" AND ");s.push(`WHEN ${n} THEN ${r}`)}for(const n of e){const o=e.reduce((c,d)=>(n!==d&&c.push(`${n} > ${d}`),c),[]).join(" AND "),l=i&&Ot(i,n),u=a&&`'${n}'`?`'${n}'`:l?le(n):n;s.push(`WHEN ${o} THEN ${u}`)}return`CASE ${s.join(" ")} ELSE ${r||"0"} END`}function Aa(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function Ba(e,t=!1){const a=e.map(i=>`"${i}"`),r=`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `;return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?r:""}
  }
  `}function tt(e){const t=Ba(e);return`
  ${Aa(e)}
  ${t}
  return maxValueField;
  `}let I=class extends na{constructor(t){super(t)}};F([L({constructOnly:!0})],I.prototype,"layer",void 0),F([L()],I.prototype,"geometryType",void 0),F([L()],I.prototype,"objectIdField",void 0),F([L()],I.prototype,"supportsSQLExpression",void 0),F([L()],I.prototype,"hasQueryEngine",void 0),F([L()],I.prototype,"minScale",void 0),F([L()],I.prototype,"maxScale",void 0),F([L()],I.prototype,"fullExtent",void 0),I=F([B("esri.smartMapping.support.adapters.LayerAdapter")],I);const Bt=I,Ra=/_value$/i,Qa=Math.LOG10E;function he(e){return e.map(t=>t.toJSON())}function yt(e,t){var s;const a=[],r="featureReduction"in e.layer&&e.layer.featureReduction;if((r==null?void 0:r.type)!=="binning"||!t)return a;const i="fields"in r?(s=r.fields)==null?void 0:s.map(n=>{var o;return(o=n.name)==null?void 0:o.toLowerCase()}).filter(Boolean):null;for(const n of t)i.includes(n.toLowerCase())||a.push(n);return a}function Ve(e,t,a){const r=[];if(t)for(const i of t){const s=e.getField(i);"availableFields"in a&&!a.availableFields.includes(s.name)&&r.push(s.name)}return r}function je(e,t){const a=e&&e.features,r=a&&a[0]&&a[0].attributes,i={};for(const s in r)i[s.replace(Ra,"").toLowerCase()]=r[s];return i.totalcount!=null&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&i.min!=null&&i.stddev==null&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(s=>{i[s]!=null&&(i[s]=Math.ceil(i[s]))}),i.min===i.max&&i.min!=null&&(i.avg=i.min,i.stddev=i.variance=0)),i}function Pa(e){const t=[],a=e.classBreaks,r=a[0].minValue,i=a[a.length-1].maxValue;a.forEach(n=>{t.push([n.minValue,n.maxValue])});const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:r,max:i,intervals:t,sqlExpr:ce(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function ce(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:s}=e,n=Ot(s,t);let o=t;return a==="percent-of-total"?o=`((${n?le(t):t} / ${i}) * 100)`:a==="log"?o=`(log(${t}) * ${Qa})`:a==="field"?o=`(${n?le(t):t} / ${r})`:a==="natural-log"?o=`(log(${n?le(t):t}))`:a==="square-root"&&(o=`(power(${n?le(t):t}, 0.5))`),o}function Rt(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()!==t){a=e[r];break}}return a}function de(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()===t){a=e[r];break}}return a}function Qt(e,t,a,r,i){const s={},n="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,c=Rt(u,n),d=de(u,n);c!==0&&(s[c]=d)});const o=[];return Pe(t,a,r).forEach((l,u)=>{const c=(u+1).toString();o.push({minValue:l[0],maxValue:l[1],count:s.hasOwnProperty(c)?s[c]:0})}),{bins:o,minValue:t,maxValue:a,normalizationTotal:i}}function be(e,t){const a=e&&e.features,{field:r,field2:i,field3:s,fieldDelimiter:n,layer:o,view:l,signal:u,labels:c}=t,d=`countOF${(!r||!i)&&r||"Expr"}`,m={};let p=!1;if(a.forEach(g=>{const h=g.attributes,v=de(h,d);let V=r?de(h,r):Rt(h,d),x=i?de(h,i):null,E=s?de(h,s):null;V===null&&v===0&&(p=!0),(V==null||typeof V=="string"&&V.trim()==="")&&(V=null),i&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),s&&(E==null||typeof E=="string"&&E.trim()==="")&&(E=null);let b=V;i&&(b=`${Te(b)}${n}${Te(x)}`,s&&(b=`${b}${n}${Te(E)}`)),m[b]==null?m[b]={count:v,data:b}:m[b].count=m[b].count+v}),r&&p){const g=r+" is NULL";return o.queryFeatureCount({whereClause:g,view:l,signal:u}).then(h=>(h=h||0,m.null.count=m.null.count+h,Ne(m,c))).catch(()=>(T(u),Ne(m,c)))}return Promise.resolve(Ne(m,c))}function Ne(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Ie(e,t,a){const r=e?a.getField(e):null,i=r?a.getFieldDomain(r.name):null;if(i)return i;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),n=s.map(o=>({code:o.value}));return new la({codedValues:n})}async function Ee(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:r,field3:i}=e;if(a&&!r){const n=a?t.getField(a):null,o=n?t.getFieldDomain(n.name):null;return o?[o]:[]}const s=[];return a&&(s.push(Ie(a,e,t)),r&&(s.push(Ie(r,e,t)),i&&s.push(Ie(i,e,t)))),Promise.all(s)}function ht(e,t){return qa(e,new Date(0),t,"milliseconds").sqlExpression}function N(e){var t;return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:(t=e.spatialReference)==null?void 0:t.toJSON()}}function at(e,t){const a=e.map(i=>i.value),r=t.filter(i=>!a.includes(i));for(const i of r)e.push({value:i,count:0});e.sort((i,s)=>t.indexOf(i.value)-t.indexOf(s.value));for(const i of e)i.value===At&&(i.value=null);return{predominantCategoryInfos:e}}function gt(e){const t="featureReduction"in e&&e.featureReduction;return("fields"in t&&t.fields||[]).map(a=>{const r=ja(a,e.fieldsIndex);return r?new oa({type:r,name:a.name,alias:a.alias}):null}).filter(Boolean)}function ja(e,t){var a,r;switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?((a=t.get(e.onStatisticField))==null?void 0:a.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?((r=t.get(e.onStatisticField))==null?void 0:r.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}const Me=5,ve=10,wt=2e4,Ga=4e5;let Oe,Se=class extends Bt{constructor(e){super(e)}destroy(){var e;this._hasLocalSource=null,(e=this.workerClient)==null||e.destroy()}_isStatsSupportedOnService(){const e=this.layer;return!e.get("capabilities.query.supportsStatistics")||this.geometryType==="multipatch"&&!ua(e.url)&&e.version<10.5?Promise.reject(new f("feature-layer-adapter:not-supported","Layer does not support statistics query")):Promise.resolve()}async _waitForLayerViewUpdate(e){if(!e)throw new f("feature-layer-adapter:insufficient-data","layerView is required to fetch the features");const t=new AbortController,a=Z(()=>!e.updating,t.signal);await Tt(a,5e3,t).catch(r=>{throw ca.getLogger(this.declaredClass).warn("LayerView is taking too long to update. Aborting fetch from layerView."),r})}async _fetchFeaturesFromMemory(e,t,a,r){const i=this.layer,s=r==="json";if(this._hasLocalSource){const o=await i.queryFeatures(t);return s?he(o.features):o.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:o}=await e.queryFeaturesJSON(t,{signal:a});return o}const n=await e.queryFeatures(t,{signal:a});return s?he(n.features):n.features}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(he)}_fetchFeaturesForStats(e,t){return ee({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Me,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(r=>{let i,s,n;if(r.classBreakInfos.some(l=>(l.hasAvg&&(i=l),!!i)),i){const l=i.maxValue-i.minValue;s=i.minValue+l/2,n=4*l}const o={min:r.minValue,max:r.maxValue,avg:s,stddev:n};return Fe(o)})}_getSummaryStatsQuery(e,t){const{field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,minValue:n,maxValue:o,filter:l}=e,u=this.supportsSQLExpression&&t?ht(this,a):e.sqlExpression,c=ce({field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,layer:this}),d=u||c,m=d?Ce(d,n,o):null,p=we({field:a,normalizationField:i,normalizationType:r}),g=C(e.sqlWhere,p),h=C(g,m),v=_a({normalizationField:i,normalizationType:r,sqlExpression:u,supportsSQLExpression:this.supportsSQLExpression,minValue:n,maxValue:o}),V=da(this.getField(a)),x=xa.filter(b=>b==="nullcount"?v:!V||b==="count"),E=this.layer.createQuery();return E.where=C(E.where,h),E.sqlFormat=u?"standard":null,E.outStatistics=x.map(b=>{const P=new fe;let j=null,G=null,rt=`${b}_value`;return b==="variance"?(j="var",G=d):b==="nullcount"?(j="count",G=this.layer.objectIdField,rt="totalcount_value"):b==="median"?(j="percentile-continuous",G=d,P.statisticParameters={value:.5}):(j=b,G=d),P.statisticType=j,P.onStatisticField=G,P.outStatisticFieldName=rt,P}),this._updateQueryWithFeatureFilter(E,l),E}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=this._getSummaryStatsQuery(e,t),r=await this.layer.queryFeatures(a,{signal:e.signal}),i=je(r,t);return Fe(i)}async _summaryStatsFromClientQuery(e,t){const a=this._getSummaryStatsQuery(e,t),r=await this.layer.queryFeatures(a,{signal:e.signal}),i=je(r,t);return Fe(i)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:s,query:n}=t,o=(!r&&!i&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(n,{field:e},{signal:a}):r?await this.workerClient.summaryStatistics({field:e},r):await ae({attribute:{field:e},features:i})).sum;if(o==null)throw new f("feature-layer-adapter:invalid","invalid normalizationTotal");return o}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:n}=e,o={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue},{featuresJSON:l,graphics:u,layerView:c,query:d,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return i&&a&&(l||u)&&(o.fieldType=t!=null&&t.type?Xe.toJSON(t.type):null,o.viewInfoParams=N(a),o.fieldInfos=m),s==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:c,query:d},n)),!l&&!u&&c&&"querySummaryStatistics"in c?c.querySummaryStatistics(d,o,{signal:n}):l?this.workerClient.summaryStatistics(o,l):ae({attribute:o,features:u})}async _getFilteredFeatures(e,t){let a=[];if((t==null?void 0:t.spatialRelationship)==="intersects"){Oe||(Oe=await Vt(()=>import("./geometryEngineAsync-51c95e16.js"),["assets/geometryEngineAsync-51c95e16.js","assets/MapView-d4248bee.js","assets/index-9ba3f23e.js","assets/index-fecf00a2.css"]));const r=A(t.geometry)?t.geometry:null;for(const i of e){const s=A(i.geometry)?i.geometry:null;s&&r&&await Oe.intersect(s,r)&&a.push(i)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:s,field3:n,normalizationField:o,valueExpression:l,returnGeometry:u,layerViewFunc:c,signal:d}=e;let m=null,p=null,g=null,h=null,v=null;if(r)try{m=await r.whenLayerView(this.layer),p=c in m&&typeof m[c]=="function"}catch{p=!1}if(p)try{await this._waitForLayerViewUpdate(m);const V=await ee({field:i,field2:s,field3:n,normalizationField:o,valueExpression:l});Ve(this,V,m).length?p=!1:(g=this.layer.createQuery(),g.outFields=V,g.returnGeometry=!1,this._updateQueryWithFeatureFilter(g,a)),m.suspended&&(p=!1)}catch{p=!1}if(!p&&(h=await this._fetchFeaturesForStats({field:i,field2:s,field3:n,valueExpression:l,normalizationField:o,returnGeometry:u,filter:a,view:r,signal:d},"json"),v=(await ee({valueExpression:l})).map(V=>{var x;return(x=this.getField(V))==null?void 0:x.toJSON()}).filter(Boolean),!(h!=null&&h.length)))throw new f("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");return{layerView:m,query:g,featuresJSON:h,fieldInfos:v}}_uvFromGenRenderer(e,t){const a=e.field,r=new Ma;r.attributeField=a;const i=new ke;return i.classificationDefinition=r,this.generateRenderer(i,e.signal).then(s=>{const n={},o=this.getField(a);return s.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),n[u]==null?n[u]={count:l.count,data:$t(o)&&u?Number(u):u}:n[u].count=n[u].count+l.count}),{count:n}}).then(s=>ye(s,[t],e.returnAllCodedValues))}_getUVQueryOutStatistic(e,t){const a="countOF"+(e||"Expr"),r=new fe;return r.statisticType="count",r.onStatisticField=t?"1":e,r.outStatisticFieldName=a,r}_getUVQuery(e){const{field:t,field2:a,field3:r,sqlExpression:i}=e,s=!(!t||!a),n=this.layer.createQuery();return n.where=C(n.where,e.sqlWhere),n.sqlFormat=i?"standard":null,n.outStatistics=[this._getUVQueryOutStatistic(s?null:t,s?"1":i)].filter(Boolean),n.groupByFieldsForStatistics=[t||i,a,r].filter(Boolean),this._updateQueryWithFeatureFilter(n,e.filter),n}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(this._getUVQuery(e),{signal:e.signal})).then(a=>be(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:D,view:e.view,signal:e.signal})).then(a=>ye(a,t,e.returnAllCodedValues,D))}async _uvFromClientQuery(e,t){const{signal:a}=e,r=this._getUVQuery(e),i=await this.layer.queryFeatures(r,{signal:a}),s=await be(i,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:D,view:e.view,signal:e.signal});return ye(s,t,e.returnAllCodedValues,D)}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:n}=e,{featuresJSON:o,graphics:l,layerView:u,query:c,fieldInfos:d}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),m={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:D,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(o||l)&&(m.viewInfoParams=N(a),m.fieldInfos=d),!o&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(c,m,{signal:n}):o?this.workerClient.uniqueValues(m,o):Ye({attribute:m,features:l})}_calcBinsSQL(e,t,a){const r=[],i=t.length;return t.forEach((s,n)=>{const[o,l]=s;let u=null;u=n!==0||a?n!==i-1||a?C(`${e} >= ${o}`,`${e} ${n===i-1?" <= ":" < "} ${l}`):`${e} >= ${o}`:`${e} < ${l}`,r.push("WHEN ("+u+") THEN "+(n+1))}),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}_getNormalizationTotal(e,t,a,r){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,filter:a,signal:r}).then(i=>i.sum):Promise.resolve(null)}_getQueryParamsForExpr(e,t){const a=e.valueExpression||e.sqlExpression,r=e.signal;if(!a){const{field:i,normalizationType:s,normalizationField:n}=e,o=i?this.getField(i):null,l=U(o);return{sqlExpression:l?ht(this,i):ce({field:i,normalizationType:s,normalizationField:n,normalizationTotal:t,layer:this}),sqlWhere:l?null:e.sqlWhere||we({field:i,normalizationType:s,normalizationField:n}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}_getDataRange(e,t,a){return t!=null&&a!=null?Promise.resolve({min:t,max:a}):this.summaryStatistics(e).then(r=>({min:r.min,max:r.max}))}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=this._getQueryParamsForExpr(e,t);return this._getDataRange(a,e.minValue,e.maxValue).then(r=>{const{min:i,max:s}=r,n=e.numBins||ve,o=Pe(i,s,n),l=this._calcBinsSQL(a.sqlExpression,o,e.minValue!=null&&e.maxValue!=null),u=new fe({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=C(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[l],c.orderByFields=[l],this._updateQueryWithFeatureFilter(c,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(c,{signal:a.signal})).then(d=>Qt(d,i,s,n,t))})})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics(e).then(a=>{if(!a.count)throw new f("feature-layer-adapter:insufficient-data","Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>this._getBins({min:a.min,max:a.max},e.field,e.numBins,e.view,e.filter,e.signal))}_getBins(e,t,a=ve,r,i,s){const{min:n,max:o,normTotal:l,excludeZerosExpr:u}=e,c=e.intervals||Pe(n,o,a),d=e.sqlExpr||t;return this._queryBins(c,d,u,r,i,s).then(m=>({bins:m.map((p,g)=>({minValue:c[g][0],maxValue:c[g][1],count:p.value})),minValue:n,maxValue:o,normalizationTotal:l}))}_queryBins(e,t,a,r,i,s){const n=[],o=e.length;for(let l=0;l<o;l++){const u=C(a,C(t+" >= "+e[l][0],e[l][1]!==null?t+(l===o-1?" <= ":" < ")+e[l][1]:""));n.push(u)}return ma(n.map(l=>this.queryFeatureCount({whereClause:l,view:r,filter:i,signal:s})))}_binParamsFromGenRend(e,t){const{field:a,normalizationType:r,normalizationField:i,signal:s}=e,n=we({field:a,normalizationType:r,normalizationField:i}),o=new ke({classificationDefinition:ut({field:a,normalizationType:r,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numBins||ve}),where:C(n,t)});return this.generateRenderer(o,s).then(l=>{const{normalizationTotal:u,classBreaks:c}=l;return Pa({field:a,normalizationType:r,normalizationField:i,normalizationTotal:u,classBreaks:c,where:n,layer:this})})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:n,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),c={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&t&&(s||n)&&(c.viewInfoParams=N(t),c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:n,layerView:o,query:l},i)),!s&&!n&&o&&"queryHistogram"in o?o.queryHistogram(l,c,{signal:i}):s?this.workerClient.histogram(c,s):Ke({attribute:c,features:n})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,n=we({field:t,normalizationType:a,normalizationField:r}),o=ce({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=Ce(o,e.minValue,e.maxValue),u=ut({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Me}),c=new ke;return c.classificationDefinition=u,c.where=C(n,l),this.generateRenderer(c,s).then(d=>ct(d,e.classificationMethod))}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||Me,i=[],s=(a-t)/r;for(let l=0;l<r;l++){const u=t+l*s;i.push({minValue:u,maxValue:u+s})}i[r-1].maxValue=a;const n={classBreaks:i,normalizationTotal:e.normalizationTotal},o=ct(n,e.classificationMethod);return Promise.resolve(o)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:n,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),c={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||n)&&(c.viewInfoParams=N(t),c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:n,layerView:o,query:l},i)),!s&&!n&&o&&"queryClassBreaks"in o?o.queryClassBreaks(l,c,{signal:i}):s?this.workerClient.classBreaks(c,s):et({attribute:c,features:n})}async _heatmapStatsFromMemory(e,t){var u;const{view:a,field:r,radius:i}=e,{featuresJSON:s,graphics:n}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),o=new pa({extent:a.extent,tolerance:a.type==="2d"?a.state.resolution:a.pixelSizeAt(a.center)}),l={field:r,fieldOffset:t,radius:i,transform:fa(o),spatialReference:(u=a.spatialReference)==null?void 0:u.toJSON(),size:a.size};return s!=null&&s.length||n!=null&&n.length?s?this.workerClient.heatmapStatistics(l,s):Fa({attribute:l,features:n}):{count:0,min:null,max:null,avg:null,stddev:null}}_updateQueryWithFeatureFilter(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}summaryStatistics(e){const{field:t,normalizationType:a,sqlExpression:r,view:i,features:s,useFeaturesInView:n}=e,o=t?this.getField(t):null,l=U(o),u=e.valueExpression||r,c=u&&!r,d=this._hasLocalSource||s||n,m=i&&i.type==="3d";return d||c?c||s||n||m?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,l):!this.supportsSQLExpression&&(l||u||a==="natural-log"||a==="square-root")?Promise.reject(new f("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch(()=>(T(e.signal),this._summaryStatsFromMemory(e,o)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,useFeaturesInView:i,signal:s}=e,n=t&&(!a||!this.supportsSQLExpression),o=this._hasLocalSource||r||i||n,l=e.view,u=l&&l.type==="3d",c=await Ee(e,this);return o?n||r||i||u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c):this._uvFromServiceQuery(e,c).catch(d=>(T(s),!e.field||e.field2||e.field3||e.filter?d:this._uvFromGenRenderer(e,c[0]))).catch(()=>(T(s),u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c)))}histogram(e){const{field:t,normalizationType:a,normalizationField:r,classificationMethod:i,view:s,filter:n,signal:o}=e,l=t?this.getField(t):null,u=U(l),c=e.valueExpression||e.sqlExpression,d=c&&!e.sqlExpression,m=this._hasLocalSource||e.features||e.useFeaturesInView||d,p=this.supportsSQLExpression,g=!i||i==="equal-interval",h=e.minValue,v=e.maxValue,V=h!=null&&v!=null,x=e.numBins||ve;return m?this._histogramFromMemory(e):(c||p)&&g?p||!c&&a!=="natural-log"&&a!=="square-root"?this._histogramForExpr(e):Promise.reject(new f("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):u&&g?Promise.reject(new f("feature-layer-adapter:not-supported","Normalization and date field are not allowed when layer does not support standardized SQL expression for queries")):a||!g?this._binParamsFromGenRend(e).then(E=>{if(!V)return this._getBins(E,t,x,s,n,o);if(h>E.max||v<E.min)throw new f("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(g)return this._getBins({min:h,max:v,sqlExpr:E.sqlExpr,excludeZerosExpr:E.excludeZerosExpr},t,x,s,n,o);{const b={field:t,normalizationType:a,normalizationField:r,normalizationTotal:E.normTotal,layer:this},P=ce(b),j=Ce(P,h,v);return this._binParamsFromGenRend(e,j).then(G=>this._getBins(G,t,x,s,n,o))}}):this._histogramForField(e)}classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(T(e.signal),this._classBreaksFromMemory(e)))}queryFeatureCount(e){if(this._hasLocalSource)return Promise.reject(new f("feature-layer-adapter:not-supported","Layer does not support count query"));const t=this.layer,a=t.createQuery();return a.where=C(a.where,e.whereClause),this._updateQueryWithFeatureFilter(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}generateRenderer(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)return Promise.reject(new f("feature-layer-adapter:not-supported","Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)"));const r=a.createQuery();return e.where=C(e.where,r.where),Na(a.parsedUrl.path,{source:a.dynamicDataSource,gdbVersion:a.gdbVersion},e,{signal:t})}heatmapStatistics(e){const{field:t,fieldOffset:a,view:r,signal:i}=e;return(t&&a==null?this.summaryStatistics({field:t,view:r,signal:i}):Promise.resolve(null)).then(s=>{let n=a||0;if(s){const{count:o,min:l,max:u}=s;o?l===u&&l===0?n=1:u<=0?n="abs":l<0&&(n=-1.01*l):n=1}return this._heatmapStatsFromMemory(e,n).then(o=>({...o,summaryStatistics:s,fieldOffset:n}))})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new f("feature-layer-adapter:not-supported","Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:r}=e,i=tt(t),s=Oa(t),n=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:i,view:a,signal:r}):await this._uvFromServiceQuery({sqlExpression:s.expression,valueExpression:i,signal:r});return at(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,filter:n,signal:o}=e,l=this.layer.createQuery(),u=1,c=t==="json";l.outSpatialReference=e.spatialReference||a&&a.spatialReference,l.returnGeometry=!!s,l.outFields=i,this._updateQueryWithFeatureFilter(l,n);let d=[],m=!1;if(a)try{const p=await a.whenLayerView(this.layer);if(m=!Ve(this,i,p).length,m&&(d=await this._fetchFeaturesFromMemory(p,l,o,t),d.length&&r>0&&r<=d.length))return te(d,r,u)}catch{T(o)}try{if(this._hasLocalSource)return m?d:c?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o);const p=await this.queryFeatureCount({view:a,filter:n,signal:o}),g=this.layer.capabilities.query.maxRecordCount;let h=r===-1?p:r;if(h=g&&h>g?g:h,p<=d.length||d.length>=g)return d;const v=a.extent.width/a.width/a.scale*Ga;if(l.maxAllowableOffset=e.resolution||v,p<=h)return c?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o);if(p<=wt){const V=this.layer.createQuery();this._updateQueryWithFeatureFilter(V,n);const x=await this.layer.queryObjectIds();return l.objectIds=te(x,h,u),c?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o)}return this.layer.get("capabilities.query.supportsPagination")&&(l.num=Math.min(h,wt)),c?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o)}catch{return T(o),d}}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.get("capabilities.query.supportsSqlExpression"),this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=ge.getInstance(),await this.workerClient.open($($(e).signal))});return this.addResolvingPromise(t),Promise.resolve(this)}};F([L({constructOnly:!0})],Se.prototype,"layer",void 0),Se=F([B("esri.smartMapping.support.adapters.FeatureLayerAdapter")],Se);const W=Se;let Ge=class extends W{constructor(t){super(t)}async _createGenerateRendererResult(t,a,r,i,s){const n=t==null?void 0:t.features;if(!(n==null?void 0:n.length))throw new f("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const l=he(n);let u=null;if(i==="percent-of-total"&&(u=(await this.workerClient.summaryStatistics({field:a},l)).sum,u==null))throw new f("csv-layer-adapter:invalid","invalid normalizationTotal");if(s.type==="class-breaks-definition"){const d=(await lt({field:a,normalizationType:i,normalizationField:r,normalizationTotal:u},l)).filter(m=>Number.isFinite(m));return wa({definition:s,values:d,normalizationTotal:u})}const c=(await lt({field:a},l)).filter(d=>d!=null&&typeof d=="string"&&d.trim()!=="");return va(c)}generateRenderer(t,a){const r=t.classificationDefinition;let i=null,s=null,n=null;r.type==="class-breaks-definition"?(i=r.classificationField,s=r.normalizationField,n=r.normalizationType):i=r.attributeField;const o=this.layer;return ee({field:i,normalizationField:s}).then(l=>{const u=o.createQuery();return u.returnGeometry=!1,u.outFields=l,u.where=C(u.where,t.where),o.queryFeatures(u,{signal:a}).then(c=>this._createGenerateRendererResult(c,i,s,n,r))})}load(t){const a=this.layer.load(t).then(async r=>{this.geometryType=r.geometryType,this.objectIdField=r.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ge.getInstance(),await this.workerClient.open($($(t).signal))});return this.addResolvingPromise(a),Promise.resolve(this)}};Ge=F([B("esri.smartMapping.support.adapters.CSVLayerAdapter")],Ge);const Ja=Ge;let vt=class extends W{constructor(t){super(t)}async _getNormalizationTotalFromMemory(t,a,r){const{featuresJSON:i,graphics:s,layerView:n,query:o}=a,l=(!i&&!s&&n&&"queryAggregateSummaryStatistics"in n?await n.queryAggregateSummaryStatistics(o,{field:t},{signal:r}):i?await this.workerClient.summaryStatistics({field:t},i):await ae({attribute:{field:t},features:s})).sum;if(l==null)throw new f("feature-layer-binning-adapter:invalid","invalid normalizationTotal");return l}async _processStatsFromMemoryParams(t){const{features:a,filter:r}=t;if(a!=null&&a.length)return this._getFilteredFeatures(a,r);const{view:i,field:s,field2:n,field3:o,normalizationField:l,valueExpression:u,returnGeometry:c,layerViewFunc:d,signal:m}=t;let p=null,g=null,h=null,v=null,V=null;if(i)try{if(p=await i.whenLayerView(this.layer),g=d in p&&typeof p[d]=="function",g){await this._waitForLayerViewUpdate(p);const x=await ee({field:s,field2:n,field3:o,normalizationField:l,valueExpression:u});yt(this,x).length?g=!1:(h="createAggregateQuery"in p&&p.createAggregateQuery(),h?(h.outFields=x,h.returnGeometry=!1,this._updateQueryWithFeatureFilter(h,r)):g=!1),p.suspended&&(g=!1)}}catch{g=!1}if(!g&&(V=gt(this.layer).map(x=>x.toJSON()),v=await this._fetchFeaturesForStats({field:s,field2:n,field3:o,valueExpression:u,normalizationField:l,returnGeometry:c,filter:r,view:i,signal:m},"json"),!(v!=null&&v.length)))throw new f("feature-layer-binning-adapter:insufficient-data","No features are available to calculate statistics");return{layerView:p,query:h,featuresJSON:v,fieldInfos:V}}async _summaryStatsFromMemory(t,a){const{view:r,field:i,valueExpression:s,normalizationType:n,signal:o}=t,l={field:i,valueExpression:s,normalizationType:n,normalizationField:t.normalizationField,normalizationTotal:t.normalizationTotal,minValue:t.minValue,maxValue:t.maxValue},{featuresJSON:u,graphics:c,layerView:d,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...t,layerViewFunc:"queryAggregateSummaryStatistics"});return s&&r&&(u||c)&&(l.fieldType=a!=null&&a.type?Xe.toJSON(a.type):null,l.viewInfoParams=N(r),l.fieldInfos=p),n==="percent-of-total"&&t.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:u,graphics:c,layerView:d,query:m},o)),!u&&!c&&d&&"queryAggregateSummaryStatistics"in d?d.queryAggregateSummaryStatistics(m,l,{signal:o}):u?this.workerClient.summaryStatistics(l,u):ae({attribute:l,features:c})}async _uvFromMemory(t,a){const{view:r,field:i,valueExpression:s,returnAllCodedValues:n,signal:o}=t,{featuresJSON:l,graphics:u,layerView:c,query:d,fieldInfos:m}=await this._processStatsFromMemoryParams({...t,layerViewFunc:"queryAggregateUniqueValues"}),p={field:i,field2:t.field2,field3:t.field3,fieldDelimiter:D,valueExpression:s,domains:a,returnAllCodedValues:n};return s&&r&&(l||u)&&(p.viewInfoParams=N(r),p.fieldInfos=m),!l&&!u&&c&&"queryAggregateUniqueValues"in c?c.queryAggregateUniqueValues(d,p,{signal:o}):l?this.workerClient.uniqueValues(p,l):Ye({attribute:p,features:u})}async _histogramFromMemory(t){const{view:a,field:r,valueExpression:i,signal:s}=t,{featuresJSON:n,graphics:o,layerView:l,query:u,fieldInfos:c}=await this._processStatsFromMemoryParams({...t,layerViewFunc:"queryAggregateHistogram"}),d={field:r,valueExpression:i,normalizationType:t.normalizationType,normalizationField:t.normalizationField,normalizationTotal:t.normalizationTotal,minValue:t.minValue,maxValue:t.maxValue,standardDeviationInterval:t.standardDeviationInterval,classificationMethod:t.classificationMethod,numBins:t.numBins};return i&&a&&(n||o)&&(d.viewInfoParams=N(a),d.fieldInfos=c),t.normalizationType==="percent-of-total"&&t.normalizationTotal==null&&(d.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:n,graphics:o,layerView:l,query:u},s)),!n&&!o&&l&&"queryAggregateHistogram"in l?l.queryAggregateHistogram(u,d,{signal:s}):n?this.workerClient.histogram(d,n):Ke({attribute:d,features:o})}async _classBreaksFromMemory(t){const{view:a,field:r,valueExpression:i,signal:s}=t,{featuresJSON:n,graphics:o,layerView:l,query:u,fieldInfos:c}=await this._processStatsFromMemoryParams({...t,layerViewFunc:"queryAggregateClassBreaks"}),d={field:r,valueExpression:i,normalizationType:t.normalizationType,normalizationField:t.normalizationField,normalizationTotal:t.normalizationTotal,minValue:t.minValue,maxValue:t.maxValue,standardDeviationInterval:t.standardDeviationInterval,classificationMethod:t.classificationMethod,numClasses:t.numClasses};return i&&a&&(n||o)&&(d.viewInfoParams=N(a),d.fieldInfos=c),t.normalizationType==="percent-of-total"&&t.normalizationTotal==null&&(d.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:n,graphics:o,layerView:l,query:u},s)),!n&&!o&&l&&"queryAggregateClassBreaks"in l?l.queryAggregateClassBreaks(u,d,{signal:s}):n?this.workerClient.classBreaks(d,n):et({attribute:d,features:o})}getField(t=""){var a;return(a=gt(this.layer))==null?void 0:a.find(r=>r.name.toLowerCase()===(t==null?void 0:t.toLowerCase()))}getFieldUsageInfo(t){return this.getField(t)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(t,a){return null}async summaryStatistics(t){const{field:a}=t,r=a?this.getField(a):null,i=U(r),s=t.sqlExpression&&!t.valueExpression&&!a;if(i||s)throw new f("feature-layer-binning-adapter:not-supported","Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(t,r)}async uniqueValues(t){const a=await Ee(t,this);return this._uvFromMemory(t,a)}async histogram(t){const{field:a}=t,r=a?this.getField(a):null,i=U(r),s=t.sqlExpression&&!t.valueExpression&&!a;if(i||s)throw new f("feature-layer-binning-adapter:not-supported","Date field and sqlExpression are not supported");return this._histogramFromMemory(t)}async classBreaks(t){return(t.analyzeData!==!1?this._classBreaksFromMemory(t):this._classBreaksFromInterpolation(t)).catch(()=>(T(t.signal),this._classBreaksFromMemory(t)))}async queryFeatureCount(t){const a=await t.view.whenLayerView(this.layer);if(!("queryAggregateCount"in a)||!a.queryAggregateCount)throw new f("feature-layer-binning-adapter:not-supported","LayerView is not supported.");await this._waitForLayerViewUpdate(a);const r=a.createAggregateQuery();return r.where=C(r.where,t.whereClause),this._updateQueryWithFeatureFilter(r,t.filter),a.queryAggregateCount(r,{signal:t.signal})}generateRenderer(t,a){throw new f("feature-layer-binning-adapter:not-supported","'generateRenderer' is not supported.")}heatmapStatistics(t){throw new f("feature-layer-binning-adapter:not-supported","'heatmapStatistics' is not supported.")}async predominantCategories(t){const{fields:a,view:r,signal:i}=t,s=tt(a),n=await this._uvFromMemory({valueExpression:s,view:r,signal:i});return at(n.uniqueValueInfos,a)}async getSampleFeatures(t,a){const{view:r,sampleSize:i,requiredFields:s,returnGeometry:n,filter:o,signal:l}=t;if(!r)throw new f("feature-layer-binning-adapter:not-supported","'view' is required to get sample features for binning.");if(r.type==="3d")throw new f("feature-layer-binning-adapter:not-supported","3d 'view' is not supported to get sample features for binning.");const u=await r.whenLayerView(this.layer);if(!("queryAggregateJSON"in u&&u.queryAggregateJSON&&"queryAggregates"in u&&u.queryAggregates))throw new f("feature-layer-binning-adapter:not-supported","LayerView is not supported.");if(await this._waitForLayerViewUpdate(u),yt(this,s).length)throw new f("feature-layer-binning-adapter:insufficient-data","Layer does not have required fields");const c=1,d=a==="json",m=u.createAggregateQuery();m.outSpatialReference=t.spatialReference||r&&r.spatialReference,m.returnGeometry=!!n,m.outFields=s,this._updateQueryWithFeatureFilter(m,o);const{features:p}=d?await u.queryAggregateJSON(m,{signal:l}):await u.queryAggregates(m,{signal:l});return p.length&&i>0&&i<=p.length?te(p,i,c):p}load(t){const a=this.layer.load(t).then(async r=>{if(this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=r.minScale,this.maxScale=r.maxScale,this.fullExtent=r.fullExtent,"geometryType"in r&&r.geometryType!=="point")throw new f("feature-layer-binning-adapter:invalid-parameters","Only 'point' geometry type is supported");const i="featureReduction"in r&&r.featureReduction;if((i==null?void 0:i.type)!=="binning"&&(i==null?void 0:i.type)!=="cluster")throw new f("feature-layer-binning-adapter:invalid-parameters",`Feature reduction type ${i==null?void 0:i.type} is not supported`);this.workerClient=ge.getInstance(),await this.workerClient.open($($(t).signal))});return this.addResolvingPromise(a),Promise.resolve(this)}};vt=F([B("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],vt);let Je=class extends W{constructor(e){super(e)}async _waitForLayerViewUpdate(e){if(!e)throw new f("ogc-feature-layer-adapter:insufficient-data","layerView is required to fetch the features");await Z(()=>!e.updating)}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:r}=e;if(!r)throw new f("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=this._getSummaryStatsQuery(e,t),s=await r.whenLayerView(this.layer);await Z(()=>!s.updating,$(a));const n=await s.queryFeatures(i,{signal:a}),o=je(n,t);return Fe(o)}async _uvFromClientQuery(e,t){const{signal:a,view:r}=e;if(!r)throw new f("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=this._getUVQuery(e),s=await r.whenLayerView(this.layer);await Z(()=>!s.updating,$(a));const n=await s.queryFeatures(i,{signal:a}),o=await be(n,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:D,view:e.view,signal:e.signal});return ye(o,t,e.returnAllCodedValues,D)}summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:r,features:i,view:s}=e,n=t?this.getField(t):null,o=U(n),l=!!a,u=(s==null?void 0:s.type)==="3d";if(!a&&r&&!this.supportsSQLExpression)throw new f("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return l||i||u?this._summaryStatsFromMemory(e,n):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,view:i}=e,s=await Ee(e,this),n=!!t,o=(i==null?void 0:i.type)==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new f("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return n||r||o?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}histogram(e){const{features:t,valueExpression:a,normalizationType:r,sqlExpression:i}=e,s=t||!!a;if(!a&&i&&!this.supportsSQLExpression)throw new f("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return s||r?this._histogramFromMemory(e):this._histogramForField(e)}classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:r}=e;if(!a)throw new f("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=this.layer.createQuery();i.where=C(i.where,t);const s=await a.whenLayerView(this.layer);return await Z(()=>!s.updating,$(r)),s.queryFeatureCount(i,{signal:r})}generateRenderer(e,t){throw new f("ogc-feature-layer-adapter:not-supported","OGCFeatureLayer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:r}=e,i=tt(t),s=await this._uvFromMemory({valueExpression:i,view:a,signal:r});return at(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,signal:n}=e,o=this.layer.createQuery(),l=1;if(o.outSpatialReference=e.spatialReference||a&&a.spatialReference,o.returnGeometry=!!s,o.outFields=i,!a)throw new f("ogc-feature-layer-adapter:not-supported","view is required to get sample features for OGCFeatureLayer");const u=await a.whenLayerView(this.layer);if(Ve(this,i,u).length)throw new f("ogc-feature-layer-adapter:not-supported","Required fields need to be passed in the outFields for OGCFeatureLayer");const c=await this._fetchFeaturesFromMemory(u,o,n,t);return te(c,r>0&&r<=c.length?r:c.length,l)}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.get("capabilities.query.supportsSqlExpression"),this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=ge.getInstance(),await this.workerClient.open($($(e).signal))});return this.addResolvingPromise(t),Promise.resolve(this)}};Je=F([B("esri.smartMapping.support.adapters.OGCFeatureLayerAdapter")],Je);const Ha=Je;let _e=class extends Bt{constructor(e){super(e)}destroy(){var e;this._featureLayerAdapter=null,(e=this.workerClient)==null||e.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),s=t.filter(o=>{const l=this.layer.getField(o);return!a.includes(l.name)}),n=s.some(o=>this.layer.getField(o).name===r);return i.outFields=n?s:[...s,r],i}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new f("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const r=await e.whenLayerView(this.layer),i=new AbortController,s=i.signal,n=Z(()=>!r.updating,s);await Tt(n,5e3,i);const o=Ve(this,a,r);T(s);const l=this._updateQuery(t,a,o),u=await r.queryFeatures(l,{signal:s});T(s);const c=u.features;return o.length?r.whenGraphicAttributes(c,o):c}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(he)}_fetchFeaturesForStats(e,t){return ee({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t!=null&&t.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:r,normalizationField:i,valueExpression:s,signal:n}=e,o=await this._fetchFeaturesForStats({field:r,valueExpression:s,normalizationField:i,view:a,signal:n});if(!(o!=null&&o.length))throw new f("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:o}}_generateFeatureSetForCachedHistogram(e,t=e.minimum,a=e.maximum,r){const i=[];for(let c=0;c<r;c++)i[c]=0;const s=e.counts.length,n=e.minimum,o=e.maximum;for(let c=0;c<s;c++){const d=(c+.5)/s,m=((1-d)*n+d*o-t)/(a-t)*r;m>=0&&m<=r&&(i[m===r?r-1:Math.floor(m)]+=e.counts[c])}const l=[];i.forEach((c,d)=>{const m=new it({attributes:{}});m.attributes.EXPR_1=d+1,m.attributes.countOFExpr=c,l.push(m)});const u=new Re;return u.features=l,u}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new f("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(r=>{const i=r.stats,{min:s,max:n,totalValuesCount:o}=i;let{avg:l,stddev:u,sum:c,variance:d,count:m}=i;return s===0&&n===0||(l=l===0?null:l,c=c===0?null:c,u=u===0?null:u,d=d===0?null:d,m=m===0?null:m),m==null&&(c!=null&&l!=null?m=Math.round(c/l):o!=null&&(m=o)),{avg:l,count:m,max:n,min:s,stddev:u,sum:c,variance:d}})}async _getNormalizationTotal(e,t,a){const r=(t?await this.workerClient.summaryStatistics({field:e},t):await ae({attribute:{field:e},features:a})).sum;if(r==null)throw new f("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:r,normalizationField:i,valueExpression:s}=e,{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams(e),l={field:r,valueExpression:s,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue};return e.valueExpression&&a&&n&&(l.fieldType=t!=null&&t.type?Xe.toJSON(t.type):null,l.viewInfoParams=N(a)),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(r,n,o)),n?this.workerClient.summaryStatistics(l,n):ae({attribute:l,features:o})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,r=t&&t.name,i=t&&this.getFieldDomain(e.field);return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new f("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(r,{signal:e.signal}).then(s=>{const n=s.stats;if(!n.mostFrequentValues)throw new Error;const o=s.labels&&s.labels.labels,l={},u=[],c="countOF"+r;n.mostFrequentValues.forEach(m=>{const p=new it({attributes:{}});p.attributes[r]=t&&t.name!==a.objectIdField&&($t(t)||U(t))?Number(m.value):m.value,p.attributes[c]=m.count,u.push(p)}),o&&o.forEach(m=>{l[m.value]=m.label});const d=new Re;return d.features=u,be(d,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(s=>ye(s,[i],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:r,field2:i,field3:s,valueExpression:n,returnAllCodedValues:o}=e,l={field:r,field2:i,field3:s,fieldDelimiter:D,valueExpression:n,domains:t,returnAllCodedValues:o},{featuresJSON:u,graphics:c}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=N(a)),u?this.workerClient.uniqueValues(l,u):Ye({attribute:l,features:c})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new f("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(r=>{const i=r.stats,{minValue:s,maxValue:n}=e,o=s??i.min,l=n??i.max,u=e.numBins||10,c=this._generateFeatureSetForCachedHistogram(i.histogram,o,l,u);return Qt(c,o,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:r,valueExpression:i}=e,{featuresJSON:s,graphics:n}=await this._processStatsFromMemoryParams(e),o={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(o.viewInfoParams=N(t)),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotal(a,s,n)),s?this.workerClient.classBreaks(o,s):et({attribute:o,features:n})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:r,graphics:i}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&r&&(s.viewInfoParams=N(t)),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,r,i)),r?this.workerClient.histogram(s,r):Ke({attribute:s,features:i})}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new f("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t&&t.name)?this._getCachedStatistics(e,t).catch(()=>(T(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new f("scene-layer-adapter:not-supported","filter is not supported");const t=await Ee(e,this),{field:a,field2:r}=e,i=a&&r,s=this.getField(a);return!i&&this._hasCachedStatistics(s&&s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch(()=>(T(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new f("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(T(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new f("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t&&t.name)?Promise.reject(new f("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new f("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new f("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new f("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new f("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new f("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,signal:n}=e,o=1,l=t==="json",u=this.layer.createQuery();u.outFields=i,u.returnGeometry=!!s,u.where=null,u.num=r;let c=[];try{if(c=l?await this._fetchFeaturesJSONFromMemory(a,u,i):await this._fetchFeaturesFromMemory(a,u,i),c.length&&r>0&&r<=c.length)return te(c,r,o)}catch{T(n)}let d=null;if(this._featureLayerAdapter){const m={...e};delete m.view,d=await this._featureLayerAdapter.getSampleFeatures(m,t)}return d&&d.length?d:te(c,c.length,o)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=ge.getInstance(),await this.workerClient.open($($(e).signal));const r=a.associatedLayer;if(this.geometryType=a.geometryType,A(r))return this._featureLayerAdapter=new W({layer:r}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};F([L({constructOnly:!0})],_e.prototype,"layer",void 0),_e=F([B("esri.smartMapping.support.adapters.SceneLayerAdapter")],_e);const Pt=_e;let He=class extends Pt{constructor(e){super(e)}getField(e=""){return this.layer.fieldsIndex.get(e)}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};He=F([B("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],He);const Ua=He;var S;(function(e){e[e.CSVLayer=0]="CSVLayer",e[e.GeoJSONLayer=1]="GeoJSONLayer",e[e.FeatureLayer=2]="FeatureLayer",e[e.OGCFeatureLayer=3]="OGCFeatureLayer",e[e.SceneLayer=4]="SceneLayer",e[e.PointCloudLayer=5]="PointCloudLayer",e[e.WFSLayer=6]="WFSLayer"})(S||(S={}));S.CSVLayer+"",S.FeatureLayer+"",S.OGCFeatureLayer+"",S.GeoJSONLayer+"",S.SceneLayer+"",S.PointCloudLayer+"",S.WFSLayer+"";S.CSVLayer,S.FeatureLayer,S.OGCFeatureLayer,S.GeoJSONLayer,S.SceneLayer,S.PointCloudLayer,S.WFSLayer;S.CSVLayer,S.FeatureLayer,S.OGCFeatureLayer,S.SceneLayer,S.GeoJSONLayer,S.WFSLayer;S.CSVLayer,S.FeatureLayer,S.OGCFeatureLayer,S.GeoJSONLayer,S.WFSLayer;[].concat(xe.light).concat(xe.dark);function Wa(e,t,a){let r=null,i=null;if(t&&(r=Mt(t,e,!1),r)){const s=It(r);A(s)&&(i=s)}return!r&&a&&(r=a==="dark"?"dark-gray":"gray",i=a),r||i||(r="gray",i="light"),{basemapId:r,basemapTheme:i}}class Za{constructor(t){this.name=null,this.label=null,this.description=null,this.supportedBasemaps=null,this.basemapGroups=null,this.schemes=null;const{name:a,label:r,description:i,schemes:s}=t;this.name=a,this.label=r,this.description=i,this.schemes=s;const n=t.basemapGroups||xe;let o=[];if(n)for(const l in n)o=o.concat(n[l]);this.supportedBasemaps=o,this.basemapGroups=n}isBasemapSupported(t){const a=Mt(t,this.supportedBasemaps);return!(!a||!this.supportedBasemaps.includes(a))}getRawSchemes(t){const{basemapId:a,basemapTheme:r}=Wa(this.supportedBasemaps,t.basemap,t.basemapTheme);let i=r;if(a){const o=It(a,this.basemapGroups);A(o)&&(i=o)}let s=t.geometryType;s==="multipoint"?s="point":s==="mesh"&&(s="polygon");const n=this.schemes[s]||this.schemes.default;return{schemesInfo:ya(n[i]),basemapId:a,basemapTheme:r}}}function Xa(e){const t=e.themeDictionary,a=new Map;for(const r in t){const i=t[r];a.set(r,new Za(i))}return a}Xa({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features using heatmap.",schemes:{default:{light:{primary:"heatmap-v1",secondary:["heatmap-v2","heatmap-v3","neutral-yellow-orange","neutral-yellow-green","neutral-yellow-purple","neutral-yellow-magenta","neutral-white-blue","neutral-white-blue-metal","neutral-white-gold","neutral-yellow-bronze","heatmap-v4","dark-yellow-orange","dark-yellow-green","dark-yellow-purple","dark-yellow-magenta","dark-white-blue","dark-white-blue-metal","dark-white-gold","dark-yellow-bronze"]},dark:{primary:"heatmap-v4",secondary:["dark-white-blue","dark-yellow-orange","dark-yellow-green","dark-yellow-purple","dark-yellow-magenta","dark-white-blue-metal","dark-white-gold","dark-yellow-bronze","heatmap-v1","heatmap-v2","heatmap-v3","neutral-yellow-orange","neutral-yellow-green","neutral-yellow-purple","neutral-yellow-magenta","neutral-white-blue","neutral-white-blue-metal","neutral-white-gold","neutral-yellow-bronze"]}}}}}});const Ya=[{id:1,name:"Hotel A",price:100,rating:4.5},{id:2,name:"Hotel B",price:150,rating:4.2},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1},{id:3,name:"Hotel C",price:80,rating:4.1}],Ka=[[4.9,4.5,6,400,4.7,4.9]],er={width:2,opacity:.8},Ft={backgroundColor:"",title:{text:"酒店评价",left:"left",textStyle:{color:"#eee",fontSize:14}},radar:{indicator:[{name:"设备",max:5},{name:"服务",max:5},{name:"位置",max:10},{name:"价格",max:1e3},{name:"卫生",max:5},{name:"综合",max:5}],shape:"circle",splitNumber:5,axisName:{color:"#666"},splitLine:{lineStyle:{color:["rgba(238, 197, 102, 0.1)","rgba(238, 197, 102, 0.2)","rgba(238, 197, 102, 0.4)","rgba(238, 197, 102, 0.6)","rgba(238, 197, 102, 0.8)","rgba(238, 197, 102, 1)"].reverse()}},splitArea:{show:!1},axisLine:{lineStyle:{color:"rgba(238, 197, 102, 0.5)"}}},series:[{name:"维也纳酒店",type:"radar",lineStyle:er,data:Ka,symbol:"circle",itemStyle:{color:"#F9713C"},areaStyle:{opacity:.3}}]},se=e=>(bt("data-v-07484578"),e=e(),Et(),e),tr={class:"hotel"},ar={class:"hotel-panel line"},rr=se(()=>y("div",{class:"hotel-panel-title"},[y("span",null,"酒店信息查询"),H("> ")],-1)),ir={class:"table-container"},sr={class:"table"},nr=se(()=>y("tr",null,[y("th",null,"Hotel Name"),y("th",null,"Price"),y("th",null,"Rating")],-1)),or=se(()=>y("div",{class:"hotel-panel-footer"},null,-1)),lr=se(()=>y("div",{class:"hotel-panel line"},[y("div",{class:"hotel-panel-title"},[y("span",null,"缓冲区分析")]),y("div",{class:"hotel-panel-footer"})],-1)),ur={class:"hotel-panel line"},cr=se(()=>y("div",{class:"hotel-panel-title"},[y("span",null,"酒店综合评价")],-1)),dr=se(()=>y("div",{class:"hotel-panel-footer"},null,-1)),mr=[dr],pr=re({__name:"hotelpages",setup(e){let t=new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E5%A1%94%E5%B0%94%E5%AF%BA%E4%BD%8F%E5%AE%BF/FeatureServer"}),a=new ot;z(!0),Q();let r=Q().getView();Ea();let i=new Ae,s=new M,n=!1;const o=z(Ya),l=z([...o.value]);z(null);const u=z(null);ha().createOnlayer();function d(){l.value.sort((g,h)=>g.price-h.price)}function m(){l.value.sort((g,h)=>h.rating-g.rating)}function p(){n?(r.map.remove(s),r.ui.move(a),n=!1):(i=new Ae({field:"price",blurRadius:10,maxDensity:.9,minDensity:0,colorStops:[{color:"rgba(63, 40, 102, 0)",ratio:0},{color:"rgba(0, 255, 220, 1)",ratio:.1},{color:"rgba(255, 221, 0, 1)",ratio:.2},{color:"rgba(156, 70, 30, 1)",ratio:.3},{color:"rgba(156, 70, 30, 1)",ratio:.3},{color:"rgba(156, 70, 30, 1)",ratio:.3}]}),s=new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E5%A1%94%E5%B0%94%E5%AF%BA%E4%BD%8F%E5%AE%BF/FeatureServer",renderer:i,opacity:.8}),a=new ot({view:r,layerInfos:[{layer:s,title:"价格热力图"}]}),r.map.add(s),r.ui.add(a,"manual"),n=!0)}return ie(()=>{if(r.map.add(t),u.value){let g=null;g=Qe(u.value),Ft.toolbox={feature:{myTool2:{show:!0,title:"热力图",icon:"image://https://img.icons8.com/color/48/000000/fire-element.png",onclick:p}}},De(g,Ft)}}),Ue(()=>{r.map.remove(t),r.ui.remove(a)}),(g,h)=>(k(),R("div",tr,[y("div",ar,[rr,_(We,null,{default:q(()=>[y("div",ir,[y("table",sr,[y("thead",null,[y("tr",null,[y("th",{colspan:"3"},[y("button",{onClick:d},"Sort by Price"),y("button",{onClick:m},"Sort by Rating")])]),nr]),y("tbody",null,[(k(!0),R(Gt,null,Jt(l.value,v=>(k(),R("tr",{key:v.id},[y("td",null,qe(v.name),1),y("td",null,qe(v.price),1),y("td",null,qe(v.rating),1)]))),128))])])])]),_:1}),or]),lr,y("div",ur,[cr,y("div",{class:"hotel-panel-chart",ref_key:"radarchart",ref:u},mr,512)])]))}});const fr=Ze(pr,[["__scopeId","data-v-07484578"]]),yr={id:"main"},hr=re({__name:"roadline",setup(e){return ie(()=>{let t=new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E9%9D%92%E6%B5%B7%E7%9C%81/FeatureServer"});new Va({url:"https://edutrial.geoscene.cn/geoscene/rest/services/青海省人口密度/MapServer"});let a=nt().getView(),r=ga();a.map.add(t),a.map.add(r)}),Ue(()=>{nt().getView().map.removeAll()}),(t,a)=>(k(),R("div",yr,[H('/*style="width: 400px; height: 400px" */ '),zt(t.$slots,"default",{},void 0,!0)]))}});const gr=Ze(hr,[["__scopeId","data-v-db40240b"]]);Q();new M;const wr=[[180,100,200,3,80,10,10]],vr={width:1,opacity:.5},Fr={backgroundColor:"",title:{text:"青海-交通",left:"left",textStyle:{color:"#eee",fontSize:14}},radar:{indicator:[{name:"路网高延时运行时间占比",max:300},{name:"路网拥堵路段里程比",max:250},{name:"常发拥堵路段里程比",max:300},{name:"路网高峰行程延时指数",max:5},{name:"骨干道路运行速度偏差率",max:200},{name:"高峰平均速度",max:100}],shape:"circle",splitNumber:5,axisName:{color:"rgb(238, 197, 102)"},splitLine:{lineStyle:{color:["rgba(238, 197, 102, 0.1)","rgba(238, 197, 102, 0.2)","rgba(238, 197, 102, 0.4)","rgba(238, 197, 102, 0.6)","rgba(238, 197, 102, 0.8)","rgba(238, 197, 102, 1)"].reverse()}},splitArea:{show:!1},axisLine:{lineStyle:{color:"rgba(238, 197, 102, 0.5)"}}},series:[{name:"Beijing",type:"radar",lineStyle:vr,data:wr,symbol:"none",itemStyle:{color:"#F9713C"},areaStyle:{opacity:.5}}]},Sr={width:2,opacity:.5},_r={backgroundColor:"",legend:{},xAxis:{type:"category",boundaryGap:!1,data:["00:00","03:00","03:00","06:00","09:00","12:00","15:00","18:00","21:00"],axisTick:{alignWithLabel:!0},axisLabel:{color:"#F9713C"}},yAxis:{type:"value",axisLabel:{color:"#F9713C"}},series:[{data:[820,932,901,934,1290,1330,1320,1e3,600],type:"line",lineStyle:Sr,smooth:!0,areaStyle:{color:"#F9713C",opacity:.5},itemStyle:{color:"#F9713C"}}]},St=Q(),jt=xt("roadcondition",()=>{new M;const e=[];async function t(){const n="/api/traffic/v1/road?";try{const o=await ba.get(n,{params:{ak:"IzCONMfUjk7k3lTCIwe5w9shHHyXm5R3",road_name:"南山路",city:"西宁",coord_type_input:"gcj02",coord_type_output:"gcj02"}}),l=o.data;console.log(l);const u={roadName:o.data.road_traffic[0].road_name,congestionEvaluation:o.data.evaluation.status};e.push(u),console.log(e[0])}catch(o){console.error("Failed to fetch congestion evaluation data:",o)}}function a(n,o){console.log(e[0]);const l="路况";for(const u of o){const c=u.roadName,d=u.congestionEvaluation;console.log(`Road Name: ${c}`),console.log(`Congestion Evaluation: ${d}`);const m=n.createQuery();m.where=`name = '${c}'`,n.queryFeatures(m).then(function(p){const g=p.features;g.forEach(h=>{h.attributes[l]=d}),n.applyEdits({updateFeatures:g}).then(()=>{console.log("成功！")}).catch(h=>{console.log("失败")})}).catch(p=>{})}}function r(n){return e.find(o=>o.roadName===n)}async function i(n){const o=new st({color:"#ca0020",width:2,style:"solid",cap:"round",join:"round",path:"M -9,-9 L 9,9 M 9,-9 L -9,9",effects:[{type:"glow",color:"rgba(253, 174, 97, 1)",size:20,blur:10}],strokeStyle:"solid",strokeColor:"rgba(255, 255, 255, 0.5)",fillColor:"rgba(0, 0, 255, 0.5)"}),l=new st({color:[255,255,0],width:1}),u={type:"unique-value",field:"路况",defaultSymbol:"default symbol",uniqueValueInfos:[{value:1,symbol:o},{value:0,symbol:l}]};n.renderer=u,n.refresh()}async function s(){let n=null,o={series:[{type:"lines",coordinateSystem:"arcgis",data:[{coords:[[116.4074,39.9042],[104.0665,30.5728]],lineStyle:{color:"rgba(0, 0, 255, 0.5)",width:2}}]}]};St.CreateSceneView();let l=St.getView();l.when(()=>{n=new Nt(l,o),n==null||n.setVisiable(!1)})}return{fetchCongestionEvaluationData:t,getRoadDataByRoadName:r,renderFeatureLayer:i,updateFeatureLayerAttributes:a,roadDataList:e,renderecharts:s}}),xr={id:"main"},Vr=re({__name:"roadcondition",setup(e){let t=jt();return ie(()=>{let a=new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E9%9D%92%E6%B5%B7%E7%9C%81/FeatureServer"});t.fetchCongestionEvaluationData(),t.updateFeatureLayerAttributes(a,t.roadDataList),t.renderFeatureLayer(a)}),(a,r)=>(k(),R("div",xr,[H('/*style="width: 400px; height: 400px" */ '),zt(a.$slots,"default")]))}}),_t=[{name:"金塔路",coords:[[101.56751177,36.49261814],[101.56797506,36.49162297],[101.5682826349674,36.49091320668988],[101.56835873,36.49079657],[101.56844528309074,36.49069527030598],[101.56839709080613,36.4906581404678],[101.56857954,36.49024912],[101.56854338,36.49010656],[101.56841254,36.48986988],[101.56832302,36.48967472],[101.56820671,36.48921941],[101.56816217,36.48904834]]},{coords:[[101.56816023,36.48904947],[101.56818796,36.48876618],[101.56811556,36.48867829],[101.56790108,36.48838693],[101.56731434,36.4885554],[101.5669692,36.48869018],[101.56692729,36.48879919],[101.56695194,36.48891811],[101.56717628,36.48911037],[101.5673242,36.48922136],[101.56742281,36.48930659],[101.56759538,36.48958606],[101.56824622,36.48939578],[101.56729954,36.48967723],[101.56720093,36.48980408]]},{coords:[[101.56714736,36.49232998],[101.56689383,36.49227783],[101.5667818,36.49227309],[101.56638676,36.49237264],[101.56529596,36.49294145],[101.56507191,36.49304574],[101.56479479,36.49312158],[101.56455304,36.49315002],[101.5633915,36.49302204],[101.5629198,36.49286087],[101.56192926,36.49228257],[101.56153422,36.49199342],[101.56147526,36.49189862],[101.56150474,36.49171376],[101.56158139,36.49169479],[101.56157814,36.49169324],[101.56165389,36.49172092],[101.56167799,36.49179428],[101.56173653,36.49181227],[101.56179334,36.49178182],[101.56200682,36.49154099],[101.56200854,36.49153961]]},{coords:[[101.56715167,36.49231866],[101.56735978,36.49207368],[101.56760504,36.49166141],[101.56785401,36.49132681],[101.56803239,36.49104299],[101.5681513,36.49086673],[101.56828508,36.49089661]]},{coords:[[101.56766627,36.49230353],[101.56790761,36.49236611],[101.56848371,36.49249279],[101.56858492,36.49267012],[101.56870689,36.49291421],[101.56884442,36.49303938],[101.56903386,36.4931124],[101.56949319,36.4931437],[101.56998366,36.4931124],[101.57051824,36.49300183],[101.57091269,36.49286623],[101.5715174,36.49267749],[101.57184812,36.49260878],[101.57210825,36.49255799],[101.57213292,36.49254969]]},{coords:[[101.57026968,36.49212168],[101.56977146,36.49247919],[101.56940911,36.49268442],[101.56914971,36.49282345],[101.569055,36.49281683],[101.56899324,36.49276387],[101.56898913,36.49260829],[101.56891501,36.49236333],[101.56891502,36.49218789],[101.56900149,36.49192969],[101.56907561,36.49176749],[101.56965618,36.49138681],[101.5696603,36.4913835]]},{coords:[[101.57220867,36.49253786],[101.5728181,36.49238251],[101.57367651,36.4919553],[101.57416703,36.49168343],[101.57493253,36.49133987],[101.57483591,36.49124726],[101.57460923,36.49114569],[101.57444944,36.49114867],[101.57358361,36.4913578],[101.5732566,36.49139962],[101.57255798,36.49139365],[101.57171072,36.49146833],[101.57157694,36.49153107],[101.57081515,36.4917163],[101.57026145,36.49211837]]},{name:"东拉路",coords:[[101.56846882,36.49249443],[101.56885937,36.49178038],[101.56923733,36.49120812],[101.56970977,36.49077766],[101.57049086,36.49033201],[101.57101369,36.49014463],[101.57151762,36.49003828],[101.5724436,36.48974962],[101.57282154,36.48965847],[101.57292282,36.48947238],[101.57340771,36.48921839]]},{coords:[[101.57282472,36.48965394],[101.57296087,36.48970046],[101.5732536,36.48964846],[101.57381863,36.4894788],[101.57466959,36.48907926]]},{name:"商业街",coords:[[101.56741817,36.4940979],[101.56769004,36.49297314],[101.56809452,36.49192299],[101.56851889,36.4910381],[101.56868466,36.49102211],[101.56902282,36.49113938],[101.56841943,36.49216287],[101.56827355,36.49212556],[101.56816083,36.49242408]]},{name:"清泉路",coords:[[101.55668395,36.49119945],[101.55739357,36.49153693],[101.55912266,36.49179406],[101.55965238,36.49201904],[101.56107163,36.49295112],[101.56117158,36.49302343],[101.56153139,36.49259757],[101.56173128,36.49242883],[101.56212108,36.49245294],[101.56224102,36.49263775],[101.56272077,36.49275024]]},{coords:[[101.5709114,36.48977719],[101.57137542,36.48952849],[101.57197092,36.48906216],[101.57214107,36.48875127],[101.57224934,36.48812328],[101.57248908,36.48765073],[101.57272109,36.48716574],[101.5728603,36.48658127],[101.57305364,36.48617089],[101.57397704,36.48441387],[101.57398303,36.48440906],[101.57430019,36.48418293],[101.57495247,36.48353819],[101.57646049,36.48196483],[101.57646647,36.48196965],[101.57646048,36.4819552],[101.57704693,36.48137299],[101.5777411,36.48086296],[101.57795055,36.48073786],[101.57888408,36.48049247],[101.57927904,36.48031925],[101.57922518,36.4798477],[101.57936851,36.47940377],[101.57986552,36.47914194],[101.58021686,36.47885255]]},{name:"团结南路",coords:[[101.5670815,36.49864497],[101.56682388,36.49832282],[101.56662351,36.49713777],[101.56668076,36.49636691],[101.56709582,36.49434193],[101.56752518,36.49262757]]},{name:"清泉路",coords:[[101.56660975,36.49655133],[101.56549482,36.4960704],[101.56446148,36.49573156],[101.56390402,36.49544737],[101.56337375,36.49482433],[101.5627891,36.49410292],[101.56266673,36.49394989],[101.56076322,36.49279125],[101.55952594,36.49198237],[101.55899567,36.49175283],[101.55779918,36.49158887],[101.55711936,36.49141397],[101.55541981,36.49047392],[101.55448166,36.48975248],[101.55448224,36.48977202]]},{name:"下后街巷",coords:[[101.56413491,36.49783444],[101.56558289,36.4978739],[101.56580376,36.49754837],[101.56563197,36.49724257],[101.56575468,36.49700583],[101.56404902,36.49593059],[101.56339866,36.49558533],[101.56288329,36.49496386],[101.56199979,36.49435225],[101.56105493,36.49370117],[101.56020825,36.49325726],[101.55899344,36.49257658],[101.55833082,36.49208334],[101.55771019,36.49183401],[101.55751434,36.49167656]]},{name:"和平路",coords:[[101.56910107,36.50154321],[101.57090347,36.50107957],[101.5722012,36.50018128],[101.57254366,36.49984803],[101.57517516,36.49667493],[101.57659905,36.49519702],[101.57887005,36.49370459],[101.580348,36.49284969],[101.58130325,36.49173397]]},{name:"团结北路",coords:[[101.57127551,36.50864009],[101.5709812,36.50688276],[101.57089711,36.50593649],[101.57037155,36.50497332],[101.56986701,36.50409463],[101.56904715,36.50154299],[101.56801706,36.49998832],[101.56713413,36.498704]]},{name:"林秀路",coords:[[101.57494216,36.49134026],[101.57593932,36.4910822],[101.57626004,36.49103063],[101.57726886,36.49096031],[101.57866838,36.49091342],[101.57929233,36.49083841]]},{name:"迎宾大道",coords:[[101.57325811,36.48967069],[101.57425078,36.49001531],[101.57532016,36.49032366],[101.57584358,36.49040346],[101.57797333,36.49037081],[101.57839747,36.49043248],[101.57937211,36.49087142],[101.5812898,36.49173478],[101.5822148,36.49213381],[101.58265248,36.49224989],[101.58350077,36.49223175],[101.58388431,36.49218097],[101.58549064,36.4920141],[101.58653746,36.49190165],[101.58720978,36.49199959],[101.58884771,36.49286656]],linestyle:{color:"red"}},{name:"香安大道",coords:[[101.57478618,36.48898232],[101.5751243,36.48877548],[101.57582259,36.48823476],[101.57684092,36.48746861],[101.57741734,36.48705183],[101.5779899,36.48672525],[101.57856246,36.48650129],[101.57903443,36.48636444],[101.58007896,36.48622136],[101.58087976,36.48612183],[101.58091535,36.48611456],[101.58190466,36.48598447],[101.58288958,36.4858679],[101.58352453,36.48575133],[101.58359193,36.48573011],[101.58422171,36.48558477],[101.58499728,36.48536442],[101.58520137,36.48529409],[101.58624518,36.48489088],[101.58748725,36.48430013],[101.5899539,36.48309516],[101.59316698,36.48154791],[101.59594853,36.48023037],[101.5975988,36.47983183],[101.59842685,36.47979901],[101.59952314,36.47995843],[101.60098681,36.48050232],[101.6039433,36.48196989],[101.60396079,36.48198396]]},{coords:[[101.57073027,36.48970621],[101.5704135,36.48970308],[101.56970382,36.48960736],[101.56961511,36.48955668],[101.56940267,36.48930894],[101.56917623,36.48918319],[101.56885641,36.4891175],[101.56859261,36.48900864],[101.5682938,36.48885098],[101.56810237,36.48867081],[101.56792262,36.48842869],[101.5678059,36.48819596],[101.56777322,36.48804581],[101.56771019,36.48758785],[101.56758646,36.48737388],[101.56741138,36.48718431],[101.56692581,36.48677515],[101.56679975,36.48659309],[101.56647293,36.48606568],[101.56624882,36.48581792],[101.56583562,36.4853881],[101.56544577,36.48494514],[101.5651773,36.48484567],[101.56486215,36.48476871],[101.56475243,36.48468612],[101.56433456,36.48419811],[101.56377897,36.48355431],[101.56348716,36.48325399],[101.56344047,36.48323147],[101.56337744,36.48324085],[101.56315333,36.48336849],[101.56308096,36.48335723],[101.56292222,36.48289173]]},{coords:[[101.57199632,36.48845774],[101.57143517,36.48846602],[101.57074017,36.48843567],[101.57050335,36.48839152],[101.56996794,36.48831564],[101.5695046,36.48830874],[101.56928151,36.48821768],[101.56892972,36.48800521],[101.56868948,36.48781895],[101.56855048,36.48768788],[101.56835485,36.48740643],[101.56818153,36.48712083],[101.56808201,36.48690974],[101.56786407,36.48658413],[101.56767016,36.48627232],[101.56766845,36.48592739],[101.56770277,36.48581149],[101.56778686,36.48568732],[101.56792757,36.48554245],[101.56800479,36.48535067],[101.56795503,36.48507058],[101.56794817,36.48484431],[101.56786923,36.48400956],[101.56776112,36.48310996],[101.56776627,36.48276915],[101.56780917,36.48268085],[101.56798592,36.48258978],[101.56848873,36.48230141],[101.56855908,36.48221172],[101.5685179,36.48192059],[101.56829825,36.48145836],[101.56819185,36.4810527],[101.56826907,36.48064704],[101.56837718,36.48011857],[101.56843037,36.4798702],[101.56874441,36.47948523],[101.56880447,36.47942314],[101.56949604,36.47888362],[101.56975002,36.4787553],[101.57015329,36.47855384],[101.57019104,36.478529],[101.57036093,36.47830823],[101.57033519,36.47809435],[101.57005033,36.47791911],[101.56935017,36.47785563],[101.56870837,36.47807641],[101.56735782,36.47825855],[101.56713302,36.47828891],[101.56636423,36.47853176],[101.5656984,36.47858972],[101.56564167,36.47859526]]},{coords:[[101.56817222,36.4871348],[101.56800173,36.48717242],[101.56785799,36.48716167],[101.56774767,36.48712942],[101.56757384,36.48700848],[101.56732312,36.48678809],[101.56712923,36.4866537],[101.56706572,36.48654888],[101.56702895,36.48640106],[101.56701223,36.48628011],[101.56702227,36.4859119],[101.56706238,36.4856727],[101.56731645,36.48461104],[101.56775104,36.48315695],[101.5677477,36.48316232]]},{coords:[[101.56593027,36.49080995],[101.56578025,36.49104494],[101.56555262,36.491282],[101.56538448,36.49145877],[101.56534827,36.49149828],[101.56520342,36.49170623],[101.56512064,36.49181645],[101.56508702,36.49186428],[101.56503528,36.49187884],[101.56497579,36.49186428],[101.56490853,36.49181645],[101.56486973,36.49177278],[101.56488008,36.4915669],[101.56500683,36.49137143],[101.56519307,36.49110524],[101.56536379,36.49080994],[101.56548537,36.49060199],[101.56554227,36.49039195],[101.5655552,36.49019647],[101.5656147,36.48997604],[101.56574144,36.48977848],[101.56603374,36.48965162],[101.56635966,36.48951437],[101.56641398,36.48967866],[101.56633379,36.48989077],[101.56635449,36.48995108],[101.56671145,36.49018815],[101.56694684,36.49000931],[101.56707359,36.48990117],[101.56715894,36.48976808],[101.56716412,36.48958091],[101.56710721,36.48945406],[101.56691579,36.48901526],[101.56687699,36.48878026],[101.56670109,36.48839346],[101.56657176,36.48808151],[101.56648898,36.48793801],[101.56645535,36.48767182],[101.56642172,36.48740978],[101.56645276,36.48721845],[101.56651743,36.48709991],[101.56673988,36.48691066],[101.56711754,36.48664238]]},{coords:[[101.56635829,36.48950764],[101.56630657,36.48919527],[101.56626999,36.48902996],[101.56614385,36.48870847],[101.56607068,36.48851374],[101.56596977,36.48813241],[101.56590796,36.48791233],[101.56587264,36.48750361],[101.565802,36.48717197],[101.56573388,36.48693769],[101.56569352,36.48685148],[101.56556863,36.48673485],[101.56551439,36.48666994],[101.56540339,36.48647217],[101.56534788,36.48640016],[101.5651738,36.48633626],[101.56503252,36.48626425],[101.56469697,36.48603098],[101.56450902,36.48587784],[101.56433494,36.48575106],[101.5642643,36.48565065],[101.56418104,36.48552286],[101.56403976,36.48539203],[101.56390731,36.4852906],[101.56373575,36.48524496],[101.56341282,36.48529263],[101.56334596,36.48525511],[101.56333965,36.48510095],[101.5633611,36.48479465],[101.56335479,36.48471249],[101.56332452,36.48457253],[101.56325514,36.48442953],[101.56297889,36.48412728],[101.56293474,36.48406541],[101.56288428,36.4839437],[101.56285905,36.48378954],[101.56283761,36.48349744],[101.56285149,36.48308869],[101.56287546,36.4829751],[101.56292466,36.48288179],[101.56303314,36.4827692],[101.56319083,36.48268502],[101.56324381,36.48267488],[101.56332706,36.48268705],[101.56338383,36.48270835],[101.56355665,36.48284933],[101.56376983,36.48306435],[101.56395022,36.4833098],[101.56404862,36.48344977],[101.56419242,36.48358466],[101.56441192,36.48369319],[101.56462636,36.48376419],[101.56498336,36.48379461],[101.56508049,36.48385445],[101.56533152,36.48400152],[101.56557624,36.48407961],[101.56583358,36.48411816],[101.56612498,36.48405629],[101.56625238,36.48401775],[101.56659929,36.48384127],[101.56677211,36.48365465],[101.56683644,36.48352685],[101.56686293,36.48340413],[101.56697142,36.48321446],[101.56699917,36.48313231],[101.56694241,36.48288889],[101.5669361,36.48280978],[101.56696133,36.48275602],[101.56724642,36.48267792],[101.56743564,36.48265054],[101.56774469,36.48267995],[101.56793013,36.48272559],[101.56800203,36.48277428],[101.56810547,36.4829964],[101.56820513,36.48321041],[101.56827072,36.4833169],[101.5684284,36.483466],[101.5685268,36.48364552],[101.56863024,36.4838504],[101.56864664,36.48417597],[101.56873116,36.48446604],[101.5687198,36.48462629],[101.56868196,36.48475915],[101.56866935,36.48489202],[101.56870593,36.48503806],[101.5688901,36.48530176],[101.56916384,36.48567398],[101.56949434,36.48598028],[101.56959021,36.48609285],[101.56971384,36.48622065],[101.56981223,36.48631497],[101.56992072,36.48636264],[101.57001785,36.48636466],[101.57015409,36.48634844],[101.57032943,36.48633829],[101.57056659,36.48635858],[101.57066372,36.48635452],[101.57086429,36.48627744],[101.57146222,36.48603505],[101.57172839,36.48586669],[101.57176875,36.48579366],[101.57183813,36.48566689],[101.5718621,36.48562835],[101.57194914,36.48562429],[101.5720879,36.48570948],[101.57242471,36.48592754],[101.57249662,36.4860391],[101.57261141,36.4863383],[101.57265304,36.48646406],[101.57266818,36.48658171],[101.5726543,36.48671457],[101.57260132,36.4868028],[101.5726543,36.48694073],[101.572648,36.4870523],[101.57253825,36.48726325],[101.57236291,36.48757968],[101.57226199,36.48775615],[101.57215855,36.48790118],[101.57208287,36.48805026],[101.57207782,36.48812937],[101.57203619,36.48837683],[101.57200718,36.48852389],[101.57200844,36.48866993],[101.57199835,36.48883829],[101.57191131,36.48895492],[101.57175741,36.48910704],[101.57164262,36.48919629],[101.5714206,36.48935146],[101.57117335,36.48949446],[101.57097278,36.48959385],[101.57057794,36.48970135]]},{coords:[[101.57028372,36.48899957],[101.57036649,36.48956938],[101.57011558,36.48957146],[101.56998625,36.48956314],[101.56959049,36.48952779],[101.56949219,36.48957562],[101.56916109,36.48975655],[101.56889984,36.48997906],[101.56857391,36.49027644],[101.56838171,36.49029202],[101.56829279,36.49033542],[101.56811177,36.49065967],[101.56787359,36.49119073],[101.56768622,36.49141285],[101.56764176,36.49146392],[101.56734959,36.49197199],[101.5671781,36.49222475],[101.56707965,36.49226305],[101.56674619,36.49221454],[101.56643814,36.4923039],[101.5659459,36.49247241],[101.56582522,36.49245964],[101.5657617,36.49237794],[101.56575853,36.49224518],[101.56571089,36.4922605],[101.56548223,36.49227581],[101.56537426,36.49230645],[101.56529169,36.49235751],[101.56523135,36.49236517],[101.56518371,36.49233964],[101.56505986,36.49213539],[101.56488837,36.49186476],[101.56466607,36.49169115],[101.56459938,36.49159157],[101.56458985,36.49153796],[101.56467242,36.49117031],[101.56477088,36.49069542],[101.56480264,36.49047329],[101.56479947,36.48995245],[101.56487251,36.48954648],[101.56495191,36.48940095],[101.56503131,36.48933967],[101.56542828,36.48919159],[101.56552037,36.48912776],[101.56556483,36.48901797],[101.56555213,36.48890308],[101.56540288,36.48840264],[101.56542828,36.48802476],[101.56521233,36.4876673],[101.56517105,36.48745538],[101.56514565,36.48732006],[101.5651393,36.48720261],[101.56506626,36.48701112],[101.56488524,36.48648769],[101.56467564,36.48627066],[101.56455814,36.4861864],[101.56446922,36.48613533],[101.56428503,36.48593872],[101.56418975,36.48583659],[101.56397699,36.48535657]]}],br=y("div",{id:"container"},null,-1),Er=y("span",{class:"mytitle"},null,-1),zr=[br,Er],qr=re({__name:"test",setup(e){const t=Q();z(null);let a=null;return jt(),new M({url:"https://services7.arcgis.com/R5nxHh77a68zEsEp/arcgis/rest/services/%E8%A5%BF%E5%AE%81/FeatureServer"}),ie(async()=>{let r=Q().getView(),i=[];console.log([{coords:[[101.53959472012785,36.80887983979046],[101.54005685034092,36.80883739035139]]},{coords:[[101.5260101197203,36.65893690034438],[101.52595196009383,36.65542588010789]]}]);const n={series:[{type:"lines",coordinateSystem:"arcgis",polyline:!0,silent:!0,zlevel:1,lineStyle:{curveness:.3,opacity:.2,width:1.5},progressiveThreshold:5e3,progressive:2e3,data:_t},{type:"lines",coordinateSystem:"arcgis",polyline:!0,data:_t,lineStyle:{width:0},effect:{constantSpeed:20,show:!0,trailLength:.1,symbolSize:2}}]};a=new Nt(r,n),console.log(i)}),Ue(()=>{a==null||a.destroy(),a=null,t.isViewType()}),(r,i)=>(k(),R("div",null,zr))}});const ze=e=>(bt("data-v-d9a5de7d"),e=e(),Et(),e),Lr={class:"device",ref:"envirmentRef"},Cr={class:"device-panel line"},Tr=ze(()=>y("span",{class:"device-panel-title"},"查看路网图",-1)),$r=ze(()=>y("section",{class:"device-card"},[y("div",{class:"device-card-cityname"},[y("p",null,"当前城市"),y("span",null,"西宁")]),y("span",{class:"device-card-line"}),y("div",{class:"device-card-order"},[y("p",null,"排名"),y("span",null,"52")]),y("div",{class:"device-card-index"},[y("p",null,"拥堵指数"),y("p",{class:"device-card-indexVal"},[y("span",{class:"device-card-indexNum"},"1.83"),y("span",{class:"device-card-indexArrow"})]),y("p",{class:"device-card-indexProcess"},[y("span",{class:"device-card-Proval"}),y("span",{class:"device-card-Proline"})])])],-1)),kr={class:"device-panel line"},Nr=ze(()=>y("div",{class:"device-panel-title"},[y("span",null,"景区实时路况"),H(">")],-1)),Ir={class:"device-panel line"},Mr=ze(()=>y("div",{class:"device-panel-title"},[y("span",null,"旅游景区今日实时客流")],-1)),Or=re({__name:"Dev",setup(e){const t=z(!1),a=z(!1),r=z(!1),i=z(null);kt(i);const s=z(null),n=z(null),o=z(null);return ie(()=>{let l=null;l=Qe(n.value),De(l,Fr);let u=null;u=Qe(o.value),De(u,_r)}),(l,u)=>(k(),R("div",Lr,[_(We,{name:"right-slide-in"},{default:q(()=>[_(w(qt),null,{default:q(()=>[_(w(J),null,{default:q(()=>[y("div",Cr,[Tr,_(w(J),null,{default:q(()=>[_(w(X),{modelValue:t.value,"onUpdate:modelValue":u[0]||(u[0]=c=>t.value=c),size:"large",class:"mt-2",style:{"margin-left":"24px"},"inline-prompt":"","active-icon":w(Y),"inactive-icon":w(K)},null,8,["modelValue","active-icon","inactive-icon"])]),_:1})]),$r]),_:1}),_(w(J),null,{default:q(()=>[y("div",kr,[Nr,_(w(X),{modelValue:a.value,"onUpdate:modelValue":u[1]||(u[1]=c=>a.value=c),size:"large",class:"mt-2",style:{"margin-left":"24px"},"inline-prompt":"","active-icon":w(Y),"inactive-icon":w(K),ref_key:"radar",ref:s},null,8,["modelValue","active-icon","inactive-icon"])]),y("div",{ref_key:"mychart",ref:n,class:"device-panel-chart"},null,512)]),_:1}),_(w(J),null,{default:q(()=>[y("div",Ir,[Mr,_(w(X),{modelValue:r.value,"onUpdate:modelValue":u[2]||(u[2]=c=>r.value=c),size:"large",class:"mt-2",style:{"margin-left":"24px"},"inline-prompt":"","active-icon":w(Y),"inactive-icon":w(K),ref_key:"radar",ref:s},null,8,["modelValue","active-icon","inactive-icon"])]),y("div",{ref_key:"basicchart",ref:o,class:"device-panel-chart"},null,512)]),_:1})]),_:1})]),_:1}),t.value?(k(),me(gr,{key:0})):pe("",!0),a.value?(k(),me(Vr,{key:1})):pe("",!0),r.value?(k(),me(qr,{key:2})):pe("",!0)],512))}});const Dr=Ze(Or,[["__scopeId","data-v-d9a5de7d"]]),Ar=y("span",null,"设施管理",-1),hi=re({__name:"index",setup(e){const t=z(!1),a=z(!1),r=z(!1),i=z(null);kt(i);let s=[t,a,r];function n(u){for(let c=0;c<s.length;c++)c!==u&&(s[c].value=!1)}const o=z(!1),l=()=>{o.value=!0};return ie(()=>{var u;console.log((u=i.value)==null?void 0:u.clientHeight),setTimeout(()=>{l()},100)}),(u,c)=>(k(),R("div",{ref_key:"screenRef",ref:i,class:"screen"},[_(We,{name:"right-slide-in"},{default:q(()=>[_(w(Ut),{class:"box-card",style:Ht({left:o.value?"0.5%":"-380px"})},{header:q(()=>[Ar]),default:q(()=>[_(w(qt),null,{default:q(()=>[_(w(J),null,{default:q(()=>[_(w(Le),null,{default:q(()=>[H("查看酒店住宿")]),_:1}),_(w(X),{modelValue:w(s)[0].value,"onUpdate:modelValue":c[0]||(c[0]=d=>w(s)[0].value=d),size:"large",class:"mt-2",style:{"margin-left":"24px"},"inline-prompt":"","active-icon":w(Y),"inactive-icon":w(K),onChange:c[1]||(c[1]=d=>n(0))},null,8,["modelValue","active-icon","inactive-icon"])]),_:1}),_(w(J),null,{default:q(()=>[_(w(Le),null,{default:q(()=>[H("查看餐饮")]),_:1}),_(w(X),{modelValue:w(s)[1].value,"onUpdate:modelValue":c[2]||(c[2]=d=>w(s)[1].value=d),size:"large",class:"mt-2",style:{"margin-left":"24px"},"inline-prompt":"","active-icon":w(Y),"inactive-icon":w(K),onChange:c[3]||(c[3]=d=>n(1))},null,8,["modelValue","active-icon","inactive-icon"])]),_:1}),_(w(J),null,{default:q(()=>[_(w(Le),null,{default:q(()=>[H("查看路网信息")]),_:1}),_(w(X),{modelValue:w(s)[2].value,"onUpdate:modelValue":c[4]||(c[4]=d=>w(s)[2].value=d),size:"large",class:"mt-2",style:{"margin-left":"24px"},"inline-prompt":"","active-icon":w(Y),"inactive-icon":w(K),onChange:c[5]||(c[5]=d=>n(2))},null,8,["modelValue","active-icon","inactive-icon"])]),_:1})]),_:1})]),_:1},8,["style"])]),_:1}),w(s)[0].value?(k(),me(fr,{key:0})):pe("",!0),w(s)[2].value?(k(),me(Dr,{key:1})):pe("",!0)],512))}});export{hi as default};
