import{g$ as l,cR as m,fM as g,j7 as x,tq as _,e as V,a as v,tr as b,go as L,bY as h,aN as j,t as C,c4 as $,sD as P,gD as S,ts as I,tt as E,gR as p}from"./MapView-d4248bee.js";import{D as y}from"./QueryEngineResult-000a2eb4.js";import"./index-9ba3f23e.js";import"./WhereClause-34fcc82f.js";import"./executionError-fb3f283a.js";import"./utils-5fb83578.js";import"./ClassBreaksDefinition-6b9f5256.js";import"./projectionSupport-96272605.js";import"./json-48e3ea08.js";import"./utils-f77fba44.js";const T=1e3;function N(t,e,s){const n=x(),o=_(n);return l(o,o,t,.5),l(o,o,e,.5),n[3]=m(o,t),g(o,o,s),n}let f=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=h(),this._tmpP2=h(),this._tmpP3=h(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),j(e),await this._ensureEdgeLocations(t,e);const s=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,s),s.length<T),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,e){const s=[];if(this._components.forEachNeighbor(i=>{if(C(i.info)){const{id:r,uid:d}=i;s.push({id:r,uid:d})}return!0},t.bounds),!s.length)return;const n={components:s},o=await this.remoteClient.invoke("fetchAllEdgeLocations",n,$(e,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const e=new u(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const s=[];this._edges.forEachNeighbor(n=>(n.component===e&&s.push(n),!0),e.bounds),this._edges.remove(s),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(C(e)||t.uid!==e.uid)return;const s=P.createView(t.locations),n=new Array(s.count),o=h(),i=h();for(let a=0;a<s.count;a++){s.position0.getVec(a,o),s.position1.getVec(a,i);const c=N(o,i,t.origin),w=new D(e,a,c);n[a]=w}this._edges.add(n);const{objectIds:r,origin:d}=t;e.info={locations:s,objectIds:r,origin:d}}_addCandidates(t,e,s){const{info:n}=e.component,{origin:o,objectIds:i}=n,r=n.locations,d=r.position0.getVec(e.index,this._tmpP1),a=r.position1.getVec(e.index,this._tmpP2);g(d,d,o),g(a,a,o);const c=i[r.componentIndex.get(e.index)];this._addEdgeCandidate(t,c,d,a,s),this._addVertexCandidate(t,c,d,s),this._addVertexCandidate(t,c,a,s)}_addEdgeCandidate(t,e,s,n,o){if(!(t.types&y.EDGE))return;const i=_(t.bounds),r=S(s,n,this._tmpLineSegment),d=I(r,i,this._tmpP3);E(t.bounds,d)&&o.push({type:"edge",objectId:e,target:p(d),distance:m(i,d),start:p(s),end:p(n)})}_addVertexCandidate(t,e,s,n){if(!(t.types&y.VERTEX))return;const o=_(t.bounds);E(t.bounds,s)&&n.push({type:"vertex",objectId:e,target:p(s),distance:m(o,s)})}};f=V([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);const z=f;class u{constructor(e,s){this.id=e,this.bounds=s,this.info=null,this.uid=++u.uid}}u.uid=0;class D{constructor(e,s,n){this.component=e,this.index=s,this.bounds=n}}export{z as default};
