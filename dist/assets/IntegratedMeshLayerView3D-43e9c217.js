import{dT as m,B as p,a4 as n,t as l,e as i,y as o,dQ as d,a as h}from"./MapView-d4248bee.js";import{v as u}from"./I3SMeshView3D-4321ad07.js";import{n as c}from"./LayerView3D-d82b3e07.js";import{u as g}from"./LayerView-374f7208.js";import"./index-9ba3f23e.js";import"./I3SOverrides-69b7c3a9.js";import"./I3SNode-238d18eb.js";import"./I3SUtil-2d068cb2.js";import"./I3SBinaryReader-0c2e63aa.js";import"./RenderTexture-16babd20.js";import"./FeatureLayerView3D-84ffceb7.js";import"./FeatureLayerViewBase3D-b1c5ed69.js";import"./FeatureLikeLayerView3D-db0c636c.js";import"./dehydratedFeatureComparison-0ac2f54e.js";import"./queryForSymbologySnapping-bff12345.js";import"./elevationInfoUtils-be893fde.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-b1c745af.js";import"./rendererConversion-90e15c15.js";import"./optimizedFeatureQueryEngineAdapter-fa5b86b1.js";import"./centroid-589c262e.js";import"./PooledRBush-848b4499.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-0e5abd53.js";import"./QueryEngineResult-000a2eb4.js";import"./WhereClause-34fcc82f.js";import"./executionError-fb3f283a.js";import"./utils-5fb83578.js";import"./ClassBreaksDefinition-6b9f5256.js";import"./projectionSupport-96272605.js";import"./json-48e3ea08.js";import"./utils-f77fba44.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-ae1793ee.js";import"./FeatureStore-15f08eb6.js";import"./BoundsStore-eb68ff23.js";import"./heatmapTextureUtils-d3b5e305.js";import"./projectExtentUtils-9657433f.js";import"./EventedSet-0c6da25d.js";import"./FeatureLayerView-122bb138.js";import"./popupUtils-7e1f6d3e.js";import"./RefreshableLayerView-82af8ccd.js";import"./SceneModification-9aa75488.js";import"./persistable-69e9c02c.js";import"./resourceExtension-9abd8498.js";import"./SceneLayerWorker-55900347.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(d)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const nt=r;export{nt as default};
