/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/Collection.js";import o from"../core/Error.js";import t from"../core/Logger.js";import{unwrap as s}from"../core/maybe.js";import{MultiOriginJSONMixin as i}from"../core/MultiOriginJSONSupport.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import{cast as c}from"../core/accessorSupport/decorators/cast.js";import"../core/arrayUtils.js";import{reader as p}from"../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{writer as n}from"../core/accessorSupport/decorators/writer.js";import u from"./Layer.js";import{BlendLayer as m}from"./mixins/BlendLayer.js";import{OperationalLayer as d}from"./mixins/OperationalLayer.js";import{ScaleRangeLayer as y}from"./mixins/ScaleRangeLayer.js";import f from"./support/ImageElement.js";import h from"./support/LocalMediaElementSource.js";import S from"./support/VideoElement.js";function g(e){return"object"==typeof e&&null!=e&&"type"in e}let j=class extends(m(y(d(i(u))))){constructor(e){super(e),this.effectiveSource=null,this.copyright=null,this.operationalLayerType="MediaLayer",this.spatialReference=null,this.type="media",this.source=new h}load(e){const t=this.source;if(!t)return this.addResolvingPromise(Promise.reject(new o("media-layer:source-missing","Set 'MediaLayer.source' before loading the layer."))),Promise.resolve(this);const s=g(t)?new h({elements:new r([t])}):t;this._set("effectiveSource",s),this.spatialReference&&(s.spatialReference=this.spatialReference);const i=s.load(e).then((()=>{this.spatialReference=s.spatialReference}));return this.addResolvingPromise(i),Promise.resolve(this)}destroy(){s(this.effectiveSource)?.destroy(),s(this.source)?.destroy()}get fullExtent(){return this.loaded?this.effectiveSource.fullExtent:null}set source(e){"not-loaded"===this.loadStatus?this._set("source",e):t.getLogger(this.declaredClass).error("#source","source cannot be changed after the layer is loaded.")}castSource(e){return e?Array.isArray(e)||e instanceof r?new h({elements:e}):e:null}readSource(e,r,o){const t="image"===r.mediaType?new f:"video"===r.mediaType?new S:null;return t?.read(r,o),t}writeSource(e,r,t,s){e&&g(e)&&"image"===e.type?e.write(r,s):s?.messages&&s?.messages?.push(new o("media-layer:unsupported-source","source must be an 'ImageElement'"))}};e([a({readOnly:!0})],j.prototype,"effectiveSource",void 0),e([a({type:String})],j.prototype,"copyright",void 0),e([a({readOnly:!0})],j.prototype,"fullExtent",null),e([a({type:["MediaLayer"]})],j.prototype,"operationalLayerType",void 0),e([a({type:["show","hide"]})],j.prototype,"listMode",void 0),e([a({nonNullable:!0,json:{write:{enabled:!0,allowNull:!1}}})],j.prototype,"source",null),e([c("source")],j.prototype,"castSource",null),e([p("source",["url"])],j.prototype,"readSource",null),e([n("source")],j.prototype,"writeSource",null),e([a()],j.prototype,"spatialReference",void 0),e([a({readOnly:!0})],j.prototype,"type",void 0),j=e([l("esri.layers.MediaLayer")],j);const v=j;export{v as default};
