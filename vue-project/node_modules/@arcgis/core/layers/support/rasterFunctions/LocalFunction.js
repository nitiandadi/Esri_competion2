/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isNone as s}from"../../../core/maybe.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import{localOperators as r}from"../rasterFunctionConstants.js";import{getPixelValueRange as n}from"../rasterFormats/pixelRangeUtils.js";import i from"./BaseRasterFunction.js";import u from"./LocalFunctionArguments.js";import{operandsCount as a,getOutputDomain as c,local as p}from"./localUtils.js";let m=class extends i{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0],{bandCount:o}=s,{processAsMultiband:e}=this.functionArguments;if(t.some((t=>t.bandCount!==o)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:n}=this.functionArguments,i=a[r];if(!(999===i||n.length===i||n.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType("f32");const u=s.clone();u.pixelType=this.outputPixelType,u.statistics=null,u.histograms=null,u.colormap=null,u.attributeTable=null,u.bandCount=999!==i||e?o:1;const p=c(r);if(p){u.statistics=[];for(let t=0;t<u.bandCount;t++)u.statistics[t]={min:p[0],max:p[1],avg:(p[0]+p[1])/2,stddev:(p[0]+p[1])/10}}this.rasterInfo=u;return{success:!0,supportsGPU:1===u.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:o}=t;return s(o)||o.some((t=>s(t)))?null:p(o,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,s=a[t],o=Object.keys(r).find((s=>r[s]===t))?.toLowerCase()??"undefined",e=this.outputPixelType??"f32";let[i,u]=n(e);const c=e.startsWith("u")||e.startsWith("s");return c&&(i-=1e-4,u+=1e-4),{imageCount:s,operationName:o,domainRange:[i,u],isOutputRounded:c}}};t([o({json:{write:!0,name:"rasterFunction"}})],m.prototype,"functionName",void 0),t([o({type:u,json:{write:!0,name:"rasterFunctionArguments"}})],m.prototype,"functionArguments",void 0),t([o()],m.prototype,"rasterArgumentNames",void 0),m=t([e("esri.layers.support.rasterFunctions.LocalFunction")],m);const l=m;export{l as default};
