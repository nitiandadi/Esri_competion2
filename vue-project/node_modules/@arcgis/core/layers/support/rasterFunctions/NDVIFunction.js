/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isNone as s}from"../../../core/maybe.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import{calculateNDVI as n,getBandMatrix3 as o}from"./bandIndexUtils.js";import i from"./BaseRasterFunction.js";import u from"./NDVIFunctionArguments.js";let c=class extends i{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0].clone();s.pixelType=this.outputPixelType,s.colormap=null,s.histograms=null,s.bandCount=1;const[r,e,n,o]=t?[-1,1,0,.1]:[0,200,100,10];return s.statistics=[{min:r,max:e,avg:n,stddev:o}],this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(s(r))return null;const{visibleBandID:e,infraredBandID:o,scientificOutput:i}=this.functionArguments;return n(r,e,o,!i)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:s,scientificOutput:r}=this.functionArguments,e=this.isInputBandIdsSwizzled?[0,1,2]:[s,t,0];return{bandIndexMat3:o(e),scaled:!r}}_getInputBandIds(t){const{visibleBandID:s,infraredBandID:r}=this.functionArguments;return[r,s,0].map((s=>t[s]))}};t([r({json:{write:!0,name:"rasterFunction"}})],c.prototype,"functionName",void 0),t([r({type:u,json:{write:!0,name:"rasterFunctionArguments"}})],c.prototype,"functionArguments",void 0),t([r()],c.prototype,"rasterArgumentNames",void 0),c=t([e("esri.layers.support.rasterFunctions.NDVIFunction")],c);const a=c;export{a as default};
