/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{toRGB as t}from"../../../core/colorUtils.js";import r from"../../../core/Error.js";import{clone as e}from"../../../core/lang.js";import n from"./AspectFunction.js";import o from"./BandArithmeticFunction.js";import s from"./ColormapFunction.js";import a from"./CompositeBandFunction.js";import i from"./ConvolutionFunction.js";import u from"./ExtractBandFunction.js";import c from"./LocalFunction.js";import m from"./MaskFunction.js";import l from"./NDVIFunction.js";import p from"./RemapFunction.js";import f from"./SlopeFunction.js";import d from"./StatisticsHistogramFunction.js";import g from"./StretchFunction.js";const A=new Map;function F(t,r,e=["raster"],n=""){A.set(t,{desc:n,ctor:r,rasterArgumentNames:e})}function y(){const t=new Set;return A.forEach(((r,e)=>t.add(e))),t}function h(t,r){const{rasterFunctionArguments:e}=t;if(!e)return;(e.rasters||[e.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(r.includes(t)||r.push(t)):"rasterFunctionArguments"in t&&h(t,r))}))}function C(t,n){if(n=n??{},"function"in(t=e(t))&&"arguments"in t&&t.arguments&&(t=D(t,n)),"rasterFunction"in t)return v(t=S(t),n);throw new r("raster-function-helper","unsupported raster function json.")}function N(t,r){return"rasters"===r[0]&&Array.isArray(t.rasters)?t.rasters:r.map((r=>t[r]))}function b(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function S(t){const{rasterFunction:r,rasterFunctionArguments:e}=t,n={};for(const o in e){let t=e[o];const r=o.toLowerCase();if("rasters"===r&&Array.isArray(t))n.rasters=t.map((t=>b(t)?S(t):t));else switch(b(t)&&(t=S(t)),r){case"dra":n.dra=t;break;case"pspower":n.psPower=t;break;case"pszfactor":n.psZFactor=t;break;case"bandids":n.bandIds=t;break;default:n[o[0].toLowerCase()+o.slice(1)]=t}}return"Local"!==r||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function v(t,e){const{rasterFunction:n,rasterFunctionArguments:o}=t,s=t.outputPixelType?.toLowerCase();if(null==n||!A.has(n))throw new r("raster-function-helper",`unsupported raster function: ${n}`);const a=A.get(n),i=("function"==typeof a.ctor?a.ctor:a.ctor.default).fromJSON({...t,outputPixelType:s}),{rasterArgumentNames:u}=i,c=[],m=N(o,u),l="rasters"===u[0],p=[];for(let r=0;r<m.length;r++){const t=m[r];let n;null==t||"string"==typeof t&&t.startsWith("$")?c.push(e?.raster):"string"==typeof t?e[t]&&c.push(e[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=v(t,e),l||(i.functionArguments[u[r]]=n),c.push(n)),l&&p.push(n??t)}if(l&&(i.functionArguments.rasters=p),e){i.sourceRasters=c;const t=e.raster?.url;t&&(i.mainPrimaryRasterId=t)}return i}function j(t,r){if(t&&r)for(const e in t){const n=t[e];n&&"object"==typeof n&&(n.function&&n.arguments?j(n.arguments,r):"RasterFunctionVariable"===n.type&&null!=r[n.name]&&(n.value=r[n.name]))}}function R(t){if(!t||"object"!=typeof t)return t;if(Array.isArray(t)&&0===t.length)return 0===t.length?null:["number","string"].includes(typeof t[0])?t:t.map((t=>R(t)));if("value"in t&&["number","string","boolean"].includes(typeof t.value))return t.value;if(!("type"in t))return t;switch(t.type){case"Scalar":return t.value;case"AlgorithmicColorRamp":return w(t);case"MultiPartColorRamp":return{type:"multipart",colorRamps:t.ArrayOfColorRamp.map(w)};case"ArgumentArray":return t.elements?.length?"RasterStatistics"===t.elements[0].type?t.elements:"RasterFunctionVariable"===t.elements[0].type?t.elements.map((t=>null!=t.value?R(t.value):t.name.toLowerCase().includes("raster")?"$$":null)):t:t.elements;default:return t}}function w(r){const e=r.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:o}=r;if(!Array.isArray(n)){const{r,g:e,b:o}=t({h:n.Hue,s:n.Saturation,v:n.Value});n=[r,e,o,n.AlphaValue]}if(!Array.isArray(o)){const{r,g:e,b:n}=t({h:o.Hue,s:o.Saturation,v:o.Value});o=[r,e,n,o.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:o}}function D(t,r){r&&j(t,r);const e={};return V(t,e),e}function V(t,r){if(!t||!r)return;const{function:e,arguments:n}=t;if(!e||!n)return;r.rasterFunction=e.type.replace("Function",""),r.outputPixelType=e.pixelType;const o={};r.rasterFunctionArguments=o;for(const s in n){const t=n[s];"object"==typeof t&&("function"in t&&t.function&&t.arguments?(r.rasterFunctionArguments[s]={},V(t,r.rasterFunctionArguments[s])):"value"in t&&(o[s]=R(t.value)))}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),r.rasterFunction){case"Stretch":k(o);break;case"Colormap":T(o);break;case"Convolution":x(o);break;case"Mask":B(o)}}function k(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function T(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function x(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function B(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}A.set("Aspect",{desc:"Aspect Function",ctor:n,rasterArgumentNames:["raster"]}),A.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:o,rasterArgumentNames:["raster"]}),A.set("Colormap",{desc:"Colormap Function",ctor:s,rasterArgumentNames:["raster"]}),A.set("CompositeBand",{desc:"CompositeBand Function",ctor:a,rasterArgumentNames:["rasters"]}),A.set("Convolution",{desc:"Convolution Function",ctor:i,rasterArgumentNames:["raster"]}),A.set("ExtractBand",{desc:"ExtractBand Function",ctor:u,rasterArgumentNames:["raster"]}),A.set("Local",{desc:"Local Function",ctor:c,rasterArgumentNames:["rasters"]}),A.set("Mask",{desc:"Mask Function",ctor:m,rasterArgumentNames:["raster"]}),A.set("NDVI",{desc:"NDVI Function",ctor:l,rasterArgumentNames:["raster"]}),A.set("Remap",{desc:"Remap Function",ctor:p,rasterArgumentNames:["raster"]}),A.set("Slope",{desc:"Slope Function",ctor:f,rasterArgumentNames:["raster"]}),A.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:d,rasterArgumentNames:["raster"]}),A.set("Stretch",{desc:"Stretch Function",ctor:g,rasterArgumentNames:["raster"]});export{C as create,h as getPrimaryRasterUrls,N as getRasterValues,y as getSupportedFunctions,F as register};
