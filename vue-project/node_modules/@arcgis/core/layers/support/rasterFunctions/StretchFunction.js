/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isNone as s}from"../../../core/maybe.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import r from"./BaseRasterFunction.js";import{lookupPixels as u}from"./pixelUtils.js";import n from"./StretchFunctionArguments.js";import{getStretchCutoff as i,createStretchLUT as a,stretch as p,computeGammaCorrection as c}from"./stretchUtils.js";let m=class extends r{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:s}=t,{functionArguments:e}=this,{dynamicRangeAdjustment:o,gamma:r,useGamma:u}=e;if(!o&&["u8","u16","s8","s16"].includes(s)){const o=i(e.toJSON(),{rasterInfo:t}),n=this._isOutputRoundingNeeded()?"round":"float";this.lookup=a({pixelType:s,...o,gamma:u?r:null,rounding:n}),this.cutOffs=o}else o||(this.cutOffs=i(e.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(s);const n=t.clone();n.pixelType=this.outputPixelType,n.statistics=null,n.histograms=null,n.colormap=null,n.attributeTable=null,"u8"===this.outputPixelType&&(n.keyProperties.DataType="processed"),this.rasterInfo=n;return{success:!0,supportsGPU:!o}}_processPixels(t){const e=t.pixelBlocks?.[0];if(s(e))return e;const{lookup:o}=this;if(o)return u(e,{...o,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:r}=this,n=this.cutOffs||i(r.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),a=r.useGamma?r.gamma:null;return p(e,{...n,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:s=255,gamma:e,useGamma:o}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,u=o&&e&&e.length?c(r,e):[1,1,1],{minCutOff:n,maxCutOff:i}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===n.length&&(n[1]=n[2]=n[0],i[1]=i[2]=i[0]);const a=new Float32Array(r);let p;for(p=0;p<r;p++)a[p]=(s-t)/(i[p]-n[p]);const m=this._isOutputRoundingNeeded();return{bandCount:r,outMin:t,outMax:s,minCutOff:n,maxCutOff:i,factor:a,useGamma:o,gamma:o&&e?e:[1,1,1],gammaCorrection:o&&u?u:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};t([e({json:{write:!0,name:"rasterFunction"}})],m.prototype,"functionName",void 0),t([e({type:n,json:{write:!0,name:"rasterFunctionArguments"}})],m.prototype,"functionArguments",void 0),t([e()],m.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],m.prototype,"lookup",void 0),t([e({json:{write:!0}})],m.prototype,"cutOffs",void 0),m=t([o("esri.layers.support.rasterFunctions.StretchFunction")],m);const l=m;export{l as default};
