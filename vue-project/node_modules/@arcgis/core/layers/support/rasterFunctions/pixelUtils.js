/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e,unwrap as n}from"../../../core/maybe.js";import l from"../PixelBlock.js";import{getPixelValueRange as i}from"../rasterFormats/pixelRangeUtils.js";var o,s;!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(o||(o={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(s||(s={}));const r=6;function a(e){return t(e)&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function h(t,e){if(!e?.length||!a(t))return t;const n=t.pixels.length;return e&&e.some((t=>t>=n))||1===n&&1===e.length&&0===e[0]?t:n!==e.length||e.some(((t,e)=>t!==e))?new l({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function f(e){if(!e?.length||e.some((t=>!a(t))))return null;if(1===e.length)return t(e[0])?e[0].clone():null;const n=e,{width:i,height:o,pixelType:s}=n[0];if(n.some((t=>t.width!==i||t.height!==o)))return null;const r=n.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;r.length&&(h=new Uint8Array(i*o),h.set(r[0]),r.length>1&&w(r.slice(1),h));const f=[];n.forEach((({pixels:t})=>f.push(...t)));const c=n.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new l({pixelType:s,width:i,height:o,mask:h,pixels:f,statistics:u.length?u:null})}function c(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let l=0;n[0][0]<0&&(l=n[0][0]);const i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),s=[];let r,a=0,h=0;const f=5===n[0].length;if(i>65536)return n.forEach((t=>{s[t[0]-l]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:l,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-l;a<i;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-l&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-l),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:f}}function u(e,n){if(!a(e))return e;if(!n||!n.indexedColormap&&!n.indexed2DColormap)return e;const l=e.clone(),i=l.pixels;let o=l.mask;const s=l.width*l.height;if(1!==i.length)return e;const{indexedColormap:r,indexed2DColormap:h,offset:f,alphaSpecified:c}=n;let u=0;const p=i[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),g=new Uint8Array(p.length);let d,y=0;if(r){const e=r.length-1;if(t(o))for(u=0;u<s;u++)o[u]&&(y=4*(p[u]-f),y<f||y>e?o[u]=0:(x[u]=r[y],m[u]=r[y+1],g[u]=r[y+2],o[u]=r[y+3]));else{for(o=new Uint8Array(s),u=0;u<s;u++)y=4*(p[u]-f),y<f||y>e?o[u]=0:(x[u]=r[y],m[u]=r[y+1],g[u]=r[y+2],o[u]=r[y+3]);l.mask=o}}else if(h)if(t(o))for(u=0;u<s;u++)o[u]&&(d=h[p[u]],x[u]=d[0],m[u]=d[1],g[u]=d[2],o[u]=d[3]);else{for(o=new Uint8Array(s),u=0;u<s;u++)d=h[p[u]],x[u]=d[0],m[u]=d[1],g[u]=d[2],o[u]=d[3];l.mask=o}return l.pixels=[x,m,g],l.statistics=null,l.pixelType="u8",l.maskIsAlpha=c,l}function p(t,e){if(!a(t))return null;const{pixels:n,mask:i}=t,o=n.length;let s=e.lut;const{offset:r}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const h=[],f=e.outputPixelType||"u8";for(let l=0;l<o;l++){const t=x(n[l],i,s[l],r||0,f);h.push(t)}const c=new l({width:t.width,height:t.height,pixels:h,mask:i,pixelType:f});return c.updateStatistics(),c}function x(t,e,n,i,o){const s=t.length,r=l.createEmptyBand(o,s);if(e)for(let l=0;l<s;l++)e[l]&&(r[l]=n[t[l]-i]);else for(let l=0;l<s;l++)r[l]=n[t[l]-i];return r}function m(t,e){if(!a(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,o=e.length,s=Math.floor(o/2),r=e[Math.floor(s)],h=l[0];let f,c,u,p,x,m,g=!1;const d=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(i),k.fill(M?255:1),n.mask=k),x=0;x<i;x++)if(k[x]){for(f=h[x],g=!1,m=s,c=r,u=0,p=o-1;p-u>1;){if(f===c.value){g=!0;break}f>c.value?u=m:p=m,m=Math.floor((u+p)/2),c=e[Math.floor(m)]}g||(f===e[u].value?(c=e[u],g=!0):f===e[p].value?(c=e[p],g=!0):f<e[u].value?(g=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],g=!0):p===o-1?(g=!1,c=null):(c=e[p],g=!0))),g?(d[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):d[x]=y[x]=w[x]=k[x]=0}return n.pixels=[d,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function g(t,e){if(!a(t))return null;const{width:n,height:o}=t,{inputRanges:s,outputValues:r,outputPixelType:h,noDataRanges:f,allowUnmatched:c,isLastInputRangeInclusive:u}=e,p=t.pixels[0],x=l.createEmptyBand(h,p.length),m=t.mask,g=new Uint8Array(n*o);m?g.set(m):g.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,y=s.map((t=>t-d));y[0]=s[0],y[y.length-1]=s[s.length-1]+(u?1e-6:0);const w=s.length/2,[k,M]=i(h);for(let l=0;l<o;l++)for(let t=0;t<n;t++){const e=l*n+t;if(g[e]){const t=p[e];let n=!1;for(let l=w-1;l>=0;l--)if(t===y[2*l]||t>y[2*l]&&t<y[2*l+1]){x[e]=r[l],n=!0;break}n||(c?x[e]=t>M?M:t<k?k:t:g[e]=0)}}if(f?.length)for(let l=0;l<o;l++)for(let t=0;t<n;t++){const e=l*n+t;if(!m||m[e]){const t=p[e];for(let n=0;n<w;n+=2)if(t>=f[n]&&t<=f[n+1]){x[e]=0,g[e]=0;break}}}return new l({width:n,height:o,pixelType:h,pixels:[x],mask:g})}function d(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let r=0;r<t.length;r++)if(l[r]){const n=t[r];if(s){let t=!1;for(let l=0;l<e.length;l+=2)if(n>=e[l]&&n<=e[l+1]){t=!0;break}t||(l[r]=0)}l[r]&&(n===o||i?.has(n))&&(l[r]=0)}}function y(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function w(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function k(t,e){if(!a(t))return null;const{width:n,height:i,pixels:o}=t,s=n*i,r=new Uint8Array(s);t.mask?r.set(t.mask):r.fill(255);const h=o.length,{includedRanges:f,noDataValues:c,outputPixelType:u,matchAll:p,lookups:m}=e;if(m){const t=[];for(let e=0;e<h;e++){const n=m[e],l=x(o[e],r,n.lut,n.offset||0,"u8");t.push(l)}1===t.length?r.set(t[0]):p?y(t,r):w(t,r)}else if(p){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(s);n.set(r),d(o[e],f?.slice(2*e,2*e+2),c?.[e],n),t.push(n)}1===t.length?r.set(t[0]):y(t,r)}else for(let l=0;l<h;l++)d(o[l],f?.slice(2*l,2*l+2),c?.[l],r);return new l({width:n,height:i,pixelType:u,pixels:o,mask:r})}function M(t){const{srcPixelType:e,inputRanges:n,outputValues:o,allowUnmatched:s,noDataRanges:r,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const f=e.includes("16")?65536:256,c=e.includes("s")?-f/2:0,u=l.createEmptyBand(h,f),p=new Uint8Array(f);s&&p.fill(255);const[x,m]=i(h);if(n?.length&&o?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],a&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=o[n]>m?m:o[n]<x?x:o[n],l=Math.ceil(e[2*n]-c),i=Math.floor(e[2*n+1]-c);for(let e=l;e<=i;e++)u[e]=t,p[e]=255}}if(r?.length)for(let l=0;l<r.length;l++){const t=Math.ceil(r[2*l]-c),e=Math.floor(r[2*l+1]-c);for(let n=t;n<=e;n++)p[n]=0}return{lut:u,offset:c,mask:p}}function A(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const l=t.includes("16")?65536:256,i=t.includes("s")?-l/2:0,o=new Uint8Array(l);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-i),n=Math.floor(e[2*s+1]-i);for(let e=t;e<=n;e++)o[e]=255}else o.fill(255);if(n)for(let s=0;s<n.length;s++)o[n[s]-i]=0;return{lut:o,offset:i}}function U(t,e,n,l,i,o,s,r){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+s<=n*t?0:i+s<n*t+t?i+s-n*t:t,ymax:o+r<=l*e?0:o+r<l*e+e?o+r-l*e:e}}function T(t,n){if(!t||0===t.length)return null;const l=t.find((t=>t.pixelBlock));if(!l||e(l.pixelBlock))return null;const i=(l.extent.xmax-l.extent.xmin)/l.pixelBlock.width,o=(l.extent.ymax-l.extent.ymin)/l.pixelBlock.height,s=.01*Math.min(i,o),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),h=Math.min.apply(null,r.map((t=>t.extent.ymin))),f=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((n.xmin-a)/i),y:Math.round((c-n.ymax)/o)},p={width:Math.round((f-a)/i),height:Math.round((c-h)/o)},x={width:Math.round((n.xmax-n.xmin)/i),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/l.pixelBlock.width)*Math.round(p.height/l.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height)return null;return{extent:n,pixelBlock:b(r.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:x})}}function C(t,e,n,l,i,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=U(s,r,l,i,a,h,f,c);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+l*e;n<t&&n+e>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const n=(i*r+m-h)*f+(l*s-a)+p,o=m*s;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e[o+l]}else for(let m=u.ymin;m<u.ymax;m++){const n=(i*r+m-h)*f+(l*s-a)+p;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e}}function b(n,i,o={}){const{clipOffset:s,clipSize:r,alignmentInfo:h,blockWidths:f}=o;if(f)return P(n,i,{blockWidths:f});const c=n.find((t=>a(t)));if(e(c))return null;const u=r?r.width:i.width,p=r?r.height:i.height,x=c.width,m=c.height,g=i.width/x,d=i.height/m,y={offset:s||{x:0,y:0},mosaic:r||i,block:{width:x,height:m}},w=c.pixelType,k=l.getPixelArrayConstructor(w),M=c.pixels.length,A=[];let U,T;for(let t=0;t<M;t++){T=new k(u*p);for(let e=0;e<d;e++)for(let l=0;l<g;l++){const i=n[e*g+l];a(i)&&(U=i.pixels[t],C(T,U,y,l,e,h))}A.push(T)}let b;if(n.some((n=>e(n)||t(n.mask)&&n.mask.length>0))){b=new Uint8Array(u*p);for(let e=0;e<d;e++)for(let l=0;l<g;l++){const i=n[e*g+l],o=t(i)?i.mask:null;t(o)?C(b,o,y,l,e,h):C(b,i?1:0,y,l,e,h)}}const S=new l({width:u,height:p,pixels:A,pixelType:w,mask:b});return S.updateStatistics(),S}function P(i,o,s){const r=i.find((e=>t(e)));if(e(r))return null;const h=i.some((e=>!t(e)||!!e.mask)),{width:f,height:c}=o,u=h?new Uint8Array(f*c):null,{blockWidths:p}=s,x=[],m=r.getPlaneCount(),g=l.getPixelArrayConstructor(r.pixelType);if(h)for(let t=0,e=0;t<i.length;e+=p[t],t++){const l=i[t];if(!a(l))continue;const o=n(l.mask);for(let n=0;n<c;n++)for(let i=0;i<p[t];i++)u[n*f+i+e]=null==o?255:o[n*l.width+i]}for(let t=0;t<m;t++){const e=new g(f*c);for(let n=0,l=0;n<i.length;l+=p[n],n++){const o=i[n];if(!a(o))continue;const s=o.pixels[t];if(null!=s)for(let t=0;t<c;t++)for(let i=0;i<p[n];i++)e[t*f+i+l]=s[t*o.width+i]}x.push(e)}const d=new l({width:f,height:c,mask:u,pixels:x,pixelType:r.pixelType});return d.updateStatistics(),d}function S(t,e,n){if(!a(t))return null;const{width:l,height:i}=t,o=e.x,s=e.y,r=n.width+o,h=n.height+s;if(o<0||s<0||r>l||h>i)return t;if(0===o&&0===s&&r===l&&h===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let a=0;a<i;a++){const t=a*l;for(let e=0;e<l;e++)f[t+e]=a<s||a>=h||e<o||e>=r?0:1}return t.updateStatistics(),t}function B(t){if(!a(t))return null;const e=t.clone(),{width:l,height:i,pixels:o}=t,s=o[0],r=e.pixels[0],h=n(t.mask);for(let n=2;n<i-1;n++){const t=new Map;for(let i=n-2;i<n+2;i++)for(let e=0;e<4;e++){const n=i*l+e;_(t,s[n],h?h[n]:1)}r[n*l]=v(t),r[n*l+1]=r[n*l+2]=r[n*l];let e=3;for(;e<l-1;e++){let i=(n-2)*l+e+1;_(t,s[i],h?h[i]:1),i=(n-1)*l+e+1,_(t,s[i],h?h[i]:1),i=n*l+e+1,_(t,s[i],h?h[i]:1),i=(n+1)*l+e+1,_(t,s[i],h?h[i]:1),i=(n-2)*l+e-3,I(t,s[i],h?h[i]:1),i=(n-1)*l+e-3,I(t,s[i],h?h[i]:1),i=n*l+e-3,I(t,s[i],h?h[i]:1),i=(n+1)*l+e-3,I(t,s[i],h?h[i]:1),r[n*l+e]=v(t)}r[n*l+e+1]=r[n*l+e]}for(let n=0;n<l;n++)r[n]=r[l+n]=r[2*l+n],r[(i-1)*l+n]=r[(i-2)*l+n];return e.updateStatistics(),e}function v(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function I(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function _(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function W(t,e,i){let{x:o,y:s}=e;const{width:r,height:h}=i;if(0===o&&0===s&&h===t.height&&r===t.width)return t;const{width:f,height:c}=t,u=Math.max(0,s),p=Math.max(0,o),x=Math.min(o+r,f),m=Math.min(s+h,c);if(x<0||m<0||!a(t))return null;o=Math.max(0,-o),s=Math.max(0,-s);const{pixels:g}=t,d=r*h,y=g.length,w=[];for(let n=0;n<y;n++){const e=g[n],i=l.createEmptyBand(t.pixelType,d);for(let t=u;t<m;t++){const n=t*f;let l=(t+s-u)*r+o;for(let t=p;t<x;t++)i[l++]=e[n+t]}w.push(i)}const k=new Uint8Array(d),M=n(t.mask);for(let n=u;n<m;n++){const t=n*f;let e=(n+s-u)*r+o;for(let n=p;n<x;n++)k[e++]=M?M[t+n]:1}const A=new l({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function E(e,n=!0){if(!a(e))return null;const{pixels:i,width:o,height:s,mask:r,pixelType:h}=e,f=[],c=Math.round(o/2),u=Math.round(s/2),p=s-1,x=o-1;for(let t=0;t<i.length;t++){const e=i[t],r=l.createEmptyBand(h,c*u);let a=0;for(let t=0;t<s;t+=2)for(let l=0;l<o;l+=2){const i=e[t*o+l];if(n){const n=l===x?i:e[t*o+l+1],s=t===p?i:e[t*o+l+o],h=l===x?s:t===p?n:e[t*o+l+o+1];r[a++]=(i+n+s+h)/4}else r[a++]=i}f.push(r)}let m=null;if(t(r)){m=new Uint8Array(c*u);let t=0;for(let e=0;e<s;e+=2)for(let l=0;l<o;l+=2){const i=r[e*o+l];if(n){const n=l===x?i:r[e*o+l+1],s=e===p?i:r[e*o+l+o],a=l===x?s:e===p?n:r[e*o+l+o+1];m[t++]=i*n*s*a?1:0}else m[t++]=i}}return new l({width:c,height:u,pixelType:h,pixels:f,mask:m})}function R(t,e,n){if(!a(t))return null;const{width:l,height:i}=e;let{width:o,height:s}=t;const r=new Map,h={x:0,y:0},f=null==n?1:1+n;let c=t;for(let a=0;a<f;a++){const t=Math.ceil(o/l),n=Math.ceil(s/i);for(let o=0;o<n;o++){h.y=o*i;for(let n=0;n<t;n++){h.x=n*l;const t=W(c,h,e);r.set(`${a}/${o}/${n}`,t)}}a<f-1&&(c=E(c)),o=Math.round(o/2),s=Math.round(s/2)}return r}function j(t,e,n,l,i=0){const{width:o,height:s}=t,{width:r,height:a}=e,h=l.cols,f=l.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,m,g,d,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),T=new Uint32Array(M),C=new Uint32Array(M);let b,P,S=0;for(let B=0;B<u;B++)for(let t=0;t<c;t++){p=12*(B*c+t),x=n[p],m=n[p+1],g=n[p+2],d=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){S=(B*f+e)*k+t*h,P=(e+.5)/f;for(let t=0;t<e;t++)b=(t+.5)/h,A[S+t]=(x*b+m*P+g)*o+i,U[S+t]=(d*b+y*P+w)*s+i,T[S+t]=Math.floor(A[S+t]),C[S+t]=Math.floor(U[S+t])}p+=6,x=n[p],m=n[p+1],g=n[p+2],d=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){S=(B*f+e)*k+t*h,P=(e+.5)/f;for(let t=e;t<h;t++)b=(t+.5)/h,A[S+t]=(x*b+m*P+g)*o+i,U[S+t]=(d*b+y*P+w)*s+i,T[S+t]=Math.floor(A[S+t]),C[S+t]=Math.floor(U[S+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:T,offsets_yi:C,gridWidth:k}}function D(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:s}=j(t,t,n,{rows:l[0],cols:l[1]}),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<r;t++){const e=c*s+t,n=0===c?e:e-s,l=c===a-1?e:e+s,u=i[n]-i[l],p=o[l]-o[n];if(isNaN(u)||isNaN(p))h[c*r+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*r+t]=e}}return h}function F(e,n,i,o,s="nearest"){if(!a(e))return null;"majority"===s&&(e=B(e));const{pixels:r,mask:h,pixelType:f}=e,c=e.width,u=e.height,p=l.getPixelArrayConstructor(f),x=r.length,{width:m,height:g}=n;let d=!1;for(let t=0;t<i.length;t+=3)-1===i[t]&&-1===i[t+1]&&-1===i[t+2]&&(d=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=j({width:c,height:u},n,i,o,"majority"===s?.5:0);let U;const T=(t,e,n)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let i=0;i<g;i++){U=i*A;for(let o=0;o<m;o++){if(y[U]<0||w[U]<0)t[i*m+o]=0;else if(n)t[i*m+o]=e[k[U]+M[U]*c];else{const n=Math.floor(y[U]),s=Math.floor(w[U]),r=Math.ceil(y[U]),a=Math.ceil(w[U]),f=y[U]-n,u=w[U]-s;if(!h||h[n+s*c]&&h[n+s*c]&&h[n+a*c]&&h[r+a*c]){const h=(1-f)*e[n+s*c]+f*e[r+s*c],p=(1-f)*e[n+a*c]+f*e[r+a*c];t[i*m+o]=(1-u)*h+u*p+l}else t[i*m+o]=e[k[U]+M[U]*c]}U++}}},C=[];let b;for(let t=0;t<x;t++)b=new p(m*g),T(b,r[t],"nearest"===s||"majority"===s),C.push(b);const P=new l({width:m,height:g,pixelType:f,pixels:C});if(t(h))P.mask=new Uint8Array(m*g),T(P.mask,h,!0);else if(d){P.mask=new Uint8Array(m*g);for(let t=0;t<m*g;t++)P.mask[t]=y[t]<0||w[t]<0?0:1}return P.updateStatistics(),P}export{r as MAX_MAP_SIZE_GPU,s as MissingBandAction,o as NoDataInterpretation,F as approximateTransform,W as clip,u as colorize,f as compositeBands,c as createColormapLUT,A as createMaskLUT,M as createRemapLUT,h as extractBands,U as getClipBounds,D as getLocalArithmeticNorthRotations,j as interpolateOffsets,a as isValidPixelBlock,x as lookupBandValues,p as lookupPixels,k as mask,b as mosaic,T as mosaicPixelData,g as remap,m as remapColor,B as resampleByMajority,S as setValidBoundary,R as split};
