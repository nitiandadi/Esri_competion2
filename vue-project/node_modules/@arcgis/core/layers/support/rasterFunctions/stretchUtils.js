/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{isNone as t,isSome as n,unwrap as e,assertIsSome as i}from"../../../core/maybe.js";import s from"../PixelBlock.js";import{getPixelValueRange as o}from"../rasterFormats/pixelRangeUtils.js";import{stretchTypeFunctionEnum as r}from"../../../renderers/support/stretchRendererUtils.js";const a=1,l=[.299,.587,.114];function f(t,n=256){n=Math.min(n,256);const{size:e,counts:i}=t,s=new Uint8Array(e),o=i.reduce(((t,e)=>t+e/n),0);let r=0,a=0,l=0,f=o;for(let u=0;u<e;u++)if(l+=i[u],!(u<e-1&&l+i[u+1]<f)){for(;r<n-1&&f<l;)r++,f+=o;for(let t=a;t<=u;t++)s[t]=r;a=u+1}for(let u=a;u<e;u++)s[u]=n-1;return s}function u(t){const{minCutOff:n,maxCutOff:e,gamma:i,pixelType:s,rounding:o}=t,r=t.outMin||0,a=t.outMax||255;if(!["u8","u16","s8","s16"].includes(s))return null;const l=n.length;let f,u,c=0;"s8"===s?c=-127:"s16"===s&&(c=-32767);let h=256;["u16","s16"].includes(s)&&(h=65536);const p=[],g=[],x=a-r;for(f=0;f<l;f++)g[f]=e[f]-n[f],p[f]=0===g[f]?0:x/g[f];let d;const y=[];let C,O,b;if(i&&i.length>=l){const t=M(l,i);for(f=0;f<l;f++){for(b=[],u=0;u<h;u++)if(0!==g[f])if(C=u+c,d=(C-n[f])/g[f],O=1,i[f]>1&&(O-=(1/x)**(d*t[f])),C<e[f]&&C>n[f]){const t=O*x*d**(1/i[f])+r;b[u]="floor"===o?Math.floor(t):"round"===o?Math.round(t):t}else C>=e[f]?b[u]=a:b[u]=r;else b[u]=r;y[f]=b}}else for(f=0;f<l;f++){for(b=[],u=0;u<h;u++)if(C=u+c,C<=n[f])b[u]=r;else if(C>=e[f])b[u]=a;else{const t=(C-n[f])*p[f]+r;b[u]="floor"===o?Math.floor(t):"round"===o?Math.round(t):t}y[f]=b}if(null!=t.contrastOffset){const n=m(t.contrastOffset,t.brightnessOffset);for(f=0;f<l;f++)for(b=y[f],u=0;u<h;u++)b[u]=n[b[u]]}return{lut:y,offset:c}}function m(t,n){const e=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(n??0,-100),100),s=255,o=128;let r=0,a=0;const l=new Uint8Array(256);for(r=0;r<256;r++)e>0&&e<100?a=(200*r-100*s+2*s*i)/(2*(100-e))+o:e<=0&&e>-100?a=(200*r-100*s+2*s*i)*(100+e)/2e4+o:100===e?(a=200*r-100*s+(s+1)*(100-e)+2*s*i,a=a>0?s:0):-100===e&&(a=o),l[r]=a>s?s:a<0?0:a;return l}function c(t,n,e){const i=[];for(let s=0;s<n.length;s++){let o=0,r=0,a=0;"min"in n[s]?({min:o,max:r,avg:a}=n[s]):[o,r,a]=n[s];let f=a??0;"u8"!==t&&(f=255*(f-o)/(r-o)),e&&(f*=l[s]),i.push(h(f))}return i}function h(t){if(t<=0||t>=255)return a;let n=0;150!==t&&(n=t<=150?45*Math.cos(.01047*t):17*Math.sin(.021*t));const e=255,i=t+n,s=Math.log(t/e),o=Math.log(i/e);if(0===o)return a;const r=s/o;return isNaN(r)?a:Math.min(9.9,Math.max(.01,r))}function p(n){if(t(n)||!n.pixels?.length)return null;const{pixels:e,mask:i,pixelType:s}=n,o=n.width*n.height,r=e.length;let a,l,f,u,m;const c=[],h=[];let p,g,x,d,M,y,C,O,b,v;const k=256;for(u=0;u<r;u++){if(p=new Uint32Array(k),x=e[u],"u8"===s)if(a=-.5,l=255.5,i)for(m=0;m<o;m++)i[m]&&p[x[m]]++;else for(m=0;m<o;m++)p[x[m]]++;else{let t=!1;n.statistics||(n.updateStatistics(),t=!0);const e=n.statistics;if(a=e[u].minValue,l=e[u].maxValue,f=(l-a)/k,0===f){!e||n.validPixelCount||t||n.updateStatistics();const i=(n.validPixelCount||n.width*n.height)/k;for(let t=0;t<k;t++)p[t]=Math.round(i*(t+1))-Math.round(i*t)}else{for(g=new Uint32Array(k+1),m=0;m<o;m++)i&&!i[m]||g[Math.floor((x[m]-a)/f)]++;for(m=0;m<k-1;m++)p[m]=g[m];p[k-1]=g[k-1]+g[k]}}for(c.push({min:a,max:l,size:k,counts:p}),d=0,M=0,O=0,m=0;m<k;m++)d+=p[m],M+=m*p[m];for(b=M/d,m=0;m<k;m++)O+=p[m]*(m-b)**2;v=Math.sqrt(O/(d-1)),f=(l-a)/k,y=(b+.5)*f+a,C=v*f,h.push({min:a,max:l,avg:y,stddev:C})}return{statistics:h,histograms:c}}function g(t){const n=[];for(let e=0;e<t.length;e++){const{min:i,max:s,size:o,counts:r}=t[e];let a=0,l=0;for(let t=0;t<o;t++)a+=r[t],l+=t*r[t];const f=l/a;let u=0;for(let t=0;t<o;t++)u+=r[t]*(t-f)**2;const m=(s-i)/o,c=(f+.5)*m+i,h=Math.sqrt(u/(a-1))*m;n.push({min:i,max:s,avg:c,stddev:h})}return n}function x(t,s){const{pixelBlock:a,bandIds:l,returnHistogramLut:u,rasterInfo:m}=s;let c=null,h=null,g=t.stretchType;if("number"==typeof g&&(g=r[g]),t.dra)if("minMax"===g&&n(a)&&a.statistics)c=a.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=p(a);c=n(t)?t.statistics:null,h=n(t)?t.histograms:null}else c=t.statistics?.length>0?t.statistics:e(m.statistics),h=t.histograms||e(m.histograms);"percentClip"!==g&&"histogramEqualization"!==g||h?.length||(g="minMax");const x=c?.length||h?.length||m.bandCount,M=[],y=[];let C,O,b,v,k,w,z,A,U;c&&!Array.isArray(c[0])&&(c=c.map((t=>[t.min,t.max,t.avg,t.stddev])));const[P,T]=o(m.pixelType);if(!c?.length){for(c=[],A=0;A<x;A++)c.push([P,T,1,1]);"standardDeviation"===g&&(g="minMax")}switch(g){case"none":for(A=0;A<x;A++)M[A]=P,y[A]=T;break;case"minMax":for(A=0;A<x;A++)M[A]=c[A][0],y[A]=c[A][1];break;case"standardDeviation":for(A=0;A<x;A++)M[A]=c[A][2]-t.numberOfStandardDeviations*c[A][3],y[A]=c[A][2]+t.numberOfStandardDeviations*c[A][3],M[A]<c[A][0]&&(M[A]=c[A][0]),y[A]>c[A][1]&&(y[A]=c[A][1]);break;case"histogramEqualization":for(i(h),A=0;A<x;A++)M[A]=h[A].min,y[A]=h[A].max;break;case"percentClip":for(i(h),A=0;A<h.length;A++){for(C=h[A],k=new Uint32Array(C.size),v=[...C.counts],v.length>=20&&(v[0]=v[1]=v[2]=v[v.length-1]=v[v.length-2]=0),b=0,O=(C.max-C.min)/C.size,z=-.5===C.min&&1===O?.5:0,U=0;U<C.size;U++)b+=v[U],k[U]=b;for(w=(t.minPercent||0)*b/100,M[A]=C.min+z,U=0;U<C.size;U++)if(k[U]>w){M[A]=C.min+O*(U+z);break}for(w=(1-(t.maxPercent||0)/100)*b,y[A]=C.max+z,U=C.size-2;U>=0;U--)if(k[U]<w){y[A]=C.min+O*(U+2-z);break}if(y[A]<M[A]){const t=M[A];M[A]=y[A],y[A]=t}}break;default:for(A=0;A<x;A++)M[A]=c[A][0],y[A]=c[A][1]}let q,S,j;"histogramEqualization"===g?(i(h),S=h[0].size||256,q=0,u&&(j=h.map((t=>f(t))))):(S=t.max||255,q=t.min||0);return d({minCutOff:M,maxCutOff:y,outMax:S,outMin:q,histogramLut:j},l)}function d(t,n){if(null==n||0===n.length)return t;const e=Math.max.apply(null,n),{minCutOff:i,maxCutOff:s,outMin:o,outMax:r,histogramLut:a}=t;return i.length===n.length||i.length<=e?t:{minCutOff:n.map((t=>i[t])),maxCutOff:n.map((t=>s[t])),histogramLut:a?n.map((t=>a[t])):null,outMin:o,outMax:r}}function M(t,n){const e=new Float32Array(t);for(let i=0;i<t;i++)n[i]>1?n[i]>2?e[i]=6.5+(n[i]-2)**2.5:e[i]=6.5+100*(2-n[i])**4:e[i]=1;return e}function y(n,e){if(t(n)||!n.pixels?.length)return n;const{mask:i,width:o,height:r,pixels:a}=n,{minCutOff:l,maxCutOff:f,gamma:u}=e,m=e.outMin||0,c=e.outMax||255,h=o*r,p=e.outputPixelType||"u8",g=n.pixels.map((()=>s.createEmptyBand(p,h))),x=g.length;let d,y,C,O,b;const v=c-m,k=[],w=[];for(d=0;d<x;d++)w[d]=f[d]-l[d],k[d]=0===w[d]?0:v/w[d];const z=p.startsWith("u")||p.startsWith("s"),A=u&&u.length>=x,U=!!e.isRenderer;if(A){const t=M(x,u);for(y=0;y<h;y++)if(null==i||i[y])for(d=0;d<x;d++)if(0!==w[d])if(C=a[d][y],b=(C-l[d])/w[d],O=1,u[d]>1&&(O-=(1/v)**(b*t[d])),C<f[d]&&C>l[d]){const t=O*v*b**(1/u[d])+m;g[d][y]=U?Math.floor(t):z?Math.round(t):t}else C>=f[d]?g[d][y]=c:g[d][y]=m;else g[d][y]=m}else for(y=0;y<h;y++)if(null==i||i[y])for(d=0;d<x;d++)if(C=a[d][y],C<f[d]&&C>l[d]){const t=(C-l[d])*k[d]+m;g[d][y]=U?Math.floor(t):z?Math.round(t):t}else C>=f[d]?g[d][y]=c:g[d][y]=m;const P=new s({width:o,height:r,mask:i,pixels:g,pixelType:p});return P.updateStatistics(),P}export{M as computeGammaCorrection,c as computeGammaValues,m as createContrastBrightnessLUT,f as createHistogramEqualizationLUT,u as createStretchLUT,g as estimateStatisticsFromHistograms,p as estimateStatisticsHistograms,x as getStretchCutoff,y as stretch};
