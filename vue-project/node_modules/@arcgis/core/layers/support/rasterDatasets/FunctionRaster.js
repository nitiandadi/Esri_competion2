/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import t from"../../../core/Error.js";import{isNone as e,isSome as s}from"../../../core/maybe.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import i from"./BaseRaster.js";let n=class extends i{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(r){await this.init();const{rasterFunction:e}=this;this.primaryRasters?.rasters?.length?e.sourceRasters=this.primaryRasters.rasters:this.primaryRasters=e.getPrimaryRasters();const{rasters:s,rasterIds:a}=this.primaryRasters,o=s.map((t=>t.rasterInfo?void 0:t.open(r)));await Promise.all(o);const i=s.map((({rasterInfo:r})=>r)),n=e.bind({rasterInfos:i,rasterIds:a});if(!n.success||0===i.length)throw new t("raster-function:open",`cannot bind the function: ${n.error??""}`);await this.syncJobHandler();const c=i[0];this.hasUniqueSourceStorageInfo=1===i.length||i.slice(1).every((r=>this._hasSameStorageInfo(r,c))),this.set("sourceJSON",s[0].sourceJSON),this.set("rasterInfo",e.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(r,t,a,o={}){const{rasters:i,rasterIds:n}=this.primaryRasters,c=i.map((e=>e.fetchPixels(r,t,a,o))),p=await Promise.all(c),l=p.map((r=>r.pixelBlock));if(o.skipRasterFunction||l.every((r=>e(r))))return p[0];const m=p.find((r=>s(r.pixelBlock)))?.extent??r,u=this.rasterJobHandler?await this.rasterJobHandler.process({extent:m,primaryPixelBlocks:l,primaryRasterIds:n}):this.rasterFunction.process({extent:m,primaryPixelBlocks:l,primaryRasterIds:n});return{...p[0],pixelBlock:u}}_hasSameStorageInfo(r,t){const{storageInfo:e,pixelSize:s,spatialReference:a,extent:o}=r,{storageInfo:i,pixelSize:n,spatialReference:c,extent:p}=t;return s.x===n.x&&s.y===n.y&&a.equals(c)&&o.equals(p)&&e.blockHeight===i.blockHeight&&e.blockWidth===i.blockWidth&&e.maximumPyramidLevel===i.maximumPyramidLevel}};r([a({type:String,json:{write:!0}})],n.prototype,"datasetFormat",void 0),r([a()],n.prototype,"tileType",void 0),r([a()],n.prototype,"rasterFunction",void 0),r([a()],n.prototype,"primaryRasters",void 0),n=r([o("esri.layers.support.rasterDatasets.FunctionRaster")],n);const c=n;export{c as default};
