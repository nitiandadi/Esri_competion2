/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import r from"../../PopupTemplate.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import o from"../../renderers/SimpleRenderer.js";import t from"../../renderers/UniqueValueRenderer.js";import{read as s}from"../../renderers/support/jsonUtils.js";import{rendererTypes as i}from"../../renderers/support/types.js";import{symbolTypesRenderer as p}from"../../symbols.js";import{clone as n}from"../../core/lang.js";import{setDeepValue as l}from"../../core/object.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{enumeration as d}from"../../core/accessorSupport/decorators/enumeration.js";import{reader as m}from"../../core/accessorSupport/decorators/reader.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{writer as c}from"../../core/accessorSupport/decorators/writer.js";import{createTypeReader as f}from"../../core/accessorSupport/extensions/serializableProperty/reader.js";import y from"./AggregateField.js";import{labelsVisible as b,popupEnabled as j}from"./commonProperties.js";import{FeatureReduction as g}from"./FeatureReduction.js";import h from"./LabelClass.js";var v;const S=f({types:p}),w="esri.layers.support.FeatureReductionBinning";let I=v=class extends g{constructor(e){super(e),this.type="binning",this.binType="geohash",this.fixedBinLevel=3,this.labelingInfo=null,this.labelsVisible=!0,this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.fields=[],this.renderer=null}writeFields(e,r,o){const t=e.filter((e=>"avg_angle"!==e.statisticType)).map((e=>e.toJSON()));l(o,t,r)}readRenderer(e,r,i){const p=r.drawingInfo?.renderer;return p?s(p,r,i)??void 0:r.defaultSymbol?r.types&&r.types.length?new t({defaultSymbol:S(r.defaultSymbol,r,i),field:r.typeIdField,uniqueValueInfos:r.types.map((e=>({id:e.id,symbol:S(e.symbol,e,i)})))}):new o({symbol:S(r.defaultSymbol,r,i)}):null}clone(){return new v({fields:n(this.fields),fixedBinLevel:this.fixedBinLevel,labelingInfo:n(this.labelingInfo),labelsVisible:this.labelsVisible,maxScale:this.maxScale,popupEnabled:this.popupEnabled,popupTemplate:n(this.popupTemplate),renderer:n(this.renderer)})}};e([d({binning:"binning"})],I.prototype,"type",void 0),e([d({geohash:"geohash"})],I.prototype,"binType",void 0),e([a({type:Number,range:{min:1,max:9},json:{write:!0}})],I.prototype,"fixedBinLevel",void 0),e([a({type:[h],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],I.prototype,"labelingInfo",void 0),e([a(b)],I.prototype,"labelsVisible",void 0),e([a({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],I.prototype,"maxScale",void 0),e([a(j)],I.prototype,"popupEnabled",void 0),e([a({type:r,json:{name:"popupInfo",write:!0}})],I.prototype,"popupTemplate",void 0),e([a({type:[y],json:{write:!0}})],I.prototype,"fields",void 0),e([c("fields")],I.prototype,"writeFields",null),e([a({types:i,json:{write:{target:"drawingInfo.renderer"}}})],I.prototype,"renderer",void 0),e([m("renderer",["drawingInfo.renderer"])],I.prototype,"readRenderer",null),I=v=e([u(w)],I);const x=I;export{x as default};
