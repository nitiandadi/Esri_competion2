/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import r from"../../PopupTemplate.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import{rendererTypes as t,webSceneRendererTypes as i}from"../../renderers/support/types.js";import o from"../../request.js";import{isSymbol3D as s}from"../../symbols.js";import a from"../../core/Collection.js";import l from"../../core/Error.js";import{HandleOwnerMixin as n}from"../../core/HandleOwner.js";import has from"../../core/has.js";import{IdentifiableMixin as p}from"../../core/Identifiable.js";import{clone as y}from"../../core/lang.js";import d from"../../core/Loadable.js";import u from"../../core/Logger.js";import{isSome as c}from"../../core/maybe.js";import{MultiOriginJSONMixin as f}from"../../core/MultiOriginJSONSupport.js";import{sqlAnd as m}from"../../core/sql.js";import{objectToQuery as h}from"../../core/urlUtils.js";import{property as b}from"../../core/accessorSupport/decorators/property.js";import{cast as g}from"../../core/accessorSupport/decorators/cast.js";import{reader as S}from"../../core/accessorSupport/decorators/reader.js";import{subclass as I}from"../../core/accessorSupport/decorators/subclass.js";import{writer as w}from"../../core/accessorSupport/decorators/writer.js";import{ensureInteger as v,ensureType as j,Integer as L,ensureClass as D}from"../../core/accessorSupport/ensureType.js";import{OriginId as E,nameToId as F}from"../../core/accessorSupport/PropertyOrigin.js";import{getProperties as P}from"../../core/accessorSupport/utils.js";import x from"../graphics/sources/support/QueryTask.js";import O from"./FeatureType.js";import T from"./Field.js";import _ from"./FieldsIndex.js";import A from"./LabelClass.js";import{validateLabelingInfo as V}from"./labelingInfo.js";import N from"./LayerFloorInfo.js";import{getFeatureLayerCapabilities as M}from"./serviceCapabilitiesUtils.js";import{DataLayerSource as C}from"./source/DataLayerSource.js";import{MapLayerSource as q}from"./source/MapLayerSource.js";import U from"../../rest/support/AttachmentQuery.js";import k from"../../rest/support/Query.js";import{createPopupTemplate as R}from"../../support/popupUtils.js";import Q from"../../geometry/Extent.js";import{featureGeometryTypeKebabDictionary as B}from"../../geometry/support/typeUtils.js";var J;function $(e){return null!=e&&"esriSMS"===e.type}function G(e,r,t){const i=this.originIdOf(r)>=F(t.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&("map-image"===t.layer?.type&&(t.writeSublayerStructure||i))}}function H(e,r,t){return{enabled:!!t&&("tile"===t.layer?.type&&this._isOverridden(r))}}function z(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function K(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=F(t.origin))}}let W=0;const X=new Set;X.add("layer"),X.add("parent"),X.add("loaded"),X.add("loadStatus"),X.add("loadError"),X.add("loadWarnings");let Y=J=class extends(n(f(p(d)))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,source:t,url:i}=this;if(!r&&!i)throw new l("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let s=null;if(!r||this.originIdOf("url")>E.SERVICE||"data-layer"===t?.type){s=(await o(i,{responseType:"json",query:{f:"json"},...e})).data}else{let i=this.id;"map-layer"===t?.type&&(i=t.mapLayerId),s=await r.fetchSublayerInfo(i,e)}s&&(this.sourceJSON=s,this.read({layerDefinition:s},{origin:"service"}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{operations:{supportsQuery:t,supportsQueryAttachments:i},query:{supportsFormatPBF:o},data:{supportsAttachment:s}}=M(r,this.url);return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:t,supportsQueryAttachments:i},data:{supportsAttachment:s},query:{supportsFormatPBF:o}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new _(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeGlobalID"===t.type)return t.name}get id(){const e=this._get("id");return e??W++}set id(e){this._get("id")!==e&&(!1!==this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeOID"===t.type)return t.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const t=r.layerDefinition;return 1-.01*((null!=t?.transparency?t.transparency:t?.drawingInfo?.transparency)??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=v(this.parent.id):r.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{spatialReference:e}=this.layer,r="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:t,fieldsIndex:i}=this,o=has("featurelayer-pbf")&&t?.query.supportsFormatPBF,s=t?.operations?.supportsQueryAttachments??!1;return new x({url:this.url,pbfSupported:o,fieldsIndex:i,gdbVersion:r,sourceSpatialReference:e,queryAttachmentsSupported:s})}set renderer(e){if(e)for(const r of e.getSymbols())if(s(r)){u.getLogger(this.declaredClass).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new q({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return j(a.ofType(J),e)}writeSublayers(e,r,t){this.sublayers?.length&&(r[t]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return t}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===r?.type)return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${h(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=P(this),r=new J;return P(r).store=e.clone(X),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return R(this,e)}createQuery(){return new k({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const{layer:e}=this,r=e?.parsedUrl,t=new(0,(await import("../FeatureLayer.js")).default)({url:r?.path});return r&&this.source&&("map-layer"===this.source.type?t.layerId=this.source.mapLayerId:t.dynamicDataSource=this.source),null!=e?.refreshInterval&&(t.refreshInterval=e.refreshInterval),this.definitionExpression&&(t.definitionExpression=this.definitionExpression),this.floorInfo&&(t.floorInfo=y(this.floorInfo)),this.originIdOf("labelingInfo")>E.SERVICE&&(t.labelingInfo=y(this.labelingInfo)),this.originIdOf("labelsVisible")>E.DEFAULTS&&(t.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>E.DEFAULTS&&(t.legendEnabled=this.legendEnabled),this.originIdOf("visible")>E.DEFAULTS&&(t.visible=this.visible),this.originIdOf("minScale")>E.DEFAULTS&&(t.minScale=this.minScale),this.originIdOf("maxScale")>E.DEFAULTS&&(t.maxScale=this.maxScale),this.originIdOf("opacity")>E.DEFAULTS&&(t.opacity=this.opacity),this.originIdOf("popupTemplate")>E.DEFAULTS&&(t.popupTemplate=y(this.popupTemplate)),this.originIdOf("renderer")>E.SERVICE&&(t.renderer=y(this.renderer)),"data-layer"===this.source?.type&&(t.dynamicDataSource=this.source.clone()),this.originIdOf("title")>E.DEFAULTS&&(t.title=this.title),"map-image"===e?.type&&e.originIdOf("customParameters")>E.DEFAULTS&&(t.customParameters=e.customParameters),"tile"===e?.type&&e.originIdOf("customParameters")>E.DEFAULTS&&(t.customParameters=e.customParameters),t}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let o=null;return t?.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(o=e),!!o)})),o}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}async queryAttachments(e,r){await this.load(),e=U.from(e);const t=this.capabilities;if(!t?.data?.supportsAttachment)throw new l("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:o,globalIds:s,num:a,size:n,start:p,where:y}=e;if(!t?.operations?.supportsQueryAttachments){if(i?.length>0||s?.length>0||n?.length>0||a||p||y)throw new l("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e)}if(!(o?.length||s?.length||y))throw new l("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,r)}async queryFeatures(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new l("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new l("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(t?.features)for(const i of t.features)i.sourceLayer=this;return t}toExportImageJSON(e){const r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=m(e,this.definitionExpression);c(t)&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,r)=>(e[r]=this.originIdOf(r),e)),{}),o=Object.keys(i).some((e=>i[e]>E.SERVICE));if(o){const e=r.drawingInfo={};if(i.renderer>E.SERVICE&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>E.SERVICE&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>E.SERVICE){!this.loaded&&this.labelingInfo.some((e=>!e.labelPlacement))&&u.getLogger(this.declaredClass).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let r=this.labelingInfo;c(this.geometryType)&&(r=V(this.labelingInfo,B.toJSON(this.geometryType))),e.labelingInfo=r.filter((e=>e.labelPlacement)).map((e=>e.toJSON({origin:"service",layer:this.layer}))),e.showLabels=!0}i.opacity>E.SERVICE&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline&&e.outline.color?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of t)$(e.symbol)&&r(e.symbol);"symbol"in e&&$(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&$(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let o,s;switch(e){case"definitionExpression":case"floorInfo":o="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":o="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":o="supportsDynamicLayers",s="supportsModification"}const a=P(this).getDefaultOrigin();if("service"!==a){if(o&&!1===this.layer?.capabilities?.exportMap?.[o])return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${o}'`);if(s&&!1===this.capabilities?.exportMap[s])return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${s}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==a&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.removeAll()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{const r=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;null==r||r||(u.getLogger(this.declaredClass).error(new l("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;u.getLogger(i).error(new l("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t?.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};Y.test={isMapImageLayerOverridePolicy:e=>e===z||e===G,isTileImageLayerOverridePolicy:e=>e===H},e([b({readOnly:!0})],Y.prototype,"capabilities",void 0),e([S("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],Y.prototype,"readCapabilities",null),e([b()],Y.prototype,"defaultPopupTemplate",null),e([b({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:G}}})],Y.prototype,"definitionExpression",null),e([b({type:[T],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],Y.prototype,"fields",void 0),e([b({readOnly:!0})],Y.prototype,"fieldsIndex",null),e([b({type:N,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:G},origins:{"web-scene":{read:!1,write:!1}}}})],Y.prototype,"floorInfo",null),e([b({type:Q,json:{read:{source:"layerDefinition.extent"}}})],Y.prototype,"fullExtent",void 0),e([b({type:B.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:B.read}}}}})],Y.prototype,"geometryType",void 0),e([b({type:String})],Y.prototype,"globalIdField",void 0),e([S("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],Y.prototype,"readGlobalIdFieldFromService",null),e([b({type:L,json:{write:{ignoreOrigin:!0}}})],Y.prototype,"id",null),e([b({value:null,type:[A],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:z}}})],Y.prototype,"labelingInfo",null),e([w("labelingInfo")],Y.prototype,"writeLabelingInfo",null),e([b({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:z}}})],Y.prototype,"labelsVisible",null),e([b({value:null})],Y.prototype,"layer",null),e([b({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:K}}})],Y.prototype,"legendEnabled",void 0),e([b({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],Y.prototype,"listMode",null),e([b({type:Number,value:0,json:{write:{overridePolicy:z}}})],Y.prototype,"minScale",null),e([S("minScale",["minScale","layerDefinition.minScale"])],Y.prototype,"readMinScale",null),e([b({type:Number,value:0,json:{write:{overridePolicy:z}}})],Y.prototype,"maxScale",null),e([S("maxScale",["maxScale","layerDefinition.maxScale"])],Y.prototype,"readMaxScale",null),e([b({readOnly:!0})],Y.prototype,"effectiveScaleRange",null),e([b({type:String})],Y.prototype,"objectIdField",void 0),e([S("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],Y.prototype,"readObjectIdFieldFromService",null),e([b({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:z}}})],Y.prototype,"opacity",null),e([S("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],Y.prototype,"readOpacity",null),e([w("opacity")],Y.prototype,"writeOpacity",null),e([b({json:{type:L,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:z}}})],Y.prototype,"parent",void 0),e([w("parent")],Y.prototype,"writeParent",null),e([b({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:K,writer(e,r,t){r[t]=!e}}}})],Y.prototype,"popupEnabled",void 0),e([b({type:r,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:K}}})],Y.prototype,"popupTemplate",void 0),e([b({readOnly:!0})],Y.prototype,"queryTask",null),e([b({types:t,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:z},origins:{"web-scene":{types:i,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:z}}}}})],Y.prototype,"renderer",null),e([b({types:{key:"type",base:null,typeMap:{"data-layer":C,"map-layer":q}},cast(e){if(e){if("mapLayerId"in e)return D(q,e);if("dataSource"in e)return D(C,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:z}}})],Y.prototype,"source",null),e([b()],Y.prototype,"sourceJSON",void 0),e([b({value:null,json:{type:[L],write:{target:"subLayerIds",allowNull:!0,overridePolicy:z}}})],Y.prototype,"sublayers",null),e([g("sublayers")],Y.prototype,"castSublayers",null),e([w("sublayers")],Y.prototype,"writeSublayers",null),e([b({type:String,json:{name:"name",write:{overridePolicy:K}}})],Y.prototype,"title",void 0),e([b({type:String})],Y.prototype,"typeIdField",void 0),e([S("typeIdField",["layerDefinition.typeIdField"])],Y.prototype,"readTypeIdField",null),e([b({type:[O],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],Y.prototype,"types",void 0),e([b({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:H}}})],Y.prototype,"url",null),e([b({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:z}}})],Y.prototype,"visible",null),e([w("visible")],Y.prototype,"writeVisible",null),Y=J=e([I("esri.layers.support.Sublayer")],Y);const Z=Y;export{Z as default};
