/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../../core/accessorSupport/decorators/writer.js";import{isSupportedRendererType as n,combineRenderingRules as s,convertRendererToRenderingRule as a,convertRenderingRuleToRFT as p}from"./imageryRendererUtils.js";import l from"./MosaicRule.js";import{interpolationKebab as c,noDataInterpretationKebab as m}from"./rasterEnums.js";import u from"./RasterFunction.js";let y=class extends r{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,r,t){this.layer.version<10.3||(r[t]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,r,t){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(r[t]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,r,t){"lerc"===this.format&&null!=e&&(r[t]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,r,t){"lerc"===this.format&&this.layer.version>=10.5&&(r[t]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const t=e.definitionExpression;return r?t&&t!==r.where&&(r=r.clone(),r.where=t):t&&(r=new l({where:t})),r}get renderingRule(){const e=this.layer;let r=e.renderingRule;const t=e.pixelFilter,o=!e.format||e.format.includes("jpg")||e.format.includes("png");r=this._addResampleRasterFunction(r);const i=e.multidimensionalSubset?.areaOfInterest;return i&&(r=this._addClipFunction(r,i)),o&&!t&&"vector-field"!==e.renderer?.type&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(e){const r=this.layer,{rasterInfo:t,renderer:o}=r;if(e=e||r.renderingRule,!o||!n(o))return e;return s(a(o,{rasterAttributeTable:t.attributeTable,pixelType:t.pixelType,dataType:t.dataType,bandProperties:t.keyProperties?.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:t.bandCount}),e)}_addResampleRasterFunction(e){if(!("vector-field"===this.layer.renderer?.type)||"Resample"===e?.functionName)return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,t=this.layer.serviceRasterInfo.pixelSize;let o=new u({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:t}});return o=e?.rasterFunctionDefinition?new u({rasterFunctionDefinition:p(o)}):o,s(o,e)}_addClipFunction(e,r){const t=new u({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}});return s(t,e)}};e([t()],y.prototype,"layer",void 0),e([t({json:{write:!0}})],y.prototype,"adjustAspectRatio",null),e([i("adjustAspectRatio")],y.prototype,"writeAdjustAspectRatio",null),e([t({json:{write:!0}})],y.prototype,"bandIds",null),e([t({json:{write:!0}})],y.prototype,"compression",void 0),e([t({json:{write:!0}})],y.prototype,"compressionQuality",null),e([i("compressionQuality")],y.prototype,"writeCompressionQuality",null),e([t({json:{write:!0}})],y.prototype,"compressionTolerance",null),e([i("compressionTolerance")],y.prototype,"writeCompressionTolerance",null),e([t({json:{write:!0}})],y.prototype,"format",null),e([t({type:String,json:{read:{reader:c.read},write:{writer:c.write}}})],y.prototype,"interpolation",null),e([t({json:{write:!0}})],y.prototype,"noData",null),e([t({type:String,json:{read:{reader:m.read},write:{writer:m.write}}})],y.prototype,"noDataInterpretation",null),e([t({json:{write:!0}})],y.prototype,"pixelType",void 0),e([t({json:{write:!0}})],y.prototype,"lercVersion",void 0),e([i("lercVersion")],y.prototype,"writeLercVersion",null),e([t({type:Number})],y.prototype,"version",null),e([t({json:{write:!0}})],y.prototype,"mosaicRule",null),e([t({json:{write:!0}})],y.prototype,"renderingRule",null),y=e([o("esri.layers.mixins.ExportImageServiceParameters")],y);export{y as ExportImageServiceParameters};
