/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/PieChartRenderer.js";import"../renderers/Renderer.js";import t from"../renderers/SimpleRenderer.js";import i from"../renderers/UniqueValueRenderer.js";import{read as o}from"../renderers/support/jsonUtils.js";import{rendererTypes as s,webSceneRendererTypes as a}from"../renderers/support/types.js";import n from"../request.js";import{symbolTypes as l,symbolTypesRenderer as p}from"../symbols.js";import{ClonableMixin as u}from"../core/Clonable.js";import d from"../core/Collection.js";import y from"../core/Error.js";import c from"../core/Handles.js";import{clone as m}from"../core/lang.js";import f from"../core/Logger.js";import{destroyMaybe as h,isSome as b}from"../core/maybe.js";import{MultiOriginJSONMixin as g}from"../core/MultiOriginJSONSupport.js";import{setDeepValue as w}from"../core/object.js";import{throwIfAbortError as j,whenOrAbort as v}from"../core/promiseUtils.js";import{sqlAnd as S}from"../core/sql.js";import{urlToObject as F,join as I}from"../core/urlUtils.js";import{property as T}from"../core/accessorSupport/decorators/property.js";import{cast as D}from"../core/accessorSupport/decorators/cast.js";import{reader as E}from"../core/accessorSupport/decorators/reader.js";import{subclass as L}from"../core/accessorSupport/decorators/subclass.js";import{writer as _}from"../core/accessorSupport/decorators/writer.js";import{createTypeReader as x}from"../core/accessorSupport/extensions/serializableProperty/reader.js";import P from"../form/FormTemplate.js";import M from"../geometry/SpatialReference.js";import q from"./Layer.js";import{MemorySource as C}from"./graphics/sources/MemorySource.js";import{APIKeyMixin as O}from"./mixins/APIKeyMixin.js";import{ArcGISService as R}from"./mixins/ArcGISService.js";import{BlendLayer as U}from"./mixins/BlendLayer.js";import{CustomParametersMixin as A}from"./mixins/CustomParametersMixin.js";import{EditBusLayer as V}from"./mixins/EditBusLayer.js";import{FeatureEffectLayer as Q}from"./mixins/FeatureEffectLayer.js";import{FeatureLayerBase as N}from"./mixins/FeatureLayerBase.js";import{FeatureReductionLayer as G}from"./mixins/FeatureReductionLayer.js";import{OperationalLayer as J}from"./mixins/OperationalLayer.js";import{OrderedLayer as $}from"./mixins/OrderedLayer.js";import{PortalLayer as W}from"./mixins/PortalLayer.js";import{PublishableLayer as B}from"./mixins/PublishableLayer.js";import{RefreshableLayer as z}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as Z}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as k}from"./mixins/TemporalLayer.js";import{titleFromUrlAndName as H,parse as K,cleanTitle as X}from"./support/arcgisLayerUrl.js";import{id as Y,labelsVisible as ee,opacityDrawingInfo as re,legendEnabled as te,listMode as ie,popupEnabled as oe,screenSizePerspectiveEnabled as se}from"./support/commonProperties.js";import{ensureLayerCredential as ae,computeEffectiveEditingEnabled as ne,readGlobalIdField as le,readObjectIdField as pe,addAttachment as ue,updateAttachment as de,applyEdits as ye,createQuery as ce,deleteAttachments as me,fetchRecomputedExtents as fe,queryAttachments as he,queryObjectIds as be,queryFeatureCount as ge,queryExtent as we,queryRelatedFeatures as je,queryRelatedFeaturesCount as ve,hasDataChanged as Se,geometryTypeKebabDict as Fe}from"./support/featureLayerUtils.js";import Ie from"./support/FeatureTemplate.js";import Te from"./support/FeatureType.js";import{defineFieldProperties as De}from"./support/fieldProperties.js";import{fixRendererFields as Ee,fixTimeInfoFields as Le}from"./support/fieldUtils.js";import _e from"./support/LabelClass.js";import{reader as xe}from"./support/labelingInfo.js";import{getFeatureLayerCapabilities as Pe}from"./support/serviceCapabilitiesUtils.js";import Me from"./support/TimeInfo.js";import{serviceSupportsSpatialReference as qe}from"./support/versionUtils.js";import{DataLayerSource as Ce}from"./support/source/DataLayerSource.js";import{loadStyleRenderer as Oe}from"../renderers/support/styleUtils.js";import Re from"../rest/support/FeatureSet.js";import Ue from"../rest/support/Query.js";import Ae from"../rest/support/TopFeaturesQuery.js";import{createPopupTemplate as Ve}from"../support/popupUtils.js";import{opacityToTransparency as Qe}from"../webdoc/support/opacityUtils.js";const Ne="FeatureLayer",Ge="esri.layers.FeatureLayer",Je=f.getLogger(Ge);function $e(e,r){return new y("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${r}`,{layer:e})}function We(e){return e&&e instanceof d}const Be=De();function ze(e,r,t){const i=!!t?.writeLayerSchema;return{enabled:i,ignoreOrigin:i}}let Ze=class extends(N(G(Q(B(V(U($(k(Z(z(R(J(W(g(A(O(u(q)))))))))))))))))){constructor(...e){super(...e),this._handles=new c,this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=M.WGS84,this.subtypeCode=null,this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0}destroy(){this.source?.destroy(),this._handles=h(this._handles)}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=b(e)?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(r).then((e=>this.initLayerProperties(e)))),Promise.resolve(this);const t=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},e).catch(j).then((async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const e=await this._fetchFirstLayerId(r);null!=e&&(this.layerId=e)}if(!this.url&&!this._hasMemorySource())throw new y("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(r))})).then((()=>this._setUserPrivileges(this.serviceItemId,e))).then((()=>ae(this,e)));return this.addResolvingPromise(t),Promise.resolve(this)}readCapabilities(e,r){return r=r.layerDefinition||r,Pe(r,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,r){return this._readEditingEnabled(r,!1)}readEditingEnabledFromWebMap(e,r,t){return this._readEditingEnabled(r,!0,t)}writeEditingEnabled(e,r){this._writeEditingEnabled(e,r,!1)}writeEditingEnabledToWebMap(e,r,t,i){this._writeEditingEnabled(e,r,!0,i)}get effectiveEditingEnabled(){return ne(this)}readIsTable(e,r){return"Table"===(r=r?.layerDefinition??r).type||!r.geometryType}writeIsTable(e,r,t,i){i?.writeLayerSchema&&w(t,e?"Table":"Feature Layer",r)}readGlobalIdField(e,r){return le(r.layerDefinition||r)}readObjectIdField(e,r){return pe(r.layerDefinition||r)}get parsedUrl(){const e=F(this.url);return null!=e&&(null!=this.dynamicDataSource?e.path=I(e.path,"dynamicLayer"):null!=this.layerId&&(e.path=I(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){Ee(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,r,s){const a=(r=r.layerDefinition||r).drawingInfo?.renderer;if(a){const e=o(a,r,s)??void 0;return e||Je.error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:s}),e}if(r.defaultSymbol)return r.types&&r.types.length?new i({defaultSymbol:ke(r.defaultSymbol,r,s),field:r.typeIdField,uniqueValueInfos:r.types.map((e=>({id:e.id,symbol:ke(e.symbol,e,s)})))}):new t({symbol:ke(r.defaultSymbol,r,s)})}set source(e){const r=this._get("source");r!==e&&(We(r)&&this._resetMemorySource(r),We(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof d?new C({layer:this,items:e}):e:null}readSource(e,r){const t=Re.fromJSON(r.featureSet);return new C({layer:this,items:t?.features??[]})}readTemplates(e,r){const t=r.editFieldsInfo,i=t&&t.creatorField,o=t&&t.editorField;return e=e&&e.map((e=>Ie.fromJSON(e))),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,r){const t=r.layerDefinition?.name??r.name,i=r.title||r.layerDefinition&&r.layerDefinition.title;if(t){const e=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?H(this.url,t):t;let r=t;if(!r&&this.url){const e=K(this.url);b(e)&&(r=e.title)}if(!r)return;return"item-title-and-service-name"===this.sublayerTitleMode&&e&&e!==r&&(r=e+" - "+r),X(r)}if("item-title"===this.sublayerTitleMode&&i)return i}readTitleFromWebMap(e,r){return r.title||r.layerDefinition&&r.layerDefinition.name}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return t}readTypes(e,r){e=(r=r.layerDefinition||r).types;const t=r.editFieldsInfo,i=t&&t.creatorField,o=t&&t.editorField;return e&&e.map((e=>(e=Te.fromJSON(e),this._fixTemplates(e.templates,i),this._fixTemplates(e.templates,o),e)))}readVisible(e,r){return r.layerDefinition&&null!=r.layerDefinition.defaultVisibility?!!r.layerDefinition.defaultVisibility:null!=r.visibility?!!r.visibility:void 0}async addAttachment(e,r){return ue(this,e,r,Ne)}async updateAttachment(e,r,t){return de(this,e,r,t,Ne)}async applyEdits(e,r){return ye(this,e,r)}on(e,r){return super.on(e,r)}createPopupTemplate(e){return Ve(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:r}=await v(import("./graphics/sources/FeatureLayerSource.js"),e);return new r({layer:this}).load({signal:e})}createQuery(){const e=ce(this);e.dynamicDataSource=this.dynamicDataSource;const r=b(this.subtypeCode)?`${this.subtypeField} = ${this.subtypeCode}`:null,t=S(this.definitionExpression,r);return e.where=t||"1=1",e}async deleteAttachments(e,r){return me(this,e,r,Ne)}async fetchRecomputedExtents(e){return fe(this,e,Ne)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let o=null;return t?.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(o=e),!!o)})),o}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,r){return he(this,e,r,Ne)}async queryFeatures(e,r){const t=await this.load(),i=await t.source.queryFeatures(Ue.from(e)??t.createQuery(),r);if(i?.features)for(const o of i.features)o.layer=o.sourceLayer=t;return i}async queryObjectIds(e,r){return be(this,e,r,Ne)}async queryFeatureCount(e,r){return ge(this,e,r,Ne)}async queryExtent(e,r){return we(this,e,r,Ne)}async queryRelatedFeatures(e,r){return je(this,e,r,Ne)}async queryRelatedFeaturesCount(e,r){return ve(this,e,r,Ne)}async queryTopFeatures(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopFeatures||!i?.query?.supportsTopFeaturesQuery)throw new y(Ne,"Layer source does not support queryTopFeatures capability");const o=await t.queryTopFeatures(Ae.from(e),r);if(o?.features)for(const s of o.features)s.layer=s.sourceLayer=this;return o}async queryTopObjectIds(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopObjectIds||!i?.query.supportsTopFeaturesQuery)throw new y(Ne,"Layer source does not support queryTopObjectIds capability");return t.queryTopObjectIds(Ae.from(e),r)}async queryTopFeaturesExtent(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopExtents||!i?.query?.supportsTopFeaturesQuery)throw new y(Ne,"Layer source does not support queryTopExtents capability");return t.queryTopExtents(Ae.from(e),r)}async queryTopFeatureCount(e,r){const{source:t,capabilities:i}=await this.load();if(!t.queryTopCount||!i?.query?.supportsTopFeaturesQuery)throw new y(Ne,"Layer source does not support queryFeatureCount capability");return t.queryTopCount(Ae.from(e),r)}read(e,r){const t=e.featureCollection;if(t){const e=t.layers;e&&1===e.length&&(super.read(e[0],r),null!=t.showLegend&&super.read({showLegend:t.showLegend},r))}super.read(e,r),r&&"service"===r.origin&&(this.revert(["objectIdField","fields","timeInfo"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,r){r={...r,origin:r?.origin??void 0,writeLayerSchema:r?.writeLayerSchema??this._hasMemorySource()};const{origin:t,layerContainerType:i,messages:o}=r;if(this.dynamicDataSource)return o?.push($e(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if("web-scene"===t||"web-map"===t&&"tables"!==i)return o?.push($e(this,"using a table source cannot be written to web scenes and web maps")),null;if(this._hasMemorySource())return o?.push($e(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&"web-map"===t&&"tables"===i)return o?.push($e(this,"using a non-table source cannot be written to tables in web maps")),null;return super.write(e,r)}clone(){if(this._hasMemorySource())throw new y(Ne,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&("memory"===this.source?.type||qe(this,e))}async save(e){return(await import("./save/featureLayerUtils.js")).save(this,e)}async saveAs(e,r){return(await import("./save/featureLayerUtils.js")).saveAs(this,e,r)}_readEditingEnabled(e,r,t){let i=e.layerDefinition?.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,r&&"web-map"===t?.origin&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map((e=>e.trim())).includes("editing")}_writeEditingEnabled(e,r,t,i){if(!e){const e=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";w("layerDefinition.capabilities",e,r),t&&!i?.writeLayerSchema&&(r.capabilities=e)}}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}_fetchFirstLayerId(e){return n(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then((e=>{const r=e.data;if(r)return Array.isArray(r.layers)&&r.layers.length>0?r.layers[0].id:Array.isArray(r.tables)&&r.tables.length>0?r.tables[0].id:void 0}))}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),Ee(this.renderer,this.fieldsIndex),Le(this.timeInfo,this.fieldsIndex),Oe(this,{origin:"service"})}async hasDataChanged(){return Se(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||-1!==e.search(/\/FeatureServer\//i)||this.fields?.some((e=>"geometry"===e.type))||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,r){e&&e.forEach((e=>{const t=e.prototype&&e.prototype.attributes;t&&r&&delete t[r]}))}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new y("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new y("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach((e=>{e.layer=this,e.sourceLayer=this})),this._handles.add([e.on("after-add",(e=>{e.item.layer=this,e.item.sourceLayer=this})),e.on("after-remove",(e=>{e.item.layer=null,e.item.sourceLayer=null}))],"fl-source")}_resetMemorySource(e){e.forEach((e=>{e.layer=null,e.sourceLayer=null})),this._handles.remove("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}};e([E("service","capabilities")],Ze.prototype,"readCapabilities",null),e([T({json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],Ze.prototype,"charts",void 0),e([T({readOnly:!0})],Ze.prototype,"createQueryVersion",null),e([T({json:{read:{source:"layerDefinition.copyrightText"}}})],Ze.prototype,"copyright",void 0),e([T({json:{read:{source:"layerDefinition.displayField"}}})],Ze.prototype,"displayField",void 0),e([T({types:l,readOnly:!0})],Ze.prototype,"defaultSymbol",void 0),e([T({type:Ce})],Ze.prototype,"dynamicDataSource",void 0),e([T({type:Boolean})],Ze.prototype,"editingEnabled",null),e([E(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],Ze.prototype,"readEditingEnabled",null),e([E("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],Ze.prototype,"readEditingEnabledFromWebMap",null),e([_(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],Ze.prototype,"writeEditingEnabled",null),e([_("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],Ze.prototype,"writeEditingEnabledToWebMap",null),e([T({readOnly:!0})],Ze.prototype,"effectiveEditingEnabled",null),e([T({...Be.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:ze}}}}})],Ze.prototype,"fields",void 0),e([T(Be.fieldsIndex)],Ze.prototype,"fieldsIndex",void 0),e([T({type:P,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],Ze.prototype,"formTemplate",void 0),e([T({json:{read:{source:"layerDefinition.extent"}}})],Ze.prototype,"fullExtent",void 0),e([T({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:ze,writer(e,r,t){const i=e?Fe.toJSON(e):null;i&&w(t,i,r)}}}},read:{source:"layerDefinition.geometryType",reader:Fe.read}}})],Ze.prototype,"geometryType",void 0),e([T({json:{read:{source:"layerDefinition.hasM"}}})],Ze.prototype,"hasM",void 0),e([T({json:{read:{source:"layerDefinition.hasZ"}}})],Ze.prototype,"hasZ",void 0),e([T(Y)],Ze.prototype,"id",void 0),e([T({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],Ze.prototype,"infoFor3D",void 0),e([T({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],Ze.prototype,"isTable",void 0),e([E("service","isTable",["type","geometryType"]),E("isTable",["layerDefinition.type","layerDefinition.geometryType"])],Ze.prototype,"readIsTable",null),e([_("web-map","isTable")],Ze.prototype,"writeIsTable",null),e([T(ee)],Ze.prototype,"labelsVisible",void 0),e([T({type:[_e],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:xe},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:xe},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],Ze.prototype,"labelingInfo",void 0),e([T((()=>{const e=m(re);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(e,r,t){w(t,Qe(e),r)}}},e})())],Ze.prototype,"opacity",void 0),e([T(te)],Ze.prototype,"legendEnabled",void 0),e([T({type:["show","hide"],json:(()=>{const e=m(ie.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],Ze.prototype,"listMode",void 0),e([E("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],Ze.prototype,"readGlobalIdField",null),e([T({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:ze}}}}})],Ze.prototype,"objectIdField",void 0),e([E("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],Ze.prototype,"readObjectIdField",null),e([T({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],Ze.prototype,"operationalLayerType",void 0),e([T(Be.outFields)],Ze.prototype,"outFields",void 0),e([T({readOnly:!0})],Ze.prototype,"parsedUrl",null),e([T({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Ze.prototype,"path",void 0),e([T(oe)],Ze.prototype,"popupEnabled",void 0),e([T({type:r,json:{name:"popupInfo",write:!0}})],Ze.prototype,"popupTemplate",void 0),e([T({readOnly:!0})],Ze.prototype,"defaultPopupTemplate",null),e([T({types:s,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:a,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:(e,r,t)=>({ignoreOrigin:t?.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,r,t)=>({ignoreOrigin:t?.writeLayerSchema})}}})],Ze.prototype,"renderer",null),e([E("service","renderer",["drawingInfo.renderer","defaultSymbol"]),E("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],Ze.prototype,"readRenderer",null),e([T((()=>{const e=m(se);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],Ze.prototype,"screenSizePerspectiveEnabled",void 0),e([T({clonable:!1})],Ze.prototype,"source",null),e([D("source")],Ze.prototype,"castSource",null),e([E("portal-item","source",["featureSet"]),E("web-map","source",["featureSet"])],Ze.prototype,"readSource",null),e([T({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],Ze.prototype,"spatialReference",void 0),e([T({type:Number})],Ze.prototype,"subtypeCode",void 0),e([T({type:[Ie]})],Ze.prototype,"templates",void 0),e([E("templates",["editFieldsInfo","creatorField","editorField","templates"])],Ze.prototype,"readTemplates",null),e([T({type:Me})],Ze.prototype,"timeInfo",void 0),e([T()],Ze.prototype,"title",void 0),e([E("service","title",["name"]),E("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],Ze.prototype,"readTitle",null),e([E("web-map","title",["layerDefinition.name","title"])],Ze.prototype,"readTitleFromWebMap",null),e([T({type:String})],Ze.prototype,"sublayerTitleMode",void 0),e([T({json:{read:!1}})],Ze.prototype,"type",void 0),e([T({type:String})],Ze.prototype,"typeIdField",void 0),e([E("service","typeIdField"),E("typeIdField",["layerDefinition.typeIdField"])],Ze.prototype,"readTypeIdField",null),e([T({type:[Te]})],Ze.prototype,"types",void 0),e([E("service","types",["types"]),E("types",["layerDefinition.types"])],Ze.prototype,"readTypes",null),e([T({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],Ze.prototype,"visible",void 0),e([E("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],Ze.prototype,"readVisible",null),Ze=e([L(Ge)],Ze);const ke=x({types:p}),He=Ze;export{He as default};
