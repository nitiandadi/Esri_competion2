/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../geometry.js";import t from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/PieChartRenderer.js";import"../renderers/Renderer.js";import r from"../renderers/SimpleRenderer.js";import o from"../renderers/UniqueValueRenderer.js";import{read as i}from"../renderers/support/jsonUtils.js";import{rendererTypes as s,webSceneRendererTypes as n}from"../renderers/support/types.js";import p from"../request.js";import{symbolTypesRenderer as a}from"../symbols.js";import l from"../core/Error.js";import{handlesGroup as m}from"../core/handleUtils.js";import d from"../core/Logger.js";import{isSome as c}from"../core/maybe.js";import{MultiOriginJSONMixin as y}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as u}from"../core/promiseUtils.js";import{property as f}from"../core/accessorSupport/decorators/property.js";import{Integer as h}from"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import{reader as g}from"../core/accessorSupport/decorators/reader.js";import{subclass as j}from"../core/accessorSupport/decorators/subclass.js";import{createTypeReader as b}from"../core/accessorSupport/extensions/serializableProperty/reader.js";import{featureGeometryTypeKebabDictionary as v}from"../geometry/support/typeUtils.js";import S from"./Layer.js";import{ArcGISService as w}from"./mixins/ArcGISService.js";import{BlendLayer as I}from"./mixins/BlendLayer.js";import{CustomParametersMixin as x}from"./mixins/CustomParametersMixin.js";import{FeatureEffectLayer as R}from"./mixins/FeatureEffectLayer.js";import{FeatureReductionLayer as T}from"./mixins/FeatureReductionLayer.js";import{OperationalLayer as P}from"./mixins/OperationalLayer.js";import{PortalLayer as F}from"./mixins/PortalLayer.js";import{RefreshableLayer as U}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as L}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as k}from"./mixins/TemporalLayer.js";import{labelsVisible as D,legendEnabled as E,maxScale as C,minScale as O,popupEnabled as A,screenSizePerspectiveEnabled as _,url as N}from"./support/commonProperties.js";import J from"./support/Field.js";import{defineFieldProperties as M}from"./support/fieldProperties.js";import{fixRendererFields as G,fixTimeInfoFields as q}from"./support/fieldUtils.js";import V from"./support/LabelClass.js";import{reader as z}from"./support/labelingInfo.js";import $ from"./support/PurgeOptions.js";import{loadStyleRenderer as W}from"../renderers/support/styleUtils.js";import B from"../rest/support/Query.js";import{createPopupTemplate as Q}from"../support/popupUtils.js";import H from"../symbols/support/ElevationInfo.js";import K from"../geometry/SpatialReference.js";import X from"../geometry/Extent.js";const Y=M();function Z(e,t){return new l("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}let ee=class extends(T(R(I(k(L(U(w(P(F(y(x(S)))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new $,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=K.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new l("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const t=c(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(u).then((()=>this._fetchService(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){G(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,s){const n=(t=t.layerDefinition||t).drawingInfo&&t.drawingInfo.renderer||void 0;if(n){const e=i(n,t,s)||void 0;return e||d.getLogger(this.declaredClass).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:s}),e}if(t.defaultSymbol)return t.types&&t.types.length?new o({defaultSymbol:te(t.defaultSymbol,t,s),field:t.typeIdField,uniqueValueInfos:t.types.map((e=>({id:e.id,symbol:te(e.symbol,e,s)})))}):new r({symbol:te(t.defaultSymbol,t,s)})}async connect(e){const[{createConnection:t}]=await Promise.all([import("./graphics/sources/connections/createConnection.js"),this.load()]),r=this.geometryType?v.toJSON(this.geometryType):null,{customParameters:o=null,definitionExpression:i=null,geometryDefinition:s=null,maxReconnectionAttempts:n=0,maxReconnectionInterval:p=20,spatialReference:a=this.spatialReference}=e||this.createConnectionParameters(),l=t(this.parsedUrl,this.spatialReference,a,r,{geometry:s,where:i},n,p,o??void 0),d=m([this.on("send-message-to-socket",(e=>l.sendMessageToSocket(e))),this.on("send-message-to-client",(e=>l.sendMessageToClient(e)))]);return l.once("destroy",d.remove),l}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return Q(this,e)}createQuery(){const e=new B;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,t){if(!this.fields)return null;let r=null;return this.fields.some((t=>(t.name===e&&(r=t.domain),!!r))),r}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}write(e,t){const r=t?.messages;return this.webSocketUrl?(r?.push(Z(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,t):(r?.push(Z(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){if(!!!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:t}=await p(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=t}}else{if(!this.timeInfo?.trackIdField)throw new l("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const e=this.fields.find((e=>"oid"===e.type))?.name;if(!e)throw new l("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=e}if(!this.fields)throw new l("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some((e=>e.name===this.objectIdField))||this.fields.push(new J({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new l("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}),G(this.renderer,this.fieldsIndex),q(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),W(this,{origin:"service"})}};e([f({type:String})],ee.prototype,"copyright",void 0),e([f({readOnly:!0})],ee.prototype,"defaultPopupTemplate",null),e([f({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ee.prototype,"definitionExpression",void 0),e([f({type:String})],ee.prototype,"displayField",void 0),e([f({type:H})],ee.prototype,"elevationInfo",void 0),e([f(Y.fields)],ee.prototype,"fields",void 0),e([f(Y.fieldsIndex)],ee.prototype,"fieldsIndex",void 0),e([f({type:X})],ee.prototype,"geometryDefinition",void 0),e([f({type:v.apiValues,json:{read:{reader:v.read}}})],ee.prototype,"geometryType",void 0),e([f(D)],ee.prototype,"labelsVisible",void 0),e([f({type:[V],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:z},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],ee.prototype,"labelingInfo",void 0),e([f(E)],ee.prototype,"legendEnabled",void 0),e([f({type:["show","hide"]})],ee.prototype,"listMode",void 0),e([f({type:h})],ee.prototype,"maxReconnectionAttempts",void 0),e([f({type:h})],ee.prototype,"maxReconnectionInterval",void 0),e([f(C)],ee.prototype,"maxScale",void 0),e([f(O)],ee.prototype,"minScale",void 0),e([f({type:String})],ee.prototype,"objectIdField",void 0),e([f({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],ee.prototype,"operationalLayerType",void 0),e([f(A)],ee.prototype,"popupEnabled",void 0),e([f({type:t,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ee.prototype,"popupTemplate",void 0),e([f({type:$})],ee.prototype,"purgeOptions",void 0),e([f({types:s,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:n,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],ee.prototype,"renderer",null),e([g("service","renderer",["drawingInfo.renderer","defaultSymbol"]),g("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],ee.prototype,"readRenderer",null),e([f(_)],ee.prototype,"screenSizePerspectiveEnabled",void 0),e([f()],ee.prototype,"sourceJSON",void 0),e([f({type:K,json:{origins:{service:{read:{source:"spatialReference"}}}}})],ee.prototype,"spatialReference",void 0),e([f({json:{read:!1}})],ee.prototype,"type",void 0),e([f(N)],ee.prototype,"url",void 0),e([f({type:Number})],ee.prototype,"updateInterval",void 0),e([f({type:String})],ee.prototype,"webSocketUrl",void 0),ee=e([j("esri.layers.StreamLayer")],ee);const te=b({types:a}),re=ee;export{re as default};
