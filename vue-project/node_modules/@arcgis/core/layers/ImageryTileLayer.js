/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../PopupTemplate.js";import{read as t,rasterRendererTypes as s,websceneRasterRendererTypes as i}from"../rasterRenderers.js";import o from"../core/Error.js";import a from"../core/Logger.js";import{isSome as n}from"../core/maybe.js";import{MultiOriginJSONMixin as p}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as l}from"../core/promiseUtils.js";import{watch as m}from"../core/reactiveUtils.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import{ensureClass as u,Integer as c}from"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import{enumeration as h}from"../core/accessorSupport/decorators/enumeration.js";import{reader as y}from"../core/accessorSupport/decorators/reader.js";import{subclass as f}from"../core/accessorSupport/decorators/subclass.js";import g from"./Layer.js";import{ArcGISService as v}from"./mixins/ArcGISService.js";import{BlendLayer as j}from"./mixins/BlendLayer.js";import{CustomParametersMixin as R}from"./mixins/CustomParametersMixin.js";import{ImageryTileMixin as S}from"./mixins/ImageryTileMixin.js";import{OperationalLayer as b}from"./mixins/OperationalLayer.js";import{PortalLayer as w}from"./mixins/PortalLayer.js";import{RefreshableLayer as T}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as I}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as P}from"./mixins/TemporalLayer.js";import{legendEnabled as O}from"./support/commonProperties.js";import _ from"./support/Field.js";import{interpolationKebab as F}from"./support/rasterEnums.js";import x from"./support/RasterFunction.js";import L from"./support/rasterDatasets/FunctionRaster.js";import N from"./support/rasterDatasets/RasterFactory.js";import{create as J,getPrimaryRasterUrls as D}from"./support/rasterFunctions/rasterFunctionHelper.js";import{createPopupTemplate as M}from"../support/popupUtils.js";let C=class extends(j(I(b(w(R(S(P(v(T(p(g))))))))))){constructor(...e){super(...e),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=n(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l).then((()=>this._openRaster(r)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new _({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:r}=this,t=r?.attributeTable,s=n(t)?t.fields:null,i="Raster.";if(s){const r=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=i+e.name,r}));e=e.concat(r)}const o=r?.dataType,a=r?.multidimensionalInfo;if(("vector-magdir"===o||"vector-uv"===o)&&n(a)){const r=a.variables[0].unit?.trim(),t="Magnitude"+(r?` (${r})`:"");e.push(new _({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),e.push(new _({name:"Raster.Direction",alias:"Direction (Â°)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,r,s){const i=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,o=t(i,s)||void 0;if(null!=o)return o}createPopupTemplate(e){return M({fields:this.rasterFields,title:this.title},e)}async generateRasterInfo(e,r){if(!(e=u(x,e)))return this._primaryRasters[0].rasterInfo;try{const t={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>t[e.url]=e));const s=J(e.toJSON(),t),i=new L({rasterFunction:s});return await i.open(r),i.rasterInfo}catch{return null}}write(e,r){const{raster:t}=this;if(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new o("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let r=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),"Function"===this.raster.datasetFormat?(r=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:r}=this,t=[this.url];r&&D(r.toJSON(),t);const i=await Promise.all(t.map((r=>N.open({url:r,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e})))),n=i.findIndex((e=>null==e));if(n>-1)throw new o("imagery-tile-layer:open",`cannot open raster: ${t[n]}`);if(this._primaryRasters=i,r){const e={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((r=>e[r.url]=r));const t=J(r.rasterFunctionDefinition??r.toJSON(),e),n=new L({rasterFunction:t});try{await n.open(),this.raster=n}catch(s){const e=a.getLogger(this.declaredClass);s instanceof o&&e.error("imagery-tile-layer:open",s.message),e.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=i[0]}}else this.raster=i[0]}const t=this.raster.rasterInfo;if(!t)throw new o("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",r?t:this._primaryRasters[0].rasterInfo),this._set("spatialReference",t.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(m((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}};e([d()],C.prototype,"_primaryRasters",void 0),e([d({type:[c],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],C.prototype,"bandIds",void 0),e([d({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),h(F)],C.prototype,"interpolation",void 0),e([d(O)],C.prototype,"legendEnabled",void 0),e([d({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],C.prototype,"isReference",void 0),e([d({type:["show","hide"]})],C.prototype,"listMode",void 0),e([d({json:{read:!0,write:!0}})],C.prototype,"blendMode",void 0),e([d()],C.prototype,"sourceJSON",void 0),e([d({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],C.prototype,"version",void 0),e([d({readOnly:!0,json:{read:!1}})],C.prototype,"type",void 0),e([d({type:["ArcGISTiledImageServiceLayer"]})],C.prototype,"operationalLayerType",void 0),e([d({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,r,t){r[t]=!e}}}})],C.prototype,"popupEnabled",void 0),e([d({type:r,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],C.prototype,"popupTemplate",void 0),e([d({readOnly:!0})],C.prototype,"defaultPopupTemplate",null),e([d({readOnly:!0,type:[_]})],C.prototype,"fields",void 0),e([d({readOnly:!0,type:[_]})],C.prototype,"rasterFields",null),e([d({types:s,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:i,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],C.prototype,"renderer",null),e([y("renderer")],C.prototype,"readRenderer",null),C=e([f("esri.layers.ImageryTileLayer")],C);const E=C;export{E as default};
