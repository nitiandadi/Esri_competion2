/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import"../../../../../../core/has.js";import{isSome as e,isNone as t}from"../../../../../../core/maybe.js";import{isAborted as r}from"../../../../../../core/promiseUtils.js";import{loadLibtess as s}from"../../../../../../geometry/libtess.js";import{isAggregateId as i}from"../../DisplayId.js";import o from"../templates/WGLLabelTemplate.js";import l from"../templates/WGLMarkerTemplate.js";import{isDynamicId as a}from"../templates/WGLTemplateStore.js";class n{constructor(e,t,r){this._loadPromise=s(),this._geometryType=e,this._idField=t,this._templateStore=r}update(t,r){e(t.mesh.labels)&&(this._labelTemplates=this._createLabelTemplates(t.mesh.labels,r)),this._schema=t}_createLabelTemplates(e,t){const r=new Map;if("simple"===e.type){for(const s of e.classes){const e=o.fromLabelClass(s,t);r.set(s.index,e)}return r}for(const s in e.classes){const i=e.classes[s];for(const e of i){const s=o.fromLabelClass(e,t);r.set(e.index,s)}}return r}get templates(){return this._templateStore}async analyze(t,s,o,l,n,m,p){if(r(p))return;let f;"dictionary"===o?.type&&(f=await o.analyze(this._idField,t.copy(),s,n,m,p));let c=0;for(;t.next();){let r=null;if(r=f?f[c++]:e(l)&&i(t.getDisplayId())&&1!==t.readAttribute("cluster_count")?l.match(this._idField,t,this._geometryType,n,m):o.match(this._idField,t,this._geometryType,n,m),t.setGroupId(r),a(r)){const e=this._templateStore.getDynamicTemplateGroup(r).templates;for(const r of e)r&&r.analyze&&r.analyze(this._templateStore,t,n,m)}}return await this._loadPromise,this._templateStore.finalize(p)}async analyzeGraphics(e,t,s,i,o,l){if(r(l))return;const n=e.getCursor();for(s&&await s.analyze(this._idField,n.copy(),t,i,o,l);n.next();){let e=n.getGroupId();if(null!=e&&-1!==e||(e=s?.match(this._idField,n,n.geometryType,i,o),n.setGroupId(e)),a(e)){const t=this._templateStore.getDynamicTemplateGroup(e).templates;for(const e of t)e&&e.analyze&&e.analyze(this._templateStore,n,i,o)}n.setGroupId(e)}return await this._loadPromise,this._templateStore.finalize(l)}writeGraphic(e,t,r,s){const i=t.getGroupId(),o=t.getDisplayId(),l=this._templateStore.getTemplateGroup(i);if(e.featureStart(t.insertAfter,0),null!=o){if(a(i))for(const e of l.templates)e&&e.bindFeature(t,null,null);if(l){for(const i of l.templates)i&&i.write(e,t,r,s);e.featureEnd()}}}writeCursor(t,r,s,i,o,l,n){const m=r.getGroupId(),p=r.getDisplayId(),f=this._templateStore.getTemplateGroup(m),c=f.templates,d=this._getSortKeyValue(r,f);if(t.featureStart(0,d),null!=p&&c){if(a(m))for(const e of c)e.bindFeature(r,s,i);for(const e of c)e.write(t,r,o,n);if(e(l)&&t.hasRecords){const e=l&&this._findLabelRef(c);this._writeLabels(t,r,l,e,o,n)}t.featureEnd()}}_getSortKeyValue(e,r){const s=this._schema.mesh.sortKey;if(t(s))return 0;let i=0;return i=!0===s.byRenderer&&null!=r.sortKey?r.sortKey:null!=s.fieldIndex?e.getComputedNumericAtIndex(s.fieldIndex):null!=s.field?e.readAttribute(s.field):e.readAttribute(this._idField),i*="asc"===s.order?1:-1,null==i||isNaN(i)?0:i}_findLabelRef(e){for(const t of e)if(t instanceof l)return t;return null}_writeLabels(t,r,s,i,o,l){for(const a of s)if(e(a)&&a){const{glyphs:e,rtl:s,index:n}=a,m=this._labelTemplates.get(n);if(!m)continue;m.setZoomLevel(o),m.bindReferenceTemplate(i),m.bindTextInfo(e,s),m.write(t,r,null,l)}}}export{n as WGLMeshFactory};
