/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import{isSome as r,isNone as s}from"../../../../core/maybe.js";import{property as o}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import{subclass as t}from"../../../../core/accessorSupport/decorators/subclass.js";import{F as i}from"../../../../chunks/mat4.js";import{c as p}from"../../../../chunks/mat4f64.js";import{c,m as l}from"../../../../chunks/vec3.js";import{c as u}from"../../../../chunks/vec3f64.js";import{projectBuffer as n}from"../../../../geometry/projection.js";import{TileTreeDebugger as a}from"../../../support/TileTreeDebugger.js";import m from"../../../../geometry/Polygon.js";let h=class extends a{constructor(e){super(e)}getTiles(){const e=this.lv.getVisibleNodes(),s=this.view.renderSpatialReference,o=this.nodeSR;return e.map((e=>f(e,s,o))).filter(r).sort(((e,r)=>e.lij[0]===r.lij[0]?e.label>r.label?-1:1:e.lij[0]-r.lij[0]))}};function f(e,r,o){const t=e.serviceObb;if(s(t)||s(r))return null;i(j,t.quaternion),c(y,t.center),n(y,o,0,y,r,0,1),j[12]=y[0],j[13]=y[1],j[14]=y[2];const p=[[],[],[]];c(y,t.halfSize),l(y,y,j),n(y,r,0,y,o,0,1),p[0].push([y[0],y[1]]),c(y,t.halfSize),y[0]=-y[0],l(y,y,j),n(y,r,0,y,o,0,1),p[0].push([y[0],y[1]]),c(y,t.halfSize),y[0]=-y[0],y[1]=-y[1],l(y,y,j),n(y,r,0,y,o,0,1),p[0].push([y[0],y[1]]),c(y,t.halfSize),y[1]=-y[1],l(y,y,j),n(y,r,0,y,o,0,1),p[0].push([y[0],y[1]]),p[1].push(p[0][0]),p[1].push(p[0][1]),c(y,t.halfSize),y[0]=-y[0],y[2]=-y[2],l(y,y,j),n(y,r,0,y,o,0,1),p[1].push([y[0],y[1]]),c(y,t.halfSize),y[2]=-y[2],l(y,y,j),n(y,r,0,y,o,0,1),p[1].push([y[0],y[1]]),p[2].push(p[0][0]),p[2].push(p[0][3]),c(y,t.halfSize),y[1]=-y[1],y[2]=-y[2],l(y,y,j),n(y,r,0,y,o,0,1),p[2].push([y[0],y[1]]),p[2].push(p[1][3]);const u=new m({rings:p,spatialReference:o});return{lij:[e.level,e.childCount,0],label:e.id,geometry:u}}e([o({constructOnly:!0})],h.prototype,"lv",void 0),e([o({constructOnly:!0})],h.prototype,"nodeSR",void 0),h=e([t("esri.views.3d.layers.support.I3STreeDebugger")],h);const j=p(),y=u();export{h as I3STreeDebugger};
