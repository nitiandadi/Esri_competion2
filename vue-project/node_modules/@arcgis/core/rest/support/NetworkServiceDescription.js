/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{isNone as r}from"../../core/maybe.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import{enumeration as s}from"../../core/accessorSupport/decorators/enumeration.js";import{reader as a}from"../../core/accessorSupport/decorators/reader.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{writer as u}from"../../core/accessorSupport/decorators/writer.js";import p from"./NetworkDataset.js";import{impedanceAttributeNameJsonMap as l,directionsLengthUnitJsonMap as d,durationImpedanceAttributeNameJsonMap as n}from"./networkEnums.js";import c from"./TravelMode.js";let m=class extends e{constructor(t){super(t),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(t){return r(t)?null:t.map((t=>l.fromJSON(t)))}writeAccumulateAttributes(t,e,o){!r(t)&&t.length&&(e[o]=t.map((t=>l.toJSON(t))))}readDefaultTravelMode(t,e){const r=e.supportedTravelModes?.find((({id:t})=>t===e.defaultTravelMode))??e.supportedTravelModes?.find((({itemId:t})=>t===e.defaultTravelMode));return r?c.fromJSON(r):null}};t([o()],m.prototype,"accumulateAttributeNames",void 0),t([a("accumulateAttributeNames")],m.prototype,"readAccumulateAttributes",null),t([u("accumulateAttributeNames")],m.prototype,"writeAccumulateAttributes",null),t([o()],m.prototype,"attributeParameterValues",void 0),t([o()],m.prototype,"currentVersion",void 0),t([o()],m.prototype,"defaultTravelMode",void 0),t([a("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],m.prototype,"readDefaultTravelMode",null),t([o()],m.prototype,"directionsLanguage",void 0),t([s(d)],m.prototype,"directionsLengthUnits",void 0),t([o()],m.prototype,"directionsSupportedLanguages",void 0),t([s(n,{ignoreUnknown:!1})],m.prototype,"directionsTimeAttribute",void 0),t([o()],m.prototype,"hasZ",void 0),t([s(l,{ignoreUnknown:!1})],m.prototype,"impedance",void 0),t([o({type:p})],m.prototype,"networkDataset",void 0),t([o({type:[c]})],m.prototype,"supportedTravelModes",void 0),m=t([i("esri.rest.support.NetworkServiceDescription")],m);const v=m;export{v as default};
