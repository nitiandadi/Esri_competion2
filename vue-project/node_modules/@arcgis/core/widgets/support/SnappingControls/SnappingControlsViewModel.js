/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import o from"../../../core/Error.js";import{HandleOwnerMixin as i}from"../../../core/HandleOwner.js";import{watch as s,initial as t}from"../../../core/reactiveUtils.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import p from"../../../views/interactive/snapping/FeatureSnappingLayerSource.js";import{canDisplayLayer as l}from"../../LayerList/support/layerListUtils.js";import{SnappingLayerListViewModel as c}from"./SnappingLayerListViewModel.js";const d="esri.widgets.support.SnappingControls.SnappingControlsViewModel";let u=class extends(i(r)){constructor(e){super(e),this.layerListViewModel=new c,this.snappingOptions=null,this.view=null}initialize(){this.handles.add([s((()=>({viewModel:this.layerListViewModel,view:this.view})),(({viewModel:e,view:r})=>{e.view=r}),t),s((()=>({viewModel:this.layerListViewModel,sources:this.snappingOptions?.featureSources})),(({viewModel:e,sources:r})=>{e.featureSnappingSources=r}),t)])}get state(){return this.get("snappingOptions")?"ready":"disabled"}enableSnappingForLayer(e){(this._findSnappingSourceForLayer(e)??this._makeSnappingSourceForLayer(e)).enabled=!0}disableSnappingForLayer(e){const r=this._findSnappingSourceForLayer(e);r&&(r.enabled=!1)}updateEnabledFeatureSources(e){for(const r of this.snappingOptions.featureSources)l(r.layer)&&(r.enabled=e.includes(r.layer.id))}_findSnappingSourceForLayer(e){return this.snappingOptions.featureSources.find((r=>r.layer.id===e))}_makeSnappingSourceForLayer(e){const r=this.layerListViewModel.operationalItemsFlat.find((r=>r.layer.id===e))?.layer;if(!r)throw new o("snapping-controls:layer-not-found",`cannot enable snapping for layer with id ${e} because no such layer was found in the view`);const i=new p({layer:r});return this.snappingOptions.featureSources.add(i),i}};e([n({constructOnly:!0})],u.prototype,"layerListViewModel",void 0),e([n()],u.prototype,"snappingOptions",void 0),e([n()],u.prototype,"state",null),e([n()],u.prototype,"view",void 0),u=e([a(d)],u);const y=u;export{y as default};
