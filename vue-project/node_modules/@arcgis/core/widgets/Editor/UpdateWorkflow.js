/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{makeHandle as t}from"../../core/handleUtils.js";import{isSome as i}from"../../core/maybe.js";import{onAbort as a,createAbortError as s,throwIfAborted as r,isAborted as o}from"../../core/promiseUtils.js";import{watch as n}from"../../core/reactiveUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{getEffectiveLayerCapabilities as c,getEffectiveEditingEnabled as u}from"../../layers/support/layerUtils.js";import{highlightsSupported as p}from"../../views/support/layerViewUtils.js";import{Edits as m}from"./Edits.js";import h from"./UpdateWorkflowData.js";import g from"./Workflow.js";import{createWorkflowSteps as f,fetchCandidates as w,whenEditorLayerView as y,fetchFullFeature as v,findLayerInfo as b,getVisualVariableAttributes as M,setUpGeometryUpdate as U,isTerminalUpdateEventType as j}from"./workflowUtils.js";var A;const I="candidate-highlight";let k=A=class extends g{constructor(e){super(e),this.type="update"}get shouldShowAttachments(){return!!this.data?.editableItem.attachmentsOnUpdateEnabled}get shouldAllowAttachmentEditing(){return!!this.data?.editableItem.supports.includes("update")}get helpMessage(){return"awaiting-feature-to-update"===this.stepId?"select":void 0}get reliesOnOwnerAdminPrivileges(){const{layer:e}=this.data.editableItem,t=e.capabilities?.operations.supportsUpdate,i=c(e)?.operations.supportsUpdate;return u(e)&&!e.editingEnabled||!!i&&!t}static create(e,t,i){const a=new A({data:new h({edits:new m,viewModel:e}),onCommit:async e=>{const t=e.edits.feature;if(!t)return;const a=t.sourceLayer,s=t.clone();if(!e.edits.attributesModified){const e=a.objectIdField;s.attributes={[e]:t.getAttribute(e)}}e.edits.geometryModified||(s.geometry=null),await i(a,{updateFeatures:[s]})}});return a._set("steps",this._createWorkflowSteps(a,t)),a}highlight(e){const t=this.data.viewModel.view;if(!t||!e)return;const i=e&&t.allLayerViews.items.find((({layer:t})=>t===e.layer||"subtype-sublayer"===e.layer.type&&e.layer.parent===t));p(i)&&this.handles.add(i.highlight(e),I)}unhighlight(){this.handles.remove(I)}static _createWorkflowSteps(e,d="awaiting-feature-to-update"){const{data:l,handles:c}=e,u=new Map;return f(["awaiting-feature-to-update","awaiting-update-feature-candidate","editing-existing-feature","adding-attachment","editing-attachment"],d,{"awaiting-feature-to-update":()=>({id:"awaiting-feature-to-update",async setUp(){const{spinnerViewModel:e}=l.viewModel,t=l.viewModel.view;let i=null;c.add({remove(){i&&(i.abort(),i=null)}},this.id),l.edits.feature=null;const o=t.on("immediate-click",(o=>{e.location=o.mapPoint,e.visible=!0,i?.abort();const{editableItems:n}=l.viewModel;i=new AbortController,new Promise(((e,r)=>{a(i?.signal,(()=>r(s()))),e(w(n,t,o,i?.signal))})).then((e=>{if(r(i),l.candidates=e.reduce(((e,t)=>t.error?e:[...e,...t.value]),[]),l.viewModel.spinnerViewModel.visible=1===l.candidates.length,0===l.candidates.length)return;const t=l.viewModel.activeWorkflow;if(1===l.candidates.length){const e=l.candidates[0];l.edits.feature=e,t.go("editing-existing-feature").catch((()=>{})).then((()=>l.viewModel.spinnerViewModel.visible=!1))}else t.next()}))}));t.focus(),c.add(o,this.id)},async tearDown(){c.remove(this.id)}}),"awaiting-update-feature-candidate":()=>({id:"awaiting-update-feature-candidate",async setUp(){const{edits:t}=l;t.feature=null,c.add(n((()=>t.feature),(t=>{e.unhighlight(),e.highlight(t)})),this.id)},async tearDown(){e.unhighlight(),c.remove(this.id)}}),"editing-existing-feature":()=>({id:"editing-existing-feature",async setUp(){if(c.has("editing-existing-feature"))return;const a=l.edits.feature,s=l.viewModel.view,{attachmentsViewModel:r,editableItems:d,featureFormViewModel:p,layerInfos:m,sketchViewModel:h}=l.viewModel;l.editableItem=d.find((e=>e.layer===a.layer));const g=new AbortController;c.add({remove:()=>g.abort()},this.id);const f=y(s,a.layer),w=v(a,s,g.signal),A=await f,I=await w;if(o(g))return;l.edits.updateGeometry(I.geometry),l.edits.updateAttributes(I.attributes),l.edits.trackChanges();const k=l.editableItem.supports,V=k.includes("create"),x=k.includes("update");r.set({abilities:{editing:!0,operations:{add:V||x,update:x,delete:x}},graphic:I,filesEnabled:!1,mode:"view"});const S=I.sourceLayer,C=b(m,S)?.formTemplate,D=s.spatialReference;p.set({arcadeEditType:"UPDATE",feature:I,formTemplate:C,spatialReference:D,view:s});const W=E(A)?A.createInteractiveEditSession(a):null,_=[p.on("value-change",(e=>{l.edits.updateAttributes(p.getValues()),I.attributes=l.edits.feature.attributes,W&&W.setAttribute(e.fieldName,e.value)})),n((()=>r.mode),(e=>{"add"===e&&l.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&l.viewModel.activeWorkflow.go("editing-attachment")}))];W&&(_.push(t((()=>W.rollback()))),c.add(t((()=>W.commit())),e._handleKeys.afterCommit));if(l.editableItem.geometryUpdatesEnabled){h.allowDeleteKey=!1;const t=M(I),{interactive:a,visual:r}=await U(I,t,h,s,(({geometry:e,attributes:a},s)=>{if(i(t.rotation)){const{field:e}=t.rotation;p.setValue(e,a[e])}if(i(t.size)){const{field:e}=t.size;p.setValue(e,a[e])}l.edits.updateAttributes(a),l.edits.updateGeometry(e),p.feature.geometry=e,("undo"===s.type||"redo"===s.type||"update"===s.type&&i(s.toolEventInfo)&&j(s.toolEventInfo.type))&&p.notifyFeatureGeometryChanged()}),u);_.push(a,r),c.add(a,e._handleKeys.beforeCommit),c.add(r,e._handleKeys.afterCommit)}else e.highlight(I);c.add(_,this.id)},async tearDown({cancelled:t}){t&&(e.unhighlight(),c.remove(this.id))}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){l.viewModel.attachmentsViewModel.mode="view"}}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){l.viewModel.attachmentsViewModel.mode="view"}})})}};function E(e){return"createInteractiveEditSession"in e}e([d()],k.prototype,"shouldShowAttachments",null),e([d()],k.prototype,"shouldAllowAttachmentEditing",null),e([d()],k.prototype,"helpMessage",null),e([d()],k.prototype,"reliesOnOwnerAdminPrivileges",null),k=A=e([l("esri.widgets.Editor.UpdateWorkflow")],k);const V=k;export{V as default};
