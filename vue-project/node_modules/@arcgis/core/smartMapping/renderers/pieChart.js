/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
import e from"../../Color.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import r from"../../renderers/PieChartRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../symbols.js";import a from"../../core/Error.js";import{isSome as t}from"../../core/maybe.js";import{toPt as n}from"../../core/screenUtils.js";import{fetchMessageBundle as i}from"../../intl/messages.js";import s from"../../layers/support/AggregateField.js";import o from"../../layers/support/ExpressionInfo.js";import l from"../../renderers/support/AttributeColorInfo.js";import p from"../heuristics/outline.js";import u from"../heuristics/sizeRange.js";import{createVisualVariables as m}from"./size.js";import{createColors as c,createSymbol as d,getSymbolOutlineFromScheme as f,verifyBasicFieldValidity as b,getBasemapInfo as h}from"./support/utils.js";import y from"../statistics/predominantCategories.js";import{getSumOfAttributesExpr as w}from"../statistics/support/utils.js";import{verifyBinningParams as g}from"../support/binningUtils.js";import{getFieldsList as v}from"../support/utils.js";import{LayerType as z,binningCapableLayerTypes as E,createLayerAdapter as S,getLayerTypeLabels as j,getLayerTypes as C}from"../support/adapters/support/layerUtils.js";import{cloneScheme as x,getSchemes as V}from"../symbology/pieChart.js";import{getCIMSymbolColor as $}from"../../symbols/support/cimSymbolUtils.js";import T from"../../symbols/SimpleLineSymbol.js";const I=[z.CSVLayer,z.FeatureLayer,z.OGCFeatureLayer,z.GeoJSONLayer,z.WFSLayer];async function k(e){if(!(e&&e.layer&&e.view&&e.attributes?.length))throw new a("pie-chart-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(e.attributes.length>10)throw new a("pie-chart-renderer:invalid-parameters","PieChart renderer does not support more than 10 attributes");e.forBinning&&g(e,"pie-chart-renderer");const r={...e};r.shape=r.shape||"pie",r.othersCategoryEnabled=null==r.othersCategoryEnabled||r.othersCategoryEnabled,r.includeSizeVariable=e.includeSizeVariable||!1;const n=e.forBinning?E:I,i=S(r.layer,n,e.forBinning);if(r.layer=i,!i)throw new a("pie-chart-renderer:invalid-parameters","'layer' must be one of these types: "+j(n).join(", "));const s=t(r.signal)?{signal:r.signal}:null;await Promise.all([r.view.when(),i.load(s)]);const o=i.geometryType,l="polygon"===o,p="point"===o||"multipoint"===o||l;if(r.outlineOptimizationEnabled=!!l&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=!!p&&r.sizeOptimizationEnabled,!p)throw new a("pie-chart-renderer:not-supported","PieChart renderer is only supported for point and polygon layers");const u=[],m=r.attributes;for(const a of m){const e=await v({field:a.field,valueExpression:a.valueExpression});u.push(...e)}const c=b(i,u.filter(Boolean),"pie-chart-renderer:invalid-parameters");if(c)throw c;return r}async function q(e){let r=e.pieChartScheme,a=null,n=null;const i=await h(e.basemap,e.view);if(a=t(i.basemapId)?i.basemapId:null,n=t(i.basemapTheme)?i.basemapTheme:null,r)return{scheme:x(r),basemapId:a,basemapTheme:n};const s=V({basemap:a,numColors:e.attributes.length,geometryType:e.layer.geometryType,basemapTheme:n});return s&&(r=s.primaryScheme,a=s.basemapId,n=s.basemapTheme),{scheme:r,basemapId:a,basemapTheme:n}}async function O(e,r){const{valueExpression:a,sqlExpression:t,sqlWhere:n}=w(e.attributes),s=await i("esri/smartMapping/t9n/smartMapping");return m({layer:e.layer,basemap:e.basemap,valueExpression:a,sqlExpression:t,sqlWhere:n,sizeScheme:r,sizeOptimizationEnabled:e.sizeOptimizationEnabled,legendOptions:{title:s.sumOfCategories},view:e.view,signal:e.signal})}async function B(e){const[t,s]=await Promise.all([k(e),i("esri/smartMapping/t9n/smartMapping")]),o=await q(t),l=o?.scheme;if(!l)throw new a("pie-chart-renderer:insufficient-info","Unable to find pie-chart scheme");const m=t.layer,{includeSizeVariable:b,sizeOptimizationEnabled:h,outlineOptimizationEnabled:w,view:g,signal:v}=t,z=l.sizeScheme,E=t.attributes,S=E.map((e=>e.field)),[j,C,V,$]=await Promise.all([S.length>1?y({layer:m,fields:S,view:g,signal:v}):null,b?O(t,z):null,!b&&h?u({layer:m,view:g,signal:v}):null,w?p({layer:m,view:g,signal:v}):null]),I=j&&j.predominantCategoryInfos?{uniqueValueInfos:j.predominantCategoryInfos}:{uniqueValueInfos:S.map((e=>({value:e,count:0})))},B=c(l.colors,E.length),R=E.map(((e,r)=>({field:e.field,valueExpression:e.valueExpression,label:e.label,valueExpressionTitle:e.valueExpressionTitle,color:B[r]}))),L=m.geometryType,P="background"in z&&z.background,F=new r({attributes:R,othersCategory:{label:s.other,color:t.othersCategoryEnabled?l.colorForOthersCategory:null,threshold:.04},holePercentage:"donut"===t.shape?.45:0,backgroundFillSymbol:P?d(L,{type:"2d",color:P.color,outline:f(P,L,$?.opacity)}):null,size:n(l.size),outline:new T(f(l,"point",$?.opacity)),legendOptions:t.legendOptions});if(C&&(h||C.visualVariables.forEach((e=>{"number"==typeof e.minSize&&"number"==typeof e.maxSize&&(e.minSize*=2.5,e.maxSize*=1.8)})),h&&"point"===L&&C.visualVariables.forEach((e=>{e?.minSize&&"object"==typeof e.minSize&&e.minSize?.stops.forEach((e=>{e.size*=1.8}))})),F.authoringInfo=C.authoringInfo.clone(),F.visualVariables=C.visualVariables?.map((e=>e.clone()))),$?.visualVariables?.length){const e=$.visualVariables.map((e=>e.clone()));F.visualVariables?F.visualVariables.push(...e):F.visualVariables=e}return V?.minSize&&("point"===L&&V.minSize.stops.forEach((e=>{e.size*=2.5})),"polygon"===L&&V.minSize.stops.forEach((e=>{e.size*=1.8})),F.visualVariables?F.visualVariables.push(V.minSize):F.visualVariables=[V.minSize]),{renderer:F,pieChartScheme:x(l),size:C,basemapId:o.basemapId,basemapTheme:o.basemapTheme,statistics:I}}const R=["unique-value","class-breaks"],L=new e("#aaaaaa"),P=new e("#5c5c5c"),F=[new e("#e60049"),new e("#0bb4ff"),new e("#50e991"),new e("#e6d800"),new e("#9b19f5"),new e("#ffa300"),new e("#dc0ab4"),new e("#b3d4ff"),new e("#00bfa0"),new e("#f0cccc")];async function U(e){if(!e||!e.layer)throw new a("pie-chart-cluster-renderer:missing-parameters","'layer' parameter is required");const r={...e};r.shape=r.shape||"pie",r.defaultSymbolEnabled??(r.defaultSymbolEnabled=!0);const n=e.layer;if(!C(I).includes(n.type))throw new a("pie-chart-cluster-renderer:invalid-parameters","'layer' must be one of these types: "+j(I).join(", "));const i=t(r.signal)?{signal:r.signal}:null;await n.load(i);if(!("point"===n.geometryType))throw new a("pie-chart-cluster-renderer:invalid-parameters","Cluster renderers are only supported for point layers");const{renderer:s}=n;if(!s)throw new a("pie-chart-cluster-renderer:invalid-parameters","input layer does not have a renderer.");if(!R.includes(s.type))throw new a("pie-chart-cluster-renderer:invalid-parameters",`Cannot create a pie chart renderer for clusters based on a ${s.type} renderer.`);if("valueExpression"in s&&s.valueExpression)throw new a("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer whose renderer contains a valueExpression.");if("unique-value"===s.type){if(s.field2)throw new a("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a UniqueValueRenderer using more than one field.");if(s.uniqueValueInfos.length>10)throw new a("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer cannot be created from a UniqueValueRenderer with more than 10 unique value infos.")}if("class-breaks"===s.type){if(s.classBreakInfos.length<2)throw new a("pie-chart-cluster-renderer:invalid-parameters","Cannot create a pie chart renderer for clusters from a layer renderer with a continuous color or size gradient.");if(s.classBreakInfos.length>10)throw new a("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with more than 10 class break infos.");if("class-breaks-size"===s?.authoringInfo?.type)throw new a("pie-chart-cluster-renderer:invalid-parameters","PieChart cluster renderer can not be created from a ClassBreaksRenderer with breaks varied by size instead of color.")}return r}async function M(e){const a=await U(e),{layer:t,shape:n,defaultSymbolEnabled:s,legendOptions:o}=a,{renderer:p}=t,u=(await i("esri/smartMapping/t9n/smartMapping")).other;let m=[];"unique-value"===p.type&&(m=N({renderer:p,defaultSymbolEnabled:s,defaultLabelBackup:u})),"class-breaks"===p.type&&(m=_({renderer:p,defaultSymbolEnabled:s,defaultLabelBackup:u}));const c=[],d=[];for(const r of m){const{field:e,color:a}=r;c.push(e),d.push(new l({color:a,field:e.name,label:e.alias}))}return{fields:c,renderer:new r({attributes:d,legendOptions:o,holePercentage:"donut"===n?.45:0,outline:null,size:18,othersCategory:null})}}function N(e){const{renderer:r,defaultSymbolEnabled:a,defaultLabelBackup:t}=e,{field:n,uniqueValueInfos:i,defaultSymbol:l,defaultLabel:p}=r,u=l&&a,m=u?9:10,d=c(F,m),f=i.slice(0,m).map(((e,r)=>{const a=e.label,t=d[r];return{field:new s({name:A(e.value?.toString()),alias:a,onStatisticExpression:new o({title:`Field definition - ${a}`,expression:W(n,e),returnType:"number"}),statisticType:"sum"}),color:D(e.symbol,t)}}));if(u){const e="cluster_default",r=p||t;f.push({field:new s({name:A(e),alias:r,onStatisticExpression:new o({title:`Field definition - ${r}`,expression:G(n,i),returnType:"number"}),statisticType:"sum"}),color:D(l,P)})}return f}function _(e){const{renderer:r,defaultSymbolEnabled:a,defaultLabelBackup:t}=e,{field:n,classBreakInfos:i,defaultSymbol:l,defaultLabel:p}=r,u=l&&a,m=u?9:10,d=c(F,m),f=i.slice(0,m).map(((e,r)=>{const a=e.label||`${e.minValue} - ${e.maxValue}`,t=d[r];return{field:new s({name:A(a),alias:a,onStatisticExpression:new o({title:`Field definition - ${a}`,expression:H(n,e),returnType:"number"}),statisticType:"sum"}),color:D(e.symbol,t)}}));if(u){const e="cluster_default",r=p||t;f.push({field:new s({name:A(e),alias:r,onStatisticExpression:new o({title:`Field definition - ${r}`,expression:J(n,i),returnType:"number"}),statisticType:"sum"}),color:D(l,P)})}return f}function A(e){return"SUM_"+(e+"").replace(/[^a-zA-Z0-9_]/g,"_")}function D(e,r){if("simple-marker"===e.type&&e.color)return e.color.clone();if("cim"===e.type){const r=$(e);if(r)return r.clone()}return r?r.clone():L.clone()}function W(e,r){return`Number(Text($feature["${e}"]) == "${r.value+""}")`}function G(e,r){return`Number(!(${r.map((r=>`(Text($feature["${e}"]) == "${r.value+""}")`)).join(" || ")}))`}function H(e,r){return`Number($feature["${e}"] >= ${r.minValue} && $feature["${e}"] < ${r.maxValue})`}function J(e,r){return`Number(!(${r.map((r=>`($feature["${e}"] >= ${r.minValue} && $feature["${e}"] < ${r.maxValue})`)).join(" || ")}))`}export{B as createRenderer,M as createRendererForClustering};
