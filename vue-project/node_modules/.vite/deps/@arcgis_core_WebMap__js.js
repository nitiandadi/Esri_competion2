import {
  b as b3
} from "./chunk-HTISAP5L.js";
import "./chunk-MKFZQTEV.js";
import "./chunk-FVIVE4ET.js";
import {
  a as a3,
  n as n2
} from "./chunk-GAWWP5U2.js";
import {
  i as i4
} from "./chunk-I73RJE3H.js";
import "./chunk-OWSDEANX.js";
import {
  r as r3
} from "./chunk-5OPLKRAS.js";
import {
  n as n3
} from "./chunk-CRQWEKZD.js";
import {
  m as m3
} from "./chunk-7W27Q2ZM.js";
import {
  u as u2
} from "./chunk-VSOGWTK5.js";
import "./chunk-QS7JATZ7.js";
import {
  L as L3,
  S as S2,
  h,
  v as v3
} from "./chunk-JU3TKWZ7.js";
import "./chunk-NC6SXEMY.js";
import "./chunk-VGE7POXD.js";
import {
  y as y3
} from "./chunk-RMSEZQLS.js";
import "./chunk-RSGOERDK.js";
import "./chunk-WVLEGBEW.js";
import "./chunk-TQCVRALN.js";
import {
  l as l2
} from "./chunk-72XDZD6U.js";
import "./chunk-6FSTKAO3.js";
import "./chunk-LCCPKYWG.js";
import "./chunk-6JKYZ2HT.js";
import "./chunk-A32C3AV2.js";
import "./chunk-Z5XAWPXR.js";
import "./chunk-QEAHRYXT.js";
import "./chunk-KIR65PYA.js";
import "./chunk-CBPSNSHU.js";
import "./chunk-BXCDE7OD.js";
import "./chunk-3Q42SQKM.js";
import "./chunk-N5RJDK35.js";
import "./chunk-YINM2X73.js";
import "./chunk-TYNFM6KS.js";
import "./chunk-2MXTJGGQ.js";
import "./chunk-LHSSC5DZ.js";
import "./chunk-GPC3G5ZE.js";
import "./chunk-TXTRTJKV.js";
import "./chunk-DP34NAR5.js";
import "./chunk-SKVPVOJE.js";
import "./chunk-ED3H44RD.js";
import "./chunk-BGFAQ7IX.js";
import "./chunk-7R74OHEA.js";
import "./chunk-YAHOVOUK.js";
import "./chunk-TDIYMFIJ.js";
import "./chunk-OP7TT6MW.js";
import "./chunk-AJY7W6KP.js";
import "./chunk-24GIQSAO.js";
import "./chunk-G65A4RB3.js";
import "./chunk-5Z5EL26H.js";
import "./chunk-XLBI6T7A.js";
import "./chunk-G356VNM2.js";
import "./chunk-L4RMMCLB.js";
import {
  c,
  i as i3,
  s as s6,
  u
} from "./chunk-74O5RNN6.js";
import "./chunk-G3VRYZIG.js";
import "./chunk-LIQ4GX6J.js";
import "./chunk-J4FALWOT.js";
import "./chunk-MN4E5VOA.js";
import "./chunk-EQMSF3LN.js";
import "./chunk-ST7DNJJS.js";
import "./chunk-PPF7YG5M.js";
import "./chunk-RPT2LTMJ.js";
import "./chunk-JP2SJCCZ.js";
import {
  O,
  S
} from "./chunk-VGMWYIHA.js";
import "./chunk-IV6V2NFV.js";
import {
  L as L2
} from "./chunk-HZKQDRDV.js";
import "./chunk-QIPM2JON.js";
import "./chunk-2CREJO6O.js";
import "./chunk-RVPWRWBW.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-SLPOHICA.js";
import "./chunk-REIXEATJ.js";
import "./chunk-7YGY53FV.js";
import "./chunk-XP5MC636.js";
import "./chunk-ZH4VVE2N.js";
import {
  x
} from "./chunk-APWPNAOK.js";
import "./chunk-ZSE573CF.js";
import "./chunk-CNSRWRDO.js";
import "./chunk-NIRK3SGG.js";
import "./chunk-IAZ7N6B7.js";
import "./chunk-IGOXVXHJ.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-IFB6JAZV.js";
import "./chunk-IMDA6RVE.js";
import "./chunk-GGTMSDMZ.js";
import {
  i as i2
} from "./chunk-ICG3HFWD.js";
import {
  T as T3
} from "./chunk-4NXG3DDL.js";
import "./chunk-RRDTWKKD.js";
import "./chunk-WRRQGHKT.js";
import "./chunk-Z7EVRM6O.js";
import "./chunk-H5PGGDUF.js";
import "./chunk-XS2IGMN6.js";
import "./chunk-YEBACBC7.js";
import "./chunk-UKGDL4FF.js";
import "./chunk-JSP5XSQW.js";
import "./chunk-3VYMEEEU.js";
import "./chunk-ZV33SC25.js";
import "./chunk-PRUHFPTL.js";
import "./chunk-ONJXOTQ7.js";
import "./chunk-4VX5PWQN.js";
import "./chunk-K55CPJL4.js";
import "./chunk-HM62IZSE.js";
import "./chunk-2OJTWNQ6.js";
import "./chunk-QKWZO2WR.js";
import {
  f as f2,
  y as y2
} from "./chunk-GEQPBGLO.js";
import {
  j as j3
} from "./chunk-2UAIGHM2.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-KFVYVU45.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-L2YYMVOS.js";
import "./chunk-KGIL42MH.js";
import "./chunk-A3HP4ESO.js";
import "./chunk-Z5QBM3A6.js";
import "./chunk-MRALC5D7.js";
import "./chunk-CYZ4XVBT.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-XF2RZJFH.js";
import "./chunk-HRFBINZY.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-EALW5DHT.js";
import {
  b as b2
} from "./chunk-EAKUFEPO.js";
import "./chunk-EQMIUIFH.js";
import {
  m as m2
} from "./chunk-KK57CPHE.js";
import "./chunk-7MMTDLQQ.js";
import "./chunk-TJWUU7NW.js";
import "./chunk-Q62HELM6.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-JT54I3AY.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-EGHLQERQ.js";
import {
  m
} from "./chunk-6CVKQGVU.js";
import "./chunk-2HZTCGYV.js";
import {
  a as a2
} from "./chunk-Z3YY72G4.js";
import {
  L,
  T as T2,
  kt,
  ot,
  tt
} from "./chunk-M3KO43BW.js";
import "./chunk-LRFOTULU.js";
import {
  s as s5
} from "./chunk-HPP5IXU5.js";
import "./chunk-UADQEL54.js";
import "./chunk-4D6JGHEF.js";
import "./chunk-CT6YILLI.js";
import {
  j
} from "./chunk-LJAKPJDJ.js";
import "./chunk-CCWBAM3L.js";
import "./chunk-TKWZACTO.js";
import "./chunk-6K5VVUVI.js";
import {
  n
} from "./chunk-DOQX2NNO.js";
import "./chunk-MJFFZ3MM.js";
import {
  v as v2
} from "./chunk-2ZX6RZTI.js";
import "./chunk-5Q7F7FJ6.js";
import {
  E as E2,
  R3 as R,
  f2 as f,
  j as j2
} from "./chunk-XFNXUG2G.js";
import {
  i
} from "./chunk-27R7KBOL.js";
import {
  s as s3
} from "./chunk-RDTHWDIE.js";
import {
  o as o2
} from "./chunk-EAFLFTSD.js";
import {
  r as r2
} from "./chunk-DOVXDFWE.js";
import {
  o
} from "./chunk-M4BAPJ3L.js";
import {
  s as s4
} from "./chunk-QXPN4D5D.js";
import {
  d,
  l
} from "./chunk-KGIB6IYW.js";
import {
  a2 as a,
  e as e2,
  v2 as v,
  y3 as y
} from "./chunk-3PPVODAA.js";
import "./chunk-MTJ2HM2W.js";
import {
  T,
  b
} from "./chunk-PXVSWY3C.js";
import {
  E
} from "./chunk-WTKFW2TD.js";
import {
  s,
  s2
} from "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import {
  p
} from "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  e,
  r,
  t
} from "./chunk-WHB7G7RI.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/layers/support/FacilityLayerInfo.js
var s7 = class extends l {
  constructor(r4) {
    super(r4), this.facilityIdField = null, this.layerId = null, this.nameField = null, this.siteIdField = null, this.sublayerId = null;
  }
};
e2([y({ type: String, json: { write: true } })], s7.prototype, "facilityIdField", void 0), e2([y({ type: String, json: { write: true } })], s7.prototype, "layerId", void 0), e2([y({ type: String, json: { write: true } })], s7.prototype, "nameField", void 0), e2([y({ type: String, json: { write: true } })], s7.prototype, "siteIdField", void 0), e2([y({ type: Number, json: { read: { source: "subLayerId" }, write: { target: "subLayerId" }, origins: { "web-scene": { read: false, write: false } } } })], s7.prototype, "sublayerId", void 0), s7 = e2([a("esri.layers.support.FacilityLayerInfo")], s7);
var i5 = s7;

// node_modules/@arcgis/core/layers/support/LevelLayerInfo.js
var i6 = class extends l {
  constructor(e4) {
    super(e4), this.facilityIdField = null, this.layerId = null, this.levelIdField = null, this.levelNumberField = null, this.longNameField = null, this.shortNameField = null, this.sublayerId = null, this.verticalOrderField = null;
  }
};
e2([y({ type: String, json: { write: true } })], i6.prototype, "facilityIdField", void 0), e2([y({ type: String, json: { write: true } })], i6.prototype, "layerId", void 0), e2([y({ type: String, json: { write: true } })], i6.prototype, "levelIdField", void 0), e2([y({ type: String, json: { write: true } })], i6.prototype, "levelNumberField", void 0), e2([y({ type: String, json: { write: true } })], i6.prototype, "longNameField", void 0), e2([y({ type: String, json: { write: true } })], i6.prototype, "shortNameField", void 0), e2([y({ type: Number, json: { read: { source: "subLayerId" }, write: { target: "subLayerId" }, origins: { "web-scene": { read: false, write: false } } } })], i6.prototype, "sublayerId", void 0), e2([y({ type: String, json: { write: true } })], i6.prototype, "verticalOrderField", void 0), i6 = e2([a("esri.layers.support.LevelLayerInfo")], i6);
var s8 = i6;

// node_modules/@arcgis/core/layers/support/SiteLayerInfo.js
var s9 = class extends l {
  constructor(r4) {
    super(r4), this.layerId = null, this.nameField = null, this.siteIdField = null, this.sublayerId = null;
  }
};
e2([y({ type: String, json: { write: true } })], s9.prototype, "layerId", void 0), e2([y({ type: String, json: { write: true } })], s9.prototype, "nameField", void 0), e2([y({ type: String, json: { write: true } })], s9.prototype, "siteIdField", void 0), e2([y({ type: Number, json: { read: { source: "subLayerId" }, write: { target: "subLayerId" }, origins: { "web-scene": { read: false, write: false } } } })], s9.prototype, "sublayerId", void 0), s9 = e2([a("esri.layers.support.SiteLayerInfo")], s9);
var i7 = s9;

// node_modules/@arcgis/core/support/MapFloorInfo.js
var a4 = class extends l {
  constructor(r4) {
    super(r4), this.levelLayer = null, this.facilityLayer = null, this.siteLayer = null;
  }
};
e2([y({ type: s8, json: { write: true } })], a4.prototype, "levelLayer", void 0), e2([y({ type: i5, json: { write: true } })], a4.prototype, "facilityLayer", void 0), e2([y({ type: i7, json: { write: true } })], a4.prototype, "siteLayer", void 0), a4 = e2([a("esri.support.MapFloorInfo")], a4);
var l3 = a4;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/ExpressionInfo.js
var p2 = class extends i(l) {
  constructor(r4) {
    super(r4), this.expression = null, this.returnType = "string", this.title = null;
  }
};
e2([y({ type: String, json: { write: { isRequired: true } } })], p2.prototype, "expression", void 0), e2([y({ type: ["number", "string"], json: { write: true } })], p2.prototype, "returnType", void 0), e2([y({ type: String, json: { write: true } })], p2.prototype, "title", void 0), p2 = e2([a("esri.webdoc.geotriggersInfo.ExpressionInfo")], p2);
var i8 = p2;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/DeviceLocationFeed.js
var c2 = new s4({ deviceLocation: "device-location" });
var a5 = class extends i(l) {
  constructor(o5) {
    super(o5), this.filterExpression = null, this.type = "device-location";
  }
};
e2([y({ type: i8, json: { write: true } })], a5.prototype, "filterExpression", void 0), e2([y({ type: c2.apiValues, readOnly: true, json: { type: c2.jsonValues, read: c2.read, write: c2.write } })], a5.prototype, "type", void 0), a5 = e2([a("esri.webdoc.geotriggersInfo.DeviceLocationFeed")], a5);
var n4 = a5;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FeatureFilter.js
var c3 = class extends i(l) {
  constructor(r4) {
    super(r4), this.geometry = null, this.where = null;
  }
};
e2([y({ types: n, json: { read: v2, write: true } })], c3.prototype, "geometry", void 0), e2([y({ type: String, json: { write: true } })], c3.prototype, "where", void 0), c3 = e2([a("esri.webdoc.geotriggersInfo.FeatureFilter")], c3);
var m4 = c3;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FeatureLayerSource.js
var p3 = class extends i(l) {
  constructor(r4) {
    super(r4), this.layerId = null, this.layerUrl = null, this.type = "feature-layer";
  }
};
e2([y({ type: String, json: { write: { overridePolicy() {
  return { isRequired: null === this.layerUrl };
} } } })], p3.prototype, "layerId", void 0), e2([y({ type: String, json: { write: { overridePolicy() {
  return { isRequired: null === this.layerId };
} } } })], p3.prototype, "layerUrl", void 0), e2([o2({ featureLayer: "feature-layer" }, { readOnly: true })], p3.prototype, "type", void 0), p3 = e2([a("esri.webdoc.geotriggersInfo.FeatureLayerSource")], p3);
var a6 = p3;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FeatureFenceParameters.js
var a7 = class extends i(l) {
  constructor(r4) {
    super(r4), this.fenceSource = null, this.filter = null, this.bufferDistance = null, this.type = "features";
  }
};
e2([y({ type: a6, json: { write: { isRequired: true } } })], a7.prototype, "fenceSource", void 0), e2([y({ type: m4, json: { write: true } })], a7.prototype, "filter", void 0), e2([y({ type: Number, json: { write: true } })], a7.prototype, "bufferDistance", void 0), e2([o2({ features: "features" }, { readOnly: true })], a7.prototype, "type", void 0), a7 = e2([a("esri.webdoc.geotriggersInfo.FeatureFenceParameters")], a7);
var u3 = a7;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/Geotrigger.js
var c4 = class extends i(l) {
  constructor(r4) {
    super(r4), this.type = "fence";
  }
};
e2([o2({ fence: "fence" }, { readOnly: true })], c4.prototype, "type", void 0), c4 = e2([a("esri.webdoc.geotriggersInfo.Geotrigger")], c4);
var p4 = c4;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/GeotriggerNotificationOptions.js
var i9 = class extends i(l) {
  constructor(o5) {
    super(o5), this.expressionInfo = null, this.requestedActions = null;
  }
};
e2([y({ type: i8, json: { write: true } })], i9.prototype, "expressionInfo", void 0), e2([y({ type: [String], json: { write: true } })], i9.prototype, "requestedActions", void 0), i9 = e2([a("esri.webdoc.geotriggersInfo.GeotriggerNotificationOptions")], i9);
var c5 = i9;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/support/typeUtils.js
var t2 = new s4({ enterContainsAndExitDoesNotContain: "enter-contains-and-exit-does-not-contain", enterContainsAndExitDoesNotIntersect: "enter-contains-and-exit-does-not-intersect", enterIntersectsAndExitDoesNotIntersect: "enter-intersects-and-exit-does-not-intersect" });
var n5 = new s4({ useGeometry: "use-geometry", useGeometryWithAccuracy: "use-geometry-with-accuracy" });
var o3 = new s4({ enter: "enter", enterOrExit: "enter-or-exit", exit: "exit" });

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FenceGeotrigger.js
var d2 = class extends p4 {
  constructor(e4) {
    super(e4), this.enterExitRule = "enter-contains-and-exit-does-not-intersect", this.feed = null, this.feedAccuracyMode = "use-geometry", this.fenceNotificationRule = null, this.fenceParameters = null, this.name = null, this.notificationOptions = null, this.type = "fence";
  }
};
e2([o2(t2)], d2.prototype, "enterExitRule", void 0), e2([y({ type: n4, json: { write: { isRequired: true } } })], d2.prototype, "feed", void 0), e2([o2(n5)], d2.prototype, "feedAccuracyMode", void 0), e2([y({ type: o3.apiValues, json: { type: o3.jsonValues, read: o3.read, write: { writer: o3.write, isRequired: true } } })], d2.prototype, "fenceNotificationRule", void 0), e2([y({ type: u3, json: { write: { isRequired: true } } })], d2.prototype, "fenceParameters", void 0), e2([y({ type: String, json: { write: true } })], d2.prototype, "name", void 0), e2([y({ type: c5, json: { write: true } })], d2.prototype, "notificationOptions", void 0), e2([o2({ fence: "fence" }, { readOnly: true })], d2.prototype, "type", void 0), d2 = e2([a("esri.webdoc.geotriggersInfo.FenceGeotrigger")], d2);
var f3 = d2;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/support/geotriggerTypes.js
var o4 = { base: p4, key: "type", typeMap: { fence: f3 } };

// node_modules/@arcgis/core/webdoc/GeotriggersInfo.js
var c6 = class extends i(l) {
  constructor(r4) {
    super(r4), this.geotriggers = null;
  }
};
e2([y({ types: [o4], json: { write: { isRequired: true } } })], c6.prototype, "geotriggers", void 0), c6 = e2([a("esri.webdoc.GeotriggersInfo")], c6);
var i10 = c6;

// node_modules/@arcgis/core/webdoc/RangeInfo.js
var s10;
var a8 = s10 = class extends l {
  constructor(e4) {
    super(e4), this.activeRange = null, this.currentRangeExtent = null, this.fullRangeExtent = null;
  }
  clone() {
    return new s10(p({ activeRange: this.activeRange, currentRangeExtent: this.currentRangeExtent, fullRangeExtent: this.fullRangeExtent }));
  }
};
e2([y({ type: String, nonNullable: true, json: { read: { source: "activeRangeName" }, write: { target: "activeRangeName", isRequired: true } } })], a8.prototype, "activeRange", void 0), e2([y({ type: [Number], json: { write: true } })], a8.prototype, "currentRangeExtent", void 0), e2([y({ type: [Number], json: { write: true } })], a8.prototype, "fullRangeExtent", void 0), a8 = s10 = e2([a("esri.webdoc.RangeInfo")], a8);
var c7 = a8;

// node_modules/@arcgis/core/webdoc/support/thumbnailUtils.js
var h2 = { width: 600, height: 400 };
var t3 = 1.5;
function i11(i15, e4) {
  e4 = e4 || h2;
  let { width: d3, height: n7 } = e4;
  const g = d3 / n7;
  return g < t3 ? n7 = d3 / t3 : g > t3 && (d3 = n7 * t3), d3 > i15.width && (n7 *= i15.width / d3, d3 = i15.width), n7 > i15.height && (d3 *= i15.height / n7, n7 = i15.height), { width: Math.round(d3), height: Math.round(n7) };
}

// node_modules/@arcgis/core/core/accessorSupport/extensions/serializableProperty/writePolicyUtils.js
function e3(e4) {
  return { enabled: !!(e4 == null ? void 0 : e4.length) };
}

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchLayerField.js
var c8;
var a9 = c8 = class extends l {
  constructor(r4) {
    super(r4), this.exactMatch = false, this.name = null, this.type = null;
  }
  clone() {
    return new c8({ exactMatch: this.exactMatch, type: this.type, name: this.name });
  }
};
e2([y({ type: Boolean, json: { write: true } })], a9.prototype, "exactMatch", void 0), e2([y({ type: String, json: { write: true } })], a9.prototype, "name", void 0), e2([o2(i2)], a9.prototype, "type", void 0), a9 = c8 = e2([a("esri.webdoc.applicationProperties.SearchLayerField")], a9);
var i12 = a9;

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchLayer.js
var c9;
var a10 = c9 = class extends l {
  constructor(r4) {
    super(r4), this.field = null, this.id = null, this.subLayer = null;
  }
  clone() {
    return new c9(p({ field: this.field, id: this.id, subLayer: this.subLayer }));
  }
};
e2([y({ type: i12, json: { write: { isRequired: true } } })], a10.prototype, "field", void 0), e2([y({ type: String, json: { write: { isRequired: true } } })], a10.prototype, "id", void 0), e2([y({ type: T, json: { write: true } })], a10.prototype, "subLayer", void 0), a10 = c9 = e2([a("esri.webdoc.applicationProperties.SearchLayer")], a10);
var u4 = a10;

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchTableField.js
var c10;
var a11 = c10 = class extends l {
  constructor(r4) {
    super(r4), this.exactMatch = false, this.name = null, this.type = null;
  }
  clone() {
    return new c10({ exactMatch: this.exactMatch, type: this.type, name: this.name });
  }
};
e2([y({ type: Boolean, json: { write: true } })], a11.prototype, "exactMatch", void 0), e2([y({ type: String, json: { write: true } })], a11.prototype, "name", void 0), e2([o2(i2)], a11.prototype, "type", void 0), a11 = c10 = e2([a("esri.webdoc.applicationProperties.SearchTableField")], a11);
var i13 = a11;

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchTable.js
var p5;
var c11 = p5 = class extends l {
  constructor(r4) {
    super(r4), this.field = null, this.id = null;
  }
  clone() {
    return new p5(p({ field: this.field, id: this.id }));
  }
};
e2([y({ type: i13, json: { write: { isRequired: true } } })], c11.prototype, "field", void 0), e2([y({ type: String, json: { write: { isRequired: true } } })], c11.prototype, "id", void 0), c11 = p5 = e2([a("esri.webdoc.applicationProperties.SearchTable")], c11);
var l4 = c11;

// node_modules/@arcgis/core/webdoc/applicationProperties/Search.js
var p6;
var b4 = j.ofType(u4);
var h3 = j.ofType(l4);
var u5 = p6 = class extends l {
  constructor(e4) {
    super(e4), this.addressSearchEnabled = true, this.enabled = true, this.hintText = null, this.layers = new b4(), this.tables = new h3();
  }
  readAddressSearchEnabled(e4) {
    return !e4;
  }
  writeAddressSearchEnabled(e4, r4, o5) {
    r4[o5] = !e4;
  }
  clone() {
    return new p6(p({ addressSearchEnabled: this.addressSearchEnabled, enabled: this.enabled, hintText: this.hintText, layers: this.layers, tables: this.tables }));
  }
};
e2([y({ type: Boolean, nonNullable: true, json: { read: { source: "disablePlaceFinder" }, write: { target: "disablePlaceFinder", isRequired: true }, origins: { "web-scene": { read: false, write: false } } } })], u5.prototype, "addressSearchEnabled", void 0), e2([o("addressSearchEnabled")], u5.prototype, "readAddressSearchEnabled", null), e2([r2("addressSearchEnabled")], u5.prototype, "writeAddressSearchEnabled", null), e2([y({ type: Boolean, nonNullable: true, json: { write: true, origins: { "web-map": { write: { isRequired: true } }, "web-scene": { default: true, write: true } } } })], u5.prototype, "enabled", void 0), e2([y({ type: String, json: { write: true } })], u5.prototype, "hintText", void 0), e2([y({ type: b4, json: { write: { overridePolicy: e3 }, origins: { "web-scene": { write: { isRequired: true } } } } })], u5.prototype, "layers", void 0), e2([y({ type: h3, json: { read: true, write: { overridePolicy: e3 } } })], u5.prototype, "tables", void 0), u5 = p6 = e2([a("esri.webdoc.applicationProperties.Search")], u5);
var y4 = u5;

// node_modules/@arcgis/core/webdoc/applicationProperties/Viewing.js
var p7;
var a12 = p7 = class extends l {
  constructor(r4) {
    super(r4), this.search = null;
  }
  clone() {
    return new p7(p({ search: this.search }));
  }
};
e2([y({ type: y4, json: { write: true } })], a12.prototype, "search", void 0), a12 = p7 = e2([a("esri.webdoc.applicationProperties.Viewing")], a12);
var i14 = a12;

// node_modules/@arcgis/core/webmap/ApplicationProperties.js
var p8;
var n6 = p8 = class extends l {
  constructor(o5) {
    super(o5), this.editing = null, this.offline = null, this.viewing = null;
  }
  clone() {
    return new p8(p({ editing: this.editing, offline: this.offline, viewing: this.viewing }));
  }
};
e2([y({ json: { write: true } })], n6.prototype, "editing", void 0), e2([y({ json: { write: true } })], n6.prototype, "offline", void 0), e2([y({ type: i14, json: { write: true } })], n6.prototype, "viewing", void 0), n6 = p8 = e2([a("esri.webmap.ApplicationProperties")], n6);
var c12 = n6;

// node_modules/@arcgis/core/webdoc/support/SlideThumbnail.js
var t4;
var p9 = t4 = class extends l {
  constructor() {
    super(...arguments), this.url = "";
  }
  destroy() {
    this.url = "";
  }
  clone() {
    return new t4({ url: this.url });
  }
};
e2([y({ type: String, json: { write: { isRequired: true } } })], p9.prototype, "url", void 0), p9 = t4 = e2([a("esri.webdoc.support.SlideThumbnail")], p9);

// node_modules/@arcgis/core/webmap/Bookmark.js
var f4;
var j4 = f4 = class extends s5(l) {
  constructor(t5) {
    super(t5), this.name = null, this.thumbnail = new p9(), this.timeExtent = null;
  }
  castThumbnail(t5) {
    return "string" == typeof t5 ? new p9({ url: t5 }) : b(p9, t5);
  }
  set viewpoint(t5) {
    const { targetGeometry: e4, scale: o5 } = t5;
    r(e4) && "point" === e4.type && t(o5) && s.getLogger(this.declaredClass).warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.", t5), this._set("viewpoint", t5);
  }
  readViewpoint(t5, e4) {
    const { extent: r4, viewpoint: i15 } = e4;
    return u2.fromJSON(i15 || { targetGeometry: r4 });
  }
  writeViewpoint(t5, e4, o5, i15) {
    if (!t5)
      return;
    const { targetGeometry: s12 } = t5;
    if (r(s12) && "extent" !== s12.type) {
      const t6 = "Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";
      (i15 == null ? void 0 : i15.messages) ? i15.messages.push(new s2("property:unsupported", t6)) : s.getLogger(this.declaredClass).error(t6);
    } else
      r(s12) && (e4.extent = s12.toJSON()), e4[o5] = t5.toJSON();
  }
  clone() {
    return new f4(p({ name: this.name, thumbnail: this.thumbnail, timeExtent: this.timeExtent, viewpoint: this.viewpoint }));
  }
};
e2([y({ type: String, nonNullable: true, json: { write: { isRequired: true } } })], j4.prototype, "name", void 0), e2([y({ type: p9, json: { write: { overridePolicy: (t5) => ({ enabled: !(!t5 || !t5.url) }) } } })], j4.prototype, "thumbnail", void 0), e2([s3("thumbnail")], j4.prototype, "castThumbnail", null), e2([y({ type: T3, json: { write: true } })], j4.prototype, "timeExtent", void 0), e2([y({ type: u2, nonNullable: true, json: { write: true } })], j4.prototype, "viewpoint", null), e2([o("viewpoint", ["extent", "viewpoint"])], j4.prototype, "readViewpoint", null), e2([r2("viewpoint")], j4.prototype, "writeViewpoint", null), j4 = f4 = e2([a("esri.webmap.Bookmark")], j4);
var b5 = j4;

// node_modules/@arcgis/core/webmap/InitialViewProperties.js
var c13;
var l5 = c13 = class extends v {
  constructor(o5) {
    super(o5), this.background = null, this.rangeInfo = null, this.spatialReference = null, this.viewpoint = null;
  }
  clone() {
    return new c13(p({ background: this.background, rangeInfo: this.rangeInfo, spatialReference: this.spatialReference, viewpoint: this.viewpoint }));
  }
};
e2([y({ type: m3 })], l5.prototype, "background", void 0), e2([y({ type: c7 })], l5.prototype, "rangeInfo", void 0), e2([y({ type: f })], l5.prototype, "spatialReference", void 0), e2([y({ type: u2 })], l5.prototype, "viewpoint", void 0), l5 = c13 = e2([a("esri.webmap.InitialViewProperties")], l5);
var m5 = l5;

// node_modules/@arcgis/core/webmap/Version.js
var s11 = class extends r3 {
  constructor(r4, s12) {
    super(r4, s12, "webmap");
  }
};

// node_modules/@arcgis/core/WebMap.js
var re = new s11(2, 27);
var ie = "Web Map";
var oe = j.ofType(b5);
var ae = j.ofType(b3);
var se = /* @__PURE__ */ new Map();
se.set("image/jpeg", "jpeg"), se.set("image/jpg", "jpg"), se.set("image/png", "png"), se.set("image/gif", "gif");
var ne = "ArcGIS Pro";
var le = u.JSAPI;
var pe = "CollectorDisabled";
var me = "Collector";
var ue = "Data Editing";
var he = "OfflineDisabled";
var ce = "Offline";
var de = "Workforce Project";
var ye = "Workforce Worker";
var we = "Workforce Dispatcher";
var ge = "Offline Map Areas";
var fe = "FieldMapsDisabled";
var be = u.DEVELOPER_BASEMAP;
var _e = "UtilityNetwork";
var ve = ["NatGeo_World_Map", "Ocean_Basemap", "USA_Topo_Maps", "World_Imagery", "World_Street_Map", "World_Terrain_Base", "World_Topo_Map", "World_Hillshade", "Canvas/World_Light_Gray_Base", "Canvas/World_Light_Gray_Reference", "Canvas/World_Dark_Gray_Base", "Canvas/World_Dark_Gray_Reference", "Ocean/World_Ocean_Base", "Ocean/World_Ocean_Reference", "Reference/World_Boundaries_and_Places", "Reference/World_Reference_Overlay", "Reference/World_Transportation"].map((e4) => e4.toLowerCase());
var Ae = class extends O(m2.LoadableMixin(m(L3))) {
  constructor(e4) {
    super(e4), this._isAuthoringAppSetByUser = false, this._isAuthoringAppVersionSetByUser = false, this._thumbnailFilename = null, this._updateFromPromise = null, this._resourceReferences = { portalItem: null, paths: [] }, this.applicationProperties = null, this.bookmarks = new oe(), this.floorInfo = null, this.geotriggersInfo = null, this.initialViewProperties = new m5(), this.portalItem = null, this.presentation = null, this.sourceVersion = null, this.widgets = null, this.utilityNetworks = null, this.authoringApp = this.authoringAppVersion = null, this._isAuthoringAppSetByUser = this._isAuthoringAppVersionSetByUser = false;
  }
  destroy() {
    const e4 = this.portalItem;
    this.portalItem = null, e4 == null ? void 0 : e4.destroy();
  }
  initialize() {
    if (this.when().catch((e4) => {
      s.getLogger(this.declaredClass).error("#load()", "Failed to load web map", e4);
    }), this.resourceInfo) {
      let t5;
      try {
        t5 = this._validateJSON(this.resourceInfo);
      } catch (e4) {
        return void this.addResolvingPromise(Promise.reject(e4));
      }
      this.read(t5);
    }
  }
  set authoringApp(e4) {
    this._isAuthoringAppSetByUser = true, this._set("authoringApp", e4);
  }
  writeAuthoringApp(e4, t5) {
    e4 && this._isAuthoringAppSetByUser ? t5.authoringApp = e4 : t5.authoringApp = le;
  }
  set authoringAppVersion(e4) {
    this._isAuthoringAppVersionSetByUser = true, this._set("authoringAppVersion", e4);
  }
  writeAuthoringAppVersion(e4, r4) {
    e4 && this._isAuthoringAppVersionSetByUser ? r4.authoringAppVersion = e4 : r4.authoringAppVersion = a2;
  }
  readInitialViewProperties(e4, t5) {
    var _a;
    const r4 = new m5();
    t5.background && (r4.background = m3.fromJSON(t5.background));
    const o5 = (_a = t5.initialState) == null ? void 0 : _a.viewpoint;
    if (o5) {
      if (o5.rotation) {
        s11.parse(t5.version || "", "webmap").lessThan(2, 20) && t5.authoringApp === ne && (o5.rotation *= -1);
      }
      r4.viewpoint = u2.fromJSON(o5);
    }
    return t5.mapRangeInfo && (r4.rangeInfo = c7.fromJSON(t5.mapRangeInfo)), t5.spatialReference && (r4.spatialReference = f.fromJSON(t5.spatialReference)), r4;
  }
  writeInitialViewProperties(e4, t5, r4, i15) {
    if (!e4)
      return;
    const o5 = e4.background;
    o5 && o5.color && (t5.background = o5.write({}, i15)), e4.viewpoint && (t5.initialState = { viewpoint: e4.viewpoint.write({}, i15) }), e4.rangeInfo && (t5.mapRangeInfo = e4.rangeInfo.toJSON(i15)), e4.spatialReference && (t5.spatialReference = e4.spatialReference.write({}, i15));
  }
  writeLayers(e4, t5, r4, i15) {
    t5[r4] = this._writeLayers(e4, i15, "operational-layers");
  }
  readSourceVersion(e4, t5) {
    const [r4, i15] = t5.version.split(".");
    return new s11(parseInt(r4, 10), parseInt(i15, 10));
  }
  writeSourceVersion(e4, t5, r4) {
    t5[r4] = `${re.major}.${re.minor}`;
  }
  writeTables(e4, t5, r4, i15) {
    const o5 = this._writeLayers(e4, i15, "tables");
    o5.length && (t5[r4] = o5);
  }
  get thumbnailUrl() {
    return this.portalItem && this.portalItem.thumbnailUrl || null;
  }
  set thumbnailUrl(e4) {
    e4 ? (this._override("thumbnailUrl", e4), this._thumbnailFilename = this._generateCustomThumbnailFilename(e4)) : this._clearThumbnailOverride();
  }
  load(e4) {
    return this.addResolvingPromise(this._loadFromSource()), Promise.resolve(this);
  }
  loadAll() {
    return l2(this, (e4) => {
      e4(this.ground, this.basemap, this.layers, this.tables);
    });
  }
  read(e4, t5) {
    t5 = { ...t5, origin: "web-map" };
    const r4 = this._getAuthoringPropsState();
    d(this, e4, (t6) => super.read(e4, t6), t5), this._restoreAuthoringPropsFromState(r4);
  }
  write(e4, t5) {
    if ("loaded" !== this.loadStatus) {
      const e5 = new s2("webmap:not-loaded", "Web map must be loaded before it can be serialized");
      throw s.getLogger(this.declaredClass).error("#toJSON()", "Web map must be loaded before it can be serialized", this.loadError || this.loadStatus), e5;
    }
    return this._removeDanglingLayerRefs(), t5 = { ...t5, origin: "web-map", restrictedWebMapWriting: true, webmap: this }, super.write(e4, t5);
  }
  async save(e4) {
    e4 = e4 || {}, this._validateItem();
    const t5 = import("./saveUtils-S573AB6N.js");
    await this._updateFromPromise, await this.load(), await this._loadLayerContainers(), await this._beforeSave(), await this._validateMap();
    const r4 = this.portalItem, i15 = L(r4.itemUrl), o5 = { origin: "web-map", messages: [], writtenProperties: [], url: i15, portal: r4.portal || b2.getDefault(), portalItem: r4, verifyItemRelativeUrls: i15 ? { rootPath: i15.path, writtenUrls: [] } : null, blockedRelativeUrls: [], resources: { toAdd: [], toUpdate: [], toKeep: [], pendingOperations: [] } }, a13 = this.write({}, o5);
    return await Promise.all(o5.resources.pendingOperations), this._validateJSONForWriting(o5, e4), await this._updateItemProperties(r4), await this._updateItem(r4, a13, o5), await Promise.all([this._updateItemThumbnail(), t5.then(({ saveResources: e5 }) => e5(this._resourceReferences, o5, null))]), r4;
  }
  async saveAs(e4, t5) {
    t5 = t5 || {};
    const r4 = this._getPortalItem(e4), i15 = import("./saveUtils-S573AB6N.js");
    await this._updateFromPromise, await this.load(), await this._loadLayerContainers(), await this._beforeSave(), await this._validateMap();
    const o5 = { origin: "web-map", messages: [], writtenProperties: [], url: null, portal: r4.portal, portalItem: r4, blockedRelativeUrls: [], resources: { toAdd: [], toUpdate: [], toKeep: [], pendingOperations: [] } }, a13 = this.write({}, o5);
    await Promise.all(o5.resources.pendingOperations), this._validateJSONForWriting(o5, t5), await this._updateItemPropertiesForSaveAs(r4);
    const s12 = this._getThumbnailState();
    return await this._createItem(r4, a13, o5, t5) && (this._resourceReferences.portalItem = r4), this._restoreThumbnailFromState(s12), await Promise.all([this._updateItemThumbnail(), i15.then(({ saveResources: e5 }) => e5(this._resourceReferences, o5, null))]), r4;
  }
  async updateFrom(e4, t5) {
    const r4 = this._updateFromInternal(e4, t5);
    this._updateFromPromise = r4, await r4;
    r4 === this._updateFromPromise && (this._updateFromPromise = null);
  }
  getLayerJSONFromResourceInfo(e4) {
    var _a, _b, _c, _d;
    const t5 = this.resourceInfo;
    return this._collectAllLayersJSON([...((_a = t5 == null ? void 0 : t5.baseMap) == null ? void 0 : _a.baseMapLayers) || [], ...(t5 == null ? void 0 : t5.operationalLayers) || [], ...((_d = (_c = (_b = this.basemap) == null ? void 0 : _b.resourceInfo) == null ? void 0 : _c.data) == null ? void 0 : _d.baseMapLayers) || []]).find((t6) => t6.id === e4.id);
  }
  _collectAllLayersJSON(e4) {
    return e4.reduce((e5, t5) => (e5.push(t5), "GroupLayer" === t5.layerType && (e5 = e5.concat(this._collectAllLayersJSON(t5.layers || []))), e5), []);
  }
  _writeLayers(e4, t5, r4) {
    t5 = { ...t5, layerContainerType: r4 };
    return e4.map((e5) => e(y3(e5, "tables" === r4 ? null : this.getLayerJSONFromResourceInfo(e5), t5))).filter(Boolean).toArray();
  }
  _loadFromSource() {
    return this.resourceInfo ? this._loadFromJSON(this.resourceInfo, { origin: "web-map" }) : this.portalItem && this.portalItem.id ? this._loadFromItem(this.portalItem) : Promise.resolve();
  }
  async _loadFromItem(e4) {
    if (await e4.load().catch((e5) => {
      throw new s2("webmap:load-portal-item", "Failed to load portal item", { error: e5 });
    }), "Web Map" !== e4.type)
      throw new s2("webmap:invalid-portal-item", `Invalid portal item type '${e4.type}', expected 'Web Map'`, { type: e4.type });
    const t5 = await e4.fetchData();
    this.resourceInfo = t5;
    const r4 = { origin: "web-map", url: L(e4.itemUrl), portal: e4.portal || b2.getDefault(), portalItem: e4, readResourcePaths: [] };
    return await this._readAndLoadFromJSON(t5, r4), this._resourceReferences = { portalItem: e4, paths: r4.readResourcePaths ?? [] }, this._computeInitialViewpoint();
  }
  _readAndLoadFromJSON(e4, t5) {
    const r4 = this._validateJSON(e4);
    return this.read(r4, t5), this._loadFromJSON(r4, t5);
  }
  _validateJSON(e4) {
    const t5 = s11.parse(e4.version || "", "webmap");
    return re.validate(t5), e4.version = `${t5.major}.${t5.minor}`, e4;
  }
  _loadFromJSON(e4, t5) {
    const r4 = { context: { ...t5, layerContainerType: "operational-layers" } };
    return this.portalItem && (r4.context.portal = this.portalItem.portal || b2.getDefault()), import("./layersCreator-IBKFQUIV.js").then(({ populateOperationalLayers: t6 }) => {
      const i15 = [], o5 = e4.operationalLayers;
      o5 && o5.length && i15.push(t6(this.layers, o5, r4));
      const a13 = { ...r4, context: { ...r4.context, layerContainerType: "tables" }, defaultLayerType: "ArcGISFeatureLayer" }, s12 = e4.tables;
      return s12 && s12.length && i15.push(t6(this.tables, s12, a13)), E(i15).then(() => {
      });
    });
  }
  async _computeInitialViewpoint() {
    var _a;
    let e4 = this.initialViewProperties;
    const t5 = (_a = e4 == null ? void 0 : e4.viewpoint) == null ? void 0 : _a.targetGeometry;
    if (t5)
      return;
    const r4 = await this._getExtentFromItem();
    r4 && (e4 = e4 ? e4.clone() : new m5(), e4.viewpoint = new u2(), e4.viewpoint.targetGeometry = r4, this.initialViewProperties = e4);
  }
  async _getExtentFromItem() {
    var _a, _b;
    const e4 = (_a = this.initialViewProperties) == null ? void 0 : _a.spatialReference, t5 = (_b = this.portalItem) == null ? void 0 : _b.extent;
    if (e4 && t5) {
      if (e4.isWGS84)
        return t5.clone();
      if (e4.isWebMercator)
        return R(t5);
      return (await import("./geometryServiceUtils-O4ZLTBWZ.js")).getGeometryServiceURL(this.portalItem).then((r4) => {
        const i15 = new a3();
        return i15.geometries = [t5], i15.outSpatialReference = e4, n2(r4, i15);
      }).then((e5) => e5[0]).catch((e5) => (s.getLogger(this.declaredClass).error("Error projecting item's extent:", e5), null));
    }
    return null;
  }
  _removeDanglingLayerRefs() {
    const e4 = this.applicationProperties, t5 = e4 && e4.viewing && e4.viewing.search, r4 = (e5) => this.allLayers.some((t6) => t6.id === e5);
    t5 && t5.layers && (t5.layers = t5.layers.filter((e5) => r4(e5.id))), t5 && t5.tables && (t5.tables = t5.tables.filter((e5) => this.tables.some((t6) => t6.id === e5.id)));
    const i15 = e4 && e4.editing && e4.editing.locationTracking;
    i15 && i15.info && !r4(i15.info.layerId) && (e4.editing = null);
    const o5 = this.presentation && this.presentation.slides;
    o5 && o5.forEach((e5) => {
      e5.visibleLayers && (e5.visibleLayers = e5.visibleLayers.filter((e6) => r4(e6.id)));
    });
  }
  async _validateMap() {
    var _a;
    if (!((_a = this.basemap) == null ? void 0 : _a.baseLayers.length))
      throw new s2("webmap:save", "Map does not have a valid basemap with a base layer.");
    let e4 = null;
    if (await j3(() => {
      const t5 = h(this.initialViewProperties, this.basemap);
      return e4 = t5.spatialReference, !t5.updating;
    }), !E2(e4, this.initialViewProperties.spatialReference))
      throw new s2("webmap:save", "The spatial reference of the basemap is not compatible with the one from the map.", { expected: this.initialViewProperties.spatialReference, actual: e4 });
  }
  _validateItem() {
    if (!this.portalItem)
      throw s.getLogger(this.declaredClass).error("save: requires the portalItem property to be set"), new s2("webmap:portal-item-not-set", "Portal item to save to has not been set on the WebMap");
    this._validateItemType(this.portalItem);
  }
  _validateItemType(e4) {
    if (e4.type !== ie)
      throw new s2("webmap:portal-item-wrong-type", `Portal item needs to have type "${ie}"`);
  }
  _loadLayerContainers() {
    const e4 = [];
    return this.basemap && e4.push(this.basemap.load()), this.ground && e4.push(this.ground.load()), E(e4).then(() => {
    });
  }
  async _beforeSave() {
    const e4 = [];
    for (const t5 of this.allLayers)
      if ("beforeSave" in t5 && "function" == typeof t5.beforeSave) {
        const r4 = t5.beforeSave();
        r4 && e4.push(r4);
      }
    await E(e4);
  }
  _loadAllLayers() {
    const e4 = this._getAllLayersAndTables().map((e5) => e5.load());
    return E(e4).then(() => {
    });
  }
  _getAllLayersAndTables() {
    return this.allLayers.concat(this.allTables);
  }
  _validateJSONForWriting(e4, t5) {
    let r4 = (e4.messages ? e4.messages : []).filter((e5) => "error" === e5.type).map((e5) => new s2(e5.name, e5.message, e5.details));
    if (e4.blockedRelativeUrls && (r4 = r4.concat(e4.blockedRelativeUrls.map((e5) => new s2("url:unsupported", `Relative url '${e5}' is not supported in Web Map`)))), t5.ignoreUnsupported && (r4 = r4.filter((e5) => "layer:unsupported" !== e5.name && "symbol:unsupported" !== e5.name && "symbol-layer:unsupported" !== e5.name && "property:unsupported" !== e5.name && "url:unsupported" !== e5.name)), r4.length > 0)
      throw new s2("webmap:save", "Failed to save webmap due to unsupported or invalid content. See 'details.errors' for more detailed information", { errors: r4 });
  }
  async _updateItemProperties(e4) {
    e4.extent = await this._getWGS84Extent(this.initialViewProperties.viewpoint.targetGeometry), await this._updateTypeKeywords(e4);
  }
  async _updateItemPropertiesForSaveAs(e4) {
    c(e4, pe), c(e4, fe), c(e4, u.METADATA), c(e4, he), c(e4, ge), c(e4, we), c(e4, de), c(e4, ye), await this._updateItemProperties(e4);
  }
  async _getWGS84Extent(e4) {
    const t5 = e4.clone().normalize();
    let r4;
    if (t5.length > 1)
      for (const i15 of t5)
        r4 ? i15.width > r4.width && (r4 = i15) : r4 = i15;
    else
      r4 = t5[0];
    return this._projectToWGS84(r4);
  }
  async _projectToWGS84(e4) {
    const t5 = e4.spatialReference;
    if (t5.isWGS84)
      return e4.clone();
    if (t5.isWebMercator)
      return j2(e4);
    const r4 = await import("./geometryServiceUtils-O4ZLTBWZ.js"), i15 = await r4.getGeometryServiceURL(this.portalItem), o5 = new a3();
    o5.geometries = [e4], o5.outSpatialReference = f.WGS84;
    return (await n2(i15, o5))[0];
  }
  async _updateTypeKeywords(e4) {
    i3(e4, le), await this._loadAllLayers(), this._evalCollectorKeyword(e4), this._evalDataEditingKeyword(e4), this._evalOfflineKeyword(e4), this._evalDeveloperBasemapKeyword(e4), this._evalUtilityNetworkKeyword(e4), e4.typeKeywords && (e4.typeKeywords = e4.typeKeywords.filter((e5, t5, r4) => r4.indexOf(e5) === t5));
  }
  _evalCollectorKeyword(e4) {
    s6(e4, pe) || s6(e4, de) || s6(e4, ye) || s6(e4, we) || !this._hasEditableFeatureLayer() ? c(e4, me) : i3(e4, me);
  }
  _evalDataEditingKeyword(e4) {
    this._hasEditableFeatureLayer() ? i3(e4, ue) : c(e4, ue);
  }
  _evalOfflineKeyword(e4) {
    !s6(e4, he) && this._isOfflineCapableMap() ? i3(e4, ce) : c(e4, ce);
  }
  _evalDeveloperBasemapKeyword(e4) {
    v3(this.basemap) ? i3(e4, be) : c(e4, be);
  }
  _evalUtilityNetworkKeyword(e4) {
    var _a;
    ((_a = this.utilityNetworks) == null ? void 0 : _a.length) ? i3(e4, _e) : c(e4, _e);
  }
  _hasEditableFeatureLayer() {
    return this._getAllLayersAndTables().some((e4) => e4.loaded && y2(e4) && e4.capabilities.operations.supportsEditing && e4.editingEnabled);
  }
  _isOfflineCapableMap() {
    return this._getAllLayersAndTables().filter((e4) => "group" !== e4.type).every((e4) => e4.loaded && this._isOfflineCapableLayer(e4));
  }
  _isFeatureCollectionLike(e4) {
    return f2(e4) || "map-notes" === e4.type || "route" === e4.type;
  }
  _isOfflineCapableLayer(e4) {
    return y2(e4) && e4.capabilities.operations.supportsSync || this._isFeatureCollectionLike(e4) && !e4.portalItem || ("tile" === e4.type || "vector-tile" === e4.type) && (e4.capabilities.operations.supportsExportTiles || this._isExportableAGOLTileLayer(e4) || S2(e4)) && e4.spatialReference.equals(this.initialViewProperties.spatialReference);
  }
  _isExportableAGOLTileLayer(e4) {
    return "tile" === e4.type && (L2(e4.url) && ve.some((t5) => {
      var _a;
      return (_a = e4.url) == null ? void 0 : _a.toLowerCase().includes("/" + t5 + "/");
    }));
  }
  async _updateItem(e4, t5, r4) {
    await e4.update({ data: t5 }), this._syncUpInstanceWithItem(e4, t5, r4);
  }
  async _createItem(e4, t5, r4, i15) {
    const o5 = this.portalItem, s12 = { item: o5, authenticated: !(!(o5 == null ? void 0 : o5.id) || !o5.portal.user) }, n7 = e4.portal;
    await n7.signIn();
    const { copyAllowed: l6, itemReloaded: p10 } = await this._isCopyAllowed(s12, n7);
    if (s12.authenticated || (s12.authenticated = p10), !l6)
      throw new s2("webmap:save-as-copy-not-allowed", "Owner of this map does not allow others to save a copy");
    const m6 = await this._initializeNewItem(e4, s12, t5, i15);
    return this.portalItem = e4, this._syncUpInstanceWithItem(e4, t5, r4), m6;
  }
  async _isCopyAllowed(e4, t5) {
    var _a;
    const { item: r4, authenticated: i15 } = e4;
    return (r4 == null ? void 0 : r4.id) && ((_a = r4.typeKeywords) == null ? void 0 : _a.includes("useOnly")) ? r4.portal.portalHostname !== t5.portalHostname ? { copyAllowed: false, itemReloaded: false } : (i15 || await r4.reload(), { copyAllowed: "admin" === r4.itemControl || "update" === r4.itemControl, itemReloaded: true }) : { copyAllowed: true, itemReloaded: false };
  }
  async _initializeNewItem(e4, t5, r4, i15) {
    var _a;
    const o5 = e4.portal, { item: a13, authenticated: s12 } = t5, { folder: n7, copyAllResources: l6 } = i15;
    let p10 = false;
    if (l6 && (a13 == null ? void 0 : a13.id) && T2(a13.portal.url, o5.url) && (s12 || await a13.reload(), a13.isOrgItem)) {
      const { total: e5 } = await a13.fetchResources();
      p10 = !!e5;
    }
    if (p10) {
      const t6 = await a13.copy({ copyResources: "all", folder: n7 });
      e4.id = t6.id, e4.portal = t6.portal;
      const i16 = e4.toJSON();
      await e4.load(), e4.read(i16), await e4.update({ data: r4 });
    } else
      await ((_a = o5.user) == null ? void 0 : _a.addItem({ item: e4, folder: n7, data: r4 }));
    return p10;
  }
  _syncUpInstanceWithItem(e4, t5, r4) {
    S.prototype.read.call(this, { version: t5.version, authoringApp: t5.authoringApp, authoringAppVersion: t5.authoringAppVersion }, { origin: "web-map", ignoreDefaults: true, url: e4.itemUrl && L(e4.itemUrl) }), i4(r4), this.resourceInfo = t5;
  }
  async _updateItemThumbnail() {
    var _a;
    this.thumbnailUrl && this._isOverridden("thumbnailUrl") && (await ((_a = this.portalItem) == null ? void 0 : _a.updateThumbnail({ thumbnail: this.thumbnailUrl, filename: this._thumbnailFilename })), this._clearThumbnailOverride());
  }
  _getPortalItem(e4) {
    let t5 = x.from(e4);
    return t5.id && (t5 = t5.clone(), t5.id = null), t5.type || (t5.type = ie), t5.portal || (t5.portal = b2.getDefault()), this._validateItemType(t5), t5;
  }
  async _updateFromInternal(e4, t5) {
    if (t5 = t5 || {}, await j3(() => e4.ready), this._updateInitialViewProperties(e4, t5), e4.map === this)
      for (const r4 of e4.allLayerViews)
        for (const e5 of ["visible", "featureEffect"])
          e5 in r4 && e5 in r4.layer && r4._isOverridden(e5) && (r4.layer[e5] = r4[e5]);
    await this._updateThumbnailUrl(e4, t5);
  }
  _updateInitialViewProperties(e4, t5) {
    var _a, _b;
    if (t5.backgroundExcluded || (this.initialViewProperties.background = (_a = e4.background) == null ? void 0 : _a.clone()), this.initialViewProperties.spatialReference = (_b = e4.spatialReference) == null ? void 0 : _b.clone(), t5.viewpointExcluded || (this.initialViewProperties.viewpoint = new u2({ rotation: e4.rotation, scale: t5.scalePreserved ? e4.scale : null, targetGeometry: this._getViewExtent(e4) })), !t5.widgetsExcluded)
      for (const r4 of e4.persistableViewModels)
        r4.updateWebDocument(this);
  }
  _getViewExtent(e4) {
    const t5 = e4.center.clone().normalize(), r4 = e4.extent.clone(), i15 = r4.width / 2;
    return r4.xmin = t5.x - i15, r4.xmax = t5.x + i15, r4;
  }
  async _updateThumbnailUrl(e4, t5) {
    if (t5.thumbnailExcluded)
      return;
    const r4 = i11(e4, t5.thumbnailSize), i15 = await e4.takeScreenshot({ format: "png", width: r4.width, height: r4.height });
    this._setAutoGeneratedThumbnail(i15.dataUrl);
  }
  _setAutoGeneratedThumbnail(e4) {
    this.thumbnailUrl = e4, this._thumbnailFilename = null;
  }
  _clearThumbnailOverride() {
    this._clearOverride("thumbnailUrl"), this.clear("thumbnailUrl", "user"), this._thumbnailFilename = null;
  }
  _generateCustomThumbnailFilename(e4) {
    if (tt(e4)) {
      const t5 = ot(e4), r4 = t5 && t5.mediaType, i15 = r4 && se.get(r4.toLowerCase()) || null, o5 = `thumbnail${Date.now()}`;
      return i15 ? `${o5}.${i15}` : o5;
    }
    return null;
  }
  _getThumbnailState() {
    let e4 = this.thumbnailUrl;
    return e4 && (e4 = this._isOverridden("thumbnailUrl") ? e4 : kt(e4, "w", "8192")), { thumbnailUrl: e4, filename: this._thumbnailFilename };
  }
  _restoreThumbnailFromState(e4) {
    this.thumbnailUrl = e4.thumbnailUrl, this._thumbnailFilename = e4.filename;
  }
  _getAuthoringPropsState() {
    return { authoringApp: this.authoringApp, authoringAppVersion: this.authoringAppVersion, isAuthoringAppSetByUser: this._isAuthoringAppSetByUser, isAuthoringAppVersionSetByUser: this._isAuthoringAppVersionSetByUser };
  }
  _restoreAuthoringPropsFromState(e4) {
    e4.isAuthoringAppSetByUser ? this.authoringApp = e4.authoringApp : this._isAuthoringAppSetByUser = false, e4.isAuthoringAppVersionSetByUser ? this.authoringAppVersion = e4.authoringAppVersion : this._isAuthoringAppVersionSetByUser = false;
  }
  static fromJSON(e4) {
    const t5 = e4;
    if (!t5)
      throw new s2("webmap:empty-resource", "Expected a JSON resource but got nothing");
    return new this({ resourceInfo: t5 });
  }
};
Ae.VERSION = re, e2([y({ type: c12, json: { write: true } })], Ae.prototype, "applicationProperties", void 0), e2([y({ type: String, json: { write: { allowNull: true, ignoreOrigin: true } } })], Ae.prototype, "authoringApp", null), e2([r2("authoringApp")], Ae.prototype, "writeAuthoringApp", null), e2([y({ type: String, json: { write: { allowNull: true, ignoreOrigin: true } } })], Ae.prototype, "authoringAppVersion", null), e2([r2("authoringAppVersion")], Ae.prototype, "writeAuthoringAppVersion", null), e2([y({ json: { read: { source: "baseMap" }, write: { target: "baseMap" } } })], Ae.prototype, "basemap", void 0), e2([y({ type: oe, json: { write: { overridePolicy: (e4) => ({ enabled: !!(e4 && e4.length > 0), ignoreOrigin: true }) } } })], Ae.prototype, "bookmarks", void 0), e2([y({ type: l3, json: { read: { source: "mapFloorInfo" }, write: { target: "mapFloorInfo" } } })], Ae.prototype, "floorInfo", void 0), e2([y({ type: i10, json: { write: true } })], Ae.prototype, "geotriggersInfo", void 0), e2([y({ type: m5, nonNullable: true, json: { read: { source: ["background", "initialState.viewpoint", "mapRangeInfo", "spatialReference"] }, write: { ignoreOrigin: true, target: { background: { type: m3 }, "initialState.viewpoint": { type: u2 }, mapRangeInfo: { type: c7 }, spatialReference: { type: f } } } } })], Ae.prototype, "initialViewProperties", void 0), e2([o("initialViewProperties")], Ae.prototype, "readInitialViewProperties", null), e2([r2("initialViewProperties")], Ae.prototype, "writeInitialViewProperties", null), e2([y({ json: { read: false, write: { target: "operationalLayers", ignoreOrigin: true } } })], Ae.prototype, "layers", void 0), e2([r2("layers")], Ae.prototype, "writeLayers", null), e2([y({ type: x })], Ae.prototype, "portalItem", void 0), e2([y({ json: { write: true } })], Ae.prototype, "presentation", void 0), e2([y()], Ae.prototype, "resourceInfo", void 0), e2([y({ readOnly: true, type: s11, json: { read: { source: "version" }, write: { allowNull: true, ignoreOrigin: true, target: "version", isRequired: true } } })], Ae.prototype, "sourceVersion", void 0), e2([o("sourceVersion")], Ae.prototype, "readSourceVersion", null), e2([r2("sourceVersion")], Ae.prototype, "writeSourceVersion", null), e2([y({ json: { read: false, write: { ignoreOrigin: true } } })], Ae.prototype, "tables", void 0), e2([r2("tables")], Ae.prototype, "writeTables", null), e2([y()], Ae.prototype, "thumbnailUrl", null), e2([y({ type: n3, json: { write: true } })], Ae.prototype, "widgets", void 0), e2([y({ type: ae, json: { read: true, write: true } })], Ae.prototype, "utilityNetworks", void 0), Ae = e2([a("esri.WebMap")], Ae);
var Ie = Ae;
export {
  Ie as default
};
//# sourceMappingURL=@arcgis_core_WebMap__js.js.map
