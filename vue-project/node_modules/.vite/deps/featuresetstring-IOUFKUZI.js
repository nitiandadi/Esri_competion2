import {
  T
} from "./chunk-U6WNWLXN.js";
import {
  B,
  Ce,
  G,
  Ie,
  Oe,
  Z,
  Ze,
  _e,
  b,
  de,
  ie,
  le,
  pe,
  re,
  we,
  ye,
  z
} from "./chunk-ATIGRWFV.js";
import "./chunk-VQUDNY75.js";
import "./chunk-U52YMSUR.js";
import {
  e,
  t
} from "./chunk-QDIJO3T2.js";
import "./chunk-G3ZCYHOR.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-FY3NCRRH.js";
import "./chunk-CIPSOFMY.js";
import "./chunk-M73MMEC7.js";
import "./chunk-A5CTLI5A.js";
import "./chunk-WUBKNERF.js";
import "./chunk-GLDJLPWH.js";
import "./chunk-GMLVDTS4.js";
import "./chunk-G7CHVXDR.js";
import "./chunk-OAZLVZFS.js";
import "./chunk-CPSZPA6H.js";
import "./chunk-Y54MR3BP.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-JY6H6KI3.js";
import "./chunk-TTCQP5LX.js";
import "./chunk-C2WY74GI.js";
import "./chunk-MCOYI7PX.js";
import "./chunk-EL4OGCJC.js";
import "./chunk-XPATKIHO.js";
import "./chunk-MKHZ5X6F.js";
import "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/arcade/functions/featuresetstring.js
function A(a, e2) {
  return a && a.domain ? "coded-value" === a.domain.type || "codedValue" === a.domain.type ? T.convertObjectToArcadeDictionary({ type: "codedValue", name: a.domain.name, dataType: b[a.field.type], codedValues: a.domain.codedValues.map((n) => ({ name: n.name, code: n.code })) }, Ze(e2)) : T.convertObjectToArcadeDictionary({ type: "range", name: a.domain.name, dataType: b[a.field.type], min: a.domain.min, max: a.domain.max }, Ze(e2)) : null;
}
function b2(h) {
  "async" === h.mode && (h.functions.domain = function(n, u) {
    return h.standardFunctionAsync(n, u, async (m, f, l) => {
      if (B(l, 2, 3, n, u), z(l[0])) {
        return A(Ie(l[0], re(l[1]), void 0 === l[2] ? void 0 : le(l[2])), n);
      }
      if (G(l[0])) {
        await l[0]._ensureLoaded();
        return A(pe(re(l[1]), l[0], null, void 0 === l[2] ? void 0 : le(l[2])), n);
      }
      throw new t(n, e.InvalidParameter, u);
    });
  }, h.functions.subtypes = function(o, i) {
    return h.standardFunctionAsync(o, i, async (s, d, f) => {
      if (B(f, 1, 1, o, i), z(f[0])) {
        const a = Ce(f[0]);
        return a ? T.convertObjectToArcadeDictionary(a, Ze(o)) : null;
      }
      if (G(f[0])) {
        await f[0]._ensureLoaded();
        const a = f[0].subtypes();
        return a ? T.convertObjectToArcadeDictionary(a, Ze(o)) : null;
      }
      throw new t(o, e.InvalidParameter, i);
    });
  }, h.functions.domainname = function(n, o) {
    return h.standardFunctionAsync(n, o, async (u, m, y) => {
      if (B(y, 2, 4, n, o), z(y[0]))
        return we(y[0], re(y[1]), y[2], void 0 === y[3] ? void 0 : le(y[3]));
      if (G(y[0])) {
        await y[0]._ensureLoaded();
        const n2 = pe(re(y[1]), y[0], null, void 0 === y[3] ? void 0 : le(y[3]));
        return de(n2, y[2]);
      }
      throw new t(n, e.InvalidParameter, o);
    });
  }, h.signatures.push({ name: "domainname", min: 2, max: 4 }), h.functions.domaincode = function(n, o) {
    return h.standardFunctionAsync(n, o, async (u, m, f) => {
      if (B(f, 2, 4, n, o), z(f[0]))
        return Oe(f[0], re(f[1]), f[2], void 0 === f[3] ? void 0 : le(f[3]));
      if (G(f[0])) {
        await f[0]._ensureLoaded();
        const n2 = pe(re(f[1]), f[0], null, void 0 === f[3] ? void 0 : le(f[3]));
        return ye(n2, f[2]);
      }
      throw new t(n, e.InvalidParameter, o);
    });
  }, h.signatures.push({ name: "domaincode", min: 2, max: 4 })), h.functions.text = function(n, a) {
    return h.standardFunctionAsync(n, a, (e2, r, o) => {
      if (B(o, 1, 2, n, a), !G(o[0]))
        return ie(o[0], o[1]);
      {
        const n2 = Z(o[1], "");
        if ("" === n2)
          return o[0].castToText();
        if ("schema" === n2.toLowerCase())
          return o[0].convertToText("schema", e2.abortSignal);
        if ("featureset" === n2.toLowerCase())
          return o[0].convertToText("featureset", e2.abortSignal);
      }
    });
  }, h.functions.gdbversion = function(n, o) {
    return h.standardFunctionAsync(n, o, async (i, s, d) => {
      if (B(d, 1, 1, n, o), z(d[0]))
        return d[0].gdbVersion();
      if (G(d[0])) {
        return (await d[0].load()).gdbVersion;
      }
      throw new t(n, e.InvalidParameter, o);
    });
  }, h.functions.schema = function(o, i) {
    return h.standardFunctionAsync(o, i, async (s, d, u) => {
      if (B(u, 1, 1, o, i), G(u[0]))
        return await u[0].load(), T.convertObjectToArcadeDictionary(u[0].schema(), Ze(o));
      if (z(u[0])) {
        const a = _e(u[0]);
        return a ? T.convertObjectToArcadeDictionary(a, Ze(o)) : null;
      }
      throw new t(o, e.InvalidParameter, i);
    });
  };
}
export {
  b2 as registerFunctions
};
//# sourceMappingURL=featuresetstring-IOUFKUZI.js.map
