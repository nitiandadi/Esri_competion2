// node_modules/@arcgis/core/core/maybe.js
var n = null;
function r(n2) {
  return null != n2;
}
function t(n2) {
  return null == n2;
}
function o(t2, u) {
  return r(t2) ? u(t2) : n;
}
function e(n2) {
  return n2;
}
function c(n2, r2) {
  return i(n2, r2), n2;
}
function i(n2, r2) {
  if (t(n2))
    throw new Error(r2 ?? "value is None");
}
function l(n2, t2) {
  return r(n2) ? n2 : "function" == typeof t2 ? t2() : t2;
}
function s(n2, t2) {
  return r(n2) ? n2 : t2;
}
function a(n2) {
  return r(n2) && n2.destroy(), null;
}
function h(n2) {
  return r(n2) && n2.dispose(), null;
}
function p(n2) {
  return r(n2) && n2.remove(), null;
}
function w(n2) {
  return r(n2) && n2.abort(), null;
}
function y(n2) {
  return r(n2) && n2.release(), null;
}
function d(n2, t2, u) {
  return r(n2) && r(t2) ? r(u) ? u(n2, t2) : n2.equals(t2) : n2 === t2;
}
function v(n2) {
  return null;
}
function E(n2, r2) {
  const t2 = new Array();
  for (const u of n2)
    t2.push(g(u, null, r2));
  return t2;
}
function b(n2, r2) {
  for (const t2 of n2)
    o(t2, r2);
}
function g(n2, t2, u) {
  return r(n2) ? u(n2) : t2;
}
function q(n2) {
  return n2.filter((n3) => r(n3));
}
function x(n2, ...r2) {
  let t2 = n2;
  for (let u = 0; u < r2.length && t2; ++u)
    t2 = t2[r2[u]];
  return t2;
}
function N(n2) {
  return n2;
}

export {
  r,
  t,
  o,
  e,
  c,
  i,
  l,
  s,
  a,
  h,
  p,
  w,
  y,
  d,
  v,
  E,
  b,
  g,
  q,
  x,
  N
};
//# sourceMappingURL=chunk-HVCAHUYB.js.map
