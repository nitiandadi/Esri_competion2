import {
  D
} from "./chunk-JDKEJSLO.js";
import "./chunk-J5CNSFEW.js";
import "./chunk-F6PAWSTX.js";
import "./chunk-NBN7PDMJ.js";
import {
  e as e2
} from "./chunk-6CHYNNZQ.js";
import "./chunk-OFMRQG54.js";
import "./chunk-GR3QAE4S.js";
import "./chunk-XBPKFV6W.js";
import "./chunk-3H5NJQM5.js";
import "./chunk-T4KF4XXH.js";
import "./chunk-F7QXAEAV.js";
import "./chunk-VV2CU7S7.js";
import "./chunk-FYA3X5C5.js";
import "./chunk-DKDRIIV4.js";
import "./chunk-5SYMUP5B.js";
import "./chunk-R3MRUDAD.js";
import "./chunk-R6XKQWZ7.js";
import "./chunk-6SCM5LCL.js";
import "./chunk-63WRUMNA.js";
import "./chunk-O2JKCGK6.js";
import "./chunk-WAPZ634R.js";
import "./chunk-MSPZCZRZ.js";
import "./chunk-RURSJOSG.js";
import "./chunk-75NMPQ6B.js";
import "./chunk-GKD7ZY5C.js";
import "./chunk-5U6MVA3N.js";
import "./chunk-RRNRSHX3.js";
import "./chunk-IEBU4QQL.js";
import "./chunk-4M3AMTD4.js";
import "./chunk-V2OTMPXZ.js";
import "./chunk-5VDXKCKM.js";
import "./chunk-HNKLBBNC.js";
import "./chunk-D2UI2BQN.js";
import "./chunk-U3IHIDSP.js";
import "./chunk-34FJTA26.js";
import "./chunk-DUEDINK5.js";
import "./chunk-MZ267CZB.js";
import "./chunk-3DBV4JBL.js";
import "./chunk-JGIZLXNQ.js";
import "./chunk-NWZTRS6O.js";
import "./chunk-77E52HT5.js";
import "./chunk-26N6FACI.js";
import "./chunk-HBVUBDHI.js";
import "./chunk-6N2I7LNE.js";
import "./chunk-ZHIUMSNA.js";
import "./chunk-66ZWVXB2.js";
import "./chunk-E4ZXXRPV.js";
import "./chunk-AJY7W6KP.js";
import "./chunk-NCSDM2FH.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-L46P5ZGI.js";
import "./chunk-AOER6TTF.js";
import "./chunk-N5RJDK35.js";
import {
  x
} from "./chunk-QM63DB4O.js";
import "./chunk-4YJQ46TP.js";
import "./chunk-LC5BGIRA.js";
import "./chunk-ST7DNJJS.js";
import "./chunk-FNGJTVTP.js";
import "./chunk-VB6BMHUU.js";
import "./chunk-H66NMTBW.js";
import "./chunk-K7L4V6NL.js";
import "./chunk-UZL5FYFX.js";
import "./chunk-HM62IZSE.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-TEBHEW3L.js";
import "./chunk-L6EWR437.js";
import "./chunk-CVSP2FBZ.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-PELFA5QO.js";
import "./chunk-2CREJO6O.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-REIXEATJ.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-MYKXVBXI.js";
import "./chunk-JLHQIHZ7.js";
import "./chunk-4GJORDIY.js";
import {
  l
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-MS6YQPPG.js";
import "./chunk-CRF4O3Y3.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-KSENJC5Z.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-YZRPNTZZ.js";
import "./chunk-EVKJKYHI.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-YT74S35I.js";
import "./chunk-U5I7FQWJ.js";
import "./chunk-M3KO43BW.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-CNEENAOZ.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-SZO7ZKE4.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-UADQEL54.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-YHZVWABO.js";
import "./chunk-WATRS3LJ.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  r as r2,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import {
  s2 as s
} from "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  r,
  t
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/views/2d/layers/StreamLayerView2D.js
function u(e3, t2) {
  if (t(e3) && t(t2))
    return null;
  const r3 = {};
  return r(t2) && (r3.geometry = t2.toJSON()), r(e3) && (r3.where = e3), r3;
}
var m = class extends D {
  constructor() {
    super(...arguments), this._enabledEventTypes = /* @__PURE__ */ new Set(), this._isUserPaused = false, this.errorString = null, this.connectionStatus = "disconnected";
  }
  initialize() {
    this.addHandles([l(() => this.layer.customParameters, (e3) => this._proxy.updateCustomParameters(e3)), this.layer.on("send-message-to-socket", (e3) => this._proxy.sendMessageToSocket(e3)), this.layer.on("send-message-to-client", (e3) => this._proxy.sendMessageToClient(e3)), l(() => this.layer.purgeOptions, () => this._update()), l(() => this.suspended, (e3) => {
      e3 ? this._proxy.pauseStream() : this._isUserPaused || this._proxy.resumeStream();
    })], "constructor");
  }
  get connectionError() {
    if (this.errorString)
      return new s("stream-controller", this.errorString);
  }
  pause() {
    this._isUserPaused = true, this._proxy.pauseStream();
  }
  resume() {
    this._isUserPaused = false, this._proxy.resumeStream();
  }
  on(e3, t2) {
    if (Array.isArray(e3))
      return r2(e3.map((e4) => this.on(e4, t2)));
    const s2 = ["data-received", "message-received"].includes(e3);
    s2 && (this._enabledEventTypes.add(e3), this._proxy.enableEvent(e3, true));
    const o = super.on(e3, t2), i = this;
    return { remove() {
      o.remove(), s2 && (i._proxy.closed || i.hasEventListener(e3) || i._proxy.enableEvent(e3, false));
    } };
  }
  queryLatestObservations(e3, r3) {
    var _a, _b, _c;
    if (!(((_a = this.layer.timeInfo) == null ? void 0 : _a.endField) || ((_b = this.layer.timeInfo) == null ? void 0 : _b.startField) || ((_c = this.layer.timeInfo) == null ? void 0 : _c.trackIdField)))
      throw new s("streamlayer-no-timeField", "queryLatestObservation can only be used with services that define a TrackIdField");
    return this._proxy.queryLatestObservations(this._cleanUpQuery(e3), r3).then((e4) => {
      const t2 = x.fromJSON(e4);
      return t2.features.forEach((e5) => {
        e5.layer = this.layer, e5.sourceLayer = this.layer;
      }), t2;
    });
  }
  detach() {
    super.detach(), this.connectionStatus = "disconnected";
  }
  _createClientOptions() {
    return { ...super._createClientOptions(), setProperty: (e3) => {
      this.set(e3.propertyName, e3.value);
    } };
  }
  _createTileRendererHash(e3) {
    const t2 = `${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(u(this.layer.definitionExpression, this.layer.geometryDefinition))})`;
    return super._createTileRendererHash(e3) + t2;
  }
  async _createServiceOptions() {
    const e3 = this.layer, { objectIdField: t2 } = e3, r3 = e3.fields.map((e4) => e4.toJSON()), s2 = e2(e3.geometryType), o = e3.timeInfo && e3.timeInfo.toJSON() || null, i = e3.spatialReference ? e3.spatialReference.toJSON() : null;
    return { type: "stream", fields: r3, geometryType: s2, objectIdField: t2, timeInfo: o, source: this.layer.parsedUrl, serviceFilter: u(this.layer.definitionExpression, this.layer.geometryDefinition), purgeOptions: this.layer.purgeOptions.toJSON(), enabledEventTypes: Array.from(this._enabledEventTypes.values()), spatialReference: i, maxReconnectionAttempts: this.layer.maxReconnectionAttempts, maxReconnectionInterval: this.layer.maxReconnectionInterval, updateInterval: this.layer.updateInterval, customParameters: e3.customParameters };
  }
};
e([y()], m.prototype, "errorString", void 0), e([y({ readOnly: true })], m.prototype, "connectionError", null), e([y()], m.prototype, "connectionStatus", void 0), m = e([a("esri.views.2d.layers.StreamLayerView2D")], m);
var y2 = m;
export {
  y2 as default
};
//# sourceMappingURL=StreamLayerView2D-NYBU6NA7.js.map
