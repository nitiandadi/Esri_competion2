import {
  x
} from "./chunk-46UYDOF4.js";
import {
  E,
  I,
  S
} from "./chunk-372CNO3V.js";
import {
  e,
  n
} from "./chunk-QARJUBJV.js";
import {
  t as t2
} from "./chunk-CCKR7UFK.js";
import {
  C,
  F,
  G
} from "./chunk-DNXRTHCH.js";
import {
  s,
  s2
} from "./chunk-C2WY74GI.js";
import {
  t
} from "./chunk-HVCAHUYB.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js
var m = s.getLogger("esri.views.2d.engine.webgl.Utils");
var f = "geometry";
var d = [{ name: f, strideInBytes: 12 }];
var p = [{ name: f, strideInBytes: 36 }];
var y = [{ name: f, strideInBytes: 24 }];
var I2 = [{ name: f, strideInBytes: 12 }];
var g = [{ name: f, strideInBytes: 40 }];
var S2 = [{ name: f, strideInBytes: 36 }];
var T = [{ name: f, strideInBytes: 36 }];
function w(e3) {
  const t4 = {};
  for (const n2 of e3)
    t4[n2.name] = n2.strideInBytes;
  return t4;
}
var E2 = w([{ name: f, strideInBytes: 36 }]);
var h = w(d);
var L = w(p);
var N = w(y);
var D = w(I2);
var A = w(g);
var M = w(S2);
var U = w(T);
function R(e3, t4) {
  switch (e3) {
    case E.MARKER:
      return t4 === S.HEATMAP ? h : E2;
    case E.FILL:
      switch (t4) {
        case S.DOT_DENSITY:
          return D;
        case S.SIMPLE:
        case S.OUTLINE_FILL_SIMPLE:
          return N;
        default:
          return L;
      }
    case E.LINE:
      return A;
    case E.TEXT:
      return M;
    case E.LABEL:
      return U;
  }
}
var _ = [f];
var v = [f];
var B = [f];
var O = [f];
var C2 = [f];
function b(e3) {
  switch (e3) {
    case E.MARKER:
      return _;
    case E.FILL:
      return v;
    case E.LINE:
      return B;
    case E.TEXT:
      return O;
    case E.LABEL:
      return C2;
  }
}
function F2(e3) {
  switch (e3 % 4) {
    case 0:
    case 2:
      return 4;
    case 1:
    case 3:
      return 1;
  }
}
function x2(e3, t4) {
  switch (t4 % 4) {
    case 0:
    case 2:
      return new Uint32Array(Math.floor(e3 * t4 / 4));
    case 1:
    case 3:
      return new Uint8Array(e3 * t4);
  }
}
function P(e3, t4) {
  switch (t4 % 4) {
    case 0:
    case 2:
      return new Uint32Array(e3);
    case 1:
    case 3:
      return new Uint8Array(e3);
  }
}
function z(e3) {
  return null != e3;
}
function $(e3) {
  return "number" == typeof e3;
}
function k(t4) {
  switch (t4) {
    case "butt":
      return e.BUTT;
    case "round":
      return e.ROUND;
    case "square":
      return e.SQUARE;
    default:
      return m.error(new s2("mapview-invalid-type", `Cap type ${t4} is not a valid option. Defaulting to round`)), e.ROUND;
  }
}
function G2(t4) {
  switch (t4) {
    case "miter":
      return n.MITER;
    case "bevel":
      return n.BEVEL;
    case "round":
      return n.ROUND;
    default:
      return m.error(new s2("mapview-invalid-type", `Join type ${t4} is not a valid option. Defaulting to round`)), n.ROUND;
  }
}
function V(e3) {
  switch (e3) {
    case "opacity":
      return I.OPACITY;
    case "color":
      return I.COLOR;
    case "rotation":
      return I.ROTATION;
    case "size":
      return I.SIZE;
    default:
      return m.error(`Cannot interpret unknown vv: ${e3}`), null;
  }
}
function j(e3, t4, n2, r, s3, a, i) {
  for (const c in a) {
    const t5 = a[c].stride, r2 = F2(t5), i2 = a[c].data, o2 = n2[c].data;
    if (null == i2 || null == o2)
      continue;
    const u2 = t5 * s3.vertexCount / r2, l = t5 * e3 / r2, m2 = t5 * s3.vertexFrom / r2;
    for (let e4 = 0; e4 < u2; ++e4)
      o2[e4 + l] = i2[e4 + m2];
  }
  if (null != i && null != r) {
    const n3 = s3.indexCount;
    for (let a2 = 0; a2 < n3; ++a2)
      r[a2 + t4] = i[a2 + s3.indexFrom] - s3.vertexFrom + e3;
  }
}
var Y = { [f]: F.STATIC_DRAW };
function H(e3, t4) {
  const n2 = [];
  for (let r = 0; r < 5; ++r) {
    const s3 = b(r), a = {};
    for (const e4 of s3)
      a[e4] = { data: t4(r, e4) };
    n2.push({ data: e3(r), buffers: a });
  }
  return n2;
}
function q(e3) {
  switch (e3) {
    case C.BYTE:
    case C.UNSIGNED_BYTE:
      return 1;
    case C.SHORT:
    case C.UNSIGNED_SHORT:
      return 2;
    case C.FLOAT:
    case C.INT:
    case C.UNSIGNED_INT:
      return 4;
  }
}
function K(t4) {
  switch (t4) {
    case G.UNSIGNED_BYTE:
      return 1;
    case G.UNSIGNED_SHORT_4_4_4_4:
      return 2;
    case G.FLOAT:
      return 4;
    default:
      return void m.error(new s2("webgl-utils", `Unable to handle type ${t4}`));
  }
}
function W(t4) {
  switch (t4) {
    case G.UNSIGNED_BYTE:
      return Uint8Array;
    case G.UNSIGNED_SHORT_4_4_4_4:
      return Uint16Array;
    case G.FLOAT:
      return Float32Array;
    default:
      return void m.error(new s2("webgl-utils", `Unable to handle type ${t4}`));
  }
}
function X(e3) {
  var _a;
  const t4 = {};
  for (const n2 in e3) {
    const r = e3[n2];
    let s3 = 0;
    t4[n2] = r.map((e4) => {
      const t5 = new t2(e4.name, e4.count, e4.type, s3, 0, e4.normalized || false);
      return s3 += e4.count * q(e4.type), t5;
    }), (_a = t4[n2]) == null ? void 0 : _a.forEach((e4) => e4.stride = s3);
  }
  return t4;
}
var J = (e3) => {
  const t4 = /* @__PURE__ */ new Map();
  for (const n2 in e3)
    for (const r of e3[n2])
      t4.set(r.name, r.location);
  return t4;
};
var Q = (e3) => {
  const t4 = {};
  for (const n2 in e3) {
    const r = e3[n2];
    t4[n2] = (r == null ? void 0 : r.length) ? r[0].stride : 0;
  }
  return t4;
};
var Z = /* @__PURE__ */ new Map();
var ee = (e3, t4) => {
  if (!Z.has(e3)) {
    const n2 = X(t4), r = { strides: Q(n2), bufferLayouts: n2, attributes: J(t4) };
    Z.set(e3, r);
  }
  return Z.get(e3);
};
function te(e3) {
  e3(E.FILL), e3(E.LINE), e3(E.MARKER), e3(E.TEXT), e3(E.LABEL);
}
var ne = (e3) => "path" in e3 && ye(e3.path);
var re = (e3) => "url" in e3 && e3.url || "imageData" in e3 && e3.imageData;
var se = (e3) => "imageData" in e3 && e3.imageData && "contentType" in e3 && e3.contentType ? `data:${e3.contentType};base64,${e3.imageData}` : "url" in e3 ? e3.url : null;
var ae = (e3) => null != e3 && e3.startsWith("data:image/gif");
var ie = (e3) => "url" in e3 && e3.url && (e3.url.includes(".gif") || ae(e3.url)) || "contentType" in e3 && "image/gif" === e3.contentType || "imageData" in e3 && ae(e3.imageData);
var ce = (e3) => null != e3 && e3.startsWith("data:image/png");
var oe = (e3) => "url" in e3 && e3.url && (e3.url.includes(".png") || ce(e3.url)) || "contentType" in e3 && "image/png" === e3.contentType || "imageData" in e3 && ce(e3.imageData);
var ue = (e3) => e3.type && e3.type.toLowerCase().includes("3d");
function le(e3) {
  switch (e3.type) {
    case "line": {
      const t4 = e3;
      return "CIMSolidStroke" === t4.cim.type && !t4.dashTemplate;
    }
    case "fill":
      return "CIMSolidFill" === e3.cim.type;
    case "esriSFS":
      return "esriSFSSolid" === e3.style || "esriSFSNull" === e3.style;
    case "esriSLS":
      return "esriSLSSolid" === e3.style || "esriSLSNull" === e3.style;
    default:
      return false;
  }
}
var me = (e3) => e3.includes("data:image/svg+xml");
function fe(e3) {
  switch ("cim" in e3 ? e3.cim.type : e3.type) {
    case "esriSMS":
    case "esriPMS":
    case "CIMPointSymbol":
      return false;
    case "CIMVectorMarker":
    case "CIMCharacterMarker":
    case "CIMPictureMarker":
      return Ie(e3);
    default:
      return true;
  }
}
function de(e3) {
  const t4 = "maxVVSize" in e3 && e3.maxVVSize, n2 = "width" in e3 && e3.width || "size" in e3 && e3.size || 0;
  return t4 || n2;
}
function pe(e3) {
  const t4 = [];
  for (let n2 = 0; n2 < e3.length; n2++)
    t4.push(e3.charCodeAt(n2));
  return t4;
}
var ye = (e3) => !!e3 && (e3 = e3.trim(), !!(/^[mzlhvcsqta]\s*[-+.0-9][^mlhvzcsqta]+/i.test(e3) && /[\dz]$/i.test(e3) && e3.length > 4));
var Ie = (e3) => {
  var _a, _b;
  return "fill" === e3.type && "CIMMarkerPlacementInsidePolygon" === ((_b = (_a = e3 == null ? void 0 : e3.cim) == null ? void 0 : _a.markerPlacement) == null ? void 0 : _b.type);
};

// node_modules/@arcgis/core/views/2d/engine/webgl/color.js
function t3(r, n2 = 0, t4 = false) {
  const o2 = r[n2 + 3];
  return r[n2 + 0] *= o2, r[n2 + 1] *= o2, r[n2 + 2] *= o2, t4 || (r[n2 + 3] *= 255), r;
}
function o(r) {
  if (!r)
    return 0;
  const { r: t4, g: o2, b: u2, a: e3 } = r;
  return x(t4 * e3, o2 * e3, u2 * e3, 255 * e3);
}
function u(r) {
  if (!r)
    return 0;
  const [t4, o2, u2, e3] = r;
  return x(t4 * (e3 / 255), o2 * (e3 / 255), u2 * (e3 / 255), e3);
}
function e2(n2, t4, o2 = 0) {
  if (t(t4))
    return n2[o2 + 0] = 0, n2[o2 + 1] = 0, n2[o2 + 2] = 0, void (n2[o2 + 3] = 0);
  const { r: u2, g: e3, b: i, a: c } = t4;
  n2[o2 + 0] = u2 * c / 255, n2[o2 + 1] = e3 * c / 255, n2[o2 + 2] = i * c / 255, n2[o2 + 3] = c;
}

export {
  R,
  F2 as F,
  x2 as x,
  P,
  z,
  $,
  k,
  G2 as G,
  V,
  j,
  Y,
  H,
  K,
  W,
  ee,
  te,
  ne,
  re,
  se,
  ie,
  oe,
  ue,
  le,
  me,
  fe,
  de,
  pe,
  Ie,
  t3 as t,
  o,
  u,
  e2 as e
};
//# sourceMappingURL=chunk-XF6VFSZY.js.map
