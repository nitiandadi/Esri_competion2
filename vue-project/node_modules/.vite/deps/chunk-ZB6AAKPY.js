import {
  P,
  e as e6
} from "./chunk-VHU47WM2.js";
import {
  F,
  J,
  N,
  S as S3,
  j as j4
} from "./chunk-KNLATKCF.js";
import {
  s as s8
} from "./chunk-PZ3NLWD3.js";
import {
  a as a8
} from "./chunk-WCDQWDOM.js";
import {
  s as s6
} from "./chunk-D4SYZIFV.js";
import {
  t as t5,
  t2 as t6
} from "./chunk-SQ32YP2P.js";
import {
  e as e5,
  r as r4,
  t as t4
} from "./chunk-BITXW4TL.js";
import {
  W,
  e2 as e3,
  e3 as e4,
  t2 as t3
} from "./chunk-VPGE46JA.js";
import {
  f as f2,
  h as h2,
  n2,
  p,
  v as v2,
  w as w2
} from "./chunk-2DA2JOWA.js";
import {
  He
} from "./chunk-UV5UXWQM.js";
import {
  c
} from "./chunk-C5E4KZMK.js";
import {
  a as a7
} from "./chunk-OO5RYTED.js";
import {
  v as v3
} from "./chunk-QUU4FGR5.js";
import {
  d
} from "./chunk-424YCWGU.js";
import {
  b as b2
} from "./chunk-RSFKYEWD.js";
import {
  m as m2,
  x
} from "./chunk-G6COWIFJ.js";
import {
  a as a6
} from "./chunk-PELFA5QO.js";
import {
  g as g2
} from "./chunk-NUSLMJR5.js";
import {
  S2
} from "./chunk-QX5IKXT7.js";
import {
  l as l3
} from "./chunk-BHQVXYUV.js";
import {
  a as a3
} from "./chunk-JT54I3AY.js";
import {
  s as s5
} from "./chunk-DHWQHVQB.js";
import {
  U as U2,
  a as a4,
  f,
  h,
  j as j3,
  l as l2
} from "./chunk-FXMJJBXP.js";
import {
  a as a5
} from "./chunk-6YBCJ6DZ.js";
import {
  U as U3
} from "./chunk-QJXSE36Y.js";
import {
  I,
  a as a9,
  a2 as a10,
  c2,
  c3,
  c4,
  c5,
  i2 as i3,
  i3 as i4,
  i4 as i5,
  u as u3
} from "./chunk-JT4JPYB6.js";
import {
  j as j2
} from "./chunk-SZO7ZKE4.js";
import {
  s as s7
} from "./chunk-7OAHPHOV.js";
import {
  i as i2
} from "./chunk-YMLMMCYX.js";
import {
  he,
  ie,
  xe
} from "./chunk-6TTVNN6M.js";
import {
  i as i6
} from "./chunk-3UXY2S4E.js";
import {
  R3 as R,
  w
} from "./chunk-H2ENCYR3.js";
import {
  L,
  S,
  m,
  u as u2
} from "./chunk-UADQEL54.js";
import {
  n
} from "./chunk-FQ7L63IU.js";
import {
  l
} from "./chunk-6K5VVUVI.js";
import {
  s as s4
} from "./chunk-S47644HM.js";
import {
  a2,
  e as e2,
  t2,
  v2 as v,
  y3 as y2
} from "./chunk-7GTATSRF.js";
import {
  r as r3
} from "./chunk-PXVSWY3C.js";
import {
  E,
  U,
  b,
  g,
  i,
  j,
  y
} from "./chunk-QLY5H3XF.js";
import {
  s as s2,
  s2 as s3
} from "./chunk-UG2OEDEE.js";
import {
  r as r2
} from "./chunk-HSFMVUPO.js";
import {
  u
} from "./chunk-MGJMBJDY.js";
import {
  a,
  e,
  o,
  r,
  s,
  t
} from "./chunk-WHB7G7RI.js";

// node_modules/@arcgis/core/core/unitFormatUtils.js
var U4 = ["B", "kB", "MB", "GB", "TB"];
function v4(n11, i13) {
  let o11 = 0 === i13 ? 0 : Math.floor(Math.log(i13) / Math.log(s6.KILOBYTES));
  o11 = a3(o11, 0, U4.length - 1);
  const u12 = m(i13 / s6.KILOBYTES ** o11, { maximumFractionDigits: 2 });
  return r2(n11.units.bytes[U4[o11]], { fileSize: u12 });
}

// node_modules/@arcgis/core/widgets/Feature/support/featureUtils.js
var p2 = "esri.widgets.Feature.support.featureUtils";
var m3 = s2.getLogger(p2);
var y3 = /href=(""|'')/gi;
var g3 = /(\{([^\{\r\n]+)\})/g;
var h3 = /\'/g;
var I2 = /^\s*expression\//i;
var b3 = /(\n)/gi;
var F2 = /[\u00A0-\u9999<>\&]/gim;
var w3 = /href\s*=\s*(?:\"([^\"]+)\"|\'([^\']+)\')/gi;
var N3 = /^(?:mailto:|tel:)/;
var E2 = "relationships/";
var T2 = S("short-date-short-time");
function j5(e13) {
  if (!t(e13))
    return e13.get("sourceLayer") || e13.get("layer");
}
async function x2(e13, t13) {
  return "function" == typeof e13 ? e13.call(null, t13) : e13;
}
function C(e13 = "") {
  if (e13)
    return !N3.test(e13.trim().toLowerCase());
}
function M(e13) {
  return !!e13 && I2.test(e13);
}
function q(e13, t13) {
  if (!M(t13) || !e13)
    return null;
  const r10 = t13.replace(I2, "").toLowerCase();
  let n11 = null;
  return e13.some((e14) => e14.name.toLowerCase() === r10 && (n11 = e14, true)), n11;
}
function R3(e13, t13) {
  const r10 = q(t13, e13 == null ? void 0 : e13.fieldName);
  return r10 ? r10.title || null : e13 ? e13.label || e13.fieldName : null;
}
function v5(e13, t13) {
  const r10 = t13.get(e13.toLowerCase());
  return `{${r10 && r10.fieldName || e13}}`;
}
function D(e13) {
  return e13.replace(y3, "");
}
function L2(e13, t13) {
  const r10 = A2(t13, e13);
  return r10 ? r10.name : e13;
}
function U5(e13, t13) {
  return e13 && e13.map((e14) => L2(e14, t13));
}
function A2(e13, t13) {
  return e13 && "function" == typeof e13.getField && t13 ? e13.getField(t13) ?? null : null;
}
function $(e13) {
  return `${e13}`.trim();
}
function S4({ attributes: e13, globalAttributes: t13, layer: r10, text: n11, expressionAttributes: i13, fieldInfoMap: o11 }) {
  return n11 ? G({ formattedAttributes: t13, template: z(n11, { ...t13, ...i13, ...e13 }, r10), fieldInfoMap: o11 }) : "";
}
function G({ formattedAttributes: e13, template: t13, fieldInfoMap: r10 }) {
  return $(D(r2(r2(t13, (e14) => v5(e14, r10)), e13)));
}
function k(e13, t13, r10 = false) {
  const n11 = t13[e13];
  if ("string" == typeof n11) {
    const i13 = "%27", o11 = (r10 ? encodeURIComponent(n11) : n11).replace(h3, i13);
    t13[e13] = o11;
  }
}
function O2(e13, t13 = false) {
  const r10 = { ...e13 };
  return Object.keys(r10).forEach((e14) => k(e14, r10, t13)), r10;
}
function P2(e13, t13, r10) {
  const i13 = (t13 = $(t13)) && "{" !== t13[0];
  return r2(e13, O2(r10, i13 || false));
}
function _(e13, t13) {
  return e13.replace(g3, (e14, r10, n11) => {
    const i13 = A2(t13, n11);
    return i13 ? `{${i13.name}}` : r10;
  });
}
function z(e13, t13, r10) {
  const n11 = _(e13, r10);
  return n11 ? n11.replace(w3, (e14, r11, n12) => P2(e14, r11 || n12, t13)) : n11;
}
function H(e13, t13) {
  if ("string" == typeof e13 && t13 && null == t13.dateFormat && (null != t13.places || null != t13.digitSeparator)) {
    const t14 = Number(e13);
    if (!isNaN(t14))
      return t14;
  }
  return e13;
}
function Q(e13) {
  return "feature" === (e13 == null ? void 0 : e13.type);
}
function Z(e13) {
  return !!(e13 == null ? void 0 : e13.layer);
}
function V(e13) {
  return "map-image" === (e13 == null ? void 0 : e13.type);
}
function B(e13, t13) {
  var _a;
  const r10 = t13.fieldInfos, n11 = t13.fieldName, i13 = (_a = J3(r10, n11)) == null ? void 0 : _a.clone(), o11 = t13.preventPlacesFormatting, s15 = t13.layer, f11 = A2(s15, n11);
  if (i13 && "date" === (f11 == null ? void 0 : f11.type)) {
    const e14 = i13.format || new u3();
    e14.dateFormat = e14.dateFormat || "short-date-short-time", e14.dateTimeFormatOptions = !Z(s15) && Q(s15) && s15.datesInUnknownTimezone || Z(s15) && V(s15.layer) && s15.layer.datesInUnknownTimezone ? { timeZone: "UTC" } : null, i13.format = e14;
  }
  const d7 = i13 && i13.format;
  return "string" == typeof e13 && he(n11) && d7 ? d7.formatRasterPixelValue(e13) : "string" == typeof (e13 = H(e13, d7)) || null == e13 || null == d7 ? re(e13) : o11 ? m(e13, { ...u2(d7), minimumFractionDigits: 0, maximumFractionDigits: 20 }) : d7.format(e13);
}
function J3(e13, t13) {
  if (!e13 || !e13.length || !t13)
    return;
  const r10 = t13.toLowerCase();
  let n11;
  return e13.some((e14) => !(!e14.fieldName || e14.fieldName.toLowerCase() !== r10) && (n11 = e14, true)), n11;
}
function K2({ fieldName: e13, graphic: t13, layer: r10 }) {
  if (ue(e13))
    return null;
  if (!r10 || "function" != typeof r10.getFeatureType)
    return null;
  const { typeIdField: n11 } = r10;
  if (!n11 || e13 !== n11)
    return null;
  const i13 = r10.getFeatureType(t13);
  return i13 ? i13.name : null;
}
function W2({ fieldName: e13, value: t13, graphic: r10, layer: n11 }) {
  if (ue(e13))
    return null;
  if (!n11 || "function" != typeof n11.getFieldDomain)
    return null;
  const i13 = r10 && n11.getFieldDomain(e13, { feature: r10 });
  return i13 && "coded-value" === i13.type ? i13.getName(t13) : null;
}
function X(e13, t13) {
  const { creatorField: r10, creationDateField: n11, editorField: o11, editDateField: a13 } = e13;
  if (!t13)
    return;
  const l13 = t13[a13];
  if ("number" == typeof l13) {
    const e14 = t13[o11];
    return { type: "edit", date: L(l13, T2), user: e14 };
  }
  const u12 = t13[n11];
  if ("number" == typeof u12) {
    const e14 = t13[r10];
    return { type: "create", date: L(u12, T2), user: e14 };
  }
  return null;
}
function Y(e13, t13) {
  const r10 = /* @__PURE__ */ new Map();
  return e13 ? (e13.forEach((e14) => {
    const n11 = L2(e14.fieldName, t13);
    e14.fieldName = n11, r10.set(n11.toLowerCase(), e14);
  }), r10) : r10;
}
function ee(e13) {
  const t13 = [];
  if (!e13)
    return t13;
  const { fieldInfos: r10, content: n11 } = e13;
  return r10 && t13.push(...r10), n11 && Array.isArray(n11) ? (n11.forEach((e14) => {
    if ("fields" === e14.type) {
      const r11 = e14 && e14.fieldInfos;
      r11 && t13.push(...r11);
    }
  }), t13) : t13;
}
function te(e13) {
  return e13.replace(F2, (e14) => `&#${e14.charCodeAt(0)};`);
}
function re(e13) {
  return "string" == typeof e13 ? e13.replace(b3, '<br class="esri-text-new-line" />') : e13;
}
function ne(e13) {
  const { value: t13, fieldName: r10, fieldInfos: n11, fieldInfoMap: o11, layer: a13, graphic: l13 } = e13;
  if (null == t13)
    return "";
  const u12 = W2({ fieldName: r10, value: t13, graphic: l13, layer: a13 });
  if (u12)
    return u12;
  const s15 = K2({ fieldName: r10, graphic: l13, layer: a13 });
  if (s15)
    return s15;
  if (o11.get(r10.toLowerCase()))
    return B(t13, { fieldInfos: n11 || Array.from(o11.values()), fieldName: r10, layer: a13 });
  const f11 = a13 && a13.fieldsIndex;
  return f11 && f11.isDateField(r10) ? L(t13, T2) : re(t13);
}
function ie2({ fieldInfos: e13, attributes: t13, layer: r10, graphic: n11, fieldInfoMap: i13, relatedInfos: o11 }) {
  const a13 = {};
  return o11 == null ? void 0 : o11.forEach((t14) => ce({ attributes: a13, relatedInfo: t14, fieldInfoMap: i13, fieldInfos: e13, layer: r10 })), t13 && Object.keys(t13).forEach((o12) => {
    const l13 = t13[o12];
    a13[o12] = ne({ fieldName: o12, fieldInfos: e13, fieldInfoMap: i13, layer: r10, value: l13, graphic: n11 });
  }), a13;
}
async function oe(e13, t13) {
  var _a, _b;
  const { layer: r10, graphic: n11, outFields: i13, objectIds: o11, returnGeometry: a13, spatialReference: l13 } = e13, u12 = o11[0];
  if ("number" != typeof u12 && "string" != typeof u12) {
    const e14 = "Could not query required fields for the specified feature. The feature's ID is invalid.", t14 = { layer: r10, graphic: n11, objectId: u12, requiredFields: i13 };
    return m3.warn(e14, t14), null;
  }
  if (!((_b = (_a = v3(r10)) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)) {
    const e14 = "The specified layer cannot be queried. The following fields will not be available.", t14 = { layer: r10, graphic: n11, requiredFields: i13, returnGeometry: a13 };
    return m3.warn(e14, t14), null;
  }
  const s15 = r10.createQuery();
  s15.objectIds = o11, s15.outFields = (i13 == null ? void 0 : i13.length) ? i13 : [r10.objectIdField], s15.returnGeometry = !!a13, s15.returnZ = !!a13, s15.returnM = !!a13, s15.outSpatialReference = l13;
  return (await r10.queryFeatures(s15, t13)).features[0];
}
async function ae(e13) {
  var _a;
  if (!((_a = e13.expressionInfos) == null ? void 0 : _a.length))
    return false;
  const t13 = await i6(), { arcadeUtils: { hasGeometryFunctions: r10 } } = t13;
  return r10(e13);
}
async function le({ graphic: e13, popupTemplate: t13, layer: r10, spatialReference: n11 }, i13) {
  if (!r10 || !t13)
    return;
  if ("function" == typeof r10.load && await r10.load(i13), !e13.attributes)
    return;
  const o11 = e13.attributes[r10.objectIdField];
  if (null == o11)
    return;
  const a13 = [o11], l13 = await t13.getRequiredFields(r10.fieldsIndex), u12 = xe(l13, e13), f11 = u12 ? [] : l13, c19 = t13.returnGeometry || await ae(t13);
  if (u12 && !c19)
    return;
  const d7 = await oe({ layer: r10, graphic: e13, outFields: f11, objectIds: a13, returnGeometry: c19, spatialReference: n11 }, i13);
  d7 && (d7.geometry && (e13.geometry = d7.geometry), d7.attributes && (e13.attributes = { ...e13.attributes, ...d7.attributes }));
}
function ue(e13 = "") {
  return !!e13 && e13.includes(E2);
}
function se(e13) {
  return e13 ? `${E2}${e13.layerId}/${e13.fieldName}` : "";
}
function fe({ attributes: e13, graphic: t13, relatedInfo: r10, fieldInfos: n11, fieldInfoMap: i13, layer: o11 }) {
  e13 && t13 && r10 && Object.keys(t13.attributes).forEach((a13) => {
    const l13 = se({ layerId: r10.relation.id.toString(), fieldName: a13 }), u12 = t13.attributes[a13];
    e13[l13] = ne({ fieldName: l13, fieldInfos: n11, fieldInfoMap: i13, layer: o11, value: u12, graphic: t13 });
  });
}
function ce({ attributes: e13, relatedInfo: t13, fieldInfoMap: r10, fieldInfos: n11, layer: i13 }) {
  e13 && t13 && (t13.relatedFeatures && t13.relatedFeatures && t13.relatedFeatures.forEach((o11) => fe({ attributes: e13, graphic: o11, relatedInfo: t13, fieldInfoMap: r10, fieldInfos: n11, layer: i13 })), t13.relatedStatsFeatures && t13.relatedStatsFeatures && t13.relatedStatsFeatures.forEach((o11) => fe({ attributes: e13, graphic: o11, relatedInfo: t13, fieldInfoMap: r10, fieldInfos: n11, layer: i13 })));
}
var de = (e13) => {
  if (!e13)
    return false;
  const t13 = e13.toUpperCase();
  return t13.includes("CURRENT_TIMESTAMP") || t13.includes("CURRENT_DATE") || t13.includes("CURRENT_TIME");
};
var pe = ({ layer: e13, method: t13, query: n11, definitionExpression: i13 }) => {
  var _a, _b;
  if (!((_b = (_a = e13.capabilities) == null ? void 0 : _a.query) == null ? void 0 : _b.supportsCacheHint) || "attachments" === t13)
    return;
  const o11 = r(n11.where) ? n11.where : null, a13 = r(n11.geometry) ? n11.geometry : null;
  de(i13) || de(o11) || "extent" === (a13 == null ? void 0 : a13.type) || "tile" === n11.resultType || (n11.cacheHint = true);
};
var me = ({ query: e13, layer: t13, method: r10 }) => {
  pe({ layer: t13, method: r10, query: e13, definitionExpression: `${t13.definitionExpression} ${t13.serviceDefinitionExpression}` });
};
var ye = ({ queryPayload: e13, layer: t13, method: r10 }) => {
  pe({ layer: t13, method: r10, query: e13, definitionExpression: `${t13.definitionExpression} ${t13.serviceDefinitionExpression}` });
};
function ge(e13, t13, r10) {
  return e13 && t13 && r10 ? he2(e13.allLayers, t13, r10) || he2(e13.allTables, t13, r10) : null;
}
function he2(e13, t13, r10) {
  return e13.find((e14) => e14 !== t13 && "feature" === e14.type && e14.url === t13.url && e14.layerId === r10.relatedTableId);
}

// node_modules/@arcgis/core/widgets/Attachments/AttachmentsViewModel.js
var f3 = { editing: false, operations: { add: true, update: true, delete: true } };
var u4 = j2.ofType(a8);
var y4 = class extends v {
  constructor(t13) {
    super(t13), this._getAttachmentsPromise = null, this._attachmentLayer = null, this.abilities = { ...f3 }, this.activeAttachmentInfo = null, this.activeFileInfo = null, this.attachmentInfos = new u4(), this.fileInfos = new j2(), this.graphic = null, this.mode = "view", this.filesEnabled = false, this.addHandles(l2(() => this.graphic, () => this._graphicChanged(), h));
  }
  destroy() {
    this._attachmentLayer = null, this.graphic = null;
  }
  castAbilities(t13) {
    return { ...f3, ...t13 };
  }
  get state() {
    return this._getAttachmentsPromise ? "loading" : this.graphic ? "ready" : "disabled";
  }
  get supportsResizeAttachments() {
    const { graphic: t13 } = this;
    if (!t13)
      return false;
    const e13 = t13.layer || t13.sourceLayer;
    return (e13 == null ? void 0 : e13.loaded) && "capabilities" in e13 && e13.capabilities && "operations" in e13.capabilities && "supportsResizeAttachments" in e13.capabilities.operations && e13.capabilities.operations.supportsResizeAttachments || false;
  }
  async getAttachments() {
    const { _attachmentLayer: t13, attachmentInfos: e13 } = this;
    if (!t13 || "function" != typeof t13.queryAttachments)
      throw new s3("invalid-layer", "getAttachments(): A valid layer is required.");
    const i13 = this._getObjectId(), a13 = new c({ objectIds: [i13], returnMetadata: true }), r10 = [], s15 = t13.queryAttachments(a13).then((t14) => t14[i13] || r10).catch(() => r10);
    this._getAttachmentsPromise = s15, this.notifyChange("state");
    const o11 = await s15;
    return e13.removeAll(), o11.length && e13.addMany(o11), this._getAttachmentsPromise = null, this.notifyChange("state"), o11;
  }
  async addAttachment(t13, e13 = this.graphic) {
    var _a;
    const { _attachmentLayer: i13, attachmentInfos: a13, abilities: r10 } = this;
    if (!e13)
      throw new s3("invalid-graphic", "addAttachment(): A valid graphic is required.", { graphic: e13 });
    if (!t13)
      throw new s3("invalid-attachment", "addAttachment(): An attachment is required.", { attachment: t13 });
    if (!((_a = r10.operations) == null ? void 0 : _a.add))
      throw new s3("invalid-abilities", "addAttachment(): add abilities are required.");
    if (!i13 || "function" != typeof i13.addAttachment)
      throw new s3("invalid-layer", "addAttachment(): A valid layer is required.");
    const s15 = i13.addAttachment(e13, t13).then((t14) => this._queryAttachment(t14.objectId, e13)), o11 = await s15;
    return a13.add(o11), o11;
  }
  async deleteAttachment(t13) {
    var _a;
    const { _attachmentLayer: e13, attachmentInfos: i13, graphic: a13, abilities: r10 } = this;
    if (!t13)
      throw new s3("invalid-attachment-info", "deleteAttachment(): An attachmentInfo is required.", { attachmentInfo: t13 });
    if (!((_a = r10.operations) == null ? void 0 : _a.delete))
      throw new s3("invalid-abilities", "deleteAttachment(): delete abilities are required.");
    if (!e13 || "function" != typeof e13.deleteAttachments)
      throw new s3("invalid-layer", "deleteAttachment(): A valid layer is required.");
    if (!a13)
      throw new s3("invalid-graphic", "deleteAttachment(): A graphic is required.");
    const s15 = e13.deleteAttachments(a13, [t13.id]).then(() => t13), o11 = await s15;
    return i13.remove(o11), o11;
  }
  async updateAttachment(t13, e13 = this.activeAttachmentInfo) {
    var _a;
    const { _attachmentLayer: i13, attachmentInfos: a13, graphic: r10, abilities: s15 } = this;
    if (!t13)
      throw new s3("invalid-attachment", "updateAttachment(): An attachment is required.", { attachment: t13 });
    if (!e13)
      throw new s3("invalid-attachment-info", "updateAttachment(): An attachmentInfo is required.", { attachmentInfo: e13 });
    if (!((_a = s15.operations) == null ? void 0 : _a.update))
      throw new s3("invalid-abilities", "updateAttachment(): Update abilities are required.");
    const o11 = a13.findIndex((t14) => t14 === e13);
    if (!i13 || "function" != typeof i13.updateAttachment)
      throw new s3("invalid-layer", "updateAttachment(): A valid layer is required.");
    if (!r10)
      throw new s3("invalid-graphic", "updateAttachment(): A graphic is required.");
    const c19 = i13.updateAttachment(r10, e13.id, t13).then((t14) => this._queryAttachment(t14.objectId)), h13 = await c19;
    return a13.splice(o11, 1, h13), h13;
  }
  async commitFiles() {
    return await Promise.all(this.fileInfos.items.map((t13) => this.addAttachment(t13.form))), this.fileInfos.removeAll(), this.getAttachments();
  }
  addFile(t13, e13) {
    if (!t13 || !e13)
      return null;
    const i13 = { file: t13, form: e13 };
    return this.fileInfos.add(i13), i13;
  }
  updateFile(t13, e13, i13 = this.activeFileInfo) {
    if (!t13 || !e13 || !i13)
      return null;
    const a13 = this.fileInfos.findIndex((t14) => i13 === t14);
    return a13 > -1 && this.fileInfos.splice(a13, 1, { file: t13, form: e13 }), this.fileInfos.items[a13];
  }
  deleteFile(t13) {
    const e13 = this.fileInfos.find((e14) => e14.file === t13);
    return e13 ? (this.fileInfos.remove(e13), e13) : null;
  }
  async _queryAttachment(t13, e13) {
    const { _attachmentLayer: i13 } = this;
    if (!t13 || !(i13 == null ? void 0 : i13.queryAttachments))
      throw new s3("invalid-attachment-id", "Could not query attachment.");
    const a13 = this._getObjectId(e13), r10 = new c({ objectIds: [a13], attachmentsWhere: `AttachmentId=${t13}`, returnMetadata: true });
    return i13.queryAttachments(r10).then((t14) => t14[a13][0]);
  }
  _getObjectId(t13 = this.graphic) {
    return (t13 == null ? void 0 : t13.getObjectId()) ?? null;
  }
  _graphicChanged() {
    this.graphic && (this._setAttachmentLayer(), this.getAttachments().catch(() => {
    }));
  }
  _setAttachmentLayer() {
    const { graphic: t13 } = this, e13 = j5(t13);
    this._attachmentLayer = e13 ? "scene" === e13.type && r(e13.associatedLayer) ? e13.associatedLayer : e13 : null;
  }
};
e2([y2()], y4.prototype, "abilities", void 0), e2([s4("abilities")], y4.prototype, "castAbilities", null), e2([y2()], y4.prototype, "activeAttachmentInfo", void 0), e2([y2()], y4.prototype, "activeFileInfo", void 0), e2([y2({ readOnly: true, type: u4 })], y4.prototype, "attachmentInfos", void 0), e2([y2()], y4.prototype, "fileInfos", void 0), e2([y2({ type: g2 })], y4.prototype, "graphic", void 0), e2([y2()], y4.prototype, "mode", void 0), e2([y2({ readOnly: true })], y4.prototype, "state", null), e2([y2()], y4.prototype, "filesEnabled", void 0), e2([y2({ readOnly: true })], y4.prototype, "supportsResizeAttachments", null), y4 = e2([a2("esri.widgets.Attachments.AttachmentsViewModel")], y4);
var A3 = y4;

// node_modules/@arcgis/core/widgets/Attachments/support/attachmentUtils.js
function e7(i13) {
  const e13 = i13.toLowerCase();
  return "image/bmp" === e13 || "image/emf" === e13 || "image/exif" === e13 || "image/gif" === e13 || "image/x-icon" === e13 || "image/jpeg" === e13 || "image/png" === e13 || "image/tiff" === e13 || "image/x-wmf" === e13;
}
function p3(e13) {
  const p14 = a5("esri/themes/base/images/files/");
  return e13 ? "text/plain" === e13 ? `${p14}text-32.svg` : "application/pdf" === e13 ? `${p14}pdf-32.svg` : "text/csv" === e13 ? `${p14}csv-32.svg` : "application/gpx+xml" === e13 ? `${p14}gpx-32.svg` : "application/x-dwf" === e13 ? `${p14}cad-32.svg` : "application/postscript" === e13 || "application/json" === e13 || "text/xml" === e13 || "model/vrml" === e13 ? `${p14}code-32.svg` : "application/x-zip-compressed" === e13 || "application/x-7z-compressed" === e13 || "application/x-gzip" === e13 || "application/x-tar" === e13 || "application/x-gtar" === e13 || "application/x-bzip2" === e13 || "application/gzip" === e13 || "application/x-compress" === e13 || "application/x-apple-diskimage" === e13 || "application/x-rar-compressed" === e13 || "application/zip" === e13 ? `${p14}zip-32.svg` : e13.includes("image/") ? `${p14}image-32.svg` : e13.includes("audio/") ? `${p14}sound-32.svg` : e13.includes("video/") ? `${p14}video-32.svg` : e13.includes("msexcel") || e13.includes("ms-excel") || e13.includes("spreadsheetml") ? `${p14}excel-32.svg` : e13.includes("msword") || e13.includes("ms-word") || e13.includes("wordprocessingml") ? `${p14}word-32.svg` : e13.includes("powerpoint") || e13.includes("presentationml") ? `${p14}report-32.svg` : `${p14}generic-32.svg` : `${p14}generic-32.svg`;
}

// node_modules/@arcgis/core/widgets/Attachments.js
var v6 = { addButton: true, addSubmitButton: true, cancelAddButton: true, cancelUpdateButton: true, deleteButton: true, errorMessage: true, progressBar: true, updateButton: true };
var y5 = "esri-attachments";
var w4 = "esri-button";
var A4 = { base: y5, loaderContainer: `${y5}__loader-container`, loader: `${y5}__loader`, fadeIn: `${y5}--fade-in`, container: `${y5}__container`, containerList: `${y5}__container--list`, containerPreview: `${y5}__container--preview`, actions: `${y5}__actions`, deleteButton: `${y5}__delete-button`, addAttachmentButton: `${y5}__add-attachment-button`, errorMessage: `${y5}__error-message`, items: `${y5}__items`, item: `${y5}__item`, itemButton: `${y5}__item-button`, itemMask: `${y5}__item-mask`, itemMaskIcon: `${y5}__item-mask--icon`, itemImage: `${y5}__image`, itemImageResizable: `${y5}__image--resizable`, itemLabel: `${y5}__label`, itemFilename: `${y5}__filename`, itemChevronIcon: `${y5}__item-chevron-icon`, itemLink: `${y5}__item-link`, itemLinkOverlay: `${y5}__item-link-overlay`, itemLinkOverlayIcon: `${y5}__item-link-overlay-icon`, itemEditIcon: `${y5}__item-edit-icon`, itemAddIcon: `${y5}__item-add-icon`, itemAddButton: `${y5}__item-add-button`, formNode: `${y5}__form-node`, fileFieldset: `${y5}__file-fieldset`, fileLabel: `${y5}__file-label`, fileName: `${y5}__file-name`, fileInput: `${y5}__file-input`, metadata: `${y5}__metadata`, metadataFieldset: `${y5}__metadata-fieldset`, progressBar: `${y5}__progress-bar`, esriWidget: "esri-widget", esriButton: w4, buttonDisabled: `${w4}--disabled`, esriButtonSecondary: `${w4}--secondary`, esriButtonTertiary: `${w4}--tertiary`, esriButtonThird: `${w4}--third`, esriButtonSmall: `${w4}--small`, esriButtonHalf: `${w4}--half`, empty: "esri-widget__content--empty", iconExternalLink: "esri-icon-link-external", iconEdit: "esri-icon-edit", iconRight: "esri-icon-right", iconLeft: "esri-icon-left", iconPlus: "esri-icon-plus" };
var F3 = window.CSS;
var k2 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this.displayType = "auto", this.messages = null, this.messagesUnits = null, this.selectedFile = null, this.submitting = false, this.viewModel = null, this.visibleElements = { ...v6 }, this._supportsImageOrientation = F3 && F3.supports && F3.supports("image-orientation", "from-image"), this._addAttachmentForm = null, this._updateAttachmentForm = null;
  }
  initialize() {
    this.viewModel || (this.viewModel = new A3()), this.addHandles([a4(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.attachmentInfos;
    }, "change", () => this.scheduleRender()), a4(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.fileInfos;
    }, "change", () => this.scheduleRender()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.mode;
    }, () => this._modeChanged(), h)]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-icon-XAFZ5NNH.js")]);
  }
  get abilities() {
    return this.viewModel.abilities;
  }
  set abilities(e13) {
    this.viewModel.abilities = e13;
  }
  get effectiveDisplayType() {
    const { displayType: e13 } = this;
    return e13 && "auto" !== e13 ? e13 : this.viewModel.supportsResizeAttachments ? "preview" : "list";
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e13) {
    this.viewModel.graphic = e13;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e13) {
    this._overrideIfSome("label", e13);
  }
  castVisibleElements(e13) {
    return { ...v6, ...e13 };
  }
  addAttachment() {
    const { _addAttachmentForm: e13, viewModel: s15 } = this;
    return this._set("submitting", true), this._set("error", null), s15.addAttachment(e13).then((e14) => (this._set("submitting", false), this._set("error", null), s15.mode = "view", e14)).catch((e14) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:add-attachment", this.messages.addErrorMessage, e14)), e14;
    });
  }
  deleteAttachment(e13) {
    const { viewModel: s15 } = this;
    return this._set("submitting", true), this._set("error", null), s15.deleteAttachment(e13).then((e14) => (this._set("submitting", false), this._set("error", null), s15.mode = "view", e14)).catch((e14) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:delete-attachment", this.messages.deleteErrorMessage, e14)), e14;
    });
  }
  updateAttachment() {
    const { viewModel: e13 } = this, { _updateAttachmentForm: s15 } = this;
    return this._set("submitting", true), this._set("error", null), e13.updateAttachment(s15).then((t13) => (this._set("submitting", false), this._set("error", null), e13.mode = "view", t13)).catch((e14) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:update-attachment", this.messages.updateErrorMessage, e14)), e14;
    });
  }
  addFile() {
    const e13 = this.viewModel.addFile(this.selectedFile, this._addAttachmentForm);
    return this.viewModel.mode = "view", e13;
  }
  updateFile() {
    const { viewModel: e13 } = this, t13 = e13.updateFile(this.selectedFile, this._updateAttachmentForm, e13.activeFileInfo);
    return e13.mode = "view", t13;
  }
  deleteFile(e13) {
    var _a;
    const t13 = this.viewModel.deleteFile(e13 || ((_a = this.viewModel.activeFileInfo) == null ? void 0 : _a.file));
    return this.viewModel.mode = "view", t13;
  }
  render() {
    const { submitting: e13, viewModel: t13 } = this, { state: s15 } = t13;
    return n2("div", { class: this.classes(A4.base, A4.esriWidget) }, e13 ? this.renderProgressBar() : null, "loading" === s15 ? this.renderLoading() : this.renderAttachments(), this.renderErrorMessage());
  }
  renderErrorMessage() {
    const { error: e13, visibleElements: t13 } = this;
    return e13 && t13.errorMessage ? n2("div", { key: "error-message", class: A4.errorMessage }, e13.message) : null;
  }
  renderAttachments() {
    const { activeFileInfo: e13, mode: t13, activeAttachmentInfo: s15 } = this.viewModel;
    return "add" === t13 ? this.renderAddForm() : "edit" === t13 ? this.renderDetailsForm(s15 || e13) : this.renderAttachmentContainer();
  }
  renderLoading() {
    return n2("div", { class: A4.loaderContainer, key: "loader" }, n2("div", { class: A4.loader }));
  }
  renderProgressBar() {
    return this.visibleElements.progressBar ? n2("div", { class: A4.progressBar, key: "progress-bar" }) : null;
  }
  renderAddForm() {
    const { submitting: e13, selectedFile: t13 } = this, s15 = e13 || !t13, i13 = this.visibleElements.cancelAddButton ? n2("button", { type: "button", bind: this, disabled: e13, onclick: this._cancelForm, class: this.classes(A4.esriButton, A4.esriButtonTertiary, A4.esriButtonSmall, A4.esriButtonHalf, e13 && A4.buttonDisabled) }, this.messages.cancel) : null, a13 = this.visibleElements.addSubmitButton ? n2("button", { type: "submit", disabled: s15, class: this.classes(A4.esriButton, A4.esriButtonSecondary, A4.esriButtonSmall, A4.esriButtonHalf, { [A4.buttonDisabled]: s15 }) }, this.messages.add) : null, n11 = t13 ? n2("span", { key: "file-name", class: A4.fileName }, t13.name) : null, r10 = n2("form", { bind: this, afterCreate: v2, afterRemoved: h2, "data-node-ref": "_addAttachmentForm", onsubmit: this._submitAddAttachment }, n2("fieldset", { class: A4.fileFieldset }, n11, n2("label", { class: this.classes(A4.fileLabel, A4.esriButton, A4.esriButtonSecondary) }, t13 ? this.messages.changeFile : this.messages.selectFile, n2("input", { class: A4.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))), a13, i13);
    return n2("div", { key: "add-form-container", class: A4.formNode }, r10);
  }
  renderDetailsForm(e13) {
    var _a, _b, _c;
    const { visibleElements: t13, viewModel: i13, selectedFile: a13, submitting: n11 } = this, { abilities: l13 } = i13, o11 = n11 || !a13;
    let d7, c19, m14, h13;
    a13 ? (d7 = a13.type, c19 = a13.name, m14 = a13.size) : e13 && "file" in e13 ? (d7 = e13.file.type, c19 = e13.file.name, m14 = e13.file.size) : e13 && "contentType" in e13 && (d7 = e13.contentType, c19 = e13.name, m14 = e13.size, h13 = e13.url);
    const u12 = l13.editing && ((_a = l13.operations) == null ? void 0 : _a.delete) && t13.deleteButton ? n2("button", { key: "delete-button", type: "button", disabled: n11, bind: this, onclick: (t14) => this._submitDeleteAttachment(t14, e13), class: this.classes(A4.esriButton, A4.esriButtonSmall, A4.esriButtonTertiary, A4.deleteButton, { [A4.buttonDisabled]: n11 }) }, this.messages.delete) : void 0, b13 = l13.editing && ((_b = l13.operations) == null ? void 0 : _b.update) && t13.updateButton ? n2("button", { disabled: o11, key: "update-button", type: "submit", class: this.classes(A4.esriButton, A4.esriButtonSmall, A4.esriButtonThird, { [A4.buttonDisabled]: o11 }) }, this.messages.update) : void 0, f11 = this.visibleElements.cancelUpdateButton ? n2("button", { disabled: n11, key: "cancel-button", type: "button", bind: this, onclick: this._cancelForm, class: this.classes(A4.esriButton, A4.esriButtonSmall, A4.esriButtonTertiary, A4.esriButtonThird, { [A4.buttonDisabled]: n11 }) }, this.messages.cancel) : void 0, v9 = l13.editing && ((_c = l13.operations) == null ? void 0 : _c.update) ? n2("fieldset", { key: "file", class: A4.fileFieldset }, n2("span", { key: "file-name", class: A4.fileName }, c19), n2("label", { class: this.classes(A4.fileLabel, A4.esriButton, A4.esriButtonSecondary) }, this.messages.changeFile, n2("input", { class: A4.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))) : void 0, y12 = n2("fieldset", { key: "size", class: A4.metadataFieldset }, n2("label", null, v4(this.messagesUnits, m14 ?? 0))), w10 = n2("fieldset", { key: "content-type", class: A4.metadataFieldset }, n2("label", null, d7)), F8 = r(h13) ? n2("a", { class: A4.itemLink, href: h13, rel: "noreferrer", target: "_blank" }, this.renderImageMask(e13, 400), n2("div", { class: A4.itemLinkOverlay }, n2("span", { class: A4.itemLinkOverlayIcon }, n2("calcite-icon", { icon: "launch" })))) : this.renderImageMask(e13, 400), k4 = n2("form", { bind: this, afterCreate: v2, afterRemoved: h2, "data-node-ref": "_updateAttachmentForm", onsubmit: (t14) => this._submitUpdateAttachment(t14, e13) }, n2("div", { class: A4.metadata }, y12, w10), v9, n2("div", { class: A4.actions }, u12, f11, b13));
    return n2("div", { key: "edit-form-container", class: A4.formNode }, F8, k4);
  }
  renderImageMask(e13, t13) {
    return e13 ? "file" in e13 ? this.renderGenericImageMask(e13.file.name, e13.file.type) : this.renderImageMaskForAttachment(e13, t13) : null;
  }
  renderGenericImageMask(e13, t13) {
    const { supportsResizeAttachments: s15 } = this.viewModel, i13 = p3(t13), a13 = { [A4.itemImageResizable]: s15 };
    return n2("div", { class: this.classes(A4.itemMaskIcon, A4.itemMask) }, n2("img", { title: e13, alt: e13, src: i13, class: this.classes(a13, A4.itemImage) }));
  }
  renderImageMaskForAttachment(e13, t13) {
    const { supportsResizeAttachments: s15 } = this.viewModel;
    if (!e13)
      return null;
    const { contentType: i13, name: a13, url: n11 } = e13;
    if (!s15 || !e7(i13))
      return this.renderGenericImageMask(a13, i13);
    const r10 = this._getCSSTransform(e13), l13 = r10 ? { transform: r10, "image-orientation": "none" } : {}, o11 = `${n11}${(n11 == null ? void 0 : n11.includes("?")) ? "&" : "?"}w=${t13}`, d7 = { [A4.itemImageResizable]: s15 };
    return n2("div", { class: this.classes(A4.itemMask) }, n2("img", { styles: l13, alt: a13, title: a13, src: o11, class: this.classes(d7, A4.itemImage) }));
  }
  renderFile(e13) {
    const { file: t13 } = e13;
    return n2("li", { class: A4.item, key: t13 }, n2("button", { key: "details-button", bind: this, class: A4.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, onclick: () => this._startEditFile(e13), type: "button" }, this.renderImageMask(e13), n2("label", { class: A4.itemLabel }, n2("span", { class: A4.itemFilename }, t13.name || this.messages.noTitle), n2("span", { "aria-hidden": "true", class: this.classes(A4.itemChevronIcon, f2(this.container) ? A4.iconLeft : A4.iconRight) }))));
  }
  renderAttachmentInfo({ attachmentInfo: e13, displayType: t13 }) {
    const { viewModel: s15, effectiveDisplayType: i13 } = this, { abilities: a13, supportsResizeAttachments: n11 } = s15, { contentType: r10, name: l13, url: o11 } = e13, d7 = this.renderImageMask(e13, "list" === t13 ? 48 : 400), c19 = a13.editing ? n2("span", { "aria-hidden": "true", class: this.classes(A4.itemChevronIcon, f2(this.container) ? A4.iconLeft : A4.iconRight) }) : null, m14 = [d7, "preview" === i13 && n11 && e7(r10) ? null : n2("label", { class: A4.itemLabel }, n2("span", { class: A4.itemFilename }, l13 || this.messages.noTitle), c19)], h13 = a13.editing ? n2("button", { key: "details-button", bind: this, class: A4.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, "data-attachment-info-id": e13.id, onclick: () => this._startEditAttachment(e13), type: "button" }, m14) : n2("a", { key: "details-link", class: A4.itemButton, href: o11 ?? void 0, target: "_blank" }, m14);
    return n2("li", { class: A4.item, key: e13 }, h13);
  }
  renderAttachmentContainer() {
    var _a;
    const { effectiveDisplayType: e13, viewModel: t13, visibleElements: s15 } = this, { attachmentInfos: i13, abilities: a13, fileInfos: n11 } = t13, r10 = !!(i13 == null ? void 0 : i13.length), l13 = !!(n11 == null ? void 0 : n11.length), o11 = { [A4.containerList]: "preview" !== e13, [A4.containerPreview]: "preview" === e13 }, d7 = a13.editing && ((_a = a13.operations) == null ? void 0 : _a.add) && s15.addButton ? n2("button", { bind: this, onclick: () => this._startAddAttachment(), class: this.classes(A4.esriButton, A4.esriButtonTertiary, A4.addAttachmentButton), type: "button" }, n2("span", { "aria-hidden": "true", class: this.classes(A4.itemAddIcon, A4.iconPlus) }), this.messages.add) : void 0, c19 = r10 ? n2("ul", { key: "attachments-list", class: A4.items }, i13.toArray().map((t14) => this.renderAttachmentInfo({ attachmentInfo: t14, displayType: e13 }))) : void 0, m14 = l13 ? n2("ul", { key: "file-list", class: A4.items }, n11.toArray().map((e14) => this.renderFile(e14))) : void 0, h13 = l13 || r10 ? void 0 : n2("div", { class: A4.empty }, this.messages.noAttachments);
    return n2("div", { key: "attachments-container", class: this.classes(A4.container, o11) }, c19, m14, h13, d7);
  }
  _modeChanged() {
    this._set("error", null), this._set("selectedFile", null);
  }
  _handleFileInputChange(e13) {
    const t13 = e13.target, s15 = t13 && t13.files && t13.files.item(0);
    this._set("selectedFile", s15);
  }
  _submitDeleteAttachment(e13, t13) {
    e13.preventDefault(), t13 && ("file" in t13 ? this.deleteFile(t13.file) : t13 && this.deleteAttachment(t13));
  }
  _submitAddAttachment(e13) {
    e13.preventDefault(), this.viewModel.filesEnabled ? this.addFile() : this.addAttachment();
  }
  _submitUpdateAttachment(e13, t13) {
    e13.preventDefault(), t13 && "file" in t13 ? this.updateFile() : this.updateAttachment();
  }
  _startEditAttachment(e13) {
    const { viewModel: t13 } = this;
    t13.activeFileInfo = null, t13.activeAttachmentInfo = e13, t13.mode = "edit";
  }
  _startEditFile(e13) {
    const { viewModel: t13 } = this;
    t13.activeAttachmentInfo = null, t13.activeFileInfo = e13, t13.mode = "edit";
  }
  _startAddAttachment() {
    this.viewModel.mode = "add";
  }
  _cancelForm(e13) {
    e13.preventDefault(), this.viewModel.mode = "view";
  }
  _getCSSTransform(e13) {
    const { orientationInfo: t13 } = e13;
    return !this._supportsImageOrientation && t13 ? [t13.rotation ? `rotate(${t13.rotation}deg)` : "", t13.mirrored ? "scaleX(-1)" : ""].join(" ") : "";
  }
};
e2([y2()], k2.prototype, "abilities", null), e2([y2()], k2.prototype, "displayType", void 0), e2([y2({ readOnly: true })], k2.prototype, "effectiveDisplayType", null), e2([y2()], k2.prototype, "graphic", null), e2([y2()], k2.prototype, "label", null), e2([y2(), e3("esri/widgets/Attachments/t9n/Attachments")], k2.prototype, "messages", void 0), e2([y2(), e3("esri/core/t9n/Units")], k2.prototype, "messagesUnits", void 0), e2([y2({ readOnly: true })], k2.prototype, "selectedFile", void 0), e2([y2({ readOnly: true })], k2.prototype, "submitting", void 0), e2([y2({ readOnly: true })], k2.prototype, "error", void 0), e2([y2({ type: A3 })], k2.prototype, "viewModel", void 0), e2([y2()], k2.prototype, "visibleElements", void 0), e2([s4("visibleElements")], k2.prototype, "castVisibleElements", null), k2 = e2([a2("esri.widgets.Attachments")], k2);
var B2 = k2;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments/FeatureAttachmentsViewModel.js
var o2 = class extends A3 {
  constructor(t13) {
    super(t13), this.description = null, this.title = null;
  }
};
e2([y2()], o2.prototype, "description", void 0), e2([y2()], o2.prototype, "title", void 0), o2 = e2([a2("esri.widgets.Feature.FeatureAttachments.FeatureAttachmentsViewModel")], o2);
var c6 = o2;

// node_modules/@arcgis/core/widgets/support/Heading.js
var i7 = { heading: "esri-widget__heading" };
function n3({ level: t13, class: n11, ...s15 }, a13) {
  const c19 = o3(t13);
  return n2(`h${c19}`, { ...s15, class: p(i7.heading, n11), role: "heading", "aria-level": String(c19) }, a13);
}
function o3(r10) {
  return a3(Math.ceil(r10), 1, 6);
}

// node_modules/@arcgis/core/widgets/Feature/support/FeatureElementInfo.js
var p4 = "esri-feature-element-info";
var n4 = { base: p4, title: `${p4}__title`, description: `${p4}__description` };
var c7 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this.description = null, this.headingLevel = 2, this.title = null;
  }
  render() {
    return n2("div", { class: n4.base }, this.renderTitle(), this.renderDescription());
  }
  renderTitle() {
    const { title: e13 } = this;
    return e13 ? n2(n3, { level: this.headingLevel, class: n4.title }, e13) : null;
  }
  renderDescription() {
    const { description: e13 } = this;
    return e13 ? n2("div", { key: "description", class: n4.description }, e13) : null;
  }
};
e2([y2()], c7.prototype, "description", void 0), e2([y2()], c7.prototype, "headingLevel", void 0), e2([y2()], c7.prototype, "title", void 0), c7 = e2([a2("esri.widgets.Feature.support.FeatureElementInfo")], c7);
var l5 = c7;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments.js
var d2 = { base: "esri-feature-attachments" };
var c8 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this._featureElementInfo = null, this.attachmentsWidget = new B2(), this.headingLevel = 2, this.viewModel = new c6();
  }
  initialize() {
    this._featureElementInfo = new l5(), this.addHandles([l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title, this.headingLevel];
    }, () => this._setupFeatureElementInfo(), h), l2(() => this.viewModel, (e13) => this.attachmentsWidget.viewModel = e13, h)]);
  }
  destroy() {
    var _a;
    this.attachmentsWidget.destroy(), (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e13) {
    this.viewModel.description = e13;
  }
  get displayType() {
    return this.attachmentsWidget.displayType;
  }
  set displayType(e13) {
    this.attachmentsWidget.displayType = e13;
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e13) {
    this.viewModel.graphic = e13;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  render() {
    var _a;
    const { attachmentsWidget: e13 } = this;
    return n2("div", { class: d2.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), e13 == null ? void 0 : e13.render());
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e13, title: t13, headingLevel: i13 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e13, title: t13, headingLevel: i13 });
  }
};
e2([y2({ readOnly: true })], c8.prototype, "attachmentsWidget", void 0), e2([y2()], c8.prototype, "description", null), e2([y2()], c8.prototype, "displayType", null), e2([y2()], c8.prototype, "graphic", null), e2([y2()], c8.prototype, "headingLevel", void 0), e2([y2()], c8.prototype, "title", null), e2([y2({ type: c6 })], c8.prototype, "viewModel", void 0), c8 = e2([a2("esri.widgets.Feature.FeatureAttachments")], c8);
var h4 = c8;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent/FeatureContentViewModel.js
var p5 = class extends a6(v) {
  constructor(t13) {
    super(t13), this._loadingPromise = null, this.created = null, this.creator = null, this.destroyer = null, this.graphic = null, this.handles.add(l2(() => this.creator, (t14) => {
      this._destroyContent(), this._createContent(t14);
    }, h));
  }
  destroy() {
    this._destroyContent();
  }
  get state() {
    return this._loadingPromise ? "loading" : "ready";
  }
  _destroyContent() {
    const { created: t13, graphic: e13, destroyer: r10 } = this;
    t13 && e13 && (x2(r10, { graphic: e13 }).catch(() => null), this._set("created", null));
  }
  async _createContent(t13) {
    const e13 = this.graphic;
    if (!e13 || !t13)
      return;
    const r10 = x2(t13, { graphic: e13 }).catch(() => null);
    this._loadingPromise = r10, this.notifyChange("state");
    const o11 = await r10;
    r10 === this._loadingPromise && (this._loadingPromise = null, this.notifyChange("state"), this._set("created", o11));
  }
};
e2([y2({ readOnly: true })], p5.prototype, "created", void 0), e2([y2()], p5.prototype, "creator", void 0), e2([y2()], p5.prototype, "destroyer", void 0), e2([y2({ type: g2 })], p5.prototype, "graphic", void 0), e2([y2({ readOnly: true })], p5.prototype, "state", null), p5 = e2([a2("esri.widgets.Feature.FeatureContent.FeatureContentViewModel")], p5);
var l6 = p5;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent.js
var n5 = "esri-feature-content";
var c9 = { base: n5, loaderContainer: `${n5}__loader-container`, loader: `${n5}__loader` };
var l7 = class extends W {
  constructor(e13, r10) {
    super(e13, r10), this.viewModel = null, this._addTargetToAnchors = (e14) => {
      Array.from(e14.querySelectorAll("a")).forEach((e15) => {
        C(e15.href) && !e15.hasAttribute("target") && e15.setAttribute("target", "_blank");
      });
    };
  }
  get creator() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.creator;
  }
  set creator(e13) {
    this.viewModel && (this.viewModel.creator = e13);
  }
  get graphic() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.graphic;
  }
  set graphic(e13) {
    this.viewModel && (this.viewModel.graphic = e13);
  }
  renderLoading() {
    return n2("div", { class: c9.loaderContainer, key: "loader" }, n2("div", { class: c9.loader }));
  }
  renderCreated() {
    var _a;
    const e13 = (_a = this.viewModel) == null ? void 0 : _a.created;
    return e13 ? e13 instanceof HTMLElement ? n2("div", { key: e13, bind: e13, afterCreate: this._attachToNode }) : e5(e13) ? n2("div", { key: e13 }, !e13.destroyed && e13.render()) : n2("div", { key: e13, innerHTML: e13, afterCreate: this._addTargetToAnchors }) : null;
  }
  render() {
    var _a;
    const e13 = (_a = this.viewModel) == null ? void 0 : _a.state;
    return n2("div", { class: c9.base }, "loading" === e13 ? this.renderLoading() : this.renderCreated());
  }
  _attachToNode(e13) {
    const r10 = this;
    e13.appendChild(r10);
  }
};
e2([y2()], l7.prototype, "creator", null), e2([y2()], l7.prototype, "graphic", null), e2([y2({ type: l6 })], l7.prototype, "viewModel", void 0), l7 = e2([a2("esri.widgets.Feature.FeatureContent")], l7);
var p6 = l7;

// node_modules/@arcgis/core/widgets/Feature/FeatureFields/FeatureFieldsViewModel.js
var l8 = class extends v {
  constructor(o11) {
    super(o11), this.attributes = null, this.expressionInfos = null, this.description = null, this.fieldInfos = null, this.title = null;
  }
  get formattedFieldInfos() {
    const { expressionInfos: o11, fieldInfos: e13 } = this, s15 = [];
    return e13 == null ? void 0 : e13.forEach((e14) => {
      if (!(!e14.hasOwnProperty("visible") || e14.visible))
        return;
      const t13 = e14.clone();
      t13.label = R3(t13, o11), s15.push(t13);
    }), s15;
  }
};
e2([y2()], l8.prototype, "attributes", void 0), e2([y2({ type: [i5] })], l8.prototype, "expressionInfos", void 0), e2([y2()], l8.prototype, "description", void 0), e2([y2({ type: [c2] })], l8.prototype, "fieldInfos", void 0), e2([y2({ readOnly: true })], l8.prototype, "formattedFieldInfos", null), e2([y2()], l8.prototype, "title", void 0), l8 = e2([a2("esri.widgets.Feature.FeatureFields.FeatureFieldsViewModel")], l8);
var n6 = l8;

// node_modules/@arcgis/core/widgets/support/uriUtils.js
var s10 = [{ pattern: /^\s*(https?:\/\/([^\s]+))\s*$/i, target: "_blank", label: "{messages.view}" }, { pattern: /^\s*(tel:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(mailto:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(arcgis-appstudio-player:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "App Studio Player" }, { pattern: /^\s*(arcgis-collector:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Collector" }, { pattern: /^\s*(arcgis-explorer:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Explorer" }, { pattern: /^\s*(arcgis-navigator:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Navigator" }, { pattern: /^\s*(arcgis-survey123:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Survey123" }, { pattern: /^\s*(arcgis-trek2there:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Trek2There" }, { pattern: /^\s*(arcgis-workforce:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Workforce" }, { pattern: /^\s*(iform:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "iForm" }, { pattern: /^\s*(flow:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "FlowFinity" }, { pattern: /^\s*(lfmobile:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Laserfische" }, { pattern: /^\s*(mspbi:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Microsoft Power Bi" }];
function a11(e13) {
  let a13 = null;
  return s10.some((s15) => (s15.pattern.test(e13) && (a13 = s15), !!a13)), a13;
}
function p7(s15, p14) {
  if ("string" != typeof p14 || !p14)
    return p14;
  const r10 = a11(p14);
  if (!r10)
    return p14;
  const t13 = p14.match(r10.pattern), n11 = t13 && t13[2], l13 = r2(r2(r10.label, { messages: s15, hierPart: n11 }), { appName: r10.appName }), i13 = r10.target ? ` target="${r10.target}"` : "", o11 = "_blank" === r10.target ? ' rel="noreferrer"' : "";
  return p14.replace(r10.pattern, `<a${i13} href="$1"${o11}>${l13}</a>`);
}

// node_modules/@arcgis/core/widgets/Feature/FeatureFields.js
var f4 = "esri-feature-fields";
var u5 = { base: f4, fieldHeader: `${f4}__field-header`, fieldData: `${f4}__field-data`, fieldDataDate: `${f4}__field-data--date`, esriTable: "esri-widget__table" };
var m4 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this._featureElementInfo = null, this.viewModel = new n6(), this.messages = null, this.messagesURIUtils = null;
  }
  initialize() {
    this._featureElementInfo = new l5(), this.addHandles(l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h));
  }
  destroy() {
    var _a;
    (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e13) {
    this.viewModel.attributes = e13;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e13) {
    this.viewModel.description = e13;
  }
  get expressionInfos() {
    return this.viewModel.expressionInfos;
  }
  set expressionInfos(e13) {
    this.viewModel.expressionInfos = e13;
  }
  get fieldInfos() {
    return this.viewModel.fieldInfos;
  }
  set fieldInfos(e13) {
    this.viewModel.fieldInfos = e13;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  renderFieldInfo(e13, t13) {
    const { attributes: s15 } = this.viewModel, i13 = e13.fieldName, r10 = e13.label || i13, o11 = s15 ? null == s15[i13] ? "" : s15[i13] : "", l13 = !(!e13.format || !e13.format.dateFormat), n11 = "number" == typeof o11 && !l13 ? this._forceLTR(o11) : p7(this.messagesURIUtils, o11), a13 = { [u5.fieldDataDate]: l13 };
    return n2("tr", { key: `fields-element-info-row-${i13}-${t13}` }, n2("th", { key: `fields-element-info-row-header-${i13}-${t13}`, class: u5.fieldHeader, innerHTML: r10 }), n2("td", { key: `fields-element-info-row-data-${i13}-${t13}`, class: this.classes(u5.fieldData, a13), innerHTML: n11 }));
  }
  renderFields() {
    const { formattedFieldInfos: e13 } = this.viewModel;
    return (e13 == null ? void 0 : e13.length) ? n2("table", { class: u5.esriTable, summary: this.messages.fieldsSummary }, n2("tbody", null, e13.map((e14, t13) => this.renderFieldInfo(e14, t13)))) : null;
  }
  render() {
    var _a;
    return n2("div", { class: u5.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderFields());
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e13, title: t13 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e13, title: t13 });
  }
  _forceLTR(e13) {
    return `&lrm;${e13}`;
  }
};
e2([y2()], m4.prototype, "attributes", null), e2([y2()], m4.prototype, "description", null), e2([y2()], m4.prototype, "expressionInfos", null), e2([y2()], m4.prototype, "fieldInfos", null), e2([y2()], m4.prototype, "title", null), e2([y2({ type: n6, nonNullable: true })], m4.prototype, "viewModel", void 0), e2([y2(), e3("esri/widgets/Feature/t9n/Feature")], m4.prototype, "messages", void 0), e2([y2(), e3("esri/widgets/support/t9n/uriUtils")], m4.prototype, "messagesURIUtils", void 0), m4 = e2([a2("esri.widgets.Feature.FeatureFields")], m4);
var c10 = m4;

// node_modules/@arcgis/core/renderers/support/numberUtils.js
var s11 = { maximumFractionDigits: 20 };
function c11(n11) {
  return m(n11, s11);
}

// node_modules/@arcgis/core/widgets/Legend/support/utils.js
var s12 = "<";
var i8 = ">";
var r5 = S("short-date");
function o4(l13, a13, o11, n11) {
  let e13 = "";
  0 === a13 ? e13 = `${s12} ` : a13 === o11 && (e13 = `${i8} `);
  let u12 = null;
  return u12 = n11 ? L(l13, r5) : c11(l13), e13 + u12;
}

// node_modules/@arcgis/core/widgets/Legend/support/colorRampUtils.js
var o5 = new l3([64, 64, 64]);
function n7(l13, o11) {
  const n11 = [], r10 = l13.length - 1;
  return 5 === l13.length ? n11.push(0, 2, 4) : n11.push(0, r10), l13.map((l14, t13) => n11.includes(t13) ? o4(l14, t13, r10, o11) : null);
}
async function r6(l13, e13, o11) {
  let r10 = false, a13 = [], u12 = [];
  if (l13.stops) {
    const e14 = l13.stops;
    a13 = e14.map((l14) => l14.value), r10 = e14.some((l14) => !!l14.label), r10 && (u12 = e14.map((l14) => l14.label));
  }
  const s15 = a13[0], i13 = a13[a13.length - 1];
  if (null == s15 && null == i13)
    return null;
  const c19 = r10 ? null : n7(a13, o11 ?? false);
  return (await Promise.all(a13.map(async (o12, n11) => ({ value: o12, color: "opacity" === l13.type ? await t7(o12, l13, e13) : (await import("./visualVariableUtils-BSRIYA6E.js")).getColor(l13, o12), label: r10 ? u12[n11] : (c19 == null ? void 0 : c19[n11]) ?? "" })))).reverse();
}
async function t7(e13, n11, r10 = o5) {
  const t13 = new l3(r10), a13 = (await import("./visualVariableUtils-BSRIYA6E.js")).getOpacity(n11, e13);
  return null != a13 && (t13.a = a13), t13;
}

// node_modules/@arcgis/core/widgets/Legend/support/heatmapRampUtils.js
function r7(r10) {
  if (!r10.colorStops)
    return [];
  const e13 = [...r10.colorStops].filter((o11) => {
    var _a;
    return ((_a = o11.color) == null ? void 0 : _a.a) > 0;
  });
  let t13 = e13.length - 1;
  if (e13 && e13[0]) {
    const r11 = e13[t13];
    r11 && 1 !== r11.ratio && (e13.push(new a7({ ratio: 1, color: r11.color })), t13++);
  }
  return e13.map((o11, e14) => {
    var _a, _b;
    let l13 = "";
    return 0 === e14 ? l13 = ((_a = r10.legendOptions) == null ? void 0 : _a.minLabel) || "low" : e14 === t13 && (l13 = ((_b = r10.legendOptions) == null ? void 0 : _b.maxLabel) || "high"), { color: o11.color, label: l13, ratio: o11.ratio };
  }).reverse();
}

// node_modules/@arcgis/core/renderers/support/utils.js
var m6 = s2.getLogger("esri.renderers.support.utils");
var g4 = S("short-date");
async function h5(e13, t13, i13) {
  r3(e13, t13, () => []).push(...i13);
}
async function b4(t13) {
  var _a, _b;
  const l13 = /* @__PURE__ */ new Map();
  if (!t13)
    return l13;
  if ("visualVariables" in t13 && t13.visualVariables) {
    const e13 = t13.visualVariables.filter((e14) => "color" === e14.type);
    for (const t14 of e13) {
      const e14 = (await r6(t14) ?? []).map((e15) => e15.color);
      await h5(l13, t14.field || t14.valueExpression, e14);
    }
  }
  if ("heatmap" === t13.type) {
    const e13 = r7(t13).map((e14) => e14.color);
    await h5(l13, t13.field || t13.valueExpression, e13);
  } else if ("pie-chart" === t13.type) {
    for (const e13 of t13.attributes)
      await h5(l13, e13.field || e13.valueExpression, [e13.color]);
    await h5(l13, "default", [(_a = t13 == null ? void 0 : t13.othersCategory) == null ? void 0 : _a.color, j4(t13.backgroundFillSymbol, null)]);
  } else if ("dot-density" === t13.type) {
    for (const e13 of t13.attributes)
      await h5(l13, e13.field || e13.valueExpression, [e13.color]);
    await h5(l13, "default", [t13.backgroundColor]);
  } else if ("unique-value" === t13.type)
    if ("predominance" === ((_b = t13.authoringInfo) == null ? void 0 : _b.type))
      for (const e13 of t13.uniqueValueInfos ?? [])
        await h5(l13, e13.value.toString(), [j4(e13.symbol, null)]);
    else {
      const e13 = (t13.uniqueValueInfos ?? []).map((e14) => j4(e14.symbol, null)), { field: i13, field2: o11, field3: n11, valueExpression: a13 } = t13;
      (i13 || a13) && await h5(l13, i13 || a13, e13), o11 && await h5(l13, o11, e13), n11 && await h5(l13, n11, e13);
    }
  else if ("class-breaks" === t13.type) {
    const e13 = t13.classBreakInfos.map((e14) => j4(e14.symbol, null)), { field: i13, valueExpression: o11 } = t13;
    await h5(l13, i13 ?? o11, e13);
  } else
    "simple" === t13.type && await h5(l13, "default", [j4(t13.symbol, null)]);
  return "defaultSymbol" in t13 && t13.defaultSymbol && await h5(l13, "default", [j4(t13.defaultSymbol, null)]), l13.forEach((t14, i13) => {
    const o11 = u(t14.filter(Boolean), (e13, t15) => JSON.stringify(e13) === JSON.stringify(t15));
    l13.set(i13, o11);
  }), l13;
}

// node_modules/@arcgis/core/widgets/Feature/support/relatedFeatureUtils.js
var c12 = "esri.widgets.Feature.support.relatedFeatureUtils";
var f5 = s2.getLogger(c12);
var d3 = /* @__PURE__ */ new Map();
function m7(e13) {
  if (!ue(e13))
    return null;
  const [t13, r10] = e13.split("/").slice(1);
  return { layerId: t13, fieldName: r10 };
}
function y6(e13, t13) {
  if (!t13.relationships)
    return null;
  let r10 = null;
  const { relationships: s15 } = t13;
  return s15.some((t14) => t14.id === parseInt(e13, 10) && (r10 = t14, true)), r10;
}
function j6({ originRelationship: e13, relationships: t13, layerId: r10 }) {
  let s15 = null;
  return t13 && t13.some((t14) => (`${t14.relatedTableId}` === r10 && t14.id === (e13 == null ? void 0 : e13.id) && (s15 = t14), !!s15)), s15;
}
function h6(e13, t13) {
  const r10 = t13.toLowerCase();
  for (const s15 in e13)
    if (s15.toLowerCase() === r10)
      return e13[s15];
  return null;
}
function g5(e13, t13) {
  const r10 = y6(e13, t13);
  if (!r10)
    return;
  return { url: `${t13.url}/${r10.relatedTableId}`, sourceSpatialReference: t13.spatialReference, relation: r10, relatedFields: [], outStatistics: [] };
}
function F4(e13, t13) {
  if (!t13)
    return;
  if (!e13)
    return;
  const { features: r10, statsFeatures: s15 } = e13, o11 = r10 && r10.value;
  t13.relatedFeatures = o11 ? o11.features : [];
  const i13 = s15 && s15.value;
  t13.relatedStatsFeatures = i13 ? i13.features : [];
}
function I3(e13, t13, r10, s15) {
  var _a;
  const o11 = new d();
  return o11.outFields = ["*"], o11.relationshipId = "number" == typeof t13.id ? t13.id : parseInt(t13.id, 10), o11.objectIds = [e13.attributes[r10.objectIdField]], ((_a = r10.queryRelatedFeatures) == null ? void 0 : _a.call(r10, o11, s15)) ?? Promise.resolve({});
}
function S5(e13, t13, r10) {
  let s15 = 0;
  const o11 = [];
  for (; s15 < t13.length; )
    o11.push(`${e13} IN (${t13.slice(s15, r10 + s15)})`), s15 += r10;
  return o11.join(" OR ");
}
async function w5(e13, t13, r10, s15) {
  const l13 = r10.layerId.toString(), { layerInfo: u12, relation: p14, relatedFields: c19, outStatistics: f11, url: d7, sourceSpatialReference: m14 } = t13;
  if (!u12 || !p14)
    return null;
  const y12 = j6({ originRelationship: p14, relationships: u12.relationships, layerId: l13 });
  if ((y12 == null ? void 0 : y12.relationshipTableId) && y12.keyFieldInRelationshipTable) {
    const t14 = (await I3(e13, y12, r10, s15))[e13.attributes[r10.objectIdField]];
    if (!t14)
      return null;
    const i13 = t14.features.map((e14) => e14.attributes[u12.objectIdField]);
    if ((f11 == null ? void 0 : f11.length) && u12.supportsStatistics) {
      const e14 = new x();
      e14.where = S5(u12.objectIdField, i13, 1e3), e14.outFields = c19, e14.outStatistics = f11, e14.sourceSpatialReference = m14;
      const r11 = { features: Promise.resolve(t14), statsFeatures: s8(d7, e14) };
      return E(r11);
    }
  }
  const g10 = y12 == null ? void 0 : y12.keyField;
  if (g10) {
    const r11 = ie(T3(u12.fields, g10)), l14 = h6(e13.attributes, p14.keyField), c20 = r11 ? `${g10}=${l14}` : `${g10}='${l14}'`, f12 = s8(d7, new x({ where: c20, outFields: t13.relatedFields, sourceSpatialReference: m14 }), s15), y13 = t13.outStatistics && t13.outStatistics.length > 0 && u12.supportsStatistics ? s8(d7, new x({ where: c20, outFields: t13.relatedFields, outStatistics: t13.outStatistics, sourceSpatialReference: m14 }), s15) : null, j10 = { features: f12 };
    return y13 && (j10.statsFeatures = y13), E(j10);
  }
  return null;
}
function b5(t13, r10) {
  return U3(t13, { query: { f: "json" }, signal: r10 && r10.signal });
}
function R4({ relatedInfos: e13, layer: r10 }, i13) {
  const n11 = {};
  return e13.forEach((e14, s15) => {
    const { relation: o11 } = e14;
    if (!o11) {
      const e15 = new s3("relation-required", "A relation is required on a layer to retrieve related records.");
      throw f5.error(e15), e15;
    }
    const { relatedTableId: i14 } = o11;
    if ("number" != typeof i14) {
      const e15 = new s3("A related table ID is required on a layer to retrieve related records.");
      throw f5.error(e15), e15;
    }
    const a13 = `${r10.url}/${i14}`, l13 = d3.get(a13), u12 = l13 || b5(a13);
    l13 || d3.set(a13, u12), n11[s15] = u12;
  }), y(E(n11), i13);
}
function $2({ graphic: e13, relatedInfos: t13, layer: r10 }, s15) {
  const i13 = {};
  return t13.forEach((t14, o11) => {
    t14.layerInfo && (i13[o11] = w5(e13, t14, r10, s15));
  }), E(i13);
}
function U6({ relatedInfo: e13, fieldName: t13, fieldInfo: r10 }) {
  var _a, _b;
  if ((_a = e13.relatedFields) == null ? void 0 : _a.push(t13), r10.statisticType) {
    const s15 = new m2({ statisticType: r10.statisticType, onStatisticField: t13, outStatisticFieldName: t13 });
    (_b = e13.outStatistics) == null ? void 0 : _b.push(s15);
  }
}
function T3(e13, t13) {
  if (null != e13) {
    t13 = t13.toLowerCase();
    for (const r10 of e13)
      if (r10 && r10.name.toLowerCase() === t13)
        return r10;
  }
  return null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia/FeatureMediaViewModel.js
var I4 = { chartAnimation: true };
var v7 = class extends v {
  constructor(t13) {
    super(t13), this.abilities = { ...I4 }, this.activeMediaInfoIndex = 0, this.attributes = null, this.description = null, this.fieldInfoMap = null, this.formattedAttributes = null, this.expressionAttributes = null, this.isAggregate = false, this.layer = null, this.mediaInfos = null, this.popupTemplate = null, this.relatedInfos = null, this.title = null;
  }
  castAbilities(t13) {
    return { ...I4, ...t13 };
  }
  get activeMediaInfo() {
    return this.formattedMediaInfos[this.activeMediaInfoIndex] || null;
  }
  get formattedMediaInfos() {
    return this._formatMediaInfos() || [];
  }
  get formattedMediaInfoCount() {
    return this.formattedMediaInfos.length;
  }
  setActiveMedia(t13) {
    this._setContentElementMedia(t13);
  }
  next() {
    this._pageContentElementMedia(1);
  }
  previous() {
    this._pageContentElementMedia(-1);
  }
  _setContentElementMedia(t13) {
    const { formattedMediaInfoCount: e13 } = this, i13 = (t13 + e13) % e13;
    this.activeMediaInfoIndex = i13;
  }
  _pageContentElementMedia(t13) {
    const { activeMediaInfoIndex: e13 } = this, i13 = e13 + t13;
    this._setContentElementMedia(i13);
  }
  _formatMediaInfos() {
    const { mediaInfos: t13, layer: e13 } = this, o11 = this.attributes ?? {}, r10 = this.formattedAttributes ?? {}, a13 = this.expressionAttributes ?? {}, s15 = this.fieldInfoMap ?? /* @__PURE__ */ new Map();
    return (t13 == null ? void 0 : t13.map((t14) => {
      const i13 = t14 == null ? void 0 : t14.clone();
      if (!i13)
        return null;
      if (i13.title = S4({ attributes: o11, fieldInfoMap: s15, globalAttributes: r10, expressionAttributes: a13, layer: e13, text: i13.title }), i13.caption = S4({ attributes: o11, fieldInfoMap: s15, globalAttributes: r10, expressionAttributes: a13, layer: e13, text: i13.caption }), i13.altText = S4({ attributes: o11, fieldInfoMap: s15, globalAttributes: r10, expressionAttributes: a13, layer: e13, text: i13.altText }), "image" === i13.type) {
        const { value: t15 } = i13;
        return this._setImageValue({ value: t15, formattedAttributes: r10, layer: e13 }), i13.value.sourceURL ? i13 : void 0;
      }
      if ("pie-chart" === i13.type || "line-chart" === i13.type || "column-chart" === i13.type || "bar-chart" === i13.type) {
        const { value: t15 } = i13;
        return this._setChartValue({ value: t15, chartType: i13.type, attributes: o11, formattedAttributes: r10, layer: e13, expressionAttributes: a13 }), i13;
      }
      return null;
    }).filter(r)) ?? [];
  }
  _setImageValue(t13) {
    const e13 = this.fieldInfoMap ?? /* @__PURE__ */ new Map(), { value: i13, formattedAttributes: o11, layer: r10 } = t13, { linkURL: a13, sourceURL: s15 } = i13;
    if (s15) {
      const t14 = _(s15, r10);
      i13.sourceURL = G({ formattedAttributes: o11, template: t14, fieldInfoMap: e13 });
    }
    if (a13) {
      const t14 = _(a13, r10);
      i13.linkURL = G({ formattedAttributes: o11, template: t14, fieldInfoMap: e13 });
    }
  }
  _setChartValue(t13) {
    const { value: e13, attributes: i13, formattedAttributes: o11, chartType: r10, layer: a13, expressionAttributes: s15 } = t13, { popupTemplate: l13, relatedInfos: n11 } = this, { fields: p14, normalizeField: d7 } = e13, c19 = a13;
    e13.fields = U5(p14, c19), d7 && (e13.normalizeField = L2(d7, c19));
    if (!p14.some((t14) => !!(null != o11[t14] || ue(t14) && (n11 == null ? void 0 : n11.size))))
      return;
    const h13 = (l13 == null ? void 0 : l13.fieldInfos) ?? [];
    p14.forEach((t14) => {
      if (ue(t14))
        return void (e13.series = [...e13.series, ...this._getRelatedChartInfos({ fieldInfos: h13, fieldName: t14, formattedAttributes: o11, chartType: r10, value: e13 })]);
      const a14 = this._getChartOption({ value: e13, attributes: i13, chartType: r10, formattedAttributes: o11, expressionAttributes: s15, fieldName: t14, fieldInfos: h13 });
      e13.series.push(a14);
    });
  }
  _getRelatedChartInfos(t13) {
    var _a;
    const { fieldInfos: e13, fieldName: i13, formattedAttributes: o11, chartType: r10, value: a13 } = t13, s15 = [], l13 = m7(i13), n11 = l13 && ((_a = this.relatedInfos) == null ? void 0 : _a.get(l13.layerId.toString()));
    if (!n11)
      return s15;
    const { relatedFeatures: p14, relation: d7 } = n11;
    if (!d7 || !p14)
      return s15;
    const { cardinality: u12 } = d7;
    p14.forEach((t14) => {
      const { attributes: n12 } = t14;
      n12 && Object.keys(n12).forEach((t15) => {
        t15 === l13.fieldName && s15.push(this._getChartOption({ value: a13, attributes: n12, formattedAttributes: o11, fieldName: i13, chartType: r10, relatedFieldName: t15, hasMultipleRelatedFeatures: (p14 == null ? void 0 : p14.length) > 1, fieldInfos: e13 }));
      });
    });
    return "one-to-many" === u12 || "many-to-many" === u12 ? s15 : [s15[0]];
  }
  _getTooltip({ label: t13, value: e13, chartType: i13 }) {
    return "pie-chart" === i13 ? `${t13}` : `${t13}: ${e13}`;
  }
  _getChartOption(t13) {
    var _a;
    const { value: e13, attributes: i13, formattedAttributes: o11, expressionAttributes: r10, fieldName: a13, relatedFieldName: n11, fieldInfos: p14, chartType: d7, hasMultipleRelatedFeatures: u12 } = t13, I6 = this.layer, v9 = this.fieldInfoMap ?? /* @__PURE__ */ new Map(), { normalizeField: M5, tooltipField: A6 } = e13, g10 = M5 ? ue(M5) ? i13[m7(M5).fieldName] : i13[M5] : null, x4 = M(a13) && r10 && void 0 !== r10[a13] ? r10[a13] : n11 && void 0 !== i13[n11] ? i13[n11] : void 0 !== i13[a13] ? i13[a13] : o11[a13], _4 = new i4({ fieldName: a13, value: void 0 === x4 ? null : x4 && g10 ? x4 / g10 : x4 });
    if (ue(a13)) {
      const t14 = v9.get(a13.toLowerCase()), e14 = A6 && v9.get(A6.toLowerCase()), r11 = (t14 == null ? void 0 : t14.fieldName) ?? a13, s15 = u12 && A6 ? m7(A6).fieldName : (e14 == null ? void 0 : e14.fieldName) ?? A6, l13 = u12 && s15 ? i13[s15] : o11[s15] ?? (t14 == null ? void 0 : t14.label) ?? (t14 == null ? void 0 : t14.fieldName) ?? n11, p15 = u12 && n11 ? i13[n11] : o11[r11];
      return _4.tooltip = this._getTooltip({ label: l13, value: p15, chartType: d7 }), _4;
    }
    const C6 = J3(p14, a13), T6 = L2(a13, I6), N5 = A6 && void 0 !== o11[A6] ? o11[A6] : R3(C6 || new c2({ fieldName: T6 }), (_a = this.popupTemplate) == null ? void 0 : _a.expressionInfos), F8 = o11[T6];
    return _4.tooltip = this._getTooltip({ label: N5, value: F8, chartType: d7 }), _4;
  }
};
e2([y2()], v7.prototype, "abilities", void 0), e2([s4("abilities")], v7.prototype, "castAbilities", null), e2([y2()], v7.prototype, "activeMediaInfoIndex", void 0), e2([y2({ readOnly: true })], v7.prototype, "activeMediaInfo", null), e2([y2()], v7.prototype, "attributes", void 0), e2([y2()], v7.prototype, "description", void 0), e2([y2()], v7.prototype, "fieldInfoMap", void 0), e2([y2()], v7.prototype, "formattedAttributes", void 0), e2([y2()], v7.prototype, "expressionAttributes", void 0), e2([y2({ readOnly: true })], v7.prototype, "formattedMediaInfos", null), e2([y2()], v7.prototype, "isAggregate", void 0), e2([y2()], v7.prototype, "layer", void 0), e2([y2({ readOnly: true })], v7.prototype, "formattedMediaInfoCount", null), e2([y2()], v7.prototype, "mediaInfos", void 0), e2([y2()], v7.prototype, "popupTemplate", void 0), e2([y2()], v7.prototype, "relatedInfos", void 0), e2([y2()], v7.prototype, "title", void 0), v7 = e2([a2("esri.widgets.Feature.FeatureMedia.FeatureMediaViewModel")], v7);
var M2 = v7;

// node_modules/@esri/calcite-colors/dist/colors.module.js
var f6 = ["#ffffff", "#858585", "#ffbebe", "#ffebbe", "#ffebaf", "#ffffbe", "#e9ffbe", "#d3ffbe", "#beffe8", "#bee8ff", "#bed2ff", "#e8beff", "#ffbee8", "#ebebeb", "#707070", "#ff7f7f", "#ffa77f", "#ffd37f", "#ffff73", "#d1ff73", "#a3ff73", "#73ffdf", "#73dfff", "#73b2ff", "#df73ff", "#ff73df", "#d6d6d6", "#5c5c5c", "#ff0000", "#ff5500", "#ffaa00", "#ffff00", "#aaff00", "#55ff00", "#00ffc5", "#00c5ff", "#0070ff", "#c500ff", "#ff00c5", "#c2c2c2", "#474747", "#e60000", "#e64c00", "#e69800", "#e6e600", "#98e600", "#4ce600", "#00e6a9", "#00a9e6", "#005ce6", "#a900e6", "#e600a9", "#adadad", "#242424", "#a80000", "#a83800", "#a87000", "#a8a800", "#70a800", "#38a800", "#00a884", "#0084a8", "#004da8", "#8400a8", "#a80084", "#999999", "#1a1a1a", "#730000", "#732600", "#734c00", "#737300", "#4c7300", "#267300", "#00734c", "#004c73", "#002673", "#4c0073", "#73004"];
var b6 = [].concat(f6.slice(30, 39), f6.slice(28, 30).reverse());
var e8 = [{ name: "default", colors: b6 }, { name: "cat-dark", colors: ["#ed5151", "#149ece", "#a7c636", "#9e559c", "#fc921f", "#ffde3e", "#f789d8", "#b7814a", "#3caf99", "#6b6bd6", "#b54779", "#7f7f7f"] }, { name: "tropical-bliss", colors: ["#fce138", "#ff9399", "#fcd27e", "#f1983c", "#a553b7", "#b1a9d0", "#6ecffc", "#4c81cd", "#fc6f84", "#fc3e5a", "#6af689", "#48885c"] }, { name: "desert-blooms", colors: ["#102432", "#144d59", "#ffc730", "#ed9310", "#a64f1b", "#661510", "#d9351a", "#b31515", "#4a0932", "#8c213f", "#18382e", "#2c6954"] }, { name: "under-the-sea", colors: ["#bf9727", "#607100", "#00734c", "#704489", "#01acca", "#024e76", "#f09100", "#ea311f", "#c6004b", "#7570b3", "#666666", "#333333"] }, { name: "vibrant-rainbow", colors: ["#fffb00", "#f5cb11", "#9fd40c", "#46e39c", "#32b8a6", "#7ff2fa", "#ac08cc", "#dd33ff", "#eb7200", "#e8a784", "#bf2e2e", "#6c7000"] }, { name: "ocean-bay", colors: ["#191921", "#11495c", "#78b1c2", "#454f4b", "#8f8f82", "#9be0c0", "#87b051", "#f7ec88", "#ebdcc1", "#dbb658", "#c43541", "#75351e"] }, { name: "prairie-summer", colors: ["#332424", "#751555", "#d47013", "#d68989", "#211173", "#82aad6", "#7bfaeb", "#6ec9a8", "#6b6408", "#eada40", "#ccc54a", "#1fc235"] }, { name: "pastel-chalk", colors: ["#fffd99", "#f5e6a4", "#c1d48c", "#b8e3d0", "#a0b8b5", "#cbf7fa", "#d791f2", "#dfc1eb", "#f2b983", "#e8c4b2", "#bf8e8e", "#94995c"] }, { name: "seq-yellow-orange-red-bright", colors: ["#910000", "#b1260b", "#c0370f", "#e05919", "#ef6a1d", "#ff7b22", "#ffa143", "#ffb454", "#ffda74", "#ffed85"] }, { name: "seq-reds-bright", colors: ["#57453b", "#7b4238", "#9f4036", "#c23d33", "#d7483c", "#ec5244", "#f3696c", "#f9816c", "#ffc4ae", "#fff0dc"] }, { name: "seq-purples-bright", colors: ["#4e465c", "#5a4a78", "#695291", "#775baa", "#8663c3", "#946bdc", "#aa89e8", "#c1a6f3", "#d7c4ff", "#e6e1ff"] }, { name: "seq-blues-bright", colors: ["#404d54", "#435c6c", "#48799d", "#4b88b6", "#4d96ce", "#50a5e7", "#74bbed", "#98d0f3", "#bce6f9", "#e6faff"] }, { name: "seq-greens-bright", colors: ["#39544c", "#386757", "#368165", "#359b73", "#33b581", "#4bc392", "#64d2a2", "#7ce0b3", "#cbf6d9", "#f4ffea"] }, { name: "seq-browns-bright", colors: ["#524834", "#715b38", "#8f6e3c", "#ae8140", "#cc9444", "#eba748", "#eeb664", "#f0c47f", "#f9e0b7", "#fff8eb"] }];

// node_modules/@arcgis/core/widgets/support/chartUtils.js
var n8 = "en-us";
var h7 = /* @__PURE__ */ new Map([["ar", () => import("./ar-53IQ2NVA.js").then((t13) => t13.a)], ["bg-bg", () => import("./bg_BG-KGWL2B3H.js").then((t13) => t13.b)], ["bs-ba", () => import("./bs_BA-FKCSRIBL.js").then((t13) => t13.b)], ["ca-es", () => import("./ca_ES-BHZVV2SX.js").then((t13) => t13.c)], ["cs-cz", () => import("./cs_CZ-HR7TEMUB.js").then((t13) => t13.c)], ["da-dk", () => import("./da_DK-YSHSIDEX.js").then((t13) => t13.d)], ["de-de", () => import("./de_DE-4IDOLXAB.js").then((t13) => t13.d)], ["de-ch", () => import("./de_CH-Z32JP2IF.js").then((t13) => t13.d)], ["el-gr", () => import("./el_GR-UA6FJGCZ.js").then((t13) => t13.e)], ["en-us", () => import("./en_US-DNAU7NHT.js").then((t13) => t13.e)], ["en-ca", () => import("./en_CA-2B2YVRQY.js").then((t13) => t13.e)], ["es-es", () => import("./es_ES-JPOTIYON.js").then((t13) => t13.e)], ["et-ee", () => import("./et_EE-35UHX2N5.js").then((t13) => t13.e)], ["fi-fi", () => import("./fi_FI-5GSKVEPA.js").then((t13) => t13.f)], ["fr-fr", () => import("./fr_FR-FUHGJ3GU.js").then((t13) => t13.f)], ["he-il", () => import("./he_IL-JVDXTSC2.js").then((t13) => t13.h)], ["hr-hr", () => import("./hr_HR-VQVI4XLH.js").then((t13) => t13.h)], ["hu-hu", () => import("./hu_HU-5VNU33EO.js").then((t13) => t13.h)], ["id-id", () => import("./id_ID-BV3ILNCJ.js").then((t13) => t13.i)], ["it-it", () => import("./it_IT-65IVLQHI.js").then((t13) => t13.i)], ["ja-jp", () => import("./ja_JP-LM3BAKM5.js").then((t13) => t13.j)], ["ko-kr", () => import("./ko_KR-OZBLEPXX.js").then((t13) => t13.k)], ["lt-lt", () => import("./lt_LT-JWEFIWQF.js").then((t13) => t13.l)], ["lv-lv", () => import("./lv_LV-BROKC6WH.js").then((t13) => t13.l)], ["nb-no", () => import("./nb_NO-5BXRWRME.js").then((t13) => t13.n)], ["nl-nl", () => import("./nl_NL-PAXC5JNZ.js").then((t13) => t13.n)], ["pl-pl", () => import("./pl_PL-HGD3B76D.js").then((t13) => t13.p)], ["pt-br", () => import("./pt_BR-GT4VDB35.js").then((t13) => t13.p)], ["pt-pt", () => import("./pt_PT-4S2KZQSB.js").then((t13) => t13.p)], ["ro-ro", () => import("./ro_RO-YPFPGJTC.js").then((t13) => t13.r)], ["ru-ru", () => import("./ru_RU-C4JIRPF3.js").then((t13) => t13.r)], ["sk-sk", () => import("./sk_SK-N2GXPOHZ.js").then((t13) => t13.s)], ["sl-sl", () => import("./sl_SL-OQ4M5HZ4.js").then((t13) => t13.s)], ["sr-rs", () => import("./sr_RS-H6R6LUP7.js").then((t13) => t13.s)], ["sv-se", () => import("./sv_SE-QJ4HXVKQ.js").then((t13) => t13.s)], ["th-th", () => import("./th_TH-2D7DSOQP.js").then((t13) => t13.t)], ["tr-tr", () => import("./tr_TR-T5CFATSW.js").then((t13) => t13.t)], ["uk-ua", () => import("./uk_UA-3W654E2X.js").then((t13) => t13.u)], ["vi-vn", () => import("./vi_VN-KHOPKXDG.js").then((t13) => t13.v)], ["zh-cn", () => import("./zh_Hans-HOEGIU6P.js").then((t13) => t13.z)], ["zh-hk", () => import("./zh_Hant-NADJPIBT.js").then((t13) => t13.z)], ["zh-tw", () => import("./zh_Hant-NADJPIBT.js").then((t13) => t13.z)]]);
function e9(t13) {
  const s15 = t13.split("-")[0].toLowerCase();
  let n11 = null;
  for (const e13 of h7.keys())
    if (e13.startsWith(s15)) {
      n11 = e13;
      break;
    }
  return n11;
}
function r8(t13) {
  return t13 ? h7.has(t13.toLowerCase()) ? t13.toLowerCase() : e9(t13) || n8 : n8;
}
var o6 = null;
var i9 = null;
async function u7(t13 = l()) {
  if (t13 = r8(t13), o6 && t13 === i9)
    return o6;
  o6 = import("./chunks-IWLPDVF2.js").then((t14) => t14.i), i9 = t13;
  try {
    const [s15, n11] = await Promise.all([o6, h7.get(i9)()]);
    i9 === t13 && (s15.am4core.options.defaultLocale = n11.default), s15.am4core.options.suppressWarnings = true, s15.am4core.options.autoDispose = true;
  } catch {
    return o6 = null, i9 = null, null;
  }
  return o6;
}
function c13(s15, n11 = "default") {
  const h13 = e8.find((t13) => t13.name === n11);
  return h13 ? h13.colors.map((t13) => s15.color(t13)) : null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia.js
var M3 = "esri-feature-media";
var I5 = { base: M3, mediaContainer: `${M3}__container`, mediaItemContainer: `${M3}__item-container`, mediaItem: `${M3}__item`, mediaItemTitle: `${M3}__item-title`, mediaItemCaption: `${M3}__item-caption`, mediaPrevious: `${M3}__previous`, mediaPreviousIconLTR: `${M3}__previous-icon`, mediaPreviousIconRTL: `${M3}__previous-icon--rtl`, mediaNext: `${M3}__next`, mediaNextIconLTR: `${M3}__next-icon`, mediaNextIconRTL: `${M3}__next-icon--rtl`, mediaChart: `${M3}__chart`, mediaButton: `${M3}__button`, mediaIcon: `${M3}__icon`, iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow" };
var _2 = 0.05;
var g6 = 0.95;
var w6 = 15;
var y7 = "color";
var T4 = "tooltip";
var b7 = "value";
var C2 = "default-line-value";
var x3 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this._refreshTimer = null, this._refreshIntervalInfo = null, this._featureElementInfo = null, this.viewModel = new M2(), this.messages = null, this._getChartDependencies = async (e14) => {
      const t14 = await u7(), { destroyed: i13, viewModel: r10 } = this;
      if (i13 || !r10 || !e14)
        return;
      const { activeMediaInfo: s15 } = r10, a13 = await this._getRendererColors(t14);
      this._renderChart({ chartDiv: e14, mediaInfo: s15, chartsModule: t14, colorMap: a13 });
    };
  }
  initialize() {
    this._featureElementInfo = new l5(), this.addHandles([l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.activeMediaInfo, (_b = this.viewModel) == null ? void 0 : _b.activeMediaInfoIndex];
    }, () => this._setupMediaRefreshTimer(), h), l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h)]);
  }
  destroy() {
    var _a;
    this._clearMediaRefreshTimer(), (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e13) {
    this.viewModel.attributes = e13;
  }
  get activeMediaInfoIndex() {
    return this.viewModel.activeMediaInfoIndex;
  }
  set activeMediaInfoIndex(e13) {
    this.viewModel.activeMediaInfoIndex = e13;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e13) {
    this.viewModel.description = e13;
  }
  get fieldInfoMap() {
    return this.viewModel.fieldInfoMap;
  }
  set fieldInfoMap(e13) {
    this.viewModel.fieldInfoMap = e13;
  }
  get layer() {
    return this.viewModel.layer;
  }
  set layer(e13) {
    this.viewModel.layer = e13;
  }
  get mediaInfos() {
    return this.viewModel.mediaInfos;
  }
  set mediaInfos(e13) {
    this.viewModel.mediaInfos = e13;
  }
  get popupTemplate() {
    return this.viewModel.popupTemplate;
  }
  set popupTemplate(e13) {
    this.viewModel.popupTemplate = e13;
  }
  get relatedInfos() {
    return this.viewModel.relatedInfos;
  }
  set relatedInfos(e13) {
    this.viewModel.relatedInfos = e13;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  render() {
    var _a;
    return n2("div", { bind: this, class: I5.base, onkeyup: this._handleMediaKeyup }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderMedia());
  }
  renderMedia() {
    const { formattedMediaInfoCount: e13 } = this.viewModel;
    return e13 ? n2("div", { key: "media-element-container", class: I5.mediaContainer }, this.renderMediaPageButton("previous"), this.renderMediaInfo(), this.renderMediaPageButton("next")) : null;
  }
  renderImageMediaInfo(e13) {
    const { _refreshIntervalInfo: t13 } = this, { activeMediaInfoIndex: i13, formattedMediaInfoCount: r10 } = this.viewModel, { value: s15, refreshInterval: a13, altText: o11, title: n11, type: l13 } = e13, { sourceURL: d7, linkURL: u12 } = s15, m14 = C(u12 ?? void 0) ? "_blank" : "_self", h13 = "_blank" === m14 ? "noreferrer" : "", p14 = a13 ? t13 : null, v9 = p14 ? p14.timestamp : 0, M5 = p14 ? p14.sourceURL : d7, I6 = n2("img", { alt: o11 || n11, key: `media-${l13}-${i13}-${r10}-${v9}`, src: M5 ?? void 0 }), _4 = u12 ? n2("a", { title: n11, href: u12, rel: h13, target: m14 }, I6) : null;
    return _4 || I6;
  }
  renderChartMediaInfo(e13) {
    const { activeMediaInfoIndex: t13, formattedMediaInfoCount: i13 } = this.viewModel;
    return n2("div", { key: `media-${e13.type}-${t13}-${i13}`, bind: this, class: I5.mediaChart, afterCreate: this._getChartDependencies });
  }
  renderMediaInfoType() {
    const { activeMediaInfo: e13 } = this.viewModel;
    return e13 ? "image" === e13.type ? this.renderImageMediaInfo(e13) : e13.type.includes("chart") ? this.renderChartMediaInfo(e13) : null : null;
  }
  renderMediaInfo() {
    const { activeMediaInfo: e13 } = this.viewModel;
    if (!e13)
      return null;
    const t13 = e13.title ? n2("div", { key: "media-title", class: I5.mediaItemTitle, innerHTML: e13.title }) : null, i13 = e13.caption ? n2("div", { key: "media-caption", class: I5.mediaItemCaption, innerHTML: e13.caption }) : null;
    return n2("div", { key: "media-container", class: I5.mediaItemContainer }, n2("div", { key: "media-item-container", class: I5.mediaItem }, this.renderMediaInfoType()), t13, i13);
  }
  renderMediaPageButton(e13) {
    if (this.viewModel.formattedMediaInfoCount < 2)
      return null;
    const t13 = "previous" === e13, i13 = t13 ? this.messages.previous : this.messages.next, r10 = t13 ? this.classes(I5.mediaButton, I5.mediaPrevious) : this.classes(I5.mediaButton, I5.mediaNext), s15 = t13 ? this.classes(I5.mediaIcon, I5.mediaPreviousIconLTR, I5.iconLeftTriangleArrow) : this.classes(I5.mediaIcon, I5.mediaNextIconLTR, I5.iconRightTriangleArrow), a13 = t13 ? this.classes(I5.mediaIcon, I5.mediaPreviousIconRTL, I5.iconRightTriangleArrow) : this.classes(I5.mediaIcon, I5.mediaNextIconRTL, I5.iconLeftTriangleArrow), o11 = t13 ? "media-previous" : "media-next", n11 = t13 ? this._previous : this._next;
    return n2("button", { type: "button", key: o11, title: i13, "aria-label": i13, tabIndex: 0, class: r10, bind: this, onclick: n11 }, n2("span", { "aria-hidden": "true", class: s15 }), n2("span", { "aria-hidden": "true", class: a13 }));
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e13, title: t13 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e13, title: t13 });
  }
  _next() {
    this.viewModel.next();
  }
  _previous() {
    this.viewModel.previous();
  }
  _getRenderer() {
    const { isAggregate: e13, layer: t13 } = this.viewModel;
    return e13 && (t13 == null ? void 0 : t13.featureReduction) && "renderer" in t13.featureReduction ? t13.featureReduction.renderer : t13 == null ? void 0 : t13.renderer;
  }
  async _getRendererColors(e13) {
    const { am4core: t13 } = e13, i13 = /* @__PURE__ */ new Map(), r10 = this._getRenderer(), s15 = "default";
    if (!r10)
      return i13;
    const a13 = await b4(r10);
    a13.delete(s15);
    return Array.from(a13.values()).every((e14) => 1 === (e14 == null ? void 0 : e14.length)) ? (i13.set(C2, t13.color({ r: 50, g: 50, b: 50, a: 1 })), Array.from(a13.keys()).forEach((e14) => {
      var _a;
      e14 && i13.set(e14, t13.color((_a = a13.get(e14)) == null ? void 0 : _a[0].toCss(true)));
    }), i13) : i13;
  }
  _handleMediaKeyup(e13) {
    const i13 = i(e13);
    "ArrowLeft" === i13 && (e13.stopPropagation(), this.viewModel.previous()), "ArrowRight" === i13 && (e13.stopPropagation(), this.viewModel.next());
  }
  _renderChart(e13) {
    const { abilities: t13 } = this.viewModel, { chartsModule: i13, chartDiv: r10, mediaInfo: s15, colorMap: a13 } = e13, { value: o11, type: n11 } = s15, { am4core: l13 } = i13, d7 = c13(l13);
    function c19(e14) {
      e14 instanceof l13.ColorSet && d7 && (e14.list = d7);
    }
    r4() && l13.useTheme(i13.am4themes_dark);
    const u12 = window.matchMedia("(prefers-reduced-motion: reduce)");
    t13.chartAnimation && !u12.matches ? l13.useTheme(i13.am4themes_animated) : l13.unuseTheme(i13.am4themes_animated), l13.useTheme(c19);
    const h13 = "pie-chart" === n11 ? this._createPieChart(e13) : this._createXYChart(e13);
    r10.setAttribute("aria-label", s15.altText || s15.title), h13.data = o11.series.map((e14) => ({ [T4]: e14.tooltip, [b7]: e14.value, [y7]: a13.get(e14.fieldName) })).filter((e14) => "pie-chart" !== n11 || null != e14.value && e14.value > 0);
  }
  _customizeChartTooltip(e13, t13) {
    e13 && (e13.label.wrap = true, e13.label.maxWidth = 200, e13.autoTextColor = false, e13.getFillFromObject = false, e13.label.fill = t13.color("#ffffff"), e13.background.fill = t13.color({ r: 0, g: 0, b: 0, a: 0.7 }));
  }
  _createPieChart(e13) {
    const { chartDiv: t13, chartsModule: i13 } = e13, { am4core: r10, am4charts: s15 } = i13, a13 = r10.create(t13, s15.PieChart);
    a13.rtl = f2(this.container);
    const o11 = a13.series.push(new s15.PieSeries());
    return o11.labels.template.disabled = true, o11.ticks.template.disabled = true, o11.dataFields.value = b7, o11.dataFields.category = T4, this._customizeChartTooltip(o11.tooltip, r10), o11.slices.template.propertyFields.fill = y7, o11.slices.template.propertyFields.stroke = y7, a13;
  }
  _getMinSeriesValue(e13) {
    let t13 = 0;
    return e13.forEach((e14) => t13 = Math.min(e14.value, t13)), t13;
  }
  _createColumnChart(e13, t13) {
    const { chartsModule: i13, mediaInfo: r10 } = t13, { value: s15 } = r10, { am4core: a13, am4charts: o11 } = i13, n11 = e13.xAxes.push(new o11.CategoryAxis());
    n11.dataFields.category = T4, n11.renderer.labels.template.disabled = true;
    const l13 = n11.tooltip;
    this._customizeChartTooltip(l13, a13), l13.events.on("sizechanged", () => {
      l13.dy = -l13.contentHeight;
    });
    const d7 = e13.yAxes.push(new o11.ValueAxis()), c19 = d7.renderer.labels.template;
    d7.renderer.minLabelPosition = _2, d7.renderer.maxLabelPosition = g6, d7.min = this._getMinSeriesValue(s15.series), this._customizeChartTooltip(d7.tooltip, a13), c19.wrap = true;
    const u12 = e13.series.push(new o11.ColumnSeries());
    u12.dataFields.valueY = b7, u12.dataFields.categoryX = T4, u12.columns.template.propertyFields.fill = y7, u12.columns.template.propertyFields.stroke = y7, e13.cursor = new o11.XYCursor(), s15.series.length > w6 && (e13.scrollbarX = new a13.Scrollbar());
  }
  _createBarChart(e13, t13) {
    const { chartsModule: i13, mediaInfo: r10 } = t13, { value: s15 } = r10, { am4core: a13, am4charts: o11 } = i13, n11 = e13.yAxes.push(new o11.CategoryAxis());
    n11.dataFields.category = T4, n11.renderer.inversed = true, n11.renderer.labels.template.disabled = true;
    const l13 = n11.tooltip;
    this._customizeChartTooltip(l13, a13), l13.events.on("sizechanged", () => {
      l13.dx = l13.contentWidth;
    });
    const d7 = e13.xAxes.push(new o11.ValueAxis()), c19 = d7.renderer.labels.template;
    d7.renderer.minLabelPosition = _2, d7.renderer.maxLabelPosition = g6, d7.min = this._getMinSeriesValue(s15.series), this._customizeChartTooltip(d7.tooltip, a13), c19.wrap = true;
    const u12 = e13.series.push(new o11.ColumnSeries());
    u12.dataFields.valueX = b7, u12.dataFields.categoryY = T4, u12.columns.template.propertyFields.fill = y7, u12.columns.template.propertyFields.stroke = y7, e13.cursor = new o11.XYCursor(), s15.series.length > w6 && (e13.scrollbarY = new a13.Scrollbar());
  }
  _createLineChart(e13, t13) {
    const { chartsModule: i13, mediaInfo: r10, colorMap: s15 } = t13, { value: a13 } = r10, { am4core: o11, am4charts: n11 } = i13, l13 = e13.xAxes.push(new n11.CategoryAxis());
    l13.dataFields.category = T4, l13.renderer.labels.template.disabled = true;
    const d7 = l13.tooltip;
    this._customizeChartTooltip(d7, o11), d7.events.on("sizechanged", () => {
      d7.dy = -d7.contentHeight;
    });
    const c19 = e13.yAxes.push(new n11.ValueAxis()), u12 = c19.renderer.labels.template;
    c19.renderer.minLabelPosition = _2, c19.renderer.maxLabelPosition = g6, c19.min = this._getMinSeriesValue(a13.series), this._customizeChartTooltip(c19.tooltip, o11), u12.wrap = true;
    const m14 = e13.series.push(new n11.LineSeries());
    m14.dataFields.categoryX = T4, m14.dataFields.valueY = b7, m14.strokeWidth = 1;
    const h13 = s15.get(C2);
    h13 && (m14.stroke = h13);
    const p14 = m14.bullets.push(new n11.CircleBullet());
    p14.propertyFields.fill = y7, p14.propertyFields.stroke = y7, e13.cursor = new n11.XYCursor(), a13.series.length > w6 && (e13.scrollbarX = new o11.Scrollbar());
  }
  _createXYChart(e13) {
    const { chartDiv: t13, chartsModule: i13, mediaInfo: r10 } = e13, { type: s15 } = r10, { am4core: a13, am4charts: o11 } = i13, n11 = a13.create(t13, o11.XYChart);
    return n11.rtl = f2(this.container), "column-chart" === s15 && this._createColumnChart(n11, e13), "bar-chart" === s15 && this._createBarChart(n11, e13), "line-chart" === s15 && this._createLineChart(n11, e13), n11;
  }
  _clearMediaRefreshTimer() {
    const { _refreshTimer: e13 } = this;
    e13 && (clearTimeout(e13), this._refreshTimer = null);
  }
  _updateMediaInfoTimestamp(e13) {
    const t13 = Date.now();
    this._refreshIntervalInfo = { timestamp: t13, sourceURL: e13 && this._getImageSource(e13, t13) }, this.scheduleRender();
  }
  _setupMediaRefreshTimer() {
    this._clearMediaRefreshTimer();
    const { activeMediaInfo: e13 } = this.viewModel;
    e13 && "image" === e13.type && e13.refreshInterval && this._setRefreshTimeout(e13);
  }
  _setRefreshTimeout(e13) {
    const { refreshInterval: t13, value: i13 } = e13;
    if (!t13)
      return;
    const r10 = 6e4 * t13;
    this._updateMediaInfoTimestamp(i13.sourceURL);
    const s15 = setInterval(() => {
      this._updateMediaInfoTimestamp(i13.sourceURL);
    }, r10);
    this._refreshTimer = s15;
  }
  _getImageSource(e13, t13) {
    const i13 = e13.includes("?") ? "&" : "?", [r10, s15 = ""] = e13.split("#");
    return `${r10}${i13}timestamp=${t13}${s15 ? "#" : ""}${s15}`;
  }
};
e2([y2()], x3.prototype, "attributes", null), e2([y2()], x3.prototype, "activeMediaInfoIndex", null), e2([y2()], x3.prototype, "description", null), e2([y2()], x3.prototype, "fieldInfoMap", null), e2([y2()], x3.prototype, "layer", null), e2([y2()], x3.prototype, "mediaInfos", null), e2([y2()], x3.prototype, "popupTemplate", null), e2([y2()], x3.prototype, "relatedInfos", null), e2([y2()], x3.prototype, "title", null), e2([y2({ type: M2 })], x3.prototype, "viewModel", void 0), e2([y2(), e3("esri/widgets/Feature/t9n/Feature")], x3.prototype, "messages", void 0), x3 = e2([a2("esri.widgets.Feature.FeatureMedia")], x3);
var R5 = x3;

// node_modules/@arcgis/core/widgets/Feature/support/arcadeFeatureUtils.js
var n9 = ["$datastore", "$map", "$layer", "$aggregatedfeatures"];
var s13 = "esri.widgets.Feature.support.arcadeFeatureUtils";
var o7 = s2.getLogger(s13);
function c14(e13) {
  return "string" == typeof e13 ? re(te(e13)) : Array.isArray(e13) ? p8(e13) : "esri.arcade.Dictionary" === (e13 == null ? void 0 : e13.declaredClass) ? l9(e13) : e13;
}
function p8(e13) {
  return `<ul class="esri-widget__list">${e13.map((e14) => `<li>${"string" == typeof e14 ? re(te(e14)) : e14}</li>`).join("")}</ul>`;
}
function l9(e13) {
  return `<table class="esri-widget__table">${e13.keys().map((r10) => {
    const t13 = e13.field(r10);
    return `<tr><th>${r10}</th><td>${"string" == typeof t13 ? re(te(t13)) : t13}</td></tr>`;
  }).join("")}</table>`;
}
function u8({ aggregatedFeatures: e13, arcadeUtils: r10, featureSetVars: a13, context: i13, viewInfo: n11, map: s15, graphic: o11, interceptor: c19 }) {
  a13.forEach((a14) => {
    const p14 = a14.toLowerCase(), l13 = n11.sr, u12 = { map: s15, spatialReference: l13, interceptor: c19 };
    if ("$map" === p14 && (i13.vars[p14] = r10.convertMapToFeatureSetCollection(u12)), "$layer" === p14 && (i13.vars[p14] = r10.convertFeatureLayerToFeatureSet({ layer: o11.sourceLayer, spatialReference: l13, interceptor: c19 })), "$datastore" === p14 && (i13.vars[p14] = r10.convertServiceUrlToWorkspace({ url: o11.sourceLayer.url, spatialReference: l13, interceptor: c19 })), "$aggregatedfeatures" === p14) {
      const a15 = o11.layer, { fields: n12, objectIdField: s16, geometryType: l14, spatialReference: u13, displayField: f11 } = a15, g10 = new He({ fields: n12, objectIdField: s16, geometryType: l14, spatialReference: u13, displayField: f11, ..."feature" === a15.type ? { templates: a15.templates, typeIdField: a15.typeIdField, types: a15.types } : null, source: e13 });
      i13.vars[p14] = r10.convertFeatureLayerToFeatureSet({ layer: g10, spatialReference: u13, interceptor: c19 });
    }
  });
}
function f7() {
  return import("./arcadeUtils-77GICJ2P.js");
}
function g7(e13) {
  return "createQuery" in e13 && "queryFeatures" in e13;
}
async function y8({ graphic: e13, view: r10 }) {
  const { isAggregate: t13, layer: a13 } = e13;
  if (!t13 || !a13 || "2d" !== (r10 == null ? void 0 : r10.type))
    return [];
  const i13 = await r10.whenLayerView(a13);
  if (!g7(i13))
    return [];
  const n11 = i13.createQuery(), s15 = e13.getObjectId();
  n11.aggregateIds = null != s15 ? [s15] : [];
  const { features: o11 } = await i13.queryFeatures(n11);
  return o11;
}
async function d4({ expressionInfo: e13, arcadeUtils: r10, interceptor: t13, spatialReference: a13, map: i13, graphic: s15, view: c19 }) {
  if (!e13 || !e13.expression)
    return null;
  const p14 = r10.createSyntaxTree(e13.expression), l13 = n9.filter((e14) => r10.hasVariable(p14, e14)), [f11] = await Promise.all([y8({ graphic: s15, view: c19 }), r10.loadScriptDependencies(p14, true, l13)]), g10 = r10.getViewInfo({ spatialReference: a13 }), d7 = r10.createExecContext(s15, g10);
  d7.interceptor = t13, d7.useAsync = true, u8({ aggregatedFeatures: f11, arcadeUtils: r10, featureSetVars: l13, context: d7, viewInfo: g10, map: i13, graphic: s15, interceptor: t13 });
  const m14 = r10.createFunction(p14, d7);
  return r10.executeAsyncFunction(m14, d7).catch((r11) => o7.error("arcade-execution-error", { error: r11, graphic: s15, expressionInfo: e13 }));
}
async function m8({ expressionInfos: e13, spatialReference: t13, graphic: a13, interceptor: i13, map: n11, view: s15 }) {
  if (!e13 || !e13.length)
    return {};
  const o11 = await f7(), p14 = {};
  for (const r10 of e13)
    p14[`expression/${r10.name}`] = d4({ expressionInfo: r10, arcadeUtils: o11, interceptor: i13, spatialReference: t13, map: n11, graphic: a13, view: s15 });
  const l13 = await E(p14), u12 = {};
  for (const r10 in l13)
    u12[r10] = c14(l13[r10].value);
  return u12;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression/FeatureExpressionViewModel.js
var w7 = 1;
var j7 = class extends a6(v) {
  constructor(t13) {
    super(t13), this._abortController = null, this.expressionInfo = null, this.graphic = null, this.contentElement = null, this.contentElementViewModel = null, this.interceptor = null, this.view = null, this._cancelQuery = () => {
      const { _abortController: t14 } = this;
      t14 && t14.abort(), this._abortController = null;
    }, this._createVM = () => {
      var _a, _b;
      const t14 = (_a = this.contentElement) == null ? void 0 : _a.type;
      (_b = this.contentElementViewModel) == null ? void 0 : _b.destroy();
      const e13 = "fields" === t14 ? new n6() : "media" === t14 ? new M2() : "text" === t14 ? new l6() : null;
      this._set("contentElementViewModel", e13);
    }, this._compile = async () => {
      this._cancelQuery();
      const t14 = new AbortController();
      this._abortController = t14, await this._compileExpression(), this._abortController === t14 && (this._abortController = null);
    }, this._compileThrottled = e6(this._compile, w7, this), this._compileExpression = async () => {
      const { expressionInfo: t14, graphic: e13, interceptor: o11, spatialReference: r10, map: n11, view: s15, _abortController: i13 } = this;
      if (!(t14 && e13 && r10 && n11))
        return void this._set("contentElement", null);
      const l13 = await f7();
      if (i13 !== this._abortController)
        return;
      const p14 = await d4({ arcadeUtils: l13, expressionInfo: t14, graphic: e13, interceptor: o11, map: n11, spatialReference: r10, view: s15 });
      if (!p14 || "esri.arcade.Dictionary" !== p14.declaredClass)
        return void this._set("contentElement", null);
      const h13 = await p14.castAsJsonAsync(i13 == null ? void 0 : i13.signal), u12 = h13 == null ? void 0 : h13.type, d7 = "media" === u12 ? I.fromJSON(h13) : "text" === u12 ? c4.fromJSON(h13) : "fields" === u12 ? c3.fromJSON(h13) : null;
      this._set("contentElement", d7);
    }, this.handles.add([l2(() => [this.expressionInfo, this.graphic, this.map, this.spatialReference, this.view], () => this._compileThrottled(), h), l2(() => [this.contentElement], () => this._createVM(), h)]);
  }
  destroy() {
    var _a;
    this._cancelQuery(), (_a = this.contentElementViewModel) == null ? void 0 : _a.destroy(), this._set("contentElementViewModel", null), this._set("contentElement", null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(t13) {
    this._override("spatialReference", t13);
  }
  get state() {
    const { _abortController: t13, contentElement: e13, contentElementViewModel: o11 } = this;
    return t13 ? "loading" : e13 || o11 ? "ready" : "disabled";
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) ?? null;
  }
  set map(t13) {
    this._override("map", t13);
  }
};
e2([y2()], j7.prototype, "_abortController", void 0), e2([y2({ type: i3 })], j7.prototype, "expressionInfo", void 0), e2([y2({ type: g2 })], j7.prototype, "graphic", void 0), e2([y2({ readOnly: true })], j7.prototype, "contentElement", void 0), e2([y2({ readOnly: true })], j7.prototype, "contentElementViewModel", void 0), e2([y2()], j7.prototype, "interceptor", void 0), e2([y2()], j7.prototype, "spatialReference", null), e2([y2({ readOnly: true })], j7.prototype, "state", null), e2([y2()], j7.prototype, "map", null), e2([y2()], j7.prototype, "view", void 0), j7 = e2([a2("esri.widgets.Feature.FeatureExpression.FeatureExpressionViewModel")], j7);
var C3 = j7;

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression.js
var c15 = { iconLoading: "esri-icon-loading-indicator esri-rotating", base: "esri-feature-expression", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };
var u9 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this._contentWidget = null, this.viewModel = new C3();
  }
  initialize() {
    this.addHandles(l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentElementViewModel;
    }, () => this._setupExpressionWidget(), h));
  }
  destroy() {
    this._destroyContentWidget();
  }
  renderLoading() {
    return n2("div", { key: "loading-container", class: c15.loadingSpinnerContainer }, n2("span", { class: this.classes(c15.iconLoading, c15.spinner) }));
  }
  render() {
    var _a;
    const { state: e13 } = this.viewModel;
    return n2("div", { class: c15.base }, "loading" === e13 ? this.renderLoading() : "disabled" === e13 ? null : (_a = this._contentWidget) == null ? void 0 : _a.render());
  }
  _destroyContentWidget() {
    const { _contentWidget: e13 } = this;
    e13 && (e13.viewModel = null, e13.destroy()), this._contentWidget = null;
  }
  _setupExpressionWidget() {
    const { contentElementViewModel: e13, contentElement: t13 } = this.viewModel, s15 = t13 == null ? void 0 : t13.type;
    this._destroyContentWidget();
    const i13 = e13 ? "fields" === s15 ? new c10({ viewModel: e13 }) : "media" === s15 ? new R5({ viewModel: e13 }) : "text" === s15 ? new p6({ viewModel: e13 }) : null : null;
    this._contentWidget = i13, this.scheduleRender();
  }
};
e2([y2({ type: C3 })], u9.prototype, "viewModel", void 0), u9 = e2([a2("esri.widgets.Feature.FeatureExpression")], u9);
var m9 = u9;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship/FeatureRelationshipViewModel.js
var b8 = 100;
var F5 = class extends i2(s7(a6(v))) {
  constructor(e13) {
    super(e13), this._queryAbortController = null, this._queryPageAbortController = null, this._queryFeatureCountAbortController = null, this.featuresPerPage = 10, this.description = null, this.graphic = null, this.layer = null, this.map = null, this.orderByFields = null, this.featureCount = 0, this.relationshipId = null, this.showAllEnabled = false, this.title = null, this._cancelQuery = () => {
      const { _queryAbortController: e14 } = this;
      e14 && e14.abort(), this._queryAbortController = null;
    }, this._cancelQueryFeatureCount = () => {
      const { _queryFeatureCountAbortController: e14 } = this;
      e14 && e14.abort(), this._queryFeatureCountAbortController = null;
    }, this._cancelQueryPage = () => {
      const { _queryPageAbortController: e14 } = this;
      e14 && e14.abort(), this._queryPageAbortController = null;
    }, this._queryController = async () => {
      this._cancelQuery();
      const e14 = new AbortController();
      this._queryAbortController = e14, await g(this._query()), this._queryAbortController === e14 && (this._queryAbortController = null);
    }, this._queryFeatureCountController = async () => {
      this._cancelQueryFeatureCount();
      const e14 = new AbortController();
      this._queryFeatureCountAbortController = e14, await g(this._queryFeatureCount()), this._queryFeatureCountAbortController === e14 && (this._queryFeatureCountAbortController = null);
    }, this._queryPageController = async () => {
      const e14 = new AbortController();
      this._queryPageAbortController = e14, await g(this._queryPage()), this._queryPageAbortController === e14 && (this._queryPageAbortController = null);
    }, this._queryThrottled = e6(this._queryController, b8, this), this._queryFeatureCountThrottled = e6(this._queryFeatureCountController, b8, this), this._queryPageThrottled = e6(this._queryPageController, b8, this), this._query = async () => {
      const { _queryAbortController: e14, relatedFeatures: t13 } = this;
      this._destroyRelatedFeatureViewModels(), this.featurePage = 1, t13.removeAll(), t13.addMany(this._sliceFeatures(await this._queryRelatedFeatures({ signal: e14 == null ? void 0 : e14.signal })));
    }, this.handles.add([l2(() => [this.displayCount, this.graphic, this.layer, this.map, this.orderByFieldsFixedCasing, this.relationshipId, this.featuresPerPage, this.showAllEnabled, this.canQuery, this.featureCount], () => this._queryThrottled(), h), l2(() => [this.featurePage, this.showAllEnabled], () => this._queryPageThrottled()), l2(() => [this.layer, this.relationshipId, this.objectId, this.canQuery], () => this._queryFeatureCountThrottled())]);
  }
  destroy() {
    this._destroyRelatedFeatureViewModels(), this.relatedFeatures.removeAll(), this._cancelQuery(), this._cancelQueryFeatureCount(), this._cancelQueryPage();
  }
  set featurePage(e13) {
    const { featuresPerPage: t13, featureCount: r10 } = this, o11 = 1, l13 = Math.ceil(r10 / t13) || 1;
    this._set("featurePage", Math.min(Math.max(e13, o11), l13));
  }
  get featurePage() {
    return this._get("featurePage");
  }
  get orderByFieldsFixedCasing() {
    const { orderByFields: e13, relatedLayer: t13 } = this;
    return e13 && (t13 == null ? void 0 : t13.loaded) ? e13.map((e14) => {
      const r10 = e14.clone(), o11 = L2(e14.field, t13);
      return r10.field = o11, r10;
    }) : e13 ?? [];
  }
  get supportsCacheHint() {
    var _a, _b, _c;
    return !!((_c = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated) == null ? void 0 : _c.supportsCacheHint);
  }
  get canQuery() {
    var _a, _b;
    const e13 = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated;
    return !!(this.relatedLayer && this.relationship && "number" == typeof this.relationshipId && "number" == typeof this.objectId && (e13 == null ? void 0 : e13.supportsCount) && (e13 == null ? void 0 : e13.supportsPagination));
  }
  get itemDescriptionFieldName() {
    var _a, _b;
    return ((_b = (_a = this.orderByFieldsFixedCasing) == null ? void 0 : _a[0]) == null ? void 0 : _b.field) || null;
  }
  set displayCount(e13) {
    const t13 = 0, r10 = 10;
    this._set("displayCount", Math.min(Math.max(e13, t13), r10));
  }
  get displayCount() {
    return this._get("displayCount");
  }
  get objectId() {
    var _a, _b;
    return (this.objectIdField && ((_b = (_a = this.graphic) == null ? void 0 : _a.attributes) == null ? void 0 : _b[this.objectIdField])) ?? null;
  }
  get objectIdField() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.objectIdField) || null;
  }
  get relatedFeatures() {
    return this._get("relatedFeatures") || new j2();
  }
  get relatedLayer() {
    const { layer: e13, map: t13, relationship: r10 } = this;
    return (e13 == null ? void 0 : e13.loaded) && t13 && r10 ? ge(t13, e13, r10) ?? null : null;
  }
  get relationship() {
    var _a;
    const { relationshipId: e13, layer: t13 } = this;
    return "number" == typeof e13 ? ((_a = t13 == null ? void 0 : t13.relationships) == null ? void 0 : _a.find(({ id: t14 }) => t14 === e13)) ?? null : null;
  }
  get relatedFeatureViewModels() {
    return this._get("relatedFeatureViewModels") || new j2();
  }
  get state() {
    const { _queryAbortController: e13, _queryFeatureCountAbortController: t13, _queryPageAbortController: r10, canQuery: o11 } = this;
    return t13 ? "loading" : e13 || r10 ? "querying" : o11 ? "ready" : "disabled";
  }
  _destroyRelatedFeatureViewModels() {
    var _a;
    (_a = this.relatedFeatureViewModels) == null ? void 0 : _a.forEach((e13) => !e13.destroyed && e13.destroy()), this.relatedFeatureViewModels.removeAll();
  }
  async _queryFeatureCount() {
    const { layer: e13, relatedLayer: t13, relationshipId: r10, objectId: o11, _queryFeatureCountAbortController: l13, canQuery: s15, supportsCacheHint: a13 } = this;
    if (await (e13 == null ? void 0 : e13.load()), await (t13 == null ? void 0 : t13.load()), !s15 || !e13 || !t13)
      return void this._set("featureCount", 0);
    const n11 = t13.createQuery(), u12 = new d({ cacheHint: a13, relationshipId: r10, returnGeometry: false, objectIds: [o11], where: s(n11.where, void 0) }), d7 = await e13.queryRelatedFeaturesCount(u12, { signal: l13 == null ? void 0 : l13.signal });
    this._set("featureCount", d7[o11] || 0);
  }
  _sliceFeatures(e13) {
    const { showAllEnabled: t13, displayCount: r10 } = this;
    return t13 ? e13 : r10 ? e13.slice(0, r10) : [];
  }
  async _queryPage() {
    const { relatedFeatures: e13, featurePage: t13, showAllEnabled: r10, _queryPageAbortController: o11 } = this;
    !r10 || t13 < 2 || e13.addMany(await this._queryRelatedFeatures({ signal: o11 == null ? void 0 : o11.signal }));
  }
  async _queryRelatedFeatures(e13) {
    var _a;
    const { orderByFieldsFixedCasing: t13, showAllEnabled: r10, featuresPerPage: o11, displayCount: l13, layer: s15, relationshipId: a13, featurePage: u12, featureCount: d7, relatedLayer: y12, supportsCacheHint: h13 } = this, { canQuery: p14, objectId: c19 } = this;
    if (!p14 || !s15 || !y12)
      return [];
    const _4 = r10 ? ((u12 - 1) * o11 + d7) % d7 : 0, g10 = r10 ? o11 : l13, b13 = y12.objectIdField, F8 = [...t13 == null ? void 0 : t13.map((e14) => e14.field), b13].filter(r), m14 = t13 == null ? void 0 : t13.map((e14) => `${e14.field} ${e14.order}`), f11 = y12.createQuery(), q3 = new d({ orderByFields: m14, start: _4, num: g10, outFields: F8, cacheHint: h13, relationshipId: a13, returnGeometry: false, objectIds: [c19], where: s(f11.where, void 0) }), A6 = ((_a = (await s15.queryRelatedFeatures(q3, { signal: e13 == null ? void 0 : e13.signal }))[c19]) == null ? void 0 : _a.features) || [];
    return A6.forEach((e14) => {
      e14.sourceLayer = y12, e14.layer = y12;
    }), A6;
  }
};
e2([y2()], F5.prototype, "_queryAbortController", void 0), e2([y2()], F5.prototype, "_queryPageAbortController", void 0), e2([y2()], F5.prototype, "_queryFeatureCountAbortController", void 0), e2([y2({ value: 1 })], F5.prototype, "featurePage", null), e2([y2()], F5.prototype, "featuresPerPage", void 0), e2([y2({ readOnly: true })], F5.prototype, "orderByFieldsFixedCasing", null), e2([y2({ readOnly: true })], F5.prototype, "supportsCacheHint", null), e2([y2({ readOnly: true })], F5.prototype, "canQuery", null), e2([y2()], F5.prototype, "description", void 0), e2([y2({ readOnly: true })], F5.prototype, "itemDescriptionFieldName", null), e2([y2({ value: 3 })], F5.prototype, "displayCount", null), e2([y2({ type: g2 })], F5.prototype, "graphic", void 0), e2([y2()], F5.prototype, "layer", void 0), e2([y2()], F5.prototype, "map", void 0), e2([y2({ readOnly: true })], F5.prototype, "objectId", null), e2([y2({ readOnly: true })], F5.prototype, "objectIdField", null), e2([y2()], F5.prototype, "orderByFields", void 0), e2([y2({ readOnly: true })], F5.prototype, "relatedFeatures", null), e2([y2({ readOnly: true })], F5.prototype, "relatedLayer", null), e2([y2({ readOnly: true })], F5.prototype, "relationship", null), e2([y2()], F5.prototype, "featureCount", void 0), e2([y2({ readOnly: true })], F5.prototype, "relatedFeatureViewModels", null), e2([y2()], F5.prototype, "relationshipId", void 0), e2([y2()], F5.prototype, "showAllEnabled", void 0), e2([y2()], F5.prototype, "state", null), e2([y2()], F5.prototype, "title", void 0), F5 = e2([a2("esri.widgets.Feature.FeatureRelationship.FeatureRelationshipViewModel")], F5);
var m10 = F5;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship.js
var g8 = "esri-feature";
var w8 = `${g8}-relationship`;
var b9 = { base: w8, esriWidget: "esri-widget", listContainer: `${w8}__list`, listContainerQuerying: `${w8}__list--querying`, featureObserver: `${g8}__feature-observer`, stickySpinnerContainer: `${g8}__sticky-loading-container`, loadingSpinnerContainer: `${g8}__loading-container`, spinner: `${g8}__loading-spinner`, iconLoading: "esri-icon-loading-indicator esri-rotating" };
var f8 = { title: true, description: true };
var y9 = class extends W {
  constructor(e13, t13) {
    super(e13, t13), this._featureElementInfo = null, this._relatedFeatureIntersectionObserverNode = null, this._relatedFeatureIntersectionObserver = new IntersectionObserver(([e14]) => {
      (e14 == null ? void 0 : e14.isIntersecting) && this._increaseFeaturePage();
    }, { root: window.document }), this.headingLevel = 2, this.viewModel = new m10(), this.messages = null, this.messagesCommon = null, this.visibleElements = { ...f8 }, this._increaseFeaturePage = () => {
      const { state: e14, showAllEnabled: t14, relatedFeatures: s15, featuresPerPage: r10, featurePage: i13 } = this.viewModel;
      "ready" === e14 && t14 && s15.length >= r10 * i13 && this.viewModel.featurePage++;
    };
  }
  initialize() {
    this._featureElementInfo = new l5(), this.addHandles([l2(() => [this.viewModel.description, this.viewModel.title, this.headingLevel], () => this._setupFeatureElementInfo(), h), l2(() => [this.viewModel.state, this.viewModel.showAllEnabled, this._relatedFeatureIntersectionObserverNode], () => this._handleRelatedFeatureObserverChange()), a4(() => this.viewModel.relatedFeatureViewModels, "change", () => this._setupRelatedFeatureViewModels())]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-list-GYQI5KYP.js"), import("./calcite-list-item-SM5MEPMJ.js"), import("./calcite-icon-XAFZ5NNH.js"), import("./calcite-notice-WOHUINMU.js")]);
  }
  destroy() {
    this._unobserveRelatedFeatureObserver(), this._featureElementInfo = a(this._featureElementInfo);
  }
  get displayShowAllButton() {
    const { showAllEnabled: e13, featureCount: t13, displayCount: s15 } = this.viewModel;
    return !e13 && !!t13 && (t13 > s15 || 0 === s15);
  }
  get displayListItems() {
    return this.displayShowAllButton || this.viewModel.relatedFeatureViewModels.length > 0;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e13) {
    this.viewModel.description = e13;
  }
  get featureCountDescription() {
    const { messages: e13 } = this, { featureCount: t13 } = this.viewModel;
    return s5(1 === t13 ? e13 == null ? void 0 : e13.numberRecord : e13 == null ? void 0 : e13.numberRecords, { number: t13 });
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  castVisibleElements(e13) {
    return { ...f8, ...e13 };
  }
  renderStickyLoading() {
    return "querying" === this.viewModel.state ? n2("div", { key: "sticky-loader", class: b9.stickySpinnerContainer }, this.renderLoadingIcon()) : null;
  }
  renderLoadingIcon() {
    return n2("span", { class: this.classes(b9.iconLoading, b9.spinner) });
  }
  renderLoading() {
    return n2("div", { key: "loading-container", class: b9.loadingSpinnerContainer }, this.renderLoadingIcon());
  }
  renderShowAllIconNode() {
    return n2("calcite-icon", { scale: "s", icon: "list", slot: "content-end" });
  }
  renderChevronIconNode() {
    const e13 = f2(this.container) ? "chevron-left" : "chevron-right";
    return n2("calcite-icon", { scale: "s", icon: e13, slot: "content-end" });
  }
  renderRelatedFeature(e13) {
    var _a, _b;
    const { itemDescriptionFieldName: t13 } = this.viewModel, s15 = e13.title;
    e13.description = t13 && ((_a = e13.formattedAttributes) == null ? void 0 : _a.global[t13]);
    const r10 = "loading" === e13.state;
    return n2("calcite-list-item", { key: e13.uid, label: r10 ? `${(_b = this.messagesCommon) == null ? void 0 : _b.loading}…` : s15, description: r10 ? "…" : e13.description ?? "", onCalciteListItemSelect: () => this.emit("select-record", { featureViewModel: e13 }) }, this.renderChevronIconNode());
  }
  renderShowAllListItem() {
    var _a;
    return this.displayShowAllButton ? n2("calcite-list-item", { key: "show-all-item", label: (_a = this.messages) == null ? void 0 : _a.showAll, description: this.featureCountDescription, onCalciteListItemSelect: () => this.emit("show-all-records") }, this.renderShowAllIconNode()) : null;
  }
  renderNoRelatedFeaturesMessage() {
    var _a;
    return n2("calcite-notice", { key: "no-related-features-message", icon: "information", open: true, kind: "brand", scale: "s", width: "full" }, n2("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.noRelatedFeatures));
  }
  renderFeatureObserver() {
    return n2("div", { key: "feature-observer", class: b9.featureObserver, bind: this, afterCreate: this._relatedFeatureIntersectionObserverCreated });
  }
  renderList() {
    const { relatedFeatureViewModels: e13 } = this.viewModel;
    return n2("calcite-list", null, e13.toArray().map((e14) => this.renderRelatedFeature(e14)), this.renderShowAllListItem());
  }
  renderRelatedFeatures() {
    const { displayListItems: e13 } = this, { state: t13 } = this.viewModel;
    return n2("div", { key: "list-container", class: this.classes(b9.listContainer, { [b9.listContainerQuerying]: "querying" === t13 }) }, e13 ? this.renderList() : "ready" === t13 ? this.renderNoRelatedFeaturesMessage() : null, this.renderStickyLoading(), this.renderFeatureObserver());
  }
  renderRelationshipNotFound() {
    var _a;
    return n2("calcite-notice", { key: "relationship-not-found", icon: "exclamation-mark-triangle", open: true, kind: "danger", scale: "s", width: "full" }, n2("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.relationshipNotFound));
  }
  render() {
    var _a;
    const { state: e13 } = this.viewModel;
    return n2("div", { class: this.classes(b9.base, b9.esriWidget) }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), "loading" === e13 ? this.renderLoading() : "disabled" === e13 ? this.renderRelationshipNotFound() : this.renderRelatedFeatures());
  }
  _setupRelatedFeatureViewModels() {
    const { relatedFeatureViewModels: e13 } = this.viewModel, t13 = "related-feature-viewmodels";
    this.removeHandles(t13), e13 == null ? void 0 : e13.forEach((e14) => {
      this.addHandles(l2(() => [e14.title, e14.state], () => this.scheduleRender(), h), t13);
    }), this.scheduleRender();
  }
  _setupFeatureElementInfo() {
    var _a;
    const { headingLevel: e13, visibleElements: t13 } = this, s15 = t13.description && this.description, r10 = t13.title && this.title;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: s15, title: r10, headingLevel: e13 });
  }
  async _handleRelatedFeatureObserverChange() {
    this._unobserveRelatedFeatureObserver();
    const { state: e13, showAllEnabled: t13 } = this.viewModel;
    await U(0), this._relatedFeatureIntersectionObserverNode && "ready" === e13 && t13 && this._relatedFeatureIntersectionObserver.observe(this._relatedFeatureIntersectionObserverNode);
  }
  _relatedFeatureIntersectionObserverCreated(e13) {
    this._relatedFeatureIntersectionObserverNode = e13;
  }
  _unobserveRelatedFeatureObserver() {
    this._relatedFeatureIntersectionObserverNode && this._relatedFeatureIntersectionObserver.unobserve(this._relatedFeatureIntersectionObserverNode);
  }
};
e2([y2()], y9.prototype, "_relatedFeatureIntersectionObserverNode", void 0), e2([y2({ readOnly: true })], y9.prototype, "displayShowAllButton", null), e2([y2({ readOnly: true })], y9.prototype, "displayListItems", null), e2([y2()], y9.prototype, "description", null), e2([y2({ readOnly: true })], y9.prototype, "featureCountDescription", null), e2([y2()], y9.prototype, "headingLevel", void 0), e2([y2()], y9.prototype, "title", null), e2([y2({ type: m10 })], y9.prototype, "viewModel", void 0), e2([y2(), e3("esri/widgets/Feature/t9n/Feature")], y9.prototype, "messages", void 0), e2([y2(), e3("esri/t9n/common")], y9.prototype, "messagesCommon", void 0), e2([y2()], y9.prototype, "visibleElements", void 0), e2([s4("visibleElements")], y9.prototype, "castVisibleElements", null), y9 = e2([a2("esri.widgets.Feature.FeatureRelationship")], y9);
var F6 = y9;

// node_modules/@arcgis/core/arcade/featureset/support/FeatureSetQueryInterceptor.js
var e10 = class {
  constructor(e13, a13) {
    this.preLayerQueryCallback = e13, this.preRequestCallback = a13, this.preLayerQueryCallback || (this.preLayerQueryCallback = (e14) => {
    }), this.preRequestCallback || (this.preLayerQueryCallback = (e14) => {
    });
  }
};

// node_modules/@arcgis/core/widgets/Feature/FeatureViewModel.js
var G2;
var H2 = 1;
var z2 = "content-view-models";
var J4 = "relationship-view-models";
var K3 = { attachmentsContent: true, chartAnimation: true, customContent: true, expressionContent: true, fieldsContent: true, mediaContent: true, textContent: true, relationshipContent: true };
var W3 = G2 = class extends s7(v) {
  constructor(e13) {
    super(e13), this._handles = new t2(), this._error = null, this._featureAbortController = null, this._graphicChangedThrottled = e6(this._graphicChanged, H2, this), this._expressionAttributes = null, this._graphicExpressionAttributes = null, this.abilities = { ...K3 }, this.content = null, this.contentViewModels = [], this.description = null, this.defaultPopupTemplateEnabled = false, this.formattedAttributes = null, this.lastEditInfo = null, this.relatedInfos = /* @__PURE__ */ new Map(), this.title = "", this.view = null, this._isAllowedContentType = (e14) => {
      const { abilities: t13 } = this;
      return "attachments" === e14.type && !!t13.attachmentsContent || "custom" === e14.type && !!t13.customContent || "fields" === e14.type && !!t13.fieldsContent || "media" === e14.type && !!t13.mediaContent || "text" === e14.type && !!t13.textContent || "expression" === e14.type && !!t13.expressionContent || "relationship" === e14.type && !!t13.relationshipContent;
    }, this._handles.add(l2(() => [this.graphic, this._effectivePopupTemplate, this.abilities], () => this._graphicChangedThrottled(), h));
  }
  destroy() {
    this._clear(), this._cancelFeatureQuery(), this._error = null, this._handles.destroy(), this.graphic = null, this._destroyContentViewModels(), this.relatedInfos.clear();
  }
  get _effectivePopupTemplate() {
    return r(this.graphic) ? this.graphic.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled) : null;
  }
  get _fieldInfoMap() {
    return Y(ee(this._effectivePopupTemplate), this._sourceLayer);
  }
  get _sourceLayer() {
    return j5(this.graphic);
  }
  castAbilities(e13) {
    return { ...K3, ...e13 };
  }
  get isTable() {
    var _a;
    return ((_a = this._sourceLayer) == null ? void 0 : _a.isTable) || false;
  }
  get state() {
    return this.graphic ? this._error ? "error" : this.waitingForContent ? "loading" : "ready" : "disabled";
  }
  set graphic(e13) {
    this._set("graphic", e13 ? e13.clone() : null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(e13) {
    this._override("spatialReference", e13);
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) || null;
  }
  set map(e13) {
    this._override("map", e13);
  }
  get waitingForContent() {
    return !!this._featureAbortController;
  }
  setActiveMedia(e13, t13) {
    const r10 = this.contentViewModels[e13];
    r10 instanceof M2 && r10.setActiveMedia(t13);
  }
  nextMedia(e13) {
    const t13 = this.contentViewModels[e13];
    t13 instanceof M2 && t13.next();
  }
  previousMedia(e13) {
    const t13 = this.contentViewModels[e13];
    t13 instanceof M2 && t13.previous();
  }
  async updateGeometry() {
    var _a, _b;
    const { graphic: e13, spatialReference: t13, _sourceLayer: r10 } = this;
    await (r10 == null ? void 0 : r10.load());
    const i13 = r10 == null ? void 0 : r10.objectIdField;
    if (!i13 || !e13 || !r10)
      return;
    const s15 = (_a = e13 == null ? void 0 : e13.attributes) == null ? void 0 : _a[i13];
    if (null == s15)
      return;
    const o11 = [s15];
    if (!e13.geometry) {
      const i14 = (_b = await oe({ layer: r10, graphic: e13, outFields: [], objectIds: o11, returnGeometry: true, spatialReference: t13 })) == null ? void 0 : _b.geometry;
      i14 && (e13.geometry = i14);
    }
  }
  _clear() {
    this._set("title", ""), this._set("content", null), this._set("formattedAttributes", null);
  }
  async _graphicChanged() {
    this._cancelFeatureQuery(), this._error = null, this._clear();
    const { graphic: e13 } = this;
    if (!e13)
      return;
    const t13 = new AbortController();
    this._featureAbortController = t13;
    try {
      await this._queryFeature({ signal: t13.signal });
    } catch (r10) {
      j(r10) || (this._error = r10, s2.getLogger(this.declaredClass).error("error", "The popupTemplate could not be displayed for this feature.", { error: r10, graphic: e13, popupTemplate: this._effectivePopupTemplate }));
    }
    this._featureAbortController === t13 && (this._featureAbortController = null);
  }
  _cancelFeatureQuery() {
    const { _featureAbortController: e13 } = this;
    e13 && e13.abort(), this._featureAbortController = null;
  }
  _compileContentElement(e13, t13) {
    return "attachments" === e13.type ? this._compileAttachments(e13, t13) : "custom" === e13.type ? this._compileCustom(e13, t13) : "fields" === e13.type ? this._compileFields(e13, t13) : "media" === e13.type ? this._compileMedia(e13, t13) : "text" === e13.type ? this._compileText(e13, t13) : "expression" === e13.type ? this._compileExpression(e13, t13) : "relationship" === e13.type ? this._compileRelationship(e13, t13) : void 0;
  }
  _compileContent(e13) {
    if (this._destroyContentViewModels(), this.graphic)
      return Array.isArray(e13) ? e13.filter(this._isAllowedContentType).map((e14, t13) => this._compileContentElement(e14, t13)).filter(r) : "string" == typeof e13 ? this._compileText(new c4({ text: e13 }), 0).text : e13;
  }
  _destroyContentViewModels() {
    var _a, _b;
    (_a = this._handles) == null ? void 0 : _a.remove(J4), (_b = this._handles) == null ? void 0 : _b.remove(z2), this.contentViewModels.forEach((e13) => e13 && !e13.destroyed && e13.destroy()), this._set("contentViewModels", []);
  }
  _matchesFeature(e13, t13) {
    var _a;
    const r10 = (_a = e13 == null ? void 0 : e13.graphic) == null ? void 0 : _a.getObjectId(), i13 = t13 == null ? void 0 : t13.getObjectId();
    return r(r10) && r(i13) && r10 === i13;
  }
  _setRelatedFeaturesViewModels({ relatedFeatureViewModels: e13, relatedFeatures: t13, map: r10 }) {
    const { view: i13, spatialReference: s15 } = this;
    t13 == null ? void 0 : t13.filter(Boolean).forEach((t14) => {
      e13.find((e14) => this._matchesFeature(e14, t14)) || e13.add(new G2({ abilities: { relationshipContent: false }, map: r10, view: i13, spatialReference: s15, graphic: t14 }));
    }), e13.forEach((r11) => {
      const i14 = t13 == null ? void 0 : t13.find((e14) => this._matchesFeature(r11, e14));
      i14 || e13.remove(r11);
    });
  }
  _setExpressionContentVM(e13, t13) {
    const r10 = this.formattedAttributes, { contentElement: i13, contentElementViewModel: s15 } = e13, o11 = i13 == null ? void 0 : i13.type;
    s15 && o11 && ("fields" === o11 && (this._createFieldsFormattedAttributes({ contentElement: i13, contentElementIndex: t13, formattedAttributes: r10 }), s15.set(this._createFieldsVMParams(i13, t13))), "media" === o11 && (this._createMediaFormattedAttributes({ contentElement: i13, contentElementIndex: t13, formattedAttributes: r10 }), s15.set(this._createMediaVMParams(i13, t13))), "text" === o11 && s15.set(this._createTextVMParams(i13)));
  }
  _compileRelationship(e13, t13) {
    const { displayCount: r10, orderByFields: i13, relationshipId: s15, title: o11, description: n11 } = e13, { _sourceLayer: a13, graphic: l13, map: p14 } = this, c19 = new m10({ displayCount: r10, graphic: l13, orderByFields: i13, relationshipId: s15, layer: a13, map: p14, ...this._compileTitleAndDesc({ title: o11, description: n11 }) });
    return this.contentViewModels[t13] = c19, this._handles.add(a4(() => c19.relatedFeatures, "change", () => this._setRelatedFeaturesViewModels(c19)), J4), e13;
  }
  _compileExpression(e13, t13) {
    const { expressionInfo: r10 } = e13, { graphic: i13, map: s15, spatialReference: o11, view: n11 } = this, a13 = new C3({ expressionInfo: r10, graphic: i13, interceptor: G2.interceptor, map: s15, spatialReference: o11, view: n11 });
    return this.contentViewModels[t13] = a13, this._handles.add(l2(() => a13.contentElementViewModel, () => this._setExpressionContentVM(a13, t13), h), z2), e13;
  }
  _compileAttachments(e13, t13) {
    const { graphic: r10 } = this, { description: i13, title: s15 } = e13;
    return this.contentViewModels[t13] = new c6({ graphic: r10, ...this._compileTitleAndDesc({ title: s15, description: i13 }) }), e13;
  }
  _compileCustom(e13, t13) {
    const { graphic: r10 } = this, { creator: i13, destroyer: s15 } = e13;
    return this.contentViewModels[t13] = new l6({ graphic: r10, creator: i13, destroyer: s15 }), e13;
  }
  _compileTitleAndDesc({ title: e13, description: t13 }) {
    const { _fieldInfoMap: r10, _sourceLayer: i13, graphic: s15, formattedAttributes: o11 } = this, n11 = s15 == null ? void 0 : s15.attributes, a13 = this._expressionAttributes, l13 = o11.global;
    return { title: S4({ attributes: n11, fieldInfoMap: r10, globalAttributes: l13, expressionAttributes: a13, layer: i13, text: e13 }), description: S4({ attributes: n11, fieldInfoMap: r10, globalAttributes: l13, expressionAttributes: a13, layer: i13, text: t13 }) };
  }
  _createFieldsVMParams(e13, t13) {
    var _a;
    const r10 = this._effectivePopupTemplate, i13 = this.formattedAttributes, s15 = { ...i13 == null ? void 0 : i13.global, ...i13 == null ? void 0 : i13.content[t13] }, o11 = (_a = (e13 == null ? void 0 : e13.fieldInfos) || (r10 == null ? void 0 : r10.fieldInfos)) == null ? void 0 : _a.filter(({ fieldName: e14 }) => M(e14) || ue(e14) || s15.hasOwnProperty(e14)), n11 = r10 == null ? void 0 : r10.expressionInfos, { description: a13, title: l13 } = e13;
    return { attributes: s15, expressionInfos: n11, fieldInfos: o11, ...this._compileTitleAndDesc({ title: l13, description: a13 }) };
  }
  _compileFields(e13, t13) {
    const r10 = e13.clone(), i13 = new n6(this._createFieldsVMParams(e13, t13));
    return this.contentViewModels[t13] = i13, r10.fieldInfos = i13.formattedFieldInfos.slice(0), r10;
  }
  _createMediaVMParams(e13, t13) {
    const { abilities: r10, graphic: i13, _fieldInfoMap: s15, _effectivePopupTemplate: o11, relatedInfos: n11, _sourceLayer: a13, _expressionAttributes: l13 } = this, p14 = this.formattedAttributes, c19 = (i13 == null ? void 0 : i13.attributes) ?? {}, { description: d7, mediaInfos: u12, title: h13 } = e13;
    return { abilities: { chartAnimation: r10.chartAnimation }, activeMediaInfoIndex: e13.activeMediaInfoIndex || 0, attributes: c19, isAggregate: i13 == null ? void 0 : i13.isAggregate, layer: a13, fieldInfoMap: s15, formattedAttributes: { ...p14 == null ? void 0 : p14.global, ...p14 == null ? void 0 : p14.content[t13] }, expressionAttributes: l13, mediaInfos: u12, popupTemplate: o11, relatedInfos: n11, ...this._compileTitleAndDesc({ title: h13, description: d7 }) };
  }
  _compileMedia(e13, t13) {
    const r10 = e13.clone(), i13 = new M2(this._createMediaVMParams(e13, t13));
    return r10.mediaInfos = i13.formattedMediaInfos.slice(0), this.contentViewModels[t13] = i13, r10;
  }
  _createTextVMParams(e13) {
    var _a;
    const { graphic: t13, _fieldInfoMap: r10, _sourceLayer: i13, _expressionAttributes: s15 } = this;
    if (e13 && e13.text) {
      const o11 = (t13 == null ? void 0 : t13.attributes) ?? {}, n11 = ((_a = this.formattedAttributes) == null ? void 0 : _a.global) ?? {};
      e13.text = S4({ attributes: o11, fieldInfoMap: r10, globalAttributes: n11, expressionAttributes: s15, layer: i13, text: e13.text });
    }
    return { graphic: t13, creator: e13.text };
  }
  _compileText(e13, t13) {
    const r10 = e13.clone();
    return this.contentViewModels[t13] = new l6(this._createTextVMParams(r10)), r10;
  }
  _compileLastEditInfo() {
    const { _effectivePopupTemplate: e13, _sourceLayer: t13, graphic: r10 } = this;
    if (!e13)
      return;
    const { lastEditInfoEnabled: i13 } = e13, s15 = t13 == null ? void 0 : t13.editFieldsInfo;
    return i13 && s15 ? X(s15, r10 == null ? void 0 : r10.attributes) : void 0;
  }
  _compileTitle(e13) {
    var _a;
    const { _fieldInfoMap: t13, _sourceLayer: r10, graphic: i13, _expressionAttributes: s15 } = this, o11 = (i13 == null ? void 0 : i13.attributes) ?? {}, n11 = ((_a = this.formattedAttributes) == null ? void 0 : _a.global) ?? {};
    return S4({ attributes: o11, fieldInfoMap: t13, globalAttributes: n11, expressionAttributes: s15, layer: r10, text: e13 });
  }
  async _getTitle() {
    const { _effectivePopupTemplate: e13, graphic: t13 } = this;
    if (!t13)
      return null;
    const r10 = e13 == null ? void 0 : e13.title;
    return x2(r10, { graphic: t13 });
  }
  async _getContent() {
    const { _effectivePopupTemplate: e13, graphic: t13 } = this;
    if (!t13)
      return null;
    const r10 = e13 == null ? void 0 : e13.content;
    return x2(r10, { graphic: t13 });
  }
  async _queryFeature(e13) {
    const { _featureAbortController: t13, _sourceLayer: r10, graphic: i13, _effectivePopupTemplate: s15 } = this, o11 = this.map, n11 = this.view, a13 = this.spatialReference;
    if (t13 !== this._featureAbortController || !i13)
      return;
    await le({ graphic: i13, popupTemplate: s15, layer: r10, spatialReference: a13 }, e13);
    const { content: { value: l13 }, title: { value: c19 } } = await E({ content: this._getContent(), title: this._getTitle() }), { expressionAttributes: { value: d7 } } = await E({ checkForRelatedFeatures: this._checkForRelatedFeatures(e13), expressionAttributes: m8({ expressionInfos: s15 == null ? void 0 : s15.expressionInfos, spatialReference: a13, graphic: i13, map: o11, interceptor: G2.interceptor, view: n11 }) });
    t13 === this._featureAbortController && i13 && (this._expressionAttributes = d7, this._graphicExpressionAttributes = { ...i13.attributes, ...d7 }, this._set("formattedAttributes", this._createFormattedAttributes(l13)), this._set("title", this._compileTitle(c19)), this._set("lastEditInfo", this._compileLastEditInfo() || null), this._set("content", this._compileContent(l13) || null));
  }
  _createMediaFormattedAttributes({ contentElement: e13, contentElementIndex: t13, formattedAttributes: r10 }) {
    const { _effectivePopupTemplate: i13, graphic: s15, relatedInfos: o11, _sourceLayer: n11, _fieldInfoMap: a13, _graphicExpressionAttributes: l13 } = this;
    r10.content[t13] = ie2({ fieldInfos: i13 == null ? void 0 : i13.fieldInfos, graphic: s15, attributes: { ...l13, ...e13.attributes }, layer: n11, fieldInfoMap: a13, relatedInfos: o11 });
  }
  _createFieldsFormattedAttributes({ contentElement: e13, contentElementIndex: t13, formattedAttributes: r10 }) {
    if (e13.fieldInfos) {
      const { graphic: i13, relatedInfos: s15, _sourceLayer: o11, _fieldInfoMap: n11, _graphicExpressionAttributes: a13 } = this;
      r10.content[t13] = ie2({ fieldInfos: e13.fieldInfos, graphic: i13, attributes: { ...a13, ...e13.attributes }, layer: o11, fieldInfoMap: n11, relatedInfos: s15 });
    }
  }
  _createFormattedAttributes(e13) {
    const { _effectivePopupTemplate: t13, graphic: r10, relatedInfos: i13, _sourceLayer: s15, _fieldInfoMap: o11, _graphicExpressionAttributes: n11 } = this, a13 = t13 == null ? void 0 : t13.fieldInfos, l13 = { global: ie2({ fieldInfos: a13, graphic: r10, attributes: n11, layer: s15, fieldInfoMap: o11, relatedInfos: i13 }), content: [] };
    return Array.isArray(e13) && e13.forEach((e14, t14) => {
      "fields" === e14.type && this._createFieldsFormattedAttributes({ contentElement: e14, contentElementIndex: t14, formattedAttributes: l13 }), "media" === e14.type && this._createMediaFormattedAttributes({ contentElement: e14, contentElementIndex: t14, formattedAttributes: l13 });
    }), l13;
  }
  _checkForRelatedFeatures(e13) {
    const { graphic: t13, _effectivePopupTemplate: r10 } = this;
    return this._queryRelatedInfos(t13, ee(r10), e13);
  }
  async _queryRelatedInfos(e13, t13, r10) {
    const { relatedInfos: i13, _sourceLayer: s15 } = this;
    i13.clear();
    const o11 = r(s15 == null ? void 0 : s15.associatedLayer) ? await (s15 == null ? void 0 : s15.associatedLayer.load(r10)) : s15;
    if (!o11 || !e13)
      return;
    const n11 = t13.filter((e14) => e14 && ue(e14.fieldName));
    if (!n11 || !n11.length)
      return;
    t13.forEach((e14) => this._configureRelatedInfo(e14, o11));
    const l13 = await R4({ relatedInfos: i13, layer: o11 }, r10);
    Object.keys(l13).forEach((e14) => {
      var _a;
      const t14 = i13.get(e14.toString()), r11 = (_a = l13[e14]) == null ? void 0 : _a.value;
      t14 && r11 && (t14.layerInfo = r11.data);
    });
    const p14 = await $2({ graphic: e13, relatedInfos: i13, layer: o11 }, r10);
    Object.keys(p14).forEach((e14) => {
      var _a;
      F4((_a = p14[e14]) == null ? void 0 : _a.value, i13.get(e14.toString()));
    });
  }
  _configureRelatedInfo(e13, t13) {
    const { relatedInfos: r10 } = this, i13 = m7(e13.fieldName);
    if (!i13)
      return;
    const { layerId: s15, fieldName: o11 } = i13;
    if (!s15)
      return;
    const n11 = r10.get(s15.toString()) || g5(s15, t13);
    n11 && (U6({ relatedInfo: n11, fieldName: o11, fieldInfo: e13 }), this.relatedInfos.set(s15, n11));
  }
};
W3.interceptor = new e10(me, ye), e2([y2()], W3.prototype, "_error", void 0), e2([y2()], W3.prototype, "_featureAbortController", void 0), e2([y2({ readOnly: true })], W3.prototype, "_effectivePopupTemplate", null), e2([y2({ readOnly: true })], W3.prototype, "_fieldInfoMap", null), e2([y2({ readOnly: true })], W3.prototype, "_sourceLayer", null), e2([y2()], W3.prototype, "abilities", void 0), e2([s4("abilities")], W3.prototype, "castAbilities", null), e2([y2({ readOnly: true })], W3.prototype, "content", void 0), e2([y2({ readOnly: true })], W3.prototype, "contentViewModels", void 0), e2([y2()], W3.prototype, "description", void 0), e2([y2({ type: Boolean })], W3.prototype, "defaultPopupTemplateEnabled", void 0), e2([y2({ readOnly: true })], W3.prototype, "isTable", null), e2([y2({ readOnly: true })], W3.prototype, "state", null), e2([y2({ readOnly: true })], W3.prototype, "formattedAttributes", void 0), e2([y2({ type: g2, value: null })], W3.prototype, "graphic", null), e2([y2({ readOnly: true })], W3.prototype, "lastEditInfo", void 0), e2([y2({ readOnly: true })], W3.prototype, "relatedInfos", void 0), e2([y2()], W3.prototype, "spatialReference", null), e2([y2({ readOnly: true })], W3.prototype, "title", void 0), e2([y2()], W3.prototype, "map", null), e2([y2({ readOnly: true })], W3.prototype, "waitingForContent", null), e2([y2()], W3.prototype, "view", void 0), W3 = G2 = e2([a2("esri.widgets.FeatureViewModel")], W3);
var X2 = W3;

// node_modules/@arcgis/core/widgets/Feature/resources.js
var e11 = "esri-feature";
var t8 = { iconText: "esri-icon-font-fallback-text", iconLoading: "esri-icon-loading-indicator esri-rotating", esriTable: "esri-widget__table", esriWidget: "esri-widget", base: e11, container: `${e11}__size-container`, title: `${e11}__title`, main: `${e11}__main-container`, btn: `${e11}__button`, icon: `${e11}__icon`, content: `${e11}__content`, contentNode: `${e11}__content-node`, contentElement: `${e11}__content-element`, text: `${e11}__text`, lastEditedInfo: `${e11}__last-edited-info`, fields: `${e11}__fields`, fieldHeader: `${e11}__field-header`, fieldData: `${e11}__field-data`, fieldDataDate: `${e11}__field-data--date`, loadingSpinnerContainer: `${e11}__loading-container`, spinner: `${e11}__loading-spinner` };

// node_modules/@arcgis/core/widgets/Feature/support/FeatureContentMixin.js
var i10 = (i13) => {
  let n11 = class extends i13 {
    constructor() {
      super(...arguments), this.renderNodeContent = (e13) => e5(e13) && !e13.destroyed ? n2("div", { class: t8.contentNode, key: e13 }, e13.render()) : e13 instanceof HTMLElement ? n2("div", { class: t8.contentNode, key: e13, bind: e13, afterCreate: this._attachToNode }) : t4(e13) ? n2("div", { class: t8.contentNode, key: e13, bind: e13.domNode, afterCreate: this._attachToNode }) : null;
    }
    _attachToNode(e13) {
      const o11 = this;
      e13.appendChild(o11);
    }
  };
  return n11 = e2([a2("esri.widgets.Feature.ContentMixin")], n11), n11;
};

// node_modules/@arcgis/core/widgets/Feature.js
var E3;
var b10 = { title: true, content: true, lastEditedInfo: true };
var _3 = "relationship-handles";
var W4 = E3 = class extends i10(W) {
  constructor(e13, t13) {
    super(e13, t13), this._contentWidgets = [], this.flowItems = null, this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.messagesURIUtils = null, this.visibleElements = { ...b10 }, this.viewModel = new X2();
  }
  initialize() {
    this.addHandles(l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentViewModels;
    }, () => this._setupContentWidgets(), h));
  }
  loadDependencies() {
    return import("./calcite-notice-WOHUINMU.js");
  }
  destroy() {
    this._destroyContentWidgets();
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e13) {
    this.viewModel.graphic = e13;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e13) {
    this.viewModel.defaultPopupTemplateEnabled = e13;
  }
  get isTable() {
    return this.viewModel.isTable;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e13) {
    this._overrideIfSome("label", e13);
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e13) {
    this.viewModel.spatialReference = e13;
  }
  get title() {
    return this.viewModel.title;
  }
  castVisibleElements(e13) {
    return { ...b10, ...e13 };
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e13) {
    this.viewModel.map = e13;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e13) {
    this.viewModel.view = e13;
  }
  render() {
    const { state: e13 } = this.viewModel, t13 = n2("div", { class: t8.container, key: "container" }, this.renderTitle(), "error" === e13 ? this.renderError() : "loading" === e13 ? this.renderLoading() : this.renderContentContainer());
    return n2("div", { class: this.classes(t8.base, t8.esriWidget) }, t13);
  }
  setActiveMedia(e13, t13) {
    return this.viewModel.setActiveMedia(e13, t13);
  }
  nextMedia(e13) {
    return this.viewModel.nextMedia(e13);
  }
  previousMedia(e13) {
    return this.viewModel.previousMedia(e13);
  }
  renderError() {
    const { messagesCommon: e13, messages: t13, visibleElements: s15 } = this;
    return n2("calcite-notice", { open: true, kind: "danger", icon: "exclamation-mark-circle", scale: "s" }, s15.title ? n2("div", { key: "error-title", slot: "title" }, e13.errorMessage) : null, n2("div", { key: "error-message", slot: "message" }, t13.loadingError));
  }
  renderLoading() {
    return n2("div", { key: "loading-container", class: t8.loadingSpinnerContainer }, n2("span", { class: this.classes(t8.iconLoading, t8.spinner) }));
  }
  renderContentContainer() {
    const { visibleElements: e13 } = this;
    return e13.content ? n2("div", { class: t8.main }, [this.renderContent(), this.renderLastEditInfo()]) : null;
  }
  renderTitle() {
    const { visibleElements: e13, title: t13 } = this;
    return e13.title ? n2(n3, { level: this.headingLevel, class: t8.title, innerHTML: t13 }) : null;
  }
  renderContent() {
    const e13 = this.viewModel.content, t13 = "content";
    if (!e13)
      return null;
    if (Array.isArray(e13))
      return e13.length ? n2("div", { class: t8.contentNode, key: `${t13}-content-elements` }, e13.map(this.renderContentElement, this)) : null;
    if ("string" == typeof e13) {
      const e14 = this._contentWidgets[0];
      return !e14 || e14.destroyed ? null : n2("div", { class: t8.contentNode, key: `${t13}-content` }, e14.render());
    }
    return this.renderNodeContent(e13);
  }
  renderContentElement(e13, t13) {
    var _a;
    const { visibleElements: s15 } = this;
    if ("boolean" != typeof s15.content && !((_a = s15.content) == null ? void 0 : _a[e13.type]))
      return null;
    switch (e13.type) {
      case "attachments":
        return this.renderAttachments(t13);
      case "custom":
        return this.renderCustom(e13, t13);
      case "fields":
        return this.renderFields(t13);
      case "media":
        return this.renderMedia(t13);
      case "text":
        return this.renderText(e13, t13);
      case "expression":
        return this.renderExpression(t13);
      case "relationship":
        return this.renderRelationship(t13);
      default:
        return null;
    }
  }
  renderAttachments(e13) {
    const t13 = this._contentWidgets[e13];
    if (!t13 || t13.destroyed)
      return null;
    const { state: s15, attachmentInfos: i13 } = t13.viewModel;
    return "loading" === s15 || i13.length > 0 ? n2("div", { key: this._buildKey("attachments-element", e13), class: this.classes(t8.contentElement) }, t13.render()) : null;
  }
  renderRelationship(e13) {
    const t13 = this._contentWidgets[e13];
    return t13 && !t13.destroyed && this.flowItems ? n2("div", { key: this._buildKey("relationship-element", e13), class: t8.contentElement }, t13.render()) : null;
  }
  renderExpression(e13) {
    const t13 = this._contentWidgets[e13];
    return !t13 || t13.destroyed ? null : n2("div", { key: this._buildKey("expression-element", e13), class: t8.contentElement }, t13.render());
  }
  renderCustom(e13, t13) {
    const { creator: s15 } = e13, i13 = this._contentWidgets[t13];
    return !i13 || i13.destroyed ? null : s15 ? n2("div", { key: this._buildKey("custom-element", t13), class: t8.contentElement }, i13.render()) : null;
  }
  renderFields(e13) {
    const t13 = this._contentWidgets[e13];
    return !t13 || t13.destroyed ? null : n2("div", { key: this._buildKey("fields-element", e13), class: t8.contentElement }, t13.render());
  }
  renderMedia(e13) {
    const t13 = this._contentWidgets[e13];
    return !t13 || t13.destroyed ? null : n2("div", { key: this._buildKey("media-element", e13), class: t8.contentElement }, t13.render());
  }
  renderLastEditInfo() {
    const { visibleElements: e13, messages: t13 } = this, { lastEditInfo: s15 } = this.viewModel;
    if (!s15 || !e13.lastEditedInfo)
      return null;
    const { date: i13, user: n11 } = s15, r10 = "edit" === s15.type ? n11 ? t13.lastEditedByUser : t13.lastEdited : n11 ? t13.lastCreatedByUser : t13.lastCreated, o11 = s5(r10, { date: i13, user: n11 });
    return n2("div", { key: "edit-info-element", class: this.classes(t8.lastEditedInfo, t8.contentElement) }, o11);
  }
  renderText(e13, t13) {
    const s15 = e13.text, i13 = this._contentWidgets[t13];
    return !i13 || i13.destroyed ? null : s15 ? n2("div", { key: this._buildKey("text-element", t13), class: this.classes(t8.contentElement, t8.text) }, i13.render()) : null;
  }
  _buildKey(e13, ...t13) {
    return `${e13}__${this.get("viewModel.graphic.uid") || "0"}-${t13.join("-")}`;
  }
  _destroyContentWidget(e13) {
    e13 && (e13.viewModel = null, !e13.destroyed && e13.destroy());
  }
  _destroyContentWidgets() {
    this.removeHandles(_3), this._contentWidgets.forEach((e13) => this._destroyContentWidget(e13)), this._contentWidgets = [];
  }
  _addFeatureRelationshipHandles(e13) {
    const { flowItems: t13, visibleElements: i13 } = this;
    this.addHandles([a4(() => e13, "select-record", ({ featureViewModel: e14 }) => {
      t13 && (e14.abilities = { relationshipContent: true }, t13.push(new E3({ flowItems: t13, viewModel: e14, visibleElements: i13 })));
    }), a4(() => e13, "show-all-records", () => {
      if (!t13)
        return;
      const { viewModel: s15 } = e13;
      s15.showAllEnabled = true;
      const i14 = new F6({ visibleElements: { title: false, description: false }, viewModel: s15 });
      this._addFeatureRelationshipHandles(i14), t13.push(i14);
    })], _3);
  }
  _setupContentWidgets() {
    this._destroyContentWidgets();
    const { headingLevel: e13, visibleElements: t13 } = this, s15 = this.get("viewModel.content"), { contentViewModels: i13 } = this.viewModel;
    if (Array.isArray(s15))
      s15.forEach((s16, n11) => {
        if ("attachments" === s16.type && (this._contentWidgets[n11] = new h4({ displayType: s16.displayType, headingLevel: t13.title ? e13 + 1 : e13, viewModel: i13[n11] })), "fields" === s16.type && (this._contentWidgets[n11] = new c10({ viewModel: i13[n11] })), "media" === s16.type && (this._contentWidgets[n11] = new R5({ viewModel: i13[n11] })), "text" === s16.type && (this._contentWidgets[n11] = new p6({ viewModel: i13[n11] })), "custom" === s16.type && (this._contentWidgets[n11] = new p6({ viewModel: i13[n11] })), "expression" === s16.type && (this._contentWidgets[n11] = new m9({ viewModel: i13[n11] })), "relationship" === s16.type) {
          const e14 = new F6({ viewModel: i13[n11] });
          this._addFeatureRelationshipHandles(e14), this._contentWidgets[n11] = e14;
        }
      }, this);
    else {
      const e14 = i13[0];
      e14 && !e14.destroyed && (this._contentWidgets[0] = new p6({ viewModel: e14 }));
    }
    this.scheduleRender();
  }
};
e2([y2()], W4.prototype, "graphic", null), e2([y2()], W4.prototype, "defaultPopupTemplateEnabled", null), e2([y2()], W4.prototype, "flowItems", void 0), e2([y2()], W4.prototype, "headingLevel", void 0), e2([y2({ readOnly: true })], W4.prototype, "isTable", null), e2([y2()], W4.prototype, "label", null), e2([y2(), e3("esri/widgets/Feature/t9n/Feature")], W4.prototype, "messages", void 0), e2([y2(), e3("esri/t9n/common")], W4.prototype, "messagesCommon", void 0), e2([y2(), e3("esri/widgets/support/t9n/uriUtils")], W4.prototype, "messagesURIUtils", void 0), e2([y2()], W4.prototype, "spatialReference", null), e2([y2({ readOnly: true })], W4.prototype, "title", null), e2([y2()], W4.prototype, "visibleElements", void 0), e2([s4("visibleElements")], W4.prototype, "castVisibleElements", null), e2([y2()], W4.prototype, "map", null), e2([y2()], W4.prototype, "view", null), e2([y2({ type: X2 })], W4.prototype, "viewModel", void 0), W4 = E3 = e2([a2("esri.widgets.Feature")], W4);
var C4 = W4;

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var l10;
var d5 = Symbol("anchorHandles");
var m11 = class extends n.EventedAccessor {
  constructor(e13) {
    super(e13), this[l10] = new t2(), this.location = null, this.screenLocationEnabled = false, this.view = null, this[d5].add([f(() => o(this.screenLocationEnabled ? this.view : null, (e14) => [e14.size, "3d" === e14.type ? e14.camera : e14.viewpoint]), () => this.notifyChange("screenLocation")), l2(() => this.screenLocation, (e14, o11) => {
      r(e14) && r(o11) && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null, this[d5] = a(this[d5]);
  }
  get screenLocation() {
    var _a;
    const { location: e13, view: o11, screenLocationEnabled: t13 } = this;
    return t13 && r(e13) && r(o11) && o11.ready ? (_a = o11.toScreen) == null ? void 0 : _a.call(o11, e13) : null;
  }
};
l10 = d5, e2([y2()], m11.prototype, "location", void 0), e2([y2()], m11.prototype, "screenLocation", null), e2([y2()], m11.prototype, "screenLocationEnabled", void 0), e2([y2()], m11.prototype, "view", void 0), m11 = e2([a2("esri.widgets.support.AnchorElementViewModel")], m11);
var h8 = m11;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t9 = "esri.widgets.CompassViewModel";
var p9 = class extends h8 {
  constructor(s15) {
    super(s15), this.visible = false;
  }
};
e2([y2()], p9.prototype, "visible", void 0), p9 = e2([a2(t9)], p9);
var c16 = p9;

// node_modules/@arcgis/core/widgets/Spinner.js
var c17 = "esri-spinner";
var p10 = { base: c17, spinnerStart: `${c17}--start`, spinnerFinish: `${c17}--finish` };
var h9 = class extends W {
  constructor(i13, e13) {
    super(i13, e13), this._animationDelay = 500, this._animationPromise = null, this.viewModel = new c16();
  }
  initialize() {
    this.addHandles(l2(() => this.visible, (i13) => this._visibleChange(i13)));
  }
  destroy() {
    this._animationPromise = null;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(i13) {
    this.viewModel.location = i13;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(i13) {
    this.viewModel.view = i13;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(i13) {
    this.viewModel.visible = i13;
  }
  show(i13) {
    const { location: e13, promise: t13 } = i13 ?? {};
    e13 && (this.viewModel.location = e13), this.visible = true;
    const s15 = () => this.hide();
    t13 && t13.catch(() => {
    }).then(s15);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i13 } = this, { screenLocation: e13 } = this.viewModel, t13 = !!e13, s15 = i13 && t13, o11 = !i13 && t13, r10 = { [p10.spinnerStart]: s15, [p10.spinnerFinish]: o11 }, n11 = this._getPositionStyles();
    return n2("div", { class: this.classes(p10.base, r10), styles: n11 });
  }
  _visibleChange(i13) {
    if (i13)
      return void (this.viewModel.screenLocationEnabled = true);
    const e13 = U(this._animationDelay);
    this._animationPromise = e13, e13.catch(() => {
    }).then(() => {
      this._animationPromise === e13 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i13, view: t13 } = this.viewModel;
    if (t(t13) || t(i13))
      return {};
    const { padding: s15 } = t13;
    return { left: i13.x - s15.left + "px", top: i13.y - s15.top + "px" };
  }
};
e2([y2()], h9.prototype, "location", null), e2([y2()], h9.prototype, "view", null), e2([y2({ type: c16 })], h9.prototype, "viewModel", void 0), e2([y2()], h9.prototype, "visible", null), h9 = e2([a2("esri.widgets.Spinner")], h9);
var m12 = h9;

// node_modules/@arcgis/core/widgets/Popup/actions.js
var s14 = { iconZoom: "esri-icon-zoom-in-magnifying-glass", iconTrash: "esri-icon-trash", iconBrowseClusteredFeatures: "esri-icon-table" };
var o8 = new a9({ id: "zoom-to-feature", title: "{messages.zoom}", className: s14.iconZoom });
var t10 = new a9({ id: "remove-selected-feature", title: "{messages.remove}", className: s14.iconTrash });
var r9 = new a9({ id: "zoom-to-clustered-features", title: "{messages.zoom}", className: s14.iconZoom });
var i11 = new a9({ id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: s14.iconBrowseClusteredFeatures });

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var u10 = "esri.widgets.Popup.PopupViewModel";
var l11 = s2.getLogger(u10);
var d6 = (t13) => {
  const { event: r10, view: o11 } = t13, { action: u12 } = r10, l13 = o11 && o11.popup;
  if (!u12)
    return Promise.reject(new s3("trigger-action:missing-arguments", "Event has no action"));
  if (!l13)
    return Promise.reject(new s3("trigger-action:missing-arguments", "view.popup is missing"));
  const { disabled: d7, id: g10 } = u12;
  if (!g10)
    return Promise.reject(new s3("trigger-action:invalid-action", "action.id is missing"));
  if (d7)
    return Promise.reject(new s3("trigger-action:invalid-action", "Action is disabled"));
  if (g10 === o8.id)
    return p11(l13.viewModel).catch(b);
  if (g10 === r9.id)
    return m13(l13.viewModel);
  if (g10 === i11.id)
    return l13.featureMenuOpen = !l13.featureMenuOpen, l13.viewModel.browseClusterEnabled = !l13.viewModel.browseClusterEnabled, Promise.resolve();
  if (l13.viewModel.browseClusterEnabled = false, g10 === t10.id) {
    l13.close();
    const { selectedFeature: t14 } = l13;
    if (!t14)
      return Promise.reject(new s3(`trigger-action:${t10.id}`, "selectedFeature is required", { selectedFeature: t14 }));
    const { sourceLayer: r11 } = t14;
    return r11 ? r11.remove(t14) : o11.graphics.remove(t14), Promise.resolve();
  }
  return Promise.resolve();
};
function g9(e13) {
  const { selectedFeature: t13, location: r10, view: o11 } = e13;
  if (!o11)
    return null;
  if ("3d" === o11.type)
    return t13 ?? r10 ?? null;
  return e13.get("selectedFeature.geometry") || r10;
}
function w9(e13) {
  var _a, _b;
  return !!e13 && e13.isAggregate && "cluster" === ((_b = (_a = e13.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
async function f9(e13, t13) {
  if ("3d" !== (t13 == null ? void 0 : t13.type) || !e13 || "esri.Graphic" !== e13.declaredClass)
    return true;
  const r10 = t13.getViewForGraphic(e13);
  if (r10 && "whenGraphicBounds" in r10) {
    let t14;
    try {
      t14 = await r10.whenGraphicBounds(e13, { useViewElevation: true });
    } catch (o11) {
    }
    return !t14 || !t14.boundingBox || t14.boundingBox[0] === t14.boundingBox[3] && t14.boundingBox[1] === t14.boundingBox[4] && t14.boundingBox[2] === t14.boundingBox[5];
  }
  return true;
}
async function p11(t13) {
  var _a;
  const { location: o11, selectedFeature: i13, view: a13, zoomFactor: s15 } = t13, c19 = g9(t13);
  if (!a13 || !c19) {
    const t14 = new s3("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: c19, view: a13 });
    throw l11.error(t14), t14;
  }
  const u12 = a13.scale / s15, d7 = (_a = t13.selectedFeature) == null ? void 0 : _a.geometry, w10 = d7 ?? o11, p14 = r(w10) && "point" === w10.type && await f9(i13, a13);
  o8.active = true, o8.disabled = true;
  try {
    await t13.zoomTo({ target: { target: c19, scale: p14 ? u12 : void 0 } });
  } catch (m14) {
    const t14 = new s3("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: i13 });
    l11.error(t14);
  } finally {
    o8.active = false, o8.disabled = false, t13.zoomToLocation = null, p14 && (t13.location = w10);
  }
}
async function m13(t13) {
  const { selectedFeature: r10, view: o11 } = t13;
  if ("2d" !== (o11 == null ? void 0 : o11.type)) {
    const t14 = new s3("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: o11 });
    throw l11.error(t14), t14;
  }
  if (!r10 || !w9(r10)) {
    const t14 = new s3("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r10 });
    throw l11.error(t14), t14;
  }
  const [i13, n11] = await h10(o11, r10);
  r9.active = true, r9.disabled = true;
  const { extent: s15 } = await i13.queryExtent(n11);
  await t13.zoomTo({ target: s15 }), r9.active = false, r9.disabled = false;
}
async function v8(e13) {
  const { view: t13, selectedFeature: r10 } = e13;
  if (!t13 || !r10)
    return;
  const [o11, i13] = await h10(t13, r10), { extent: n11 } = await o11.queryExtent(i13);
  e13.selectedClusterBoundaryFeature.geometry = n11, t13.graphics.add(e13.selectedClusterBoundaryFeature);
}
async function y10(e13) {
  var _a;
  const { selectedFeature: t13, view: r10 } = e13;
  if (!r10 || !t13)
    return;
  const [o11, i13] = await h10(r10, t13);
  i11.active = true, i11.disabled = true;
  const { features: n11 } = await o11.queryFeatures(i13);
  i11.active = false, i11.disabled = false, (_a = r10.popup) == null ? void 0 : _a.open({ features: [t13].concat(n11), featureMenuOpen: true });
}
async function h10(e13, t13) {
  const r10 = await e13.whenLayerView(t13.sourceLayer), o11 = r10.createQuery(), i13 = t13.getObjectId();
  return o11.aggregateIds = null != i13 ? [i13] : [], [r10, o11];
}
function b11(e13) {
  const t13 = e13.features.filter((e14) => w9(e14));
  t13.length && (e13.features = t13);
}
function F7(e13) {
  var _a;
  if (t(e13))
    return null;
  switch (e13.type) {
    case "point":
      return e13;
    case "extent":
      return e13.center;
    case "polygon":
      return e13.centroid;
    case "multipoint":
    case "polyline":
      return (_a = e13.extent) == null ? void 0 : _a.center;
    default:
      return null;
  }
}

// node_modules/@arcgis/core/widgets/Popup/css.js
var e12 = "esri-popup";
var t11 = `${e12}__header`;
var o9 = `${e12}--is-docked`;
var n10 = { calciteThemeLight: "calcite-mode-light", calciteThemeDark: "calcite-mode-dark", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow", iconDockToTop: "esri-icon-maximize", iconDockToBottom: "esri-icon-dock-bottom", iconDockToLeft: "esri-icon-dock-left", iconDockToRight: "esri-icon-dock-right", iconClose: "esri-icon-close", iconUndock: "esri-icon-minimize", iconCheckMark: "esri-icon-check-mark", iconLoading: "esri-icon-loading-indicator", iconDefaultAction: "esri-icon-default-action", iconActionsMenu: "esri-icon-handle-horizontal", rotating: "esri-rotating", base: e12, widget: "esri-widget", main: `${e12}__main-container`, loadingContainer: `${e12}__loading-container`, isCollapsible: `${e12}--is-collapsible`, isCollapsed: `${e12}--is-collapsed`, shadow: `${e12}--shadow`, isDocked: o9, isDockedTopLeft: `${o9}-top-left`, isDockedTopCenter: `${o9}-top-center`, isDockedTopRight: `${o9}-top-right`, isDockedBottomLeft: `${o9}-bottom-left`, isDockedBottomCenter: `${o9}-bottom-center`, isDockedBottomRight: `${o9}-bottom-right`, alignTopCenter: `${e12}--aligned-top-center`, alignBottomCenter: `${e12}--aligned-bottom-center`, alignTopLeft: `${e12}--aligned-top-left`, alignBottomLeft: `${e12}--aligned-bottom-left`, alignTopRight: `${e12}--aligned-top-right`, alignBottomRight: `${e12}--aligned-bottom-right`, isFeatureMenuOpen: `${e12}--feature-menu-open`, isActionsMenuOpen: `${e12}--actions-menu-open`, hasFeatureUpdated: `${e12}--feature-updated`, header: t11, headerButtons: `${t11}-buttons`, headerContainer: `${t11}-container`, headerContainerButton: `${t11}-container--button`, headerTitle: `${t11}-title`, content: `${e12}__content`, contentHasFlows: "esri-content--has-flows", contentFlowItem: "esri-content__flow-item", footer: `${e12}__footer`, footerHasPagination: `${e12}__footer--has-pagination`, footerHasActions: `${e12}__footer--has-actions`, footerHasActionsMenu: `${e12}__footer--has-actions-menu`, button: `${e12}__button`, buttonDisabled: `${e12}__button--disabled`, buttonDock: `${e12}__button--dock`, icon: `${e12}__icon`, iconDock: `${e12}__icon--dock-icon`, inlineActionsContainer: `${e12}__inline-actions-container`, actionsMenuButton: `${e12}__actions-menu-button`, actions: `${e12}__actions`, action: `${e12}__action`, actionImage: `${e12}__action-image`, actionText: `${e12}__action-text`, actionToggle: `${e12}__action-toggle`, actionToggleOn: `${e12}__action-toggle--on`, actionExit: `${e12}__action--exit`, actionSelectFeature: `${e12}__action--select-feature`, pointer: `${e12}__pointer`, pointerDirection: `${e12}__pointer-direction`, navigation: `${e12}__navigation`, paginationPrevious: `${e12}__pagination-previous`, paginationNext: `${e12}__pagination-next`, paginationPreviousIconLTR: `${e12}__pagination-previous-icon`, paginationPreviousIconRTL: `${e12}__pagination-previous-icon--rtl`, paginationNextIconLTR: `${e12}__pagination-next-icon`, paginationNextIconRTL: `${e12}__pagination-next-icon--rtl`, featureMenu: `${e12}__feature-menu`, featureMenuList: `${e12}__feature-menu-list`, featureMenuItem: `${e12}__feature-menu-item`, featureMenuViewport: `${e12}__feature-menu-viewport`, featureMenuHeader: `${e12}__feature-menu-header`, featureMenuNote: `${e12}__feature-menu-note`, featureMenuSelected: `${e12}__feature-menu-item--selected`, featureMenuButton: `${e12}__feature-menu-button`, featureMenuTitle: `${e12}__feature-menu-title`, featureMenuObserver: `${e12}__feature-menu-observer`, featureMenuLoader: `${e12}__feature-menu-loader`, collapseButton: `${e12}__collapse-button`, collapseIcon: `${e12}__collapse-icon` };

// node_modules/@arcgis/core/layers/LayerConstants.js
var o10 = "OBJECTID";

// node_modules/@arcgis/core/widgets/Legend/styles/support/relationshipUtils.js
var b12 = "esri-relationship-ramp";
var u11 = `${b12}--diamond`;
var c18 = `${b12}--square`;
var p12 = { diamondContainer: `${u11}__container`, diamondLeftCol: `${u11}__left-column`, diamondRightCol: `${u11}__right-column`, diamondMidCol: `${u11}__middle-column`, diamondMidColLabel: `${u11}__middle-column--label`, diamondMidColRamp: `${u11}__middle-column--ramp`, squareTable: `${c18}__table`, squareTableRow: `${c18}__table-row`, squareTableCell: `${c18}__table-cell`, squareTableLabel: `${c18}__table-label`, squareTableLabelLeftBottom: `${c18}__table-label--left-bottom`, squareTableLabelRightBottom: `${c18}__table-label--right-bottom`, squareTableLabelLeftTop: `${c18}__table-label--left-top`, squareTableLabelRightTop: `${c18}__table-label--right-top` };

// node_modules/@arcgis/core/symbols/support/symbolUtils.js
function j8(e13) {
  return e13 && "opacity" in e13 ? e13.opacity * j8(e13.parent) : 1;
}
async function R6(i13, s15) {
  if (!i13)
    return;
  const o11 = i13.sourceLayer, n11 = (r(s15) && s15.useSourceLayer ? o11 : i13.layer) ?? o11, a13 = j8(n11);
  if (r(i13.symbol) && (!r(s15) || true !== s15.ignoreGraphicSymbol)) {
    const t13 = "web-style" === i13.symbol.type ? await F(i13.symbol, { ...s15, cache: r(s15) ? s15.webStyleCache : null }) : i13.symbol.clone();
    return S3(t13, null, a13), t13;
  }
  const h13 = (r(s15) ? s15.renderer : null) ?? (n11 && "renderer" in n11 ? n11.renderer : null);
  let y12 = h13 && "getSymbolAsync" in h13 ? await h13.getSymbolAsync(i13, s15) : null;
  if (!y12)
    return;
  if (y12 = "web-style" === y12.type ? await y12.fetchSymbol({ ...s15, cache: r(s15) ? s15.webStyleCache : null }) : y12.clone(), !(h13 && "visualVariables" in h13 && h13.visualVariables && h13.visualVariables.length))
    return S3(y12, null, a13), y12;
  if ("arcadeRequiredForVisualVariables" in h13 && h13.arcadeRequiredForVisualVariables && (t(s15) || t(s15.arcade))) {
    const e13 = { ...e(s15) };
    e13.arcade = await i6(), s15 = e13;
  }
  const d7 = await import("./visualVariableUtils-BSRIYA6E.js"), m14 = [], g10 = [], b13 = [], w10 = [];
  for (const e13 of h13.visualVariables)
    switch (e13.type) {
      case "color":
        m14.push(e13);
        break;
      case "opacity":
        g10.push(e13);
        break;
      case "rotation":
        w10.push(e13);
        break;
      case "size":
        e13.target || b13.push(e13);
    }
  const S8 = !!m14.length && m14[m14.length - 1], v9 = S8 ? d7.getColor(S8, i13, s15) : null, V4 = !!g10.length && g10[g10.length - 1];
  let x4 = V4 ? d7.getOpacity(V4, i13, s15) : null;
  if (null != a13 && (x4 = null != x4 ? x4 * a13 : a13), S3(y12, v9, x4), b13.length) {
    const e13 = d7.getAllSizes(b13, i13, s15);
    await J(y12, e13);
  }
  for (const e13 of w10)
    N(y12, d7.getRotationAngle(e13, i13, s15), e13.axis);
  return y12;
}

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var B3 = j2.ofType({ key: "type", defaultKeyValue: "button", base: c5, typeMap: { button: a9, toggle: a10 } });
var R7 = () => [o8.clone()];
var G3 = () => [r9.clone(), i11.clone()];
var z3 = class extends t6(h8) {
  get isLoadingFeature() {
    return this.featureViewModels.some((e13) => e13.waitingForContent);
  }
  constructor(e13) {
    super(e13), this._handles = new t2(), this._pendingPromises = /* @__PURE__ */ new Set(), this._fetchFeaturesController = null, this._highlightSelectedFeaturePromise = null, this._highlightActiveFeaturePromise = null, this._selectedClusterFeature = null, this.featurePage = null, this.actions = new B3(), this.activeFeature = null, this.defaultPopupTemplateEnabled = false, this.autoCloseEnabled = false, this.autoOpenEnabled = true, this.browseClusterEnabled = false, this.content = null, this.featuresPerPage = 20, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.selectedClusterBoundaryFeature = new g2({ symbol: new S2({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null;
  }
  initialize() {
    this._handles.add([l2(() => [this.autoOpenEnabled, this.view], () => this._autoOpenEnabledChange()), this.on("view-change", () => this._autoClose()), l2(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), l2(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), l2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e13) => this._animationStateChange(e13)), l2(() => this.location, (e13) => this._locationChange(e13)), l2(() => this.selectedFeature, (e13) => this._selectedFeatureChange(e13)), l2(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), l2(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), l2(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e13) => d6({ event: e13, view: this.view })), f(() => !this.waitingForResult, () => this._waitingForResultChange(), U2), l2(() => {
      var _a, _b;
      return [this.features, (_a = this.view) == null ? void 0 : _a.map, (_b = this.view) == null ? void 0 : _b.spatialReference];
    }, () => this._updateFeatureVMs()), l2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), f(() => !this.visible, () => this.browseClusterEnabled = false), l2(() => this.browseClusterEnabled, (e13) => e13 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._handles.destroy(), this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e13 = this._get("allActions") || new B3();
    e13.removeAll();
    const { actions: t13, defaultActions: s15, defaultPopupTemplateEnabled: i13, includeDefaultActions: r10, selectedFeature: o11 } = this, a13 = r10 ? s15.concat(t13) : t13, n11 = o11 && ("function" == typeof o11.getEffectivePopupTemplate && o11.getEffectivePopupTemplate(i13) || o11.popupTemplate), l13 = n11 && n11.actions, h13 = n11 && n11.overwriteActions ? l13 : l13 ? l13.concat(a13) : a13;
    return h13 && h13.filter(Boolean).forEach((t14) => e13.add(t14)), e13;
  }
  get defaultActions() {
    const e13 = this._get("defaultActions") || new B3();
    return e13.removeAll(), e13.addMany(w9(this.selectedFeature) ? G3() : R7()), e13;
  }
  get featureCount() {
    return this.features.length;
  }
  get features() {
    return this._get("features") || [];
  }
  set features(e13) {
    const t13 = e13 || [];
    this._set("features", t13);
    const { pendingPromisesCount: s15, promiseCount: i13, selectedFeatureIndex: r10 } = this, o11 = i13 && t13.length;
    o11 && s15 && -1 === r10 ? this.selectedFeatureIndex = 0 : o11 && -1 !== r10 || (this.selectedFeatureIndex = t13.length ? 0 : -1);
  }
  get location() {
    return this._get("location") || null;
  }
  set location(e13) {
    var _a, _b, _c;
    let t13 = e13;
    const s15 = (_b = (_a = this.view) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.isWebMercator;
    e13 && ((_c = e13 == null ? void 0 : e13.spatialReference) == null ? void 0 : _c.isWGS84) && s15 && (t13 = R(e13)), this._set("location", t13);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e13) {
    if (this._pendingPromises.clear(), this.features = [], !Array.isArray(e13) || !e13.length)
      return this._set("promises", []), void this.notifyChange("pendingPromisesCount");
    this._set("promises", e13), (e13 = e13.slice(0)).forEach((e14) => {
      this._pendingPromises.add(e14);
      const t13 = (t14) => {
        this._pendingPromises.has(e14) && this._updateFeatures(t14), this._updatePendingPromises(e14);
      }, s15 = () => this._updatePendingPromises(e14);
      e14.then(t13, s15);
    }), this.notifyChange("pendingPromisesCount");
  }
  get selectedFeature() {
    const { features: e13, selectedFeatureIndex: t13 } = this;
    if (-1 === t13)
      return null;
    return e13[t13] || null;
  }
  get selectedFeatureIndex() {
    const e13 = this._get("selectedFeatureIndex");
    return "number" == typeof e13 ? e13 : -1;
  }
  set selectedFeatureIndex(e13) {
    const { featureCount: t13 } = this;
    e13 = isNaN(e13) || e13 < -1 || !t13 ? -1 : (e13 + t13) % t13, this.activeFeature = null, this._set("selectedFeatureIndex", e13);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get state() {
    return this.get("view.ready") ? "ready" : "disabled";
  }
  centerAtLocation() {
    const { view: e13 } = this, t13 = g9(this);
    return t13 && e13 ? this.callGoTo({ target: { target: t13, scale: e13.scale } }) : Promise.reject(new s3("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t13, view: e13 }));
  }
  zoomTo(e13) {
    return this.callGoTo(e13);
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e13, t13) {
    const { view: s15 } = this;
    if (!s15 || !e13)
      throw new s3("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e13, view: s15 });
    return s15.fetchPopupFeatures(e13, { event: t13 && t13.event, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t13 && t13.signal });
  }
  open(e13) {
    const t13 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e13, visible: true }, { fetchFeatures: s15 } = t13;
    delete t13.fetchFeatures, s15 && this._setFetchFeaturesPromises(t13.location);
    const i13 = ["actionsMenuOpen", "collapsed", "featureMenuOpen"];
    for (const r10 of i13)
      delete t13[r10];
    this.set(t13);
  }
  triggerAction(e13) {
    const t13 = this.allActions.getItemAt(e13);
    t13 && !t13.disabled && this.emit("trigger-action", { action: t13 });
  }
  next() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex + 1, this;
  }
  previous() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex - 1, this;
  }
  disableClusterBrowsing() {
    b11(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e13, selectedFeature: t13 } = this;
    "2d" === (e13 == null ? void 0 : e13.type) ? w9(t13) ? (await v8(this), await y10(this)) : s2.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t13) : s2.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t13);
  }
  _animationStateChange(e13) {
    this.zoomToLocation || (o8.disabled = "waiting-for-target" === e13);
  }
  _clearBrowsedClusterGraphics() {
    var _a;
    const e13 = (_a = this.view) == null ? void 0 : _a.graphics;
    e13 && (e13.remove(this.selectedClusterBoundaryFeature), this._selectedClusterFeature && e13.remove(this._selectedClusterFeature)), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (w9(this.selectedFeature))
      return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = this.selectedFeature ? [this.selectedFeature] : []);
  }
  _locationChange(e13) {
    const { selectedFeature: t13, updateLocationEnabled: s15 } = this;
    s15 && e13 && (!t13 || t13.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 1 ? Math.floor(this.selectedFeatureIndex / this.featuresPerPage) + 1 : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 1 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e13, featureCount: t13, featurePage: s15, featuresPerPage: i13, featureViewModels: r10 } = this;
    if (null === s15)
      return;
    const o11 = ((s15 - 1) * i13 + t13) % t13, a13 = o11 + i13;
    r10.slice(o11, a13).forEach((t14, s16) => {
      t14 && !t14.graphic && (t14.graphic = e13[o11 + s16]);
    });
  }
  async _selectedFeatureChange(e13) {
    const { location: t13, updateLocationEnabled: s15, view: i13 } = this;
    if (e13 && i13) {
      if (this.browseClusterEnabled) {
        if (this._selectedClusterFeature && (i13.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), w9(e13))
          return;
        return e13.symbol = await R6(e13), this._selectedClusterFeature = e13, void i13.graphics.add(this._selectedClusterFeature);
      }
      !s15 && t13 || !e13.geometry ? s15 && !e13.geometry && this.centerAtLocation().then(() => {
        var _a;
        const e14 = (_a = i13.center) == null ? void 0 : _a.clone();
        e14 && (this.location = e14);
      }) : this.location = e(F7(e13.geometry));
    }
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  _setFetchFeaturesPromises(e13) {
    return this._fetchFeaturesWithController(this._getScreenPoint(e13 || this.location)).then((e14) => {
      const { clientOnlyGraphics: t13, promisesPerLayerView: s15 } = e14, i13 = Promise.resolve(t13), r10 = s15.map((e15) => e15.promise);
      this.promises = [i13, ...r10];
    });
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e13) => e13 && !e13.destroyed && e13.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e13, features: t13, featureViewModels: s15 } = this;
    if (w9(e13) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !t13 || !t13.length)
      return;
    const i13 = s15.slice(0), r10 = [];
    t13.forEach((t14, s16) => {
      var _a, _b;
      if (!t14)
        return;
      let o11 = null;
      if (i13.some((e14, s17) => (e14 && e14.graphic === t14 && (o11 = e14, i13.splice(s17, 1)), !!o11)), o11)
        r10[s16] = o11;
      else {
        const i14 = new X2({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference, graphic: t14 === e13 ? t14 : null, map: (_b = this.view) == null ? void 0 : _b.map, view: this.view });
        r10[s16] = i14;
      }
    }), i13.forEach((e14) => e14 && !e14.destroyed && e14.destroy()), this._set("featureViewModels", r10);
  }
  _getScreenPoint(e13) {
    const { view: t13 } = this;
    return t13 && e13 && "function" == typeof t13.toScreen ? t13.toScreen(e13) : null;
  }
  _autoOpenEnabledChange() {
    const e13 = "auto-fetch-features", { _handles: t13, autoOpenEnabled: s15 } = this;
    if (t13.remove(e13), s15 && this.view) {
      const s16 = this.view.on("click", (e14) => {
        "mouse" === e14.pointerType && 0 !== e14.button || this._fetchFeaturesAndOpen(e14);
      }, P.WIDGET);
      t13.add(s16, e13);
    }
  }
  _cancelFetchingFeatures() {
    const e13 = this._fetchFeaturesController;
    e13 && e13.abort(), this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
  }
  _fetchFeaturesWithController(e13, t13) {
    this._cancelFetchingFeatures();
    const s15 = new AbortController(), { signal: i13 } = s15;
    this._fetchFeaturesController = s15, this.notifyChange("waitingForResult");
    const r10 = this.fetchFeatures(e13, { signal: i13, event: t13 });
    return r10.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
    }), r10;
  }
  _fetchFeaturesAndOpen(e13) {
    const { screenPoint: t13, mapPoint: s15 } = e13, { view: i13 } = this;
    this._fetchFeaturesWithController(t13, e13).then((e14) => {
      var _a;
      const { clientOnlyGraphics: t14, promisesPerLayerView: r10, location: o11 } = e14, a13 = [Promise.resolve(t14), ...r10.map((e15) => e15.promise)];
      return (_a = i13 == null ? void 0 : i13.popup) == null ? void 0 : _a.open({ location: o11 || s15, promises: a13 }), e14;
    });
  }
  _updatePendingPromises(e13) {
    e13 && this._pendingPromises.has(e13) && (this._pendingPromises.delete(e13), this.notifyChange("pendingPromisesCount"));
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  async _getLayerView(e13, t13) {
    return await e13.when(), e13.whenLayerView(t13);
  }
  _getHighlightLayer(e13) {
    const { layer: t13, sourceLayer: s15 } = e13;
    return s15 && "layer" in s15 && s15.layer ? s15.layer : "map-notes" === (s15 == null ? void 0 : s15.type) || "subtype-group" === (s15 == null ? void 0 : s15.type) ? s15 : t13;
  }
  _getHighlightTarget(e13, t13) {
    const s15 = "imagery" === t13.type ? void 0 : "objectIdField" in t13 ? t13.objectIdField || o10 : null, i13 = e13.attributes;
    return i13 && s15 && i13[s15] || e13;
  }
  async _highlightActiveFeature() {
    const e13 = "highlight-active-feature";
    this._handles.remove(e13);
    const { highlightEnabled: t13, view: s15, activeFeature: i13, visible: r10 } = this;
    if (!(i13 && s15 && t13 && r10))
      return;
    const o11 = this._getHighlightLayer(i13);
    if (!(o11 && o11 instanceof b2))
      return;
    const a13 = this._getLayerView(s15, o11);
    this._highlightActiveFeaturePromise = a13;
    const n11 = await a13;
    if (!(n11 && t5(n11) && this._highlightActiveFeaturePromise === a13 && this.activeFeature && this.highlightEnabled))
      return;
    const l13 = n11.highlight(this._getHighlightTarget(i13, o11));
    this._handles.add(l13, e13);
  }
  async _highlightSelectedFeature() {
    const e13 = "highlight-selected-feature";
    this._handles.remove(e13);
    const { selectedFeature: t13, highlightEnabled: s15, view: i13, visible: r10 } = this;
    if (!(t13 && i13 && s15 && r10))
      return;
    const o11 = this._getHighlightLayer(t13);
    if (!(o11 && o11 instanceof b2))
      return;
    const a13 = this._getLayerView(i13, o11);
    this._highlightSelectedFeaturePromise = a13;
    const n11 = await a13;
    if (!(n11 && t5(n11) && this._highlightSelectedFeaturePromise === a13 && this.selectedFeature && this.highlightEnabled && this.visible))
      return;
    const l13 = n11.highlight(this._getHighlightTarget(t13, o11));
    this._handles.add(l13, e13);
  }
  _updateFeatures(e13) {
    const { features: t13 } = this;
    if (!e13 || !e13.length)
      return;
    if (!t13.length)
      return void (this.features = e13);
    const s15 = e13.filter((e14) => !t13.includes(e14));
    this.features = t13.concat(s15);
  }
};
e2([y2()], z3.prototype, "featurePage", void 0), e2([y2()], z3.prototype, "isLoadingFeature", null), e2([y2({ type: B3 })], z3.prototype, "actions", void 0), e2([y2({ readOnly: true })], z3.prototype, "active", null), e2([y2()], z3.prototype, "activeFeature", void 0), e2([y2({ readOnly: true })], z3.prototype, "allActions", null), e2([y2({ type: Boolean })], z3.prototype, "defaultPopupTemplateEnabled", void 0), e2([y2()], z3.prototype, "autoCloseEnabled", void 0), e2([y2()], z3.prototype, "autoOpenEnabled", void 0), e2([y2()], z3.prototype, "browseClusterEnabled", void 0), e2([y2()], z3.prototype, "content", void 0), e2([y2({ type: B3, readOnly: true })], z3.prototype, "defaultActions", null), e2([y2({ readOnly: true })], z3.prototype, "featureCount", null), e2([y2()], z3.prototype, "features", null), e2([y2()], z3.prototype, "featuresPerPage", void 0), e2([y2()], z3.prototype, "featureViewModelAbilities", void 0), e2([y2({ readOnly: true })], z3.prototype, "featureViewModels", void 0), e2([y2()], z3.prototype, "highlightEnabled", void 0), e2([y2()], z3.prototype, "includeDefaultActions", void 0), e2([y2({ type: w })], z3.prototype, "location", null), e2([y2({ readOnly: true })], z3.prototype, "pendingPromisesCount", null), e2([y2({ readOnly: true })], z3.prototype, "selectedClusterBoundaryFeature", void 0), e2([y2({ readOnly: true })], z3.prototype, "waitingForResult", null), e2([y2({ readOnly: true })], z3.prototype, "promiseCount", null), e2([y2()], z3.prototype, "promises", null), e2([y2({ value: null, readOnly: true })], z3.prototype, "selectedFeature", null), e2([y2({ value: -1 })], z3.prototype, "selectedFeatureIndex", null), e2([y2({ readOnly: true })], z3.prototype, "selectedFeatureViewModel", null), e2([y2({ readOnly: true })], z3.prototype, "state", null), e2([y2()], z3.prototype, "title", void 0), e2([y2()], z3.prototype, "updateLocationEnabled", void 0), e2([y2()], z3.prototype, "view", void 0), e2([y2()], z3.prototype, "visible", void 0), e2([y2()], z3.prototype, "zoomFactor", void 0), e2([y2()], z3.prototype, "zoomToLocation", void 0), e2([y2()], z3.prototype, "centerAtLocation", null), z3 = e2([a2("esri.widgets.Popup.PopupViewModel")], z3);
var H3 = z3;

// node_modules/@arcgis/core/widgets/Popup.js
var B4 = "selected-index";
var D2 = 0;
var L3 = "popup-spinner";
var S7 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var R8 = "esri-popup";
function V3(e13, t13) {
  return void 0 === t13 ? `${R8}__${e13}` : `${R8}__${e13}-${t13}`;
}
var U7 = { closeButton: true, featureNavigation: true };
var W5 = class extends i10(W) {
  constructor(e13, i13) {
    super(e13, i13), this._blurClose = false, this._blurContainer = false, this._containerNode = null, this._mainContainerNode = null, this._featureMenuNode = null, this._actionsMenuNode = null, this._focusClose = false, this._focusContainer = false, this._focusDockButton = false, this._focusFeatureMenuButton = false, this._focusActionsMenuButton = false, this._focusFirstFeature = false, this._focusFirstAction = false, this._handles = new t2(), this._pointerOffsetInPx = 16, this._spinner = null, this._feature = null, this._featureMenuIntersectionObserverNode = null, this._featureMenuViewportNode = null, this._rootFlowItemNode = null, this._featureMenuIntersectionObserverCallback = ([e14]) => {
      (e14 == null ? void 0 : e14.isIntersecting) && null != this.viewModel.featurePage && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._displaySpinnerThrottled = e6(() => this._displaySpinner(), D2), this._exitRelatedRecordsActions = /* @__PURE__ */ new WeakMap(), this._featureSelectionActions = /* @__PURE__ */ new WeakMap(), this._flowItems = new j2(), this.alignment = "auto", this.collapsed = false, this.collapseEnabled = true, this.dockEnabled = false, this.featureMenuOpen = false, this.headingLevel = 2, this.maxInlineActions = 3, this.messages = null, this.messagesCommon = null, this.spinnerEnabled = true, this.viewModel = new H3(), this.visibleElements = { ...U7 }, this._handleOpenRelatedFeature = (e14) => {
      this._openRelatedFeature(e14);
    }, this._addSelectedFeatureIndexHandle(), this.addHandles([l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), l2(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, (e14, t13) => {
      !!e14 != !!t13 && this.reposition();
    }), l2(() => {
      var _a, _b, _c, _d, _e, _f;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding, (_d = (_c = this.viewModel) == null ? void 0 : _c.view) == null ? void 0 : _d.size, (_e = this.viewModel) == null ? void 0 : _e.active, (_f = this.viewModel) == null ? void 0 : _f.location, this.alignment];
    }, () => this.reposition()), l2(() => this.spinnerEnabled, (e14) => this._spinnerEnabledChange(e14)), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e14, t13) => this._updateDockEnabledForViewSize(e14, t13)), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e14, t13) => this._viewChange(e14, t13)), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e14, t13) => this._viewReadyChange(e14 ?? false, t13 ?? false)), l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), l2(() => this.selectedFeatureWidget, () => this._destroyFlowItemWidgets()), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.title, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setTitleFromFeatureWidget()), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.content, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setContentFromFeatureWidget()), f(() => !this.collapsed, () => {
      var _a, _b;
      "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && this.viewModel.active && this.collapseEnabled && this.viewModel.centerAtLocation();
    }), a4(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, "change", () => this._watchActions()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, () => this._watchActions(), h), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop()), a4(() => this._flowItems, "change", () => {
      this.notifyChange("_activeFlowItemWidget"), this.scheduleRender();
    }), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this._activeFlowItemWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.state, (_d = (_c = this._activeFlowItemWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.title];
    }, () => this.scheduleRender())]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-flow-IH7NBMPY.js"), import("./calcite-flow-item-IMCYVW45.js"), import("./calcite-action-OZQEIKEU.js"), import("./calcite-tooltip-CECAVK4G.js"), import("./calcite-icon-XAFZ5NNH.js")]);
  }
  destroy() {
    var _a, _b;
    this._destroyFlowItemWidgets(), this._destroySelectedFeatureWidget(), this._destroySpinner(), (_a = this._handles) == null ? void 0 : _a.destroy(), this._unobserveFeatureMenuObserver(), (_b = this._featureMenuIntersectionObserver) == null ? void 0 : _b.disconnect();
  }
  get actionsMenuId() {
    return `${this.id}-actions-menu`;
  }
  get actionsMenuButtonId() {
    return `${this.id}-actions-menu-button`;
  }
  get featureMenuId() {
    return `${this.id}-feature-menu`;
  }
  get titleId() {
    return `${this.id}-popup-title`;
  }
  get contentId() {
    return `${this.id}-popup-content`;
  }
  get hasContent() {
    const { selectedFeatureWidget: e13, viewModel: t13 } = this;
    if (!e13)
      return !!(t13 == null ? void 0 : t13.content);
    const i13 = e13.viewModel;
    if ((i13 == null ? void 0 : i13.waitingForContent) || "error" === (i13 == null ? void 0 : i13.state))
      return true;
    const o11 = i13 == null ? void 0 : i13.content;
    return Array.isArray(o11) ? !!o11.length : !!o11;
  }
  get featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && null != this.visibleElements.featureNavigation;
  }
  get collapsible() {
    return !!(this.collapseEnabled && this.viewModel.title && this.hasContent);
  }
  get featureMenuVisible() {
    return this.featureNavigationVisible && this.featureMenuOpen;
  }
  get contentCollapsed() {
    return this.collapsible && !this.featureMenuVisible && this.collapsed;
  }
  get dividedActions() {
    return this._divideActions();
  }
  get _activeFlowItemWidget() {
    const { _flowItems: e13 } = this;
    return e13.getItemAt(e13.length - 1) || null;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e13) {
    this.viewModel.actions = e13;
  }
  set actionsMenuOpen(e13) {
    this._set("actionsMenuOpen", !!e13);
  }
  get actionsMenuOpen() {
    return !!this.viewModel.active && this._get("actionsMenuOpen");
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e13) {
    this.viewModel.autoCloseEnabled = e13;
  }
  get autoOpenEnabled() {
    return this.viewModel.autoOpenEnabled;
  }
  set autoOpenEnabled(e13) {
    this.viewModel.autoOpenEnabled = e13;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e13) {
    this.viewModel.defaultPopupTemplateEnabled = e13;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e13) {
    this.viewModel.content = e13;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || S7;
  }
  set dockOptions(e13) {
    var _a, _b;
    const t13 = { ...S7 }, i13 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.breakpoints, o11 = {};
    i13 && (o11.width = i13.xsmall, o11.height = i13.xsmall);
    const n11 = { ...t13, ...e13 }, s15 = { ...t13.breakpoint, ...o11 }, { breakpoint: r10 } = n11;
    "object" == typeof r10 ? n11.breakpoint = { ...s15, ...r10 } : r10 && (n11.breakpoint = s15), this._set("dockOptions", n11), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e13) {
    this.viewModel.features = e13;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e13) {
    this.viewModel.goToOverride = e13;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e13) {
    this.viewModel.highlightEnabled = e13;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e13) {
    this.viewModel.location = e13;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e13) {
    this._overrideIfSome("label", e13);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e13) {
    this.viewModel.promises = e13;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e13) {
    this.viewModel.selectedFeatureIndex = e13;
  }
  get selectedFeatureWidget() {
    const { _feature: e13, visibleElements: t13, headingLevel: i13, _flowItems: o11 } = this, { selectedFeatureViewModel: n11 } = this.viewModel, s15 = { ...t13, title: false };
    return n11 ? (e13 ? (e13.viewModel = n11, e13.visibleElements = s15) : this._feature = new C4({ flowItems: o11, headingLevel: i13 + 1, viewModel: n11, visibleElements: s15 }), this._feature) : null;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e13) {
    this.viewModel.title = e13;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e13) {
    this.viewModel.updateLocationEnabled = e13;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e13) {
    this.viewModel.view = e13;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e13) {
    this.viewModel.visible = e13;
  }
  castVisibleElements(e13) {
    return { ...U7, ...e13 };
  }
  blur() {
    const { active: e13 } = this.viewModel;
    e13 || s2.getLogger(this.declaredClass).warn("Popup can only be blurred when currently active."), this.visibleElements.closeButton ? this._blurClose = true : this._blurContainer = true, this.scheduleRender();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e13, t13) {
    return this.viewModel.fetchFeatures(e13, t13);
  }
  focus() {
    const { active: e13 } = this.viewModel;
    e13 || s2.getLogger(this.declaredClass).warn("Popup can only be focused when currently active."), this.visibleElements.closeButton ? this._focusClose = true : this._focusContainer = true, this.scheduleRender();
  }
  next() {
    return this.viewModel.next();
  }
  open(e13) {
    var _a, _b;
    this._handles.remove(B4);
    const t13 = !!e13 && !!e13.featureMenuOpen, i13 = !!e13 && !!e13.actionsMenuOpen, o11 = { collapsed: !!e13 && !!e13.collapsed, actionsMenuOpen: i13, featureMenuOpen: t13 };
    "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && (o11.collapsed = true), this.set(o11), this.viewModel.open(e13), this._shouldFocus(e13), this._addSelectedFeatureIndexHandle();
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e13) {
    return this.viewModel.triggerAction(e13);
  }
  render() {
    var _a, _b, _c, _d;
    const { actionsMenuOpen: e13, dockEnabled: t13, featureMenuVisible: i13, dividedActions: o11, currentAlignment: n11, currentDockPosition: s15 } = this, { active: r10 } = this.viewModel, { menuActions: l13 } = o11, a13 = r10 && l13.length > 1 && e13, c19 = r10 && t13, d7 = r10 && !t13, u12 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, h13 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, p14 = { [n10.alignTopCenter]: "top-center" === n11, [n10.alignBottomCenter]: "bottom-center" === n11, [n10.alignTopLeft]: "top-left" === n11, [n10.alignBottomLeft]: "bottom-left" === n11, [n10.alignTopRight]: "top-right" === n11, [n10.alignBottomRight]: "bottom-right" === n11, [n10.isDocked]: c19, [n10.shadow]: d7, [n10.isDockedTopLeft]: "top-left" === s15, [n10.isDockedTopCenter]: "top-center" === s15, [n10.isDockedTopRight]: "top-right" === s15, [n10.isDockedBottomLeft]: "bottom-left" === s15, [n10.isDockedBottomCenter]: "bottom-center" === s15, [n10.isDockedBottomRight]: "bottom-right" === s15, [n10.isFeatureMenuOpen]: i13, [n10.isActionsMenuOpen]: a13 };
    return n2("div", { class: this.classes(n10.base, p14), role: "presentation", "data-layer-title": u12, "data-layer-id": h13, bind: this, afterCreate: this._positionContainer, afterUpdate: this._positionContainer }, r10 ? [this.renderMainContainer(), this.renderPointer()] : null);
  }
  renderLoadingIcon() {
    return n2("span", { "aria-hidden": "true", class: this.classes(n10.icon, n10.iconLoading, n10.rotating) });
  }
  renderNavigationLoading() {
    const { messagesCommon: e13 } = this;
    return this.viewModel.pendingPromisesCount ? n2("div", { key: V3("loading-container"), role: "presentation", class: n10.loadingContainer, "aria-label": e13.loading, title: e13.loading }, this.renderLoadingIcon()) : null;
  }
  renderPreviousIcon() {
    const e13 = f2(this.container), t13 = { [n10.iconRightTriangleArrow]: e13, [n10.paginationPreviousIconRTL]: e13, [n10.iconLeftTriangleArrow]: !e13, [n10.paginationPreviousIconLTR]: !e13 };
    return n2("span", { "aria-hidden": "true", class: this.classes(n10.icon, t13) });
  }
  renderPreviousButton() {
    const { messages: e13 } = this;
    return n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._previous, onkeydown: this._previous, class: this.classes(n10.button, n10.paginationPrevious), "aria-label": e13.previous, title: e13.previous }, this.renderPreviousIcon());
  }
  renderNextIcon() {
    const e13 = f2(this.container), t13 = { [n10.iconLeftTriangleArrow]: e13, [n10.paginationNextIconRTL]: e13, [n10.iconRightTriangleArrow]: !e13, [n10.paginationNextIconLTR]: !e13 };
    return n2("span", { "aria-hidden": "true", class: this.classes(n10.icon, t13) });
  }
  renderNextButton() {
    const { messages: e13 } = this;
    return n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._next, onkeydown: this._next, class: this.classes(n10.button, n10.paginationNext), "aria-label": e13.next, title: e13.next }, this.renderNextIcon());
  }
  renderFeatureMenuButton() {
    const { featureMenuOpen: e13, featureMenuId: t13, messagesCommon: i13 } = this, { featureCount: o11, selectedFeatureIndex: n11 } = this.viewModel;
    return n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._toggleFeatureMenu, onkeydown: this._toggleFeatureMenu, afterCreate: this._focusFeatureMenuButtonNode, afterUpdate: this._focusFeatureMenuButtonNode, class: this.classes(n10.button, n10.featureMenuButton), "aria-haspopup": "true", "aria-controls": t13, "aria-expanded": e13.toString(), "aria-label": i13.menu, title: i13.menu }, this._getPageText(o11, n11));
  }
  renderNavigationButtons() {
    return this.featureNavigationVisible ? [this.renderPreviousButton(), this.renderNavigationLoading() || this.renderFeatureMenuButton(), this.renderNextButton()] : [];
  }
  renderDockIcon() {
    const { dockEnabled: e13 } = this, t13 = this._wouldDockTo(), i13 = { [n10.iconUndock]: e13, [n10.iconDock]: !e13, [n10.iconDockToRight]: !e13 && ("top-right" === t13 || "bottom-right" === t13), [n10.iconDockToLeft]: !e13 && ("top-left" === t13 || "bottom-left" === t13), [n10.iconDockToTop]: !e13 && "top-center" === t13, [n10.iconDockToBottom]: !e13 && "bottom-center" === t13 };
    return n2("span", { "aria-hidden": "true", class: this.classes(i13, n10.icon) });
  }
  renderDockButton() {
    var _a, _b, _c;
    const { dockEnabled: e13, messages: t13 } = this, i13 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, o11 = e13 ? t13.undock : t13.dock;
    return "xsmall" !== i13 && ((_c = this.dockOptions) == null ? void 0 : _c.buttonEnabled) ? n2("div", { role: "button", "aria-label": o11, title: o11, tabIndex: 0, bind: this, onclick: this._toggleDockEnabled, onkeydown: this._toggleDockEnabled, afterCreate: this._focusDockButtonNode, afterUpdate: this._focusDockButtonNode, class: this.classes(n10.button, n10.buttonDock) }, this.renderDockIcon()) : null;
  }
  renderTitle() {
    const { title: e13 } = this.viewModel, { titleId: t13, collapsible: i13, contentCollapsed: o11, messagesCommon: n11 } = this, s15 = { [n10.headerContainerButton]: i13 }, r10 = n2(n3, { level: this.headingLevel, class: n10.headerTitle, innerHTML: e13 ?? "" }), l13 = i13 ? n2("button", { key: `${e13}--collapsible`, id: t13, title: o11 ? n11.expand : n11.collapse, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(n10.headerContainer, s15), "aria-expanded": o11 ? "false" : "true", onclick: this._toggleCollapsed, type: "button" }, r10, n2("calcite-icon", { class: n10.collapseIcon, key: "collapse-icon", icon: o11 ? "chevron-down" : "chevron-up", scale: "m" })) : n2("div", { key: e13 ?? "title", id: t13, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(n10.headerContainer, s15) }, r10);
    return e13 ? l13 : null;
  }
  renderCloseIcon() {
    return n2("span", { "aria-hidden": "true", class: this.classes(n10.icon, n10.iconClose) });
  }
  renderCloseButton() {
    const { visibleElements: e13, messagesCommon: t13 } = this;
    return e13.closeButton ? n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._close, onkeydown: this._close, class: n10.button, "aria-label": t13.close, title: t13.close, afterCreate: this._closeButtonNodeUpdated, afterUpdate: this._closeButtonNodeUpdated }, this.renderCloseIcon()) : null;
  }
  renderHeader() {
    return n2("header", { class: n10.header }, this.renderTitle(), n2("div", { class: n10.headerButtons }, this.renderDockButton(), this.renderCloseButton()));
  }
  renderContentContainer() {
    const { contentId: e13, hasContent: t13, contentCollapsed: i13, _flowItems: o11 } = this, { content: n11 } = this.viewModel, s15 = o11.toArray(), r10 = { [n10.contentHasFlows]: !!s15.length };
    return t13 && !i13 ? n2("div", { key: n11 ?? "content", enterAnimation: this._createFeatureUpdatedAnimation(), id: e13, class: this.classes(n10.content, r10) }, n2("calcite-flow", { bind: this }, n2("calcite-flow-item", { bind: this, "data-node-ref": "_rootFlowItemNode", afterCreate: v2, key: "root-flow-item", onCalciteFlowItemBack: this._handleBackClick }, this.renderContent()), s15.map((e14) => this.renderFlowItem(e14))), s15.map((e14) => this.renderFlowItemTooltips(e14))) : null;
  }
  renderFlowItem(e13) {
    const { messages: t13 } = this, i13 = r4(), o11 = "graphic" in e13 && !e13.isTable;
    return n2("calcite-flow-item", { bind: this, class: this.classes({ [n10.calciteThemeDark]: !i13, [n10.calciteThemeLight]: i13 }), heading: e13.title ?? "", description: this._getFlowItemDescription(e13), onCalciteFlowItemBack: this._handleBackClick, key: `flow-item-${e13.viewModel.uid}` }, n2("calcite-action", { class: n10.actionExit, icon: "move-up", label: t13 == null ? void 0 : t13.exitRelatedRecords, text: t13 == null ? void 0 : t13.exitRelatedRecords, slot: "header-actions-start", bind: this, afterCreate: (t14) => this._storeExitRelatedRecordsAction(e13, t14), onclick: this._destroyFlowItemWidgets }), o11 ? n2("calcite-action", { class: n10.actionSelectFeature, icon: "zoom-to-object", label: t13 == null ? void 0 : t13.selectFeature, text: t13 == null ? void 0 : t13.selectFeature, slot: "header-actions-end", bind: this, afterCreate: (t14) => this._storeFeatureSelectionAction(e13, t14), onclick: () => this._handleOpenRelatedFeature(e13) }) : null, n2("div", { class: this.classes(n10.contentFlowItem, { [n10.calciteThemeDark]: i13, [n10.calciteThemeLight]: !i13 }) }, e13.render()));
  }
  renderFlowItemTooltips(e13) {
    const { messages: t13, _exitRelatedRecordsActions: i13, _featureSelectionActions: o11 } = this, n11 = r4(), s15 = o11.get(e13);
    return [n2("calcite-tooltip", { class: this.classes({ [n10.calciteThemeDark]: !n11, [n10.calciteThemeLight]: n11 }), key: `exit-related-records-tooltip-${e13.viewModel.uid}`, label: t13 == null ? void 0 : t13.exitRelatedRecords, overlayPositioning: "fixed", referenceElement: i13.get(e13), placement: "top" }, t13 == null ? void 0 : t13.exitRelatedRecords), s15 ? n2("calcite-tooltip", { class: this.classes({ [n10.calciteThemeDark]: !n11, [n10.calciteThemeLight]: n11 }), key: `select-related-record-tooltip-${e13.viewModel.uid}`, label: t13 == null ? void 0 : t13.selectFeature, overlayPositioning: "fixed", referenceElement: s15, placement: "top" }, t13 == null ? void 0 : t13.selectFeature) : null];
  }
  renderActionsMenuButton() {
    const { actionsMenuId: e13, actionsMenuButtonId: t13, actionsMenuOpen: i13, dividedActions: o11, messagesCommon: n11 } = this, s15 = i13 ? n11.close : n11.open, { menuActions: r10 } = o11;
    return r10.length ? n2("div", { key: V3("actions-menu-button"), class: this.classes(n10.button, n10.actionsMenuButton), role: "button", id: t13, "aria-haspopup": "true", "aria-controls": i13 ? e13 : null, tabIndex: 0, bind: this, onclick: this._toggleActionsMenu, onkeydown: this._toggleActionsMenu, afterCreate: this._focusActionsMenuButtonNode, afterUpdate: this._focusActionsMenuButtonNode, "aria-label": s15, title: s15 }, n2("span", { "aria-hidden": "true", class: n10.iconActionsMenu })) : null;
  }
  renderMenuActions() {
    const { actionsMenuId: e13, actionsMenuButtonId: t13, actionsMenuOpen: i13, dividedActions: o11 } = this, { menuActions: n11 } = o11;
    return n11.length && i13 ? n2("ul", { id: e13, role: "menu", "aria-labelledby": t13, key: V3("actions"), class: n10.actions, bind: this, onkeyup: this._handleActionMenuKeyup, afterCreate: this._actionsMenuNodeUpdated, afterUpdate: this._actionsMenuNodeUpdated }, n11.toArray().map((e14) => this.renderAction({ action: e14, type: "menu-item" }))) : null;
  }
  renderInlineActions() {
    const { inlineActions: e13 } = this.dividedActions;
    return e13.length ? e13.toArray().map((e14) => this.renderAction({ action: e14, type: "inline" })) : [];
  }
  renderInlineActionsContainer() {
    const { inlineActions: e13, menuActions: t13 } = this.dividedActions, i13 = !!e13.length, o11 = !!t13.length;
    return i13 || o11 ? n2("div", { key: "inline-actions-container", "data-inline-actions": i13.toString(), "data-menu-actions": o11.toString(), class: n10.inlineActionsContainer }, this.renderInlineActions(), this.renderActionsMenuButton(), this.renderMenuActions()) : null;
  }
  renderNavigation() {
    return this.featureNavigationVisible ? n2("section", { key: V3("navigation"), class: this.classes(n10.navigation) }, this.renderNavigationButtons()) : null;
  }
  renderFooter() {
    const { featureNavigationVisible: e13, dividedActions: t13 } = this, { inlineActions: i13, menuActions: o11 } = t13, n11 = !!i13.length, s15 = !!o11.length, r10 = { [n10.footerHasPagination]: e13, [n10.footerHasActions]: n11, [n10.footerHasActionsMenu]: s15 };
    return e13 || n11 ? n2("div", { key: V3("feature-buttons"), class: this.classes(n10.footer, r10) }, this.renderInlineActionsContainer(), this.renderNavigation()) : null;
  }
  renderFeatureMenuContainer() {
    const { messages: e13 } = this, { featureViewModels: t13, isLoadingFeature: i13 } = this.viewModel, o11 = s5(e13.selectedFeatures, { total: t13.length });
    return n2("section", { key: V3("menu"), class: n10.featureMenu }, n2("strong", { class: n10.featureMenuHeader }, o11), n2("nav", { bind: this, class: n10.featureMenuViewport, "data-node-ref": "_featureMenuViewportNode", afterCreate: v2 }, this.renderFeatureMenu(), n2("div", { class: n10.featureMenuObserver, bind: this, afterCreate: this._featureMenuIntersectionObserverCreated }), i13 ? n2("div", { class: n10.featureMenuLoader }, this.renderLoadingIcon()) : null));
  }
  renderPointer() {
    return this.dockEnabled ? null : n2("div", { key: V3("pointer"), class: n10.pointer, role: "presentation" }, n2("div", { class: this.classes(n10.pointerDirection, n10.shadow) }));
  }
  renderMainContainer() {
    const { dockEnabled: e13, currentAlignment: t13, currentDockPosition: i13, titleId: o11, contentId: n11, collapsible: s15, hasContent: r10, contentCollapsed: l13, visibleElements: a13 } = this, { title: c19 } = this.viewModel, d7 = "bottom-left" === t13 || "bottom-center" === t13 || "bottom-right" === t13 || "top-left" === i13 || "top-center" === i13 || "top-right" === i13, u12 = "top-left" === t13 || "top-center" === t13 || "top-right" === t13 || "bottom-left" === i13 || "bottom-center" === i13 || "bottom-right" === i13, h13 = { [n10.shadow]: e13, [n10.isCollapsible]: s15, [n10.isCollapsed]: l13 };
    return n2("div", { class: this.classes(n10.main, n10.widget, h13), tabIndex: a13.closeButton ? void 0 : -1, role: "dialog", "aria-labelledby": c19 ? o11 : "", "aria-describedby": r10 && !l13 ? n11 : "", bind: this, onkeyup: this._handleMainKeyup, afterCreate: this._mainContainerNodeUpdated, afterUpdate: this._mainContainerNodeUpdated }, d7 ? this.renderFooter() : null, d7 ? this.renderFeatureMenuContainer() : null, this.renderHeader(), this.renderContentContainer(), u12 ? this.renderFooter() : null, u12 ? this.renderFeatureMenuContainer() : null);
  }
  renderContent() {
    var _a;
    const e13 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e13 ? "string" == typeof e13 ? n2("div", { class: t8.contentNode, key: e13, innerHTML: e13 }) : this.renderNodeContent(e13) : null;
  }
  renderActionText(e13) {
    return n2("span", { key: "text", class: n10.actionText }, e13);
  }
  renderActionIcon(e13) {
    const t13 = this._getActionClass(e13), i13 = this._getActionImage(e13), o11 = { [n10.iconLoading]: e13.active, [n10.rotating]: e13.active, [n10.icon]: !!t13, [n10.actionImage]: !e13.active && !!i13 };
    return t13 && (o11[t13] = !e13.active), n2("span", { key: "icon", "aria-hidden": "true", class: this.classes(n10.icon, o11), styles: this._getIconStyles(i13) });
  }
  renderAction(e13) {
    const { action: t13, type: i13 } = e13, o11 = this._getActionTitle(t13), n11 = { [n10.action]: "toggle" !== t13.type, [n10.actionToggle]: "toggle" === t13.type, [n10.actionToggleOn]: "toggle" === t13.type && t13.value, [n10.buttonDisabled]: t13.disabled }, s15 = [this.renderActionIcon(t13), this.renderActionText(o11)], r10 = "menu-item" === i13 ? n2("li", { key: t13.uid, role: "menuitem", tabIndex: 0, title: o11, "aria-label": o11, class: this.classes(n10.button, n11), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t13.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s15) : n2("div", { key: t13.uid, role: "button", tabIndex: 0, title: o11, "aria-label": o11, class: this.classes(n10.button, n11), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t13.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s15);
    return t13.visible ? r10 : null;
  }
  renderFeatureMenuItem(e13, t13) {
    const { messages: i13, messagesCommon: o11 } = this, { selectedFeatureIndex: n11, selectedFeatureViewModel: s15 } = this.viewModel, r10 = e13 === s15, l13 = { [n10.featureMenuSelected]: r10 }, a13 = r10 ? n2("span", { key: V3(`feature-menu-selected-feature-${n11}`), title: i13.selectedFeature, "aria-label": i13.selectedFeature, class: n10.iconCheckMark }) : null, c19 = n2("span", { innerHTML: e13.title || o11.untitled });
    return n2("li", { role: "menuitem", tabIndex: -1, key: V3(`feature-menu-feature-${n11}`), class: this.classes(l13, n10.featureMenuItem), bind: this, "data-feature-index": t13, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onkeyup: this._handleFeatureMenuItemKeyup, onclick: this._selectFeature, onkeydown: this._selectFeature, onmouseover: this._setActiveFeature, onmouseleave: this._removeActiveFeature }, n2("span", { class: n10.featureMenuTitle }, c19, a13));
  }
  renderFeatureMenu() {
    const { featureMenuId: e13 } = this, { featureViewModels: t13 } = this.viewModel;
    return t13.length > 1 ? n2("ol", { class: n10.featureMenuList, id: e13, bind: this, afterCreate: this._featureMenuNodeUpdated, afterUpdate: this._featureMenuNodeUpdated, onkeyup: this._handleFeatureMenuKeyup, role: "menu" }, t13.filter((e14) => !!e14.graphic).map((e14, t14) => this.renderFeatureMenuItem(e14, t14))) : null;
  }
  _storeFeatureSelectionAction(e13, t13) {
    this._featureSelectionActions.set(e13, t13), this.scheduleRender();
  }
  _storeExitRelatedRecordsAction(e13, t13) {
    this._exitRelatedRecordsActions.set(e13, t13), this.scheduleRender();
  }
  _getFlowItemDescription(e13) {
    return "featureCountDescription" in e13 ? e13.featureCountDescription : e13.viewModel.description ?? "";
  }
  async _openRelatedFeature(e13) {
    await e13.viewModel.updateGeometry();
    const t13 = e13.graphic, i13 = t13 == null ? void 0 : t13.geometry;
    if (t(i13) || t(t13))
      return;
    this._destroyFlowItemWidgets(), await this.viewModel.zoomTo({ target: i13 });
    const o11 = F7(i13);
    this.open({ features: [t13], location: r(o11) ? o11 : void 0 });
  }
  _destroyFlowItemWidgets() {
    this._flowItems.removeAll().forEach((e13) => {
      "showAllEnabled" in e13.viewModel && (e13.viewModel.showAllEnabled = false), e13.viewModel = null, e13.destroy();
    });
  }
  _handleBackClick() {
    const e13 = this._flowItems.pop();
    e13 && (this._exitRelatedRecordsActions.delete(e13), this._featureSelectionActions.delete(e13), "showAllEnabled" in e13.viewModel && (e13.viewModel.showAllEnabled = false), e13 && (e13.viewModel = null, e13.destroy()));
  }
  _getActionTitle(e13) {
    const { messages: t13, selectedFeature: i13, messagesCommon: o11 } = this, { id: n11 } = e13, s15 = i13 == null ? void 0 : i13.attributes, r10 = e13.title ?? "", l13 = "zoom-to-feature" === n11 ? s5(r10, { messages: t13 }) : "remove-selected-feature" === n11 ? s5(r10, { messages: o11 }) : "zoom-to-clustered-features" === n11 || "browse-clustered-features" === n11 ? s5(r10, { messages: t13 }) : e13.title;
    return l13 && s15 ? s5(l13, s15) : l13 ?? "";
  }
  _getActionClass(e13) {
    const { selectedFeature: t13 } = this, i13 = t13 == null ? void 0 : t13.attributes, { className: o11, image: n11 } = e13, s15 = n11 || o11 ? o11 : n10.iconDefaultAction;
    return s15 && i13 ? s5(s15, i13) : s15 ?? "";
  }
  _getActionImage(e13) {
    const { selectedFeature: t13 } = this, i13 = t13 == null ? void 0 : t13.attributes, { image: o11 } = e13;
    return o11 && i13 ? s5(o11, i13) : o11 ?? "";
  }
  _createFeatureUpdatedAnimation() {
    return w2("enter", n10.hasFeatureUpdated);
  }
  _getInlineActionCount() {
    const { maxInlineActions: e13, featureNavigationVisible: t13 } = this;
    if ("number" != typeof e13)
      return null;
    const i13 = Math.round(e13);
    return Math.max(t13 ? i13 - 1 : i13, 0);
  }
  _watchActions() {
    const { allActions: e13 } = this.viewModel;
    this.notifyChange("dividedActions");
    const t13 = "actions";
    this._handles.remove(t13), e13 && e13.forEach((e14) => {
      this._handles.add(l2(() => [e14.uid, e14.active, e14.className, e14.disabled, e14.id, e14.title, e14.image, e14.visible], () => this.scheduleRender()), t13);
    });
  }
  _divideActions() {
    const { allActions: e13 } = this.viewModel, i13 = e13.filter((e14) => e14.visible), o11 = this._getInlineActionCount(), n11 = null === o11, s15 = 0 === o11;
    return { inlineActions: n11 ? i13.slice(0) : s15 ? new j2() : i13.slice(0, o11), menuActions: n11 ? new j2() : s15 ? i13.slice(0) : i13.slice(o11) };
  }
  _featureMenuOpenChanged(e13) {
    e13 ? this._focusFirstFeature = true : this._focusFeatureMenuButton = true;
  }
  _actionsMenuOpenChanged(e13) {
    e13 ? this._focusFirstAction = true : this._focusActionsMenuButton = true;
  }
  _setTitleFromFeatureWidget() {
    var _a, _b;
    const { selectedFeatureWidget: e13, messagesCommon: t13 } = this;
    e13 && (this.viewModel.title = "error" === ((_a = e13.viewModel) == null ? void 0 : _a.state) ? t13.errorMessage : ((_b = e13.viewModel) == null ? void 0 : _b.title) || "");
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e13 } = this;
    e13 && (this.viewModel.content = e13);
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e13) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e13), this._featureMenuIntersectionObserverNode = e13;
  }
  _handleFeatureMenuKeyup(e13) {
    "Escape" === i(e13) && (e13.stopPropagation(), this._focusFeatureMenuButton = true, this.featureMenuOpen = false, this.scheduleRender());
  }
  _handleActionMenuKeyup(e13) {
    "Escape" === i(e13) && (e13.stopPropagation(), this._focusActionsMenuButton = true, this.actionsMenuOpen = false, this.scheduleRender());
  }
  _setActiveFeature(e13) {
    const { viewModel: t13 } = this, i13 = e13.currentTarget["data-feature-index"];
    t13.activeFeature = t13.features[i13] || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _handleFeatureMenuItemKeyup(e13) {
    const t13 = i(e13), { _featureMenuNode: o11 } = this, n11 = e13.currentTarget["data-feature-index"];
    if (!o11)
      return;
    const s15 = o11.querySelectorAll("li"), r10 = s15.length;
    if ("ArrowUp" !== t13)
      if ("ArrowDown" !== t13)
        if ("Home" !== t13)
          if ("End" !== t13)
            ;
          else {
            e13.stopPropagation();
            s15[s15.length - 1].focus();
          }
        else {
          e13.stopPropagation();
          s15[0].focus();
        }
      else {
        e13.stopPropagation();
        s15[(n11 + 1 + r10) % r10].focus();
      }
    else {
      e13.stopPropagation();
      s15[(n11 - 1 + r10) % r10].focus();
    }
  }
  _handleActionMenuItemKeyup(e13) {
    const t13 = i(e13), { _actionsMenuNode: o11 } = this, n11 = e13.currentTarget.dataset.actionUid, { menuActions: s15 } = this.dividedActions, r10 = s15.findIndex((e14) => e14.uid === n11);
    if (!o11)
      return;
    const l13 = o11.querySelectorAll("li"), a13 = l13.length;
    if ("ArrowUp" !== t13)
      if ("ArrowDown" !== t13)
        if ("Home" !== t13)
          if ("End" !== t13)
            ;
          else {
            e13.stopPropagation();
            l13[l13.length - 1].focus();
          }
        else {
          e13.stopPropagation();
          l13[0].focus();
        }
      else {
        e13.stopPropagation();
        l13[(r10 + 1 + a13) % a13].focus();
      }
    else {
      e13.stopPropagation();
      l13[(r10 - 1 + a13) % a13].focus();
    }
  }
  _handleMainKeyup(e13) {
    const t13 = i(e13);
    "ArrowLeft" === t13 && (e13.stopPropagation(), this.previous()), "ArrowRight" === t13 && (e13.stopPropagation(), this.next());
  }
  _spinnerEnabledChange(e13) {
    if (this._destroySpinner(), !e13)
      return;
    const t13 = this.get("viewModel.view");
    this._createSpinner(t13);
  }
  _hideSpinner() {
    const { _spinner: e13 } = this;
    e13 && (e13.location = null, e13.hide());
  }
  _displaySpinner() {
    const { _spinner: e13 } = this;
    if (!e13)
      return;
    const { location: t13, waitingForResult: i13 } = this.viewModel;
    i13 && t13 ? e13.show({ location: t13 }) : e13.hide();
  }
  _getIconStyles(e13) {
    return { "background-image": e13 ? `url(${e13})` : "" };
  }
  async _shouldFocus(e13) {
    (e13 == null ? void 0 : e13.shouldFocus) && (await j3(() => {
      var _a;
      return true === ((_a = this.viewModel) == null ? void 0 : _a.active);
    }), this.focus());
  }
  _addSelectedFeatureIndexHandle() {
    const e13 = l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e14, t13) => this._selectedFeatureIndexUpdated(e14, t13));
    this._handles.add(e13, B4);
  }
  _selectedFeatureIndexUpdated(e13, t13) {
    const { featureCount: i13 } = this;
    i13 && e13 !== t13 && -1 !== e13 && (this._destroyFlowItemWidgets(), this.actionsMenuOpen = false, this.featureMenuOpen = false, this._mainContainerNode && (this._mainContainerNode.scrollTop = 0), this._rootFlowItemNode && this._rootFlowItemNode.scrollContentTo({ top: 0 }));
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e13 } = this;
    e13 && (e13.viewModel = null, e13 && !e13.destroyed && e13.destroy()), this._feature = null;
  }
  _isScreenLocationWithinView(e13, t13) {
    return e13.x > -1 && e13.y > -1 && e13.x <= t13.width && e13.y <= t13.height;
  }
  _isOutsideView(e13) {
    const { popupHeight: t13, popupWidth: i13, screenLocation: o11, side: n11, view: s15 } = e13;
    if (isNaN(i13) || isNaN(t13) || !s15 || !o11)
      return false;
    const r10 = s15.padding;
    return "right" === n11 && o11.x + i13 / 2 > s15.width - r10.right || ("left" === n11 && o11.x - i13 / 2 < r10.left || ("top" === n11 && o11.y - t13 < r10.top || "bottom" === n11 && o11.y + t13 > s15.height - r10.bottom));
  }
  _calculateAutoAlignment(e13) {
    if ("auto" !== e13)
      return e13;
    const { _pointerOffsetInPx: t13, _containerNode: i13, _mainContainerNode: o11, viewModel: n11 } = this, { screenLocation: r10, view: l13 } = n11;
    if (t(r10) || !l13 || !i13)
      return "top-center";
    if (!this._isScreenLocationWithinView(r10, l13))
      return this._get("currentAlignment") || "top-center";
    function a13(e14) {
      return parseInt(e14.replace(/[^-\d\.]/g, ""), 10);
    }
    const c19 = o11 ? window.getComputedStyle(o11, null) : null, d7 = c19 ? a13(c19.getPropertyValue("max-height")) : 0, u12 = c19 ? a13(c19.getPropertyValue("height")) : 0, { height: h13, width: p14 } = i13.getBoundingClientRect(), g10 = p14 + t13, m14 = Math.max(h13, d7, u12) + t13, v9 = this._isOutsideView({ popupHeight: m14, popupWidth: g10, screenLocation: r10, side: "right", view: l13 }), f11 = this._isOutsideView({ popupHeight: m14, popupWidth: g10, screenLocation: r10, side: "left", view: l13 }), _4 = this._isOutsideView({ popupHeight: m14, popupWidth: g10, screenLocation: r10, side: "top", view: l13 }), w10 = this._isOutsideView({ popupHeight: m14, popupWidth: g10, screenLocation: r10, side: "bottom", view: l13 });
    return f11 ? _4 ? "bottom-right" : "top-right" : v9 ? _4 ? "bottom-left" : "top-left" : _4 ? w10 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e13) {
    return "function" == typeof e13 ? e13.call(this) : e13;
  }
  _getCurrentAlignment() {
    const { alignment: e13, dockEnabled: t13 } = this;
    return t13 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e13)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e13) {
    const t13 = ["left", "right"];
    return f2(this.container) && t13.reverse(), e13.replace(/leading/gi, t13[0]).replace(/trailing/gi, t13[1]);
  }
  _callDockPosition(e13) {
    return "function" == typeof e13 ? e13.call(this) : e13;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _wouldDockTo() {
    return this.dockEnabled ? null : this._getDockPosition();
  }
  _calculateAutoDockPosition(e13) {
    var _a;
    if ("auto" !== e13)
      return e13;
    const t13 = (_a = this.viewModel) == null ? void 0 : _a.view, i13 = f2(this.container) ? "top-left" : "top-right";
    if (!t13)
      return i13;
    const o11 = t13.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n11 = t13.width - o11.left - o11.right, { breakpoints: s15 } = t13;
    return s15 && n11 <= s15.xsmall ? "bottom-center" : i13;
  }
  _positionContainer(e13 = this._containerNode) {
    if (e13 && (this._containerNode = e13), !this._containerNode)
      return;
    const { screenLocation: t13 } = this.viewModel, { width: i13 } = this._containerNode.getBoundingClientRect(), o11 = this._calculatePositionStyle(t13, i13);
    o11 && Object.assign(this._containerNode.style, o11);
  }
  _calculateFullWidth(e13) {
    const { currentAlignment: t13, _pointerOffsetInPx: i13 } = this;
    return "top-left" === t13 || "bottom-left" === t13 || "top-right" === t13 || "bottom-right" === t13 ? e13 + i13 : e13;
  }
  _calculateAlignmentPosition(e13, t13, i13, o11) {
    const { currentAlignment: n11, _pointerOffsetInPx: s15 } = this;
    if (!i13)
      return;
    const { padding: r10 } = i13, l13 = o11 / 2, a13 = i13.height - t13, c19 = i13.width - e13;
    return "bottom-center" === n11 ? { top: t13 + s15 - r10.top, left: e13 - l13 - r10.left } : "top-left" === n11 ? { bottom: a13 + s15 - r10.bottom, right: c19 + s15 - r10.right } : "bottom-left" === n11 ? { top: t13 + s15 - r10.top, right: c19 + s15 - r10.right } : "top-right" === n11 ? { bottom: a13 + s15 - r10.bottom, left: e13 + s15 - r10.left } : "bottom-right" === n11 ? { top: t13 + s15 - r10.top, left: e13 + s15 - r10.left } : "top-center" === n11 ? { bottom: a13 + s15 - r10.bottom, left: e13 - l13 - r10.left } : void 0;
  }
  _calculatePositionStyle(e13, t13) {
    const { dockEnabled: i13, view: o11 } = this;
    if (!o11)
      return;
    if (i13)
      return { left: "", top: "", right: "", bottom: "" };
    if (t(e13) || !t13)
      return;
    const n11 = this._calculateFullWidth(t13), r10 = this._calculateAlignmentPosition(e13.x, e13.y, o11, n11);
    return r10 ? { top: void 0 !== r10.top ? `${r10.top}px` : "auto", left: void 0 !== r10.left ? `${r10.left}px` : "auto", bottom: void 0 !== r10.bottom ? `${r10.bottom}px` : "auto", right: void 0 !== r10.right ? `${r10.right}px` : "auto" } : void 0;
  }
  _viewChange(e13, t13) {
    e13 && t13 && (this.close(), this.clear());
  }
  _viewReadyChange(e13, t13) {
    if (e13) {
      const e14 = this.get("viewModel.view");
      this._wireUpView(e14);
    } else
      t13 && (this.close(), this.clear());
  }
  _wireUpView(e13) {
    if (this._destroySpinner(), !e13)
      return;
    const { spinnerEnabled: t13 } = this;
    t13 && this._createSpinner(e13), this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e13, t13, i13) {
    const [o11, n11] = e13, [s15, r10] = t13, { width: l13 = 0, height: a13 = 0 } = i13 ?? {};
    return o11 <= l13 && s15 > l13 || o11 > l13 && s15 <= l13 || n11 <= a13 && r10 > a13 || n11 > a13 && r10 <= a13;
  }
  _updateDockEnabledForViewSize(e13, t13) {
    if (!e13 || !t13)
      return;
    const i13 = this.get("viewModel.view.padding") || { left: 0, right: 0, top: 0, bottom: 0 }, o11 = i13.left + i13.right, n11 = i13.top + i13.bottom, s15 = [], r10 = [];
    s15[0] = e13[0] - o11, s15[1] = e13[1] - n11, r10[0] = t13[0] - o11, r10[1] = t13[1] - n11;
    const { dockOptions: l13 } = this, a13 = l13.breakpoint;
    this._dockingThresholdCrossed(s15, r10, a13) && this._setDockEnabledForViewSize(l13), this._setCurrentDockPosition();
  }
  _focusDockButtonNode(e13) {
    this._focusDockButton && (this._focusDockButton = false, e13.focus());
  }
  _closeButtonNodeUpdated(e13) {
    return this._focusClose ? (this._focusClose = false, void e13.focus()) : this._blurClose ? (this._blurClose = false, void e13.blur()) : void 0;
  }
  _mainContainerNodeUpdated(e13) {
    return this._mainContainerNode = e13, this._focusContainer ? (this._focusContainer = false, void e13.focus()) : this._blurContainer ? (this._blurContainer = false, void e13.blur()) : void 0;
  }
  _featureMenuNodeUpdated(e13) {
    if (this._featureMenuNode = e13, !e13 || !this._focusFirstFeature)
      return;
    this._focusFirstFeature = false;
    const t13 = e13.querySelectorAll("li");
    if (t13.length) {
      t13[0].focus();
    }
  }
  _actionsMenuNodeUpdated(e13) {
    if (this._actionsMenuNode = e13, !e13 || !this._focusFirstAction)
      return;
    this._focusFirstAction = false;
    const t13 = e13.querySelectorAll("li");
    if (t13.length) {
      t13[0].focus();
    }
  }
  _focusFeatureMenuButtonNode(e13) {
    this._focusFeatureMenuButton && (this._focusFeatureMenuButton = false, e13.focus());
  }
  _focusActionsMenuButtonNode(e13) {
    this._focusActionsMenuButton && (this._focusActionsMenuButton = false, e13.focus());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && (this._featureMenuViewportNode.scrollTop = 0);
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e13, viewModel: t13 } = this;
    if (!t13)
      return;
    const i13 = t13.active && !e13;
    t13.screenLocationEnabled = i13;
  }
  _shouldDockAtCurrentViewSize(e13) {
    var _a, _b;
    const t13 = e13.breakpoint, i13 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i13)
      return false;
    const { width: o11, height: n11 } = i13;
    if (isNaN(o11) || isNaN(n11))
      return false;
    if (!t13)
      return false;
    const s15 = t13.hasOwnProperty("width") && o11 <= (t13.width ?? 0), r10 = t13.hasOwnProperty("height") && n11 <= (t13.height ?? 0);
    return s15 || r10;
  }
  _setDockEnabledForViewSize(e13) {
    e13.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e13));
  }
  _getPageText(e13, t13) {
    return this.featureNavigationVisible ? s5(this.messages.pageText, { index: t13 + 1, total: e13 }) : null;
  }
  _destroySpinner() {
    const { _spinner: e13, view: t13 } = this;
    e13 && (t13 && t13.ui && t13.ui.remove(e13, L3), e13.destroy(), this._spinner = null);
  }
  _createSpinner(e13) {
    e13 && (this._spinner = new m12({ view: e13 }), e13.ui.add(this._spinner, { key: L3, position: "manual" }));
  }
  _toggleCollapsed() {
    this.collapsed = !this.collapsed;
  }
  _close() {
    this.close(), this.view && this.view.focus();
  }
  _toggleDockEnabled() {
    this.dockEnabled = !this.dockEnabled, this._focusDockButton = true, this.scheduleRender();
  }
  _toggleFeatureMenu() {
    const e13 = !this.featureMenuOpen;
    this._featureMenuOpenChanged(e13), this.actionsMenuOpen = false, this.featureMenuOpen = e13;
  }
  _toggleActionsMenu() {
    const e13 = !this.actionsMenuOpen;
    this._actionsMenuOpenChanged(e13), this.featureMenuOpen = false, this.actionsMenuOpen = e13;
  }
  _triggerAction(e13) {
    const t13 = e13.currentTarget.dataset.actionUid, { allActions: i13 } = this.viewModel, o11 = i13.findIndex((e14) => e14.uid === t13), n11 = i13.getItemAt(o11);
    n11 && "toggle" === n11.type && (n11.value = !n11.value), this.actionsMenuOpen = false, this.viewModel.triggerAction(o11);
  }
  _selectFeature(e13) {
    const t13 = e13.currentTarget["data-feature-index"];
    isNaN(t13) || (this.viewModel.selectedFeatureIndex = t13), this.featureMenuOpen = false, this._focusFeatureMenuButton = true, this.scheduleRender();
  }
  _next() {
    this.next();
  }
  _previous() {
    this.previous();
  }
};
e2([y2({ readOnly: true })], W5.prototype, "actionsMenuId", null), e2([y2({ readOnly: true })], W5.prototype, "actionsMenuButtonId", null), e2([y2({ readOnly: true })], W5.prototype, "featureMenuId", null), e2([y2({ readOnly: true })], W5.prototype, "titleId", null), e2([y2({ readOnly: true })], W5.prototype, "contentId", null), e2([y2({ readOnly: true })], W5.prototype, "hasContent", null), e2([y2({ readOnly: true })], W5.prototype, "featureNavigationVisible", null), e2([y2({ readOnly: true })], W5.prototype, "collapsible", null), e2([y2({ readOnly: true })], W5.prototype, "featureMenuVisible", null), e2([y2({ readOnly: true })], W5.prototype, "contentCollapsed", null), e2([y2({ readOnly: true })], W5.prototype, "dividedActions", null), e2([y2({ readOnly: true, dependsOn: ["_flowItems.length"] })], W5.prototype, "_activeFlowItemWidget", null), e2([y2()], W5.prototype, "actions", null), e2([y2()], W5.prototype, "actionsMenuOpen", null), e2([y2()], W5.prototype, "alignment", void 0), e2([y2()], W5.prototype, "autoCloseEnabled", null), e2([y2()], W5.prototype, "autoOpenEnabled", null), e2([y2()], W5.prototype, "defaultPopupTemplateEnabled", null), e2([y2()], W5.prototype, "content", null), e2([y2()], W5.prototype, "collapsed", void 0), e2([y2()], W5.prototype, "collapseEnabled", void 0), e2([y2({ readOnly: true })], W5.prototype, "currentAlignment", null), e2([y2({ readOnly: true })], W5.prototype, "currentDockPosition", null), e2([y2()], W5.prototype, "dockOptions", null), e2([y2()], W5.prototype, "dockEnabled", void 0), e2([y2({ readOnly: true })], W5.prototype, "featureCount", null), e2([y2()], W5.prototype, "featureMenuOpen", void 0), e2([y2()], W5.prototype, "features", null), e2([y2()], W5.prototype, "goToOverride", null), e2([y2()], W5.prototype, "headingLevel", void 0), e2([y2()], W5.prototype, "highlightEnabled", null), e2([y2()], W5.prototype, "location", null), e2([y2()], W5.prototype, "label", null), e2([y2()], W5.prototype, "maxInlineActions", void 0), e2([y2(), e3("esri/widgets/Popup/t9n/Popup")], W5.prototype, "messages", void 0), e2([y2(), e3("esri/t9n/common")], W5.prototype, "messagesCommon", void 0), e2([y2()], W5.prototype, "promises", null), e2([y2({ readOnly: true })], W5.prototype, "selectedFeature", null), e2([y2()], W5.prototype, "selectedFeatureIndex", null), e2([y2({ readOnly: true })], W5.prototype, "selectedFeatureWidget", null), e2([y2()], W5.prototype, "spinnerEnabled", void 0), e2([y2()], W5.prototype, "title", null), e2([y2()], W5.prototype, "updateLocationEnabled", null), e2([y2()], W5.prototype, "view", null), e2([y2({ type: H3 }), e4(["triggerAction", "trigger-action"])], W5.prototype, "viewModel", void 0), e2([y2()], W5.prototype, "visible", null), e2([y2()], W5.prototype, "visibleElements", void 0), e2([s4("visibleElements")], W5.prototype, "castVisibleElements", null), e2([t3()], W5.prototype, "_close", null), e2([t3()], W5.prototype, "_toggleDockEnabled", null), e2([t3()], W5.prototype, "_toggleFeatureMenu", null), e2([t3()], W5.prototype, "_toggleActionsMenu", null), e2([t3()], W5.prototype, "_triggerAction", null), e2([t3()], W5.prototype, "_selectFeature", null), e2([t3()], W5.prototype, "_next", null), e2([t3()], W5.prototype, "_previous", null), W5 = e2([a2("esri.widgets.Popup")], W5);
var j9 = W5;

export {
  j9 as j
};
//# sourceMappingURL=chunk-ZB6AAKPY.js.map
