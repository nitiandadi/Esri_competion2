import {
  w
} from "./chunk-DNJQQSFB.js";
import {
  a as a2,
  d
} from "./chunk-XS5XP6X5.js";
import {
  C
} from "./chunk-RD6VLGGM.js";
import {
  m,
  p as p2
} from "./chunk-OXPHYLAY.js";
import {
  o as o5,
  p as p4
} from "./chunk-PVXAD5LL.js";
import {
  T
} from "./chunk-IKDJIJNE.js";
import {
  p as p3
} from "./chunk-266JJ3A2.js";
import {
  D,
  M
} from "./chunk-3ZZKMNU2.js";
import {
  k
} from "./chunk-SFT755VT.js";
import {
  o as o4
} from "./chunk-F4DUNBGT.js";
import {
  o as o3
} from "./chunk-GLDJLPWH.js";
import {
  r
} from "./chunk-GMLVDTS4.js";
import {
  o as o2
} from "./chunk-G7CHVXDR.js";
import {
  l
} from "./chunk-CPSZPA6H.js";
import {
  a2 as a,
  e,
  u2 as u,
  y3 as y
} from "./chunk-Y54MR3BP.js";
import {
  o,
  p
} from "./chunk-XPATKIHO.js";

// node_modules/@arcgis/core/layers/mixins/FeatureEffectLayer.js
var s = { write: { allowNull: true } };
var p5 = (p7) => {
  let c2 = class extends p7 {
    constructor() {
      super(...arguments), this.featureEffect = null;
    }
  };
  return e([y({ type: w, json: { origins: { "web-map": s, "portal-item": s } } })], c2.prototype, "featureEffect", void 0), c2 = e([a("esri.layers.mixins.FeatureEffectLayer")], c2), c2;
};

// node_modules/@arcgis/core/layers/support/FeatureReduction.js
var t = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: ["selection", "cluster", "binning"], readOnly: true, json: { read: false, write: true } })], t.prototype, "type", void 0), t = e([a("esri.layers.support.FeatureReduction")], t);

// node_modules/@arcgis/core/layers/support/FeatureReductionSelection.js
var t2;
var c = t2 = class extends t {
  constructor(r3) {
    super(r3), this.type = "selection";
  }
  clone() {
    return new t2();
  }
};
e([y({ type: ["selection"] })], c.prototype, "type", void 0), c = t2 = e([a("esri.layers.support.FeatureReductionSelection")], c);
var p6 = c;

// node_modules/@arcgis/core/layers/support/FeatureReductionBinning.js
var v;
var S = u({ types: M });
var w2 = "esri.layers.support.FeatureReductionBinning";
var I = v = class extends t {
  constructor(e2) {
    super(e2), this.type = "binning", this.binType = "geohash", this.fixedBinLevel = 3, this.labelingInfo = null, this.labelsVisible = true, this.maxScale = 0, this.popupEnabled = true, this.popupTemplate = null, this.fields = [], this.renderer = null;
  }
  writeFields(e2, r3, o7) {
    const t3 = e2.filter((e3) => "avg_angle" !== e3.statisticType).map((e3) => e3.toJSON());
    o(o7, t3, r3);
  }
  readRenderer(e2, r3, i) {
    var _a;
    const p7 = (_a = r3.drawingInfo) == null ? void 0 : _a.renderer;
    return p7 ? o5(p7, r3, i) ?? void 0 : r3.defaultSymbol ? r3.types && r3.types.length ? new T({ defaultSymbol: S(r3.defaultSymbol, r3, i), field: r3.typeIdField, uniqueValueInfos: r3.types.map((e3) => ({ id: e3.id, symbol: S(e3.symbol, e3, i) })) }) : new p3({ symbol: S(r3.defaultSymbol, r3, i) }) : null;
  }
  clone() {
    return new v({ fields: p(this.fields), fixedBinLevel: this.fixedBinLevel, labelingInfo: p(this.labelingInfo), labelsVisible: this.labelsVisible, maxScale: this.maxScale, popupEnabled: this.popupEnabled, popupTemplate: p(this.popupTemplate), renderer: p(this.renderer) });
  }
};
e([o3({ binning: "binning" })], I.prototype, "type", void 0), e([o3({ geohash: "geohash" })], I.prototype, "binType", void 0), e([y({ type: Number, range: { min: 1, max: 9 }, json: { write: true } })], I.prototype, "fixedBinLevel", void 0), e([y({ type: [C], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], I.prototype, "labelingInfo", void 0), e([y(m)], I.prototype, "labelsVisible", void 0), e([y({ type: Number, json: { default: 0, name: "visibilityInfo.maxScale" } })], I.prototype, "maxScale", void 0), e([y(p2)], I.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], I.prototype, "popupTemplate", void 0), e([y({ type: [a2], json: { write: true } })], I.prototype, "fields", void 0), e([r("fields")], I.prototype, "writeFields", null), e([y({ types: p4, json: { write: { target: "drawingInfo.renderer" } } })], I.prototype, "renderer", void 0), e([o2("renderer", ["drawingInfo.renderer"])], I.prototype, "readRenderer", null), I = v = e([a(w2)], I);
var x = I;

// node_modules/@arcgis/core/layers/support/FeatureReductionCluster.js
var w3;
var I2 = u({ types: M });
var v2 = "esri.layers.support.FeatureReductionCluster";
function x2(e2) {
  var _a;
  return "simple" === e2.type && !((_a = e2.visualVariables) == null ? void 0 : _a.length);
}
var R = w3 = class extends l {
  constructor(e2) {
    super(e2), this.type = "cluster", this.clusterRadius = o4("80px"), this.clusterMinSize = o4("12px"), this.clusterMaxSize = o4("50px"), this.maxScale = 0, this.popupEnabled = true, this.popupTemplate = null, this.renderer = null, this.symbol = null, this.labelingInfo = null, this.labelsVisible = true, this.fields = null;
  }
  readRenderer(e2, r3, i) {
    var _a, _b;
    const p7 = (_a = r3.drawingInfo) == null ? void 0 : _a.renderer;
    return ((_b = p7 == null ? void 0 : p7.authoringInfo) == null ? void 0 : _b.isAutoGenerated) ? null : p7 ? x2(p7) ? null : o5(p7, r3, i) ?? void 0 : r3.defaultSymbol ? r3.types && r3.types.length ? new T({ defaultSymbol: I2(r3.defaultSymbol, r3, i), field: r3.typeIdField, uniqueValueInfos: r3.types.map((e3) => ({ id: e3.id, symbol: I2(e3.symbol, e3, i) })) }) : new p3({ symbol: I2(r3.defaultSymbol, r3, i) }) : null;
  }
  readSymbol(e2, r3, t3) {
    var _a, _b, _c;
    const o7 = (_a = r3.drawingInfo) == null ? void 0 : _a.renderer;
    if ((_b = o7 == null ? void 0 : o7.authoringInfo) == null ? void 0 : _b.isAutoGenerated)
      return null;
    if (o7 && x2(o7)) {
      return (_c = o5(o7, r3, t3)) == null ? void 0 : _c.symbol;
    }
    return null;
  }
  writeSymbol(e2, r3, o7, s2) {
    var _a, _b;
    const i = (_b = (_a = this.renderer) == null ? void 0 : _a.authoringInfo) == null ? void 0 : _b.isAutoGenerated;
    if (!this.renderer || i) {
      const o8 = new p3({ symbol: e2 });
      r3.drawingInfo = { renderer: o8.write({}, s2) };
    }
  }
  writeFields(e2, r3, t3) {
    const o7 = e2.filter((e3) => "avg_angle" !== e3.statisticType).map((e3) => e3.toJSON());
    o(t3, o7, r3);
  }
  readFields(e2, r3, t3) {
    return e2.filter((e3) => !e3.isAutoGenerated).map((e3) => a2.fromJSON(e3));
  }
  clone() {
    return new w3({ clusterRadius: this.clusterRadius, clusterMinSize: this.clusterMinSize, clusterMaxSize: this.clusterMaxSize, labelingInfo: p(this.labelingInfo), labelsVisible: this.labelsVisible, fields: p(this.fields), maxScale: this.maxScale, renderer: p(this.renderer), symbol: p(this.symbol), popupEnabled: this.popupEnabled, popupTemplate: p(this.popupTemplate) });
  }
};
e([y({ type: ["cluster"], readOnly: true, json: { write: true } })], R.prototype, "type", void 0), e([y({ type: Number, cast: (e2) => "auto" === e2 ? e2 : o4(e2), json: { write: true } })], R.prototype, "clusterRadius", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], R.prototype, "clusterMinSize", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], R.prototype, "clusterMaxSize", void 0), e([y({ type: Number, json: { default: 0, name: "visibilityInfo.maxScale" } })], R.prototype, "maxScale", void 0), e([y(p2)], R.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], R.prototype, "popupTemplate", void 0), e([y({ types: p4, json: { write: { target: "drawingInfo.renderer" } } })], R.prototype, "renderer", void 0), e([o2("renderer", ["drawingInfo.renderer"])], R.prototype, "readRenderer", null), e([y({ types: D })], R.prototype, "symbol", void 0), e([o2("symbol", ["drawingInfo.renderer"])], R.prototype, "readSymbol", null), e([r("symbol")], R.prototype, "writeSymbol", null), e([y({ type: [C], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], R.prototype, "labelingInfo", void 0), e([y(m)], R.prototype, "labelsVisible", void 0), e([y({ type: [a2], json: { write: true } })], R.prototype, "fields", void 0), e([r("fields")], R.prototype, "writeFields", null), e([o2("fields")], R.prototype, "readFields", null), R = w3 = e([a(v2)], R);
var z = R;

// node_modules/@arcgis/core/layers/support/featureReductionUtils.js
var o6 = { key: "type", base: t, typeMap: { cluster: z, binning: x } };
var r2 = { types: { key: "type", base: t, typeMap: { selection: p6, cluster: z, binning: x } }, json: { name: "layerDefinition.featureReduction", write: { allowNull: true }, origins: { "web-map": { types: o6 }, "portal-item": { types: o6 }, "web-scene": { types: { key: "type", base: t, typeMap: { selection: p6 } } } } } };

// node_modules/@arcgis/core/layers/mixins/FeatureReductionLayer.js
var n = (n2) => {
  let u2 = class extends n2 {
    constructor(...e2) {
      super(...e2), this.own(this.watch("renderer", () => {
        if (this.featureReduction) {
          const e3 = this._normalizeFeatureReduction(this.featureReduction);
          this._set("featureReduction", e3);
        }
      }, true));
    }
    set featureReduction(e2) {
      const r3 = this._normalizeFeatureReduction(e2);
      this._set("featureReduction", r3);
    }
    set renderer(e2) {
    }
    _normalizeFeatureReduction(e2) {
      var _a;
      if ("cluster" !== (e2 == null ? void 0 : e2.type))
        return e2;
      const r3 = e2.clone(), t3 = [new a2({ name: "cluster_count", isAutoGenerated: true, statisticType: "count" })], o7 = (r3.fields ?? []).filter((e3) => !e3.isAutoGenerated);
      if (e2.renderer && !((_a = e2.renderer.authoringInfo) == null ? void 0 : _a.isAutoGenerated))
        return r3.fields = [...t3, ...o7], r3;
      if (e2.symbol)
        return r3.fields = [...t3, ...o7], r3.renderer = null, r3;
      if (!this.renderer)
        return e2;
      const n3 = d(t3, this.renderer, e2, null, false);
      return r3.fields = [...t3, ...o7], r3.renderer = n3, r3;
    }
  };
  return e([y(r2)], u2.prototype, "featureReduction", null), u2 = e([a("esri.layers.mixins.FeatureReductionLayer")], u2), u2;
};

export {
  p5 as p,
  t,
  p6 as p2,
  n
};
//# sourceMappingURL=chunk-MXGJESZW.js.map
