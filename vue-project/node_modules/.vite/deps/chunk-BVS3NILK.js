// node_modules/@arcgis/core/chunks/webgl-debug.js
var e;
var t;
var r = {};
var n = { get exports() {
  return r;
}, set exports(e2) {
  r = e2;
} };
e = n, void 0 !== (t = function() {
  var e2 = function(e3) {
    window.console && window.console.log && window.console.log(e3);
  }, t3 = function(t4) {
    window.console && window.console.error ? window.console.error(t4) : e2(t4);
  }, r2 = { enable: { 1: { 0: true } }, disable: { 1: { 0: true } }, getParameter: { 1: { 0: true } }, drawArrays: { 3: { 0: true } }, drawElements: { 4: { 0: true, 2: true } }, createShader: { 1: { 0: true } }, getShaderParameter: { 2: { 1: true } }, getProgramParameter: { 2: { 1: true } }, getShaderPrecisionFormat: { 2: { 0: true, 1: true } }, getVertexAttrib: { 2: { 1: true } }, vertexAttribPointer: { 6: { 2: true } }, bindTexture: { 2: { 0: true } }, activeTexture: { 1: { 0: true } }, getTexParameter: { 2: { 0: true, 1: true } }, texParameterf: { 3: { 0: true, 1: true } }, texParameteri: { 3: { 0: true, 1: true, 2: true } }, texImage2D: { 9: { 0: true, 2: true, 6: true, 7: true }, 6: { 0: true, 2: true, 3: true, 4: true } }, texSubImage2D: { 9: { 0: true, 6: true, 7: true }, 7: { 0: true, 4: true, 5: true } }, copyTexImage2D: { 8: { 0: true, 2: true } }, copyTexSubImage2D: { 8: { 0: true } }, generateMipmap: { 1: { 0: true } }, compressedTexImage2D: { 7: { 0: true, 2: true } }, compressedTexSubImage2D: { 8: { 0: true, 6: true } }, bindBuffer: { 2: { 0: true } }, bufferData: { 3: { 0: true, 2: true } }, bufferSubData: { 3: { 0: true } }, getBufferParameter: { 2: { 0: true, 1: true } }, pixelStorei: { 2: { 0: true, 1: true } }, readPixels: { 7: { 4: true, 5: true } }, bindRenderbuffer: { 2: { 0: true } }, bindFramebuffer: { 2: { 0: true } }, checkFramebufferStatus: { 1: { 0: true } }, framebufferRenderbuffer: { 4: { 0: true, 1: true, 2: true } }, framebufferTexture2D: { 5: { 0: true, 1: true, 2: true } }, getFramebufferAttachmentParameter: { 3: { 0: true, 1: true, 2: true } }, getRenderbufferParameter: { 2: { 0: true, 1: true } }, renderbufferStorage: { 4: { 0: true, 1: true } }, clear: { 1: { 0: { enumBitwiseOr: ["COLOR_BUFFER_BIT", "DEPTH_BUFFER_BIT", "STENCIL_BUFFER_BIT"] } } }, depthFunc: { 1: { 0: true } }, blendFunc: { 2: { 0: true, 1: true } }, blendFuncSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } }, blendEquation: { 1: { 0: true } }, blendEquationSeparate: { 2: { 0: true, 1: true } }, stencilFunc: { 3: { 0: true } }, stencilFuncSeparate: { 4: { 0: true, 1: true } }, stencilMaskSeparate: { 2: { 0: true } }, stencilOp: { 3: { 0: true, 1: true, 2: true } }, stencilOpSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } }, cullFace: { 1: { 0: true } }, frontFace: { 1: { 0: true } }, drawArraysInstancedANGLE: { 4: { 0: true } }, drawElementsInstancedANGLE: { 5: { 0: true, 2: true } }, blendEquationEXT: { 1: { 0: true } } }, n3 = null, o = null;
  function a(e3) {
    if (null == n3)
      for (var t4 in n3 = {}, o = {}, e3)
        "number" == typeof e3[t4] && (n3[e3[t4]] = t4, o[t4] = e3[t4]);
  }
  function i() {
    if (null == n3)
      throw "WebGLDebugUtils.init(ctx) not called";
  }
  function u(e3) {
    return i(), void 0 !== n3[e3];
  }
  function f(e3) {
    i();
    var t4 = n3[e3];
    return void 0 !== t4 ? "gl." + t4 : "/*UNKNOWN WebGL ENUM*/ 0x" + e3.toString(16);
  }
  function c(e3, t4, n4, a2) {
    var i2;
    if (void 0 !== (i2 = r2[e3]) && void 0 !== (i2 = i2[t4]) && i2[n4]) {
      if ("object" == typeof i2[n4] && void 0 !== i2[n4].enumBitwiseOr) {
        for (var u2 = i2[n4].enumBitwiseOr, c2 = 0, l2 = [], s2 = 0; s2 < u2.length; ++s2) {
          var d2 = o[u2[s2]];
          0 != (a2 & d2) && (c2 |= d2, l2.push(f(d2)));
        }
        return c2 === a2 ? l2.join(" | ") : f(a2);
      }
      return f(a2);
    }
    return null === a2 ? "null" : void 0 === a2 ? "undefined" : a2.toString();
  }
  function l(e3, t4) {
    for (var r3 = "", n4 = t4.length, o2 = 0; o2 < n4; ++o2)
      r3 += (0 == o2 ? "" : ", ") + c(e3, n4, o2, t4[o2]);
    return r3;
  }
  function s(e3, t4, r3) {
    e3.__defineGetter__(r3, function() {
      return t4[r3];
    }), e3.__defineSetter__(r3, function(e4) {
      t4[r3] = e4;
    });
  }
  function d(e3, r3, n4, o2) {
    o2 = o2 || e3, a(e3), r3 = r3 || function(e4, r4, n5) {
      for (var o3 = "", a2 = n5.length, i3 = 0; i3 < a2; ++i3)
        o3 += (0 == i3 ? "" : ", ") + c(r4, a2, i3, n5[i3]);
      t3("WebGL error " + f(e4) + " in " + r4 + "(" + o3 + ")");
    };
    var i2 = {};
    function u2(e4, t4) {
      return function() {
        n4 && n4(t4, arguments);
        var a2 = e4[t4].apply(e4, arguments), u3 = o2.getError();
        return 0 != u3 && (i2[u3] = true, r3(u3, t4, arguments)), a2;
      };
    }
    var l2 = {};
    for (var g2 in e3)
      if ("function" == typeof e3[g2])
        if ("getExtension" != g2)
          l2[g2] = u2(e3, g2);
        else {
          var E3 = u2(e3, g2);
          l2[g2] = function() {
            return d(E3.apply(e3, arguments), r3, n4, o2);
          };
        }
      else
        s(l2, e3, g2);
    return l2.getError = function() {
      for (var t4 in i2)
        if (i2.hasOwnProperty(t4) && i2[t4])
          return i2[t4] = false, t4;
      return e3.NO_ERROR;
    }, l2;
  }
  function g(e3) {
    var t4 = e3.getParameter(e3.MAX_VERTEX_ATTRIBS), r3 = e3.createBuffer();
    e3.bindBuffer(e3.ARRAY_BUFFER, r3);
    for (var n4 = 0; n4 < t4; ++n4)
      e3.disableVertexAttribArray(n4), e3.vertexAttribPointer(n4, 4, e3.FLOAT, false, 0, 0), e3.vertexAttrib1f(n4, 0);
    e3.deleteBuffer(r3);
    var o2 = e3.getParameter(e3.MAX_TEXTURE_IMAGE_UNITS);
    for (n4 = 0; n4 < o2; ++n4)
      e3.activeTexture(e3.TEXTURE0 + n4), e3.bindTexture(e3.TEXTURE_CUBE_MAP, null), e3.bindTexture(e3.TEXTURE_2D, null);
    for (e3.activeTexture(e3.TEXTURE0), e3.useProgram(null), e3.bindBuffer(e3.ARRAY_BUFFER, null), e3.bindBuffer(e3.ELEMENT_ARRAY_BUFFER, null), e3.bindFramebuffer(e3.FRAMEBUFFER, null), e3.bindRenderbuffer(e3.RENDERBUFFER, null), e3.disable(e3.BLEND), e3.disable(e3.CULL_FACE), e3.disable(e3.DEPTH_TEST), e3.disable(e3.DITHER), e3.disable(e3.SCISSOR_TEST), e3.blendColor(0, 0, 0, 0), e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ZERO), e3.clearColor(0, 0, 0, 0), e3.clearDepth(1), e3.clearStencil(-1), e3.colorMask(true, true, true, true), e3.cullFace(e3.BACK), e3.depthFunc(e3.LESS), e3.depthMask(true), e3.depthRange(0, 1), e3.frontFace(e3.CCW), e3.hint(e3.GENERATE_MIPMAP_HINT, e3.DONT_CARE), e3.lineWidth(1), e3.pixelStorei(e3.PACK_ALIGNMENT, 4), e3.pixelStorei(e3.UNPACK_ALIGNMENT, 4), e3.pixelStorei(e3.UNPACK_FLIP_Y_WEBGL, false), e3.pixelStorei(e3.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false), e3.UNPACK_COLORSPACE_CONVERSION_WEBGL && e3.pixelStorei(e3.UNPACK_COLORSPACE_CONVERSION_WEBGL, e3.BROWSER_DEFAULT_WEBGL), e3.polygonOffset(0, 0), e3.sampleCoverage(1, false), e3.scissor(0, 0, e3.canvas.width, e3.canvas.height), e3.stencilFunc(e3.ALWAYS, 0, 4294967295), e3.stencilMask(4294967295), e3.stencilOp(e3.KEEP, e3.KEEP, e3.KEEP), e3.viewport(0, 0, e3.canvas.width, e3.canvas.height), e3.clear(e3.COLOR_BUFFER_BIT | e3.DEPTH_BUFFER_BIT | e3.STENCIL_BUFFER_BIT); e3.getError(); )
      ;
  }
  function E2(e3) {
    var t4, r3, n4 = [], o2 = [], a2 = {}, i2 = 1, u2 = false, f2 = [], c2 = 0, l2 = 0, d2 = false, E3 = 0, b = {};
    function m(e4) {
      return "function" == typeof e4 ? e4 : function(t5) {
        e4.handleEvent(t5);
      };
    }
    e3.getContext = (r3 = e3.getContext, function() {
      var n5 = r3.apply(e3, arguments);
      if (n5 instanceof WebGLRenderingContext) {
        if (n5 != t4) {
          if (t4)
            throw "got different context";
          a2 = F(t4 = n5);
        }
        return a2;
      }
      return n5;
    });
    var T2 = function(e4) {
      n4.push(m(e4));
    }, p = function(e4) {
      o2.push(m(e4));
    };
    function v(e4) {
      var t5 = e4.addEventListener;
      e4.addEventListener = function(r4, n5, o3) {
        switch (r4) {
          case "webglcontextlost":
            T2(n5);
            break;
          case "webglcontextrestored":
            p(n5);
            break;
          default:
            t5.apply(e4, arguments);
        }
      };
    }
    function _() {
      for (var e4 = Object.keys(b), t5 = 0; t5 < e4.length; ++t5)
        delete b[e4];
    }
    function R() {
      ++l2, u2 || c2 == l2 && e3.loseContext();
    }
    function x(e4, t5) {
      var r4 = e4[t5];
      return function() {
        if (R(), !u2)
          return r4.apply(e4, arguments);
      };
    }
    function A() {
      for (var e4 = 0; e4 < f2.length; ++e4) {
        var r4 = f2[e4];
        r4 instanceof WebGLBuffer ? t4.deleteBuffer(r4) : r4 instanceof WebGLFramebuffer ? t4.deleteFramebuffer(r4) : r4 instanceof WebGLProgram ? t4.deleteProgram(r4) : r4 instanceof WebGLRenderbuffer ? t4.deleteRenderbuffer(r4) : r4 instanceof WebGLShader ? t4.deleteShader(r4) : r4 instanceof WebGLTexture && t4.deleteTexture(r4);
      }
    }
    function S(e4) {
      return { statusMessage: e4, preventDefault: function() {
        d2 = true;
      } };
    }
    return v(e3), e3.loseContext = function() {
      if (!u2) {
        for (u2 = true, c2 = 0, ++i2; t4.getError(); )
          ;
        _(), b[t4.CONTEXT_LOST_WEBGL] = true;
        var r4 = S("context lost"), o3 = n4.slice();
        setTimeout(function() {
          for (var t5 = 0; t5 < o3.length; ++t5)
            o3[t5](r4);
          E3 >= 0 && setTimeout(function() {
            e3.restoreContext();
          }, E3);
        }, 0);
      }
    }, e3.restoreContext = function() {
      u2 && o2.length && setTimeout(function() {
        if (!d2)
          throw "can not restore. webglcontestlost listener did not call event.preventDefault";
        A(), g(t4), u2 = false, l2 = 0, d2 = false;
        for (var e4 = o2.slice(), r4 = S("context restored"), n5 = 0; n5 < e4.length; ++n5)
          e4[n5](r4);
      }, 0);
    }, e3.loseContextInNCalls = function(e4) {
      if (u2)
        throw "You can not ask a lost contet to be lost";
      c2 = l2 + e4;
    }, e3.getNumCalls = function() {
      return l2;
    }, e3.setRestoreTimeout = function(e4) {
      E3 = e4;
    }, e3;
    function F(e4) {
      for (var r4 in e4)
        "function" == typeof e4[r4] ? a2[r4] = x(e4, r4) : s(a2, e4, r4);
      a2.getError = function() {
        if (R(), !u2)
          for (; e5 = t4.getError(); )
            b[e5] = true;
        for (var e5 in b)
          if (b[e5])
            return delete b[e5], e5;
        return a2.NO_ERROR;
      };
      for (var n5 = ["createBuffer", "createFramebuffer", "createProgram", "createRenderbuffer", "createShader", "createTexture"], o3 = 0; o3 < n5.length; ++o3) {
        var c3 = n5[o3];
        a2[c3] = function(t5) {
          return function() {
            if (R(), u2)
              return null;
            var r5 = t5.apply(e4, arguments);
            return r5.__webglDebugContextLostId__ = i2, f2.push(r5), r5;
          };
        }(e4[c3]);
      }
      var l3 = ["getActiveAttrib", "getActiveUniform", "getBufferParameter", "getContextAttributes", "getAttachedShaders", "getFramebufferAttachmentParameter", "getParameter", "getProgramParameter", "getProgramInfoLog", "getRenderbufferParameter", "getShaderParameter", "getShaderInfoLog", "getShaderSource", "getTexParameter", "getUniform", "getUniformLocation", "getVertexAttrib"];
      for (o3 = 0; o3 < l3.length; ++o3)
        c3 = l3[o3], a2[c3] = function(t5) {
          return function() {
            return R(), u2 ? null : t5.apply(e4, arguments);
          };
        }(a2[c3]);
      var d3 = ["isBuffer", "isEnabled", "isFramebuffer", "isProgram", "isRenderbuffer", "isShader", "isTexture"];
      for (o3 = 0; o3 < d3.length; ++o3)
        c3 = d3[o3], a2[c3] = function(t5) {
          return function() {
            return R(), !u2 && t5.apply(e4, arguments);
          };
        }(a2[c3]);
      return a2.checkFramebufferStatus = function(t5) {
        return function() {
          return R(), u2 ? a2.FRAMEBUFFER_UNSUPPORTED : t5.apply(e4, arguments);
        };
      }(a2.checkFramebufferStatus), a2.getAttribLocation = function(t5) {
        return function() {
          return R(), u2 ? -1 : t5.apply(e4, arguments);
        };
      }(a2.getAttribLocation), a2.getVertexAttribOffset = function(t5) {
        return function() {
          return R(), u2 ? 0 : t5.apply(e4, arguments);
        };
      }(a2.getVertexAttribOffset), a2.isContextLost = function() {
        return u2;
      }, a2;
    }
  }
  return { init: a, mightBeEnum: u, glEnumToString: f, glFunctionArgToString: c, glFunctionArgsToString: l, makeDebugContext: d, makeLostContextSimulatingCanvas: E2, resetToInitialState: g };
}()) && (e.exports = t);

// node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js
function n2(n3) {
  return window.WebGL2RenderingContext && n3 instanceof window.WebGL2RenderingContext;
}

// node_modules/@arcgis/core/views/webgl/capabilities/DisjointTimerQuery.js
var t2 = class {
  constructor(e2, t3, E2, T2, r2, _, i, u, s) {
    this.createQuery = e2, this.deleteQuery = t3, this.resultAvailable = E2, this.getResult = T2, this.disjoint = r2, this.beginTimeElapsed = _, this.endTimeElapsed = i, this.createTimestamp = u, this.timestampBits = s;
  }
};
var E = false;
function T(T2, r2) {
  if (r2.disjointTimerQuery)
    return null;
  let _ = T2.getExtension("EXT_disjoint_timer_query_webgl2");
  return _ && n2(T2) ? new t2(() => T2.createQuery(), (e2) => {
    T2.deleteQuery(e2), E = false;
  }, (e2) => T2.getQueryParameter(e2, T2.QUERY_RESULT_AVAILABLE), (e2) => T2.getQueryParameter(e2, T2.QUERY_RESULT), () => T2.getParameter(_.GPU_DISJOINT_EXT), (e2) => {
    E || (E = true, T2.beginQuery(_.TIME_ELAPSED_EXT, e2));
  }, () => {
    T2.endQuery(_.TIME_ELAPSED_EXT), E = false;
  }, (e2) => _.queryCounterEXT(e2, _.TIMESTAMP_EXT), () => T2.getQuery(_.TIMESTAMP_EXT, _.QUERY_COUNTER_BITS_EXT)) : (_ = T2.getExtension("EXT_disjoint_timer_query"), _ ? new t2(() => _.createQueryEXT(), (e2) => {
    _.deleteQueryEXT(e2), E = false;
  }, (e2) => _.getQueryObjectEXT(e2, _.QUERY_RESULT_AVAILABLE_EXT), (e2) => _.getQueryObjectEXT(e2, _.QUERY_RESULT_EXT), () => T2.getParameter(_.GPU_DISJOINT_EXT), (e2) => {
    E || (E = true, _.beginQueryEXT(_.TIME_ELAPSED_EXT, e2));
  }, () => {
    _.endQueryEXT(_.TIME_ELAPSED_EXT), E = false;
  }, (e2) => _.queryCounterEXT(e2, _.TIMESTAMP_EXT), () => _.getQueryEXT(_.TIMESTAMP_EXT, _.QUERY_COUNTER_BITS_EXT)) : null);
}

export {
  n2 as n,
  T,
  r
};
//# sourceMappingURL=chunk-BVS3NILK.js.map
