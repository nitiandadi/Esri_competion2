import {
  j
} from "./chunk-KGIL42MH.js";
import {
  s
} from "./chunk-QXPN4D5D.js";
import {
  l
} from "./chunk-KGIB6IYW.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-3PPVODAA.js";

// node_modules/@arcgis/core/renderers/Renderer.js
var n = new s({ simple: "simple", uniqueValue: "unique-value", classBreaks: "class-breaks", heatmap: "heatmap", dotDensity: "dot-density", dictionary: "dictionary", pieChart: "pie-chart" }, { ignoreUnknown: true });
var a2 = class extends l {
  constructor(r) {
    super(r), this.authoringInfo = null, this.type = null;
  }
  async getRequiredFields(r) {
    if (!this.collectRequiredFields)
      return [];
    const e2 = /* @__PURE__ */ new Set();
    return await this.collectRequiredFields(e2, r), Array.from(e2).sort();
  }
  getSymbol(r, e2) {
  }
  async getSymbolAsync(r, e2) {
  }
  getSymbols() {
    return [];
  }
  getAttributeHash() {
    return JSON.stringify(this);
  }
  getMeshHash() {
    return JSON.stringify(this);
  }
};
e([y({ type: j, json: { write: true } })], a2.prototype, "authoringInfo", void 0), e([y({ type: n.apiValues, readOnly: true, json: { type: n.jsonValues, read: false, write: { writer: n.write, ignoreOrigin: true } } })], a2.prototype, "type", void 0), a2 = e([a("esri.renderers.Renderer")], a2);
var p = a2;

export {
  p
};
//# sourceMappingURL=chunk-L2YYMVOS.js.map
