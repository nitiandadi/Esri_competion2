import {
  S,
  d,
  g,
  j as j3
} from "./chunk-TSZOPH5C.js";
import {
  l as l2
} from "./chunk-BRSYQXRG.js";
import "./chunk-OO5RYTED.js";
import "./chunk-MEYRAFYY.js";
import "./chunk-LSZOFED5.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-B4X5M3MB.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-J6WWDJVY.js";
import {
  _
} from "./chunk-KJ3RR72T.js";
import {
  p
} from "./chunk-ITOWSLB4.js";
import {
  n as n2
} from "./chunk-WIR7P2UT.js";
import "./chunk-4YJQ46TP.js";
import "./chunk-LC5BGIRA.js";
import "./chunk-ST7DNJJS.js";
import {
  t
} from "./chunk-N44T6V5D.js";
import {
  c
} from "./chunk-NCRISAUE.js";
import {
  f as f2
} from "./chunk-RDMK4OP2.js";
import {
  O
} from "./chunk-3MIQEU54.js";
import "./chunk-37ZA7E6R.js";
import "./chunk-46X6GKZ5.js";
import "./chunk-QUU4FGR5.js";
import "./chunk-2DDJXYOO.js";
import "./chunk-HM62IZSE.js";
import "./chunk-X2F6PX2U.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-6PRVLRT2.js";
import {
  b as b2
} from "./chunk-RSFKYEWD.js";
import "./chunk-GKH6NL2K.js";
import "./chunk-WZMBTZP2.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-BRWDGS6Y.js";
import "./chunk-FAK3SJAD.js";
import "./chunk-YMSHUIGU.js";
import "./chunk-T5PSDOZP.js";
import "./chunk-REIXEATJ.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-YEFLZ2OV.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-NUSLMJR5.js";
import "./chunk-QX5IKXT7.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-OKST3HK4.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-X6SQQQR4.js";
import {
  m
} from "./chunk-TNQLNDIQ.js";
import "./chunk-PSN7WPOI.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import {
  U,
  a as a2,
  j as j2,
  l
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-QJXSE36Y.js";
import "./chunk-WV4G3ROK.js";
import {
  qt
} from "./chunk-M3KO43BW.js";
import "./chunk-JT4JPYB6.js";
import {
  j
} from "./chunk-SZO7ZKE4.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-6TTVNN6M.js";
import "./chunk-3UXY2S4E.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import {
  f2 as f,
  r as r2,
  w2
} from "./chunk-H2ENCYR3.js";
import {
  o
} from "./chunk-SVHG5VY2.js";
import "./chunk-UADQEL54.js";
import {
  n
} from "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import {
  u2
} from "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import {
  b
} from "./chunk-PXVSWY3C.js";
import {
  w
} from "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import {
  u
} from "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  r
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/layers/support/KMLSublayer.js
var S2;
var k = S2 = class extends n.EventedMixin(u2(m)) {
  constructor(...e2) {
    super(...e2), this.description = null, this.id = null, this.networkLink = null, this.sublayers = null, this.title = null, this.sourceJSON = null, this.fullExtent = null, this.addHandles([a2(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = this, e3.layer = this.layer;
    }, U), a2(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, U), l(() => this.sublayers, (e3, t2) => {
      if (t2)
        for (const r3 of t2)
          r3.layer = r3.parent = null;
      if (e3)
        for (const r3 of e3)
          r3.parent = this, r3.layer = this.layer;
    }, U)]);
  }
  initialize() {
    j2(() => this.networkLink).then(() => j2(() => true === this.visible)).then(() => this.load());
  }
  load(e2) {
    var _a;
    if (!this.networkLink)
      return;
    if (this.networkLink.viewFormat)
      return;
    const r3 = r(e2) ? e2.signal : null, s = this._fetchService(((_a = this._get("networkLink")) == null ? void 0 : _a.href) ?? "", r3).then((e3) => {
      var _a2;
      const r4 = j3(e3.sublayers);
      this.fullExtent = w2.fromJSON(r4), this.sourceJSON = e3;
      const s2 = b(j.ofType(S2), S(S2, e3));
      this.sublayers ? this.sublayers.addMany(s2) : this.sublayers = s2, (_a2 = this.layer) == null ? void 0 : _a2.emit("sublayer-update"), this.layer && this.layer.notifyChange("visibleSublayers");
    });
    return this.addResolvingPromise(s), Promise.resolve(this);
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e2) {
    this._get("visible") !== e2 && (this._set("visible", e2), this.layer && this.layer.notifyChange("visibleSublayers"));
  }
  readVisible(e2, t2) {
    return !!t2.visibility;
  }
  set layer(e2) {
    this._set("layer", e2), this.sublayers && this.sublayers.forEach((t2) => t2.layer = e2);
  }
  _fetchService(e2, t2) {
    return g(e2, this.layer.outSpatialReference, this.layer.refreshInterval, t2).then((e3) => d(e3.data));
  }
};
e([y()], k.prototype, "description", void 0), e([y()], k.prototype, "id", void 0), e([y({ readOnly: true, value: null })], k.prototype, "networkLink", void 0), e([y({ json: { write: { allowNull: true } } })], k.prototype, "parent", void 0), e([y({ type: j.ofType(S2), json: { write: { allowNull: true } } })], k.prototype, "sublayers", void 0), e([y({ value: null, json: { read: { source: "name", reader: (e2) => u(e2) } } })], k.prototype, "title", void 0), e([y({ value: true })], k.prototype, "visible", null), e([o("visible", ["visibility"])], k.prototype, "readVisible", null), e([y()], k.prototype, "sourceJSON", void 0), e([y({ value: null })], k.prototype, "layer", null), e([y({ type: w2 })], k.prototype, "fullExtent", void 0), k = S2 = e([a("esri.layers.support.KMLSublayer")], k);
var g2 = k;

// node_modules/@arcgis/core/layers/KMLLayer.js
var F = ["kml", "xml"];
var O2 = class extends n2(p(t(c(_(O(b2)))))) {
  constructor(...e2) {
    super(...e2), this._visibleFolders = [], this.allSublayers = new l2({ getCollections: () => [this.sublayers], getChildrenFunction: (e3) => e3.sublayers }), this.outSpatialReference = f.WGS84, this.path = null, this.legendEnabled = false, this.operationalLayerType = "KML", this.sublayers = null, this.type = "kml", this.url = null;
  }
  initialize() {
    this.addHandles([l(() => this.sublayers, (e2, r3) => {
      r3 && r3.forEach((e3) => {
        e3.parent = null, e3.layer = null;
      }), e2 && e2.forEach((e3) => {
        e3.parent = this, e3.layer = this;
      });
    }, U), this.on("sublayer-update", () => this.notifyChange("fullExtent"))]);
  }
  normalizeCtorArgs(e2, r3) {
    return "string" == typeof e2 ? { url: e2, ...r3 } : e2;
  }
  readSublayersFromItemOrWebMap(e2, r3) {
    this._visibleFolders = r3.visibleFolders;
  }
  readSublayers(e2, r3, t2) {
    return S(g2, r3, t2, this._visibleFolders);
  }
  writeSublayers(e2, r3) {
    const t2 = [], o2 = e2.toArray();
    for (; o2.length; ) {
      const e3 = o2[0];
      e3.networkLink || (e3.visible && t2.push(e3.id), e3.sublayers && o2.push(...e3.sublayers.toArray())), o2.shift();
    }
    r3.visibleFolders = t2;
  }
  get title() {
    const e2 = this._get("title");
    return e2 && "defaults" !== this.originOf("title") ? e2 : this.url ? qt(this.url, F) || "KML" : e2 || "";
  }
  set title(e2) {
    this._set("title", e2);
  }
  get visibleSublayers() {
    const e2 = this.sublayers, r3 = [], t2 = (e3) => {
      e3.visible && (r3.push(e3), e3.sublayers && e3.sublayers.forEach(t2));
    };
    return e2 && e2.forEach(t2), r3;
  }
  get fullExtent() {
    return this._recomputeFullExtent();
  }
  load(e2) {
    const r3 = r(e2) ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["KML"], supportsData: false }, e2).catch(w).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  destroy() {
    super.destroy(), this.allSublayers.destroy();
  }
  async _fetchService(e2) {
    const r3 = await Promise.resolve().then(() => this.resourceInfo ? { ssl: false, data: this.resourceInfo } : g(this.url ?? "", this.outSpatialReference, this.refreshInterval, e2)), t2 = d(r3.data);
    t2 && this.read(t2, { origin: "service" });
  }
  _recomputeFullExtent() {
    let e2 = null;
    r(this.extent) && (e2 = this.extent.clone());
    const r3 = (t2) => {
      if (t2.sublayers)
        for (const s of t2.sublayers.items)
          r3(s), s.visible && s.fullExtent && (r(e2) ? e2.union(s.fullExtent) : e2 = s.fullExtent.clone());
    };
    return r3(this), e2;
  }
};
e([y({ readOnly: true })], O2.prototype, "allSublayers", void 0), e([y({ type: f })], O2.prototype, "outSpatialReference", void 0), e([y({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], O2.prototype, "path", void 0), e([y({ readOnly: true, json: { read: false, write: false } })], O2.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], O2.prototype, "listMode", void 0), e([y({ type: ["KML"] })], O2.prototype, "operationalLayerType", void 0), e([y({})], O2.prototype, "resourceInfo", void 0), e([y({ type: j.ofType(g2), json: { write: { ignoreOrigin: true } } })], O2.prototype, "sublayers", void 0), e([o(["web-map", "portal-item"], "sublayers", ["visibleFolders"])], O2.prototype, "readSublayersFromItemOrWebMap", null), e([o("service", "sublayers", ["sublayers"])], O2.prototype, "readSublayers", null), e([r2("sublayers")], O2.prototype, "writeSublayers", null), e([y({ readOnly: true, json: { read: false } })], O2.prototype, "type", void 0), e([y({ json: { origins: { "web-map": { read: { source: "title" } } }, write: { ignoreOrigin: true } } })], O2.prototype, "title", null), e([y(f2)], O2.prototype, "url", void 0), e([y({ readOnly: true })], O2.prototype, "visibleSublayers", null), e([y({ type: w2 })], O2.prototype, "extent", void 0), e([y()], O2.prototype, "fullExtent", null), O2 = e([a("esri.layers.KMLLayer")], O2);
var M = O2;
export {
  M as default
};
//# sourceMappingURL=KMLLayer-SGQUZFVT.js.map
