import {
  f2 as f,
  u2 as u
} from "./chunk-2BIETPMK.js";
import {
  O,
  R,
  S,
  h,
  m,
  p as p2,
  x
} from "./chunk-CXRW66YM.js";
import "./chunk-WEOA3BYJ.js";
import {
  s
} from "./chunk-JOTDK22B.js";
import {
  B,
  G,
  be,
  re
} from "./chunk-YPID4QH6.js";
import "./chunk-KVNI5TTW.js";
import "./chunk-ONLU6JOT.js";
import "./chunk-2E4SJPYR.js";
import {
  e,
  t
} from "./chunk-U34LDFXK.js";
import "./chunk-YIJX6PSI.js";
import "./chunk-5VG7Q6SY.js";
import "./chunk-F3TBTVWI.js";
import "./chunk-N5RJDK35.js";
import "./chunk-POTXVYUT.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-XP5MC636.js";
import "./chunk-DHWQHVQB.js";
import "./chunk-4GJORDIY.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-QJXSE36Y.js";
import "./chunk-WV4G3ROK.js";
import "./chunk-M3KO43BW.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-6TTVNN6M.js";
import "./chunk-3UXY2S4E.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import {
  p3 as p
} from "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-UADQEL54.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/arcade/functions/featuresetgeom.js
function h2(e2) {
  return e2 instanceof p;
}
function S2(i, a, c, S3) {
  return S3(i, a, async (S4, R3, v) => {
    if (v.length < 2)
      throw new t(i, e.WrongNumberOfParameters, a);
    if (null === (v = be(v))[0] && null === v[1])
      return false;
    if (G(v[0])) {
      if (v[1] instanceof p)
        return new f({ parentfeatureset: v[0], relation: c, relationGeom: v[1] });
      if (null === v[1])
        return new u({ parentfeatureset: v[0] });
      throw new t(i, e.InvalidParameter, a);
    }
    if (h2(v[0])) {
      if (h2(v[1])) {
        switch (c) {
          case "esriSpatialRelEnvelopeIntersects":
            return h(s(v[0]), s(v[1]));
          case "esriSpatialRelIntersects":
            return h(v[0], v[1]);
          case "esriSpatialRelContains":
            return p2(v[0], v[1]);
          case "esriSpatialRelOverlaps":
            return O(v[0], v[1]);
          case "esriSpatialRelWithin":
            return x(v[0], v[1]);
          case "esriSpatialRelTouches":
            return S(v[0], v[1]);
          case "esriSpatialRelCrosses":
            return m(v[0], v[1]);
        }
        throw new t(i, e.InvalidParameter, a);
      }
      if (G(v[1]))
        return new f({ parentfeatureset: v[1], relation: c, relationGeom: v[0] });
      if (null === v[1])
        return false;
      throw new t(i, e.InvalidParameter, a);
    }
    if (null !== v[0])
      throw new t(i, e.InvalidParameter, a);
    return G(v[1]) ? new u({ parentfeatureset: v[1] }) : !(v[1] instanceof p || null === v[1]) && void 0;
  });
}
function R2(t2) {
  "async" === t2.mode && (t2.functions.intersects = function(e2, n) {
    return S2(e2, n, "esriSpatialRelIntersects", t2.standardFunctionAsync);
  }, t2.functions.envelopeintersects = function(e2, n) {
    return S2(e2, n, "esriSpatialRelEnvelopeIntersects", t2.standardFunctionAsync);
  }, t2.signatures.push({ name: "envelopeintersects", min: 2, max: 2 }), t2.functions.contains = function(e2, n) {
    return S2(e2, n, "esriSpatialRelContains", t2.standardFunctionAsync);
  }, t2.functions.overlaps = function(e2, n) {
    return S2(e2, n, "esriSpatialRelOverlaps", t2.standardFunctionAsync);
  }, t2.functions.within = function(e2, n) {
    return S2(e2, n, "esriSpatialRelWithin", t2.standardFunctionAsync);
  }, t2.functions.touches = function(e2, n) {
    return S2(e2, n, "esriSpatialRelTouches", t2.standardFunctionAsync);
  }, t2.functions.crosses = function(e2, n) {
    return S2(e2, n, "esriSpatialRelCrosses", t2.standardFunctionAsync);
  }, t2.functions.relate = function(u2, f2) {
    return t2.standardFunctionAsync(u2, f2, (t3, p3, m2) => {
      if (m2 = be(m2), B(m2, 3, 3, u2, f2), h2(m2[0]) && h2(m2[1]))
        return R(m2[0], m2[1], re(m2[2]));
      if (m2[0] instanceof p && null === m2[1])
        return false;
      if (m2[1] instanceof p && null === m2[0])
        return false;
      if (G(m2[0]) && null === m2[1])
        return new u({ parentfeatureset: m2[0] });
      if (G(m2[1]) && null === m2[0])
        return new u({ parentfeatureset: m2[1] });
      if (G(m2[0]) && m2[1] instanceof p)
        return m2[0].relate(m2[1], re(m2[2]));
      if (G(m2[1]) && m2[0] instanceof p)
        return m2[1].relate(m2[0], re(m2[2]));
      if (null === m2[0] && null === m2[1])
        return false;
      throw new t(u2, e.InvalidParameter, f2);
    });
  });
}
export {
  R2 as registerFunctions
};
//# sourceMappingURL=featuresetgeom-ANIMZ7C3.js.map
