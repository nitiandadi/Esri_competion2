import {
  D
} from "./chunk-F6VOITQW.js";
import "./chunk-J5CNSFEW.js";
import "./chunk-KSKGTAHP.js";
import "./chunk-6CHYNNZQ.js";
import "./chunk-OFMRQG54.js";
import "./chunk-OJZLQ7WV.js";
import "./chunk-GR3QAE4S.js";
import "./chunk-XBPKFV6W.js";
import "./chunk-3H5NJQM5.js";
import "./chunk-F7LUL6DS.js";
import "./chunk-TOX3CURZ.js";
import "./chunk-VV2CU7S7.js";
import "./chunk-FYA3X5C5.js";
import "./chunk-DKDRIIV4.js";
import "./chunk-5SYMUP5B.js";
import "./chunk-R3MRUDAD.js";
import "./chunk-R6XKQWZ7.js";
import "./chunk-6SCM5LCL.js";
import "./chunk-63WRUMNA.js";
import "./chunk-O2JKCGK6.js";
import "./chunk-WAPZ634R.js";
import "./chunk-MSPZCZRZ.js";
import "./chunk-RURSJOSG.js";
import "./chunk-75NMPQ6B.js";
import "./chunk-GKD7ZY5C.js";
import "./chunk-MFCHTJOK.js";
import "./chunk-RRNRSHX3.js";
import "./chunk-IEBU4QQL.js";
import "./chunk-4M3AMTD4.js";
import "./chunk-V2OTMPXZ.js";
import "./chunk-5VDXKCKM.js";
import "./chunk-HNKLBBNC.js";
import "./chunk-D2UI2BQN.js";
import "./chunk-U3IHIDSP.js";
import "./chunk-34FJTA26.js";
import "./chunk-DUEDINK5.js";
import "./chunk-MZ267CZB.js";
import "./chunk-3DBV4JBL.js";
import "./chunk-JGIZLXNQ.js";
import "./chunk-NWZTRS6O.js";
import "./chunk-77E52HT5.js";
import "./chunk-HBVUBDHI.js";
import "./chunk-26N6FACI.js";
import "./chunk-6N2I7LNE.js";
import {
  y
} from "./chunk-T2MHGZ6A.js";
import "./chunk-AETSRGIG.js";
import "./chunk-VEBWU4PY.js";
import "./chunk-AJY7W6KP.js";
import "./chunk-LSZOFED5.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-5VG7Q6SY.js";
import "./chunk-F3TBTVWI.js";
import "./chunk-N5RJDK35.js";
import "./chunk-J6WWDJVY.js";
import "./chunk-4YJQ46TP.js";
import "./chunk-LC5BGIRA.js";
import "./chunk-ST7DNJJS.js";
import "./chunk-RDMK4OP2.js";
import "./chunk-37ZA7E6R.js";
import "./chunk-46X6GKZ5.js";
import "./chunk-QUU4FGR5.js";
import "./chunk-2DDJXYOO.js";
import "./chunk-HM62IZSE.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-G6COWIFJ.js";
import "./chunk-WZMBTZP2.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-L6EWR437.js";
import "./chunk-PELFA5QO.js";
import "./chunk-2CREJO6O.js";
import "./chunk-REIXEATJ.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-MYKXVBXI.js";
import "./chunk-NUSLMJR5.js";
import "./chunk-QX5IKXT7.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-OKST3HK4.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-X6SQQQR4.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-PSN7WPOI.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-DHWQHVQB.js";
import "./chunk-4GJORDIY.js";
import {
  h,
  l
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-QJXSE36Y.js";
import "./chunk-WV4G3ROK.js";
import "./chunk-M3KO43BW.js";
import "./chunk-JT4JPYB6.js";
import "./chunk-SZO7ZKE4.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-6TTVNN6M.js";
import "./chunk-3UXY2S4E.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-UADQEL54.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import {
  has
} from "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  r
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function l2(e2, r2) {
  return !e2.visible || 0 !== e2.minScale && r2 > e2.minScale || 0 !== e2.maxScale && r2 < e2.maxScale;
}
var o = class extends D {
  initialize() {
    this.addHandles([l(() => this.view.scale, () => this._update(), h)], "constructor");
  }
  isUpdating() {
    var _a;
    const e2 = this.layer.sublayers.some((e3) => null != e3.renderer), r2 = this._commandsQueue.updating, s = null != this._updatingRequiredFieldsPromise, i = !this._proxy || !this._proxy.isReady, t = this._pipelineIsUpdating, a2 = null == this.tileRenderer || ((_a = this.tileRenderer) == null ? void 0 : _a.updating), n = e2 && (r2 || s || i || t || a2);
    return has("esri-2d-log-updating") && console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${e2}
  -> hasPendingCommand ${r2}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${i}
  -> updatingPipeline ${t}
  -> updatingTileRenderer ${a2}
`), n;
  }
  _injectOverrides(e2) {
    let s = super._injectOverrides(e2);
    const i = this.view.scale, t = this.layer.sublayers.filter((e3) => l2(e3, i)).map((e3) => e3.subtypeCode);
    if (!t.length)
      return s;
    s = r(s) ? s : new y().toJSON();
    const n = `NOT ${this.layer.subtypeField} IN (${t.join(",")})`;
    return s.where = s.where ? `(${s.where}) AND (${n})` : n, s;
  }
  _setLayersForFeature(e2) {
    const r2 = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r2.name], i = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = e2.sourceLayer = i;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r2 = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r2})` : "1=2";
    let i = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return i += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: i };
  }
};
o = e([a("esri.views.2d.layers.SubtypeGroupLayerView2D")], o);
var u = o;
export {
  u as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-NHQDJSLH.js.map
