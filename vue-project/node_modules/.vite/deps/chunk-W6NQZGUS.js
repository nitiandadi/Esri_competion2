import {
  T
} from "./chunk-VOSZ2G24.js";
import {
  n
} from "./chunk-YMGINT43.js";
import {
  v
} from "./chunk-M7CMZTD6.js";
import {
  f2 as f
} from "./chunk-T5VSOT6T.js";
import {
  i
} from "./chunk-MEFRCURY.js";
import {
  r as r2
} from "./chunk-JATK7CEQ.js";
import {
  s
} from "./chunk-HIRLBWV3.js";
import {
  l
} from "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-OA5ES74L.js";
import {
  b
} from "./chunk-RLEMMDH4.js";
import {
  p
} from "./chunk-H32MMKAJ.js";
import {
  r
} from "./chunk-HVCAHUYB.js";

// node_modules/@arcgis/core/rest/support/TopFeaturesQuery.js
var y2;
var h = new s({ esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "envelope-intersects", esriSpatialRelIndexIntersects: "index-intersects", esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: "relation" });
var j = new s({ esriSRUnit_Meter: "meters", esriSRUnit_Kilometer: "kilometers", esriSRUnit_Foot: "feet", esriSRUnit_StatuteMile: "miles", esriSRUnit_NauticalMile: "nautical-miles", esriSRUnit_USNauticalMile: "us-nautical-miles" });
var S = y2 = class extends l {
  constructor(e2) {
    super(e2), this.cacheHint = void 0, this.distance = void 0, this.geometry = null, this.geometryPrecision = void 0, this.maxAllowableOffset = void 0, this.num = void 0, this.objectIds = null, this.orderByFields = null, this.outFields = null, this.outSpatialReference = null, this.resultType = null, this.returnGeometry = false, this.returnM = void 0, this.returnZ = void 0, this.start = void 0, this.spatialRelationship = "intersects", this.timeExtent = null, this.topFilter = void 0, this.units = null, this.where = "1=1";
  }
  writeStart(e2, t) {
    t.resultOffset = this.start, t.resultRecordCount = this.num || 10;
  }
  clone() {
    return new y2(p({ cacheHint: this.cacheHint, distance: this.distance, geometry: this.geometry, geometryPrecision: this.geometryPrecision, maxAllowableOffset: this.maxAllowableOffset, num: this.num, objectIds: this.objectIds, orderByFields: this.orderByFields, outFields: this.outFields, outSpatialReference: this.outSpatialReference, resultType: this.resultType, returnGeometry: this.returnGeometry, returnZ: this.returnZ, returnM: this.returnM, start: this.start, spatialRelationship: this.spatialRelationship, timeExtent: this.timeExtent, topFilter: this.topFilter, units: this.units, where: this.where }));
  }
};
e([y({ type: Boolean, json: { write: true } })], S.prototype, "cacheHint", void 0), e([y({ type: Number, json: { write: { overridePolicy: (e2) => ({ enabled: e2 > 0 }) } } })], S.prototype, "distance", void 0), e([y({ types: n, json: { read: v, write: true } })], S.prototype, "geometry", void 0), e([y({ type: Number, json: { write: true } })], S.prototype, "geometryPrecision", void 0), e([y({ type: Number, json: { write: true } })], S.prototype, "maxAllowableOffset", void 0), e([y({ type: Number, json: { read: { source: "resultRecordCount" } } })], S.prototype, "num", void 0), e([y({ json: { write: true } })], S.prototype, "objectIds", void 0), e([y({ type: [String], json: { write: true } })], S.prototype, "orderByFields", void 0), e([y({ type: [String], json: { write: true } })], S.prototype, "outFields", void 0), e([y({ type: f, json: { read: { source: "outSR" }, write: { target: "outSR" } } })], S.prototype, "outSpatialReference", void 0), e([y({ type: String, json: { write: true } })], S.prototype, "resultType", void 0), e([y({ json: { write: true } })], S.prototype, "returnGeometry", void 0), e([y({ type: Boolean, json: { write: { overridePolicy: (e2) => ({ enabled: e2 }) } } })], S.prototype, "returnM", void 0), e([y({ type: Boolean, json: { write: { overridePolicy: (e2) => ({ enabled: e2 }) } } })], S.prototype, "returnZ", void 0), e([y({ type: Number, json: { read: { source: "resultOffset" } } })], S.prototype, "start", void 0), e([r2("start"), r2("num")], S.prototype, "writeStart", null), e([y({ type: String, json: { read: { source: "spatialRel", reader: h.read }, write: { target: "spatialRel", writer: h.write } } })], S.prototype, "spatialRelationship", void 0), e([y({ type: T, json: { write: true } })], S.prototype, "timeExtent", void 0), e([y({ type: i, json: { write: true } })], S.prototype, "topFilter", void 0), e([y({ type: String, json: { read: j.read, write: { writer: j.write, overridePolicy(e2) {
  return { enabled: r(e2) && r(this.distance) && this.distance > 0 };
} } } })], S.prototype, "units", void 0), e([y({ type: String, json: { write: true } })], S.prototype, "where", void 0), S = y2 = e([a("esri.rest.support.TopFeaturesQuery")], S), S.from = b(S);
var v2 = S;

export {
  v2 as v
};
//# sourceMappingURL=chunk-W6NQZGUS.js.map
