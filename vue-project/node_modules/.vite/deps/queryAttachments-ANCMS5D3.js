import {
  a
} from "./chunk-DX6Y7FYI.js";
import {
  t
} from "./chunk-XCZVGB7V.js";
import {
  U
} from "./chunk-MKMLHQNH.js";
import {
  o
} from "./chunk-PHPHIDTF.js";
import {
  B
} from "./chunk-P6SQPYDS.js";
import "./chunk-CPSZPA6H.js";
import "./chunk-Y54MR3BP.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-JY6H6KI3.js";
import "./chunk-TTCQP5LX.js";
import "./chunk-C2WY74GI.js";
import "./chunk-MCOYI7PX.js";
import "./chunk-EL4OGCJC.js";
import "./chunk-XPATKIHO.js";
import "./chunk-MKHZ5X6F.js";
import "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/rest/query/operations/queryAttachments.js
function s(t2) {
  const o2 = t2.toJSON();
  return o2.attachmentTypes && (o2.attachmentTypes = o2.attachmentTypes.join(",")), o2.keywords && (o2.keywords = o2.keywords.join(",")), o2.globalIds && (o2.globalIds = o2.globalIds.join(",")), o2.objectIds && (o2.objectIds = o2.objectIds.join(",")), o2.size && (o2.size = o2.size.join(",")), o2;
}
function a2(o2, n) {
  const s2 = {};
  for (const a3 of n) {
    const { parentObjectId: n2, parentGlobalId: c2, attachmentInfos: m2 } = a3;
    for (const a4 of m2) {
      const { id: m3 } = a4, p = B(o(`${o2.path}/${n2}/attachments/${m3}`)), i = a.fromJSON(a4);
      i.set({ url: p, parentObjectId: n2, parentGlobalId: c2 }), s2[n2] ? s2[n2].push(i) : s2[n2] = [i];
    }
  }
  return s2;
}
function c(t2, e, r) {
  let a3 = { query: t({ ...t2.query, f: "json", ...s(e) }) };
  return r && (a3 = { ...r, ...a3, query: { ...r.query, ...a3.query } }), U(t2.path + "/queryAttachments", a3).then((t3) => t3.data.attachmentGroups);
}
async function m(t2, e, n) {
  const { objectIds: r } = e, s2 = [];
  for (const a3 of r)
    s2.push(U(t2.path + "/" + a3 + "/attachments", n));
  return Promise.all(s2).then((t3) => r.map((o2, e2) => ({ parentObjectId: o2, attachmentInfos: t3[e2].data.attachmentInfos })));
}
export {
  c as executeAttachmentQuery,
  m as fetchAttachments,
  a2 as processAttachmentQueryResult
};
//# sourceMappingURL=queryAttachments-ANCMS5D3.js.map
