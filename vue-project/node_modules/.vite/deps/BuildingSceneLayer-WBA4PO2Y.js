import {
  l as l5,
  t as t5,
  ue
} from "./chunk-RRQNF2QS.js";
import {
  d as d2,
  s as s7
} from "./chunk-5U6MVA3N.js";
import "./chunk-HSGAK4MW.js";
import "./chunk-UA55FIQK.js";
import {
  l as l4,
  m as m3,
  s as s6,
  u
} from "./chunk-VWXB4XVN.js";
import {
  E,
  L,
  n as n3
} from "./chunk-TTEUAYXV.js";
import "./chunk-IUNR7SKI.js";
import "./chunk-6EA7KGPB.js";
import "./chunk-BWR2PS44.js";
import "./chunk-UHA44FM7.js";
import "./chunk-PDAERZZE.js";
import "./chunk-R6MFQRYH.js";
import "./chunk-CPQSD22U.js";
import "./chunk-3UIKNLFV.js";
import "./chunk-LMZ4ULJY.js";
import "./chunk-XSQFM27N.js";
import "./chunk-R5TZJ3KJ.js";
import "./chunk-A7PY25IH.js";
import "./chunk-KZZBROE4.js";
import "./chunk-CJ2YD4VU.js";
import "./chunk-PRXITTX7.js";
import "./chunk-I73RJE3H.js";
import "./chunk-OWSDEANX.js";
import {
  i,
  l as l2
} from "./chunk-DLEEZ5CX.js";
import {
  l as l3
} from "./chunk-BRSYQXRG.js";
import "./chunk-D4SYZIFV.js";
import {
  n
} from "./chunk-5ZDDV642.js";
import {
  He
} from "./chunk-JPG2AHMD.js";
import "./chunk-WNFESMMI.js";
import "./chunk-6ZICJ4HF.js";
import "./chunk-6N2I7LNE.js";
import {
  i as i2
} from "./chunk-52DUL4NM.js";
import "./chunk-ED3H44RD.js";
import "./chunk-C5E4KZMK.js";
import "./chunk-XWFAINWU.js";
import {
  p as p3
} from "./chunk-NNXHBH3J.js";
import "./chunk-2S24CH2D.js";
import "./chunk-6XL4E25K.js";
import "./chunk-ZHIUMSNA.js";
import "./chunk-66ZWVXB2.js";
import {
  s as s5
} from "./chunk-YB6BDEHT.js";
import "./chunk-4YR3FESC.js";
import "./chunk-UWJ3NERY.js";
import "./chunk-E4ZXXRPV.js";
import "./chunk-AJY7W6KP.js";
import {
  n as n2
} from "./chunk-SJOFHDQC.js";
import "./chunk-VV4LINSF.js";
import "./chunk-XSYADQXL.js";
import "./chunk-YIJX6PSI.js";
import {
  p as p4
} from "./chunk-TCH7H3BB.js";
import "./chunk-CV32ONPW.js";
import "./chunk-NCSDM2FH.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-B4X5M3MB.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-L46P5ZGI.js";
import "./chunk-AOER6TTF.js";
import "./chunk-N5RJDK35.js";
import "./chunk-NBE2OON5.js";
import "./chunk-W55YAZ7T.js";
import "./chunk-ZMJYBENP.js";
import "./chunk-DGWYZRQH.js";
import "./chunk-424YCWGU.js";
import "./chunk-QM63DB4O.js";
import "./chunk-MSSVX4MF.js";
import {
  _
} from "./chunk-D47GNCYL.js";
import "./chunk-B4KXWO6Z.js";
import "./chunk-ITOWSLB4.js";
import "./chunk-WIR7P2UT.js";
import "./chunk-4YJQ46TP.js";
import "./chunk-LC5BGIRA.js";
import {
  t as t3
} from "./chunk-N44T6V5D.js";
import "./chunk-ST7DNJJS.js";
import {
  c
} from "./chunk-QSDDU4NM.js";
import {
  d,
  j as j2,
  p as p2,
  y as y2
} from "./chunk-FNGJTVTP.js";
import {
  O,
  S
} from "./chunk-3MIQEU54.js";
import {
  b
} from "./chunk-Q3FHJWKB.js";
import "./chunk-VB6BMHUU.js";
import "./chunk-H66NMTBW.js";
import "./chunk-K7L4V6NL.js";
import "./chunk-UZL5FYFX.js";
import "./chunk-HM62IZSE.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-763HXOZK.js";
import {
  x
} from "./chunk-TEBHEW3L.js";
import "./chunk-QF2PMVYK.js";
import "./chunk-BRWDGS6Y.js";
import "./chunk-L6EWR437.js";
import "./chunk-HZKQDRDV.js";
import {
  x as x2
} from "./chunk-CVSP2FBZ.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-PELFA5QO.js";
import "./chunk-2CREJO6O.js";
import "./chunk-FAK3SJAD.js";
import {
  r as r2
} from "./chunk-FFJQJQND.js";
import "./chunk-YMSHUIGU.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-RCZJUTGU.js";
import "./chunk-REIXEATJ.js";
import "./chunk-YEFLZ2OV.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-XP5MC636.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-MYKXVBXI.js";
import "./chunk-JLHQIHZ7.js";
import "./chunk-4GJORDIY.js";
import "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import {
  g
} from "./chunk-MS6YQPPG.js";
import {
  t as t4
} from "./chunk-CRF4O3Y3.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-KSENJC5Z.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-YZRPNTZZ.js";
import "./chunk-EVKJKYHI.js";
import {
  m as m2
} from "./chunk-TNQLNDIQ.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import {
  m
} from "./chunk-5CMPUNQG.js";
import {
  U
} from "./chunk-YT74S35I.js";
import "./chunk-U5I7FQWJ.js";
import {
  V
} from "./chunk-M3KO43BW.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import {
  k
} from "./chunk-CNEENAOZ.js";
import {
  s as s4
} from "./chunk-7OAHPHOV.js";
import {
  j
} from "./chunk-SZO7ZKE4.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-UADQEL54.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import {
  v
} from "./chunk-YHZVWABO.js";
import "./chunk-WATRS3LJ.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import {
  o as o2
} from "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import {
  f2 as f,
  w2
} from "./chunk-H2ENCYR3.js";
import {
  o
} from "./chunk-SVHG5VY2.js";
import "./chunk-S47644HM.js";
import {
  s as s3
} from "./chunk-QXPN4D5D.js";
import {
  l
} from "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  t6 as t2,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import {
  T
} from "./chunk-PXVSWY3C.js";
import {
  w
} from "./chunk-QLY5H3XF.js";
import {
  s,
  s2
} from "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import {
  p
} from "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  r,
  t
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var l6 = class extends s4(S) {
  constructor(e3) {
    super(e3), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.visible = true, this.opacity = 1;
  }
  readTitle(e3, r3) {
    return "string" == typeof r3.alias ? r3.alias : "string" == typeof r3.name ? r3.name : "";
  }
  readIdOnlyOnce(e3) {
    return -1 !== this.id ? this.id : "number" == typeof e3 ? e3 : -1;
  }
};
e([y({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], l6.prototype, "title", void 0), e([o("service", "title", ["alias", "name"])], l6.prototype, "readTitle", null), e([y()], l6.prototype, "layer", void 0), e([y({ type: T, readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], l6.prototype, "id", void 0), e([o("service", "id")], l6.prototype, "readIdOnlyOnce", null), e([y(y2(String))], l6.prototype, "modelName", void 0), e([y(y2(Boolean))], l6.prototype, "isEmpty", void 0), e([y({ type: Boolean, json: { name: "visibility", write: true } })], l6.prototype, "visible", void 0), e([y({ type: Number, json: { write: true } })], l6.prototype, "opacity", void 0), l6 = e([a("esri.layers.buildingSublayers.BuildingSublayer")], l6);
var n4 = l6;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var A = "esri.layers.buildingSublayers.BuildingComponentSublayer";
var _2 = s.getLogger(A);
var C = s5();
var N = class extends m2.LoadableMixin(m(n4)) {
  constructor(e3) {
    super(e3), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    var _a, _b;
    return this.layer ? { path: `${(_a = this.layer.parsedUrl) == null ? void 0 : _a.path}/sublayers/${this.id}`, query: (_b = this.layer.parsedUrl) == null ? void 0 : _b.query } : { path: "" };
  }
  get fieldsIndex() {
    return new r2(this.fields);
  }
  readAssociatedLayer(e3, r3) {
    const t9 = this.layer.associatedFeatureServiceItem, o3 = r3.associatedLayerID;
    return r(t9) && "number" == typeof o3 ? new He({ portalItem: t9, layerId: o3 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields)
        if ("oid" === e3.type)
          return e3.name;
    }
    return null;
  }
  get displayField() {
    return r(this.associatedLayer) ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e3) {
    const r3 = r(e3) ? e3.signal : null, t9 = this._fetchService(r3).then(() => {
      this.indexInfo = n3(this.parsedUrl.path, this.rootNode, this.nodePages, this.apiKey, _2, r3);
    });
    return this.addResolvingPromise(t9), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    return p4(this, e3);
  }
  async _fetchService(e3) {
    const r3 = (await U(this.parsedUrl.path, { query: { f: "json", token: this.apiKey }, responseType: "json", signal: e3 })).data;
    this.read(r3, { origin: "service", url: this.parsedUrl });
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, r3) {
    var _a, _b, _c;
    const t9 = (_b = (_a = this.getFeatureType(r3 == null ? void 0 : r3.feature)) == null ? void 0 : _a.domains) == null ? void 0 : _b[e3];
    return t9 && "inherited" !== t9.type ? t9 : ((_c = this.getField(e3)) == null ? void 0 : _c.domain) ?? null;
  }
  getFeatureType(e3) {
    return e3 && r(this.associatedLayer) ? this.associatedLayer.getFeatureType(e3) : null;
  }
  get types() {
    return r(this.associatedLayer) ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return r(this.associatedLayer) ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e3 = r(this.associatedLayer) && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : t5, { query: r3, data: { supportsZ: t9, supportsM: o3, isVersioned: s8 } } = e3;
    return { query: r3, data: { supportsZ: t9, supportsM: o3, isVersioned: s8 } };
  }
  createQuery() {
    const e3 = new x();
    return "mesh" !== this.geometryType && (e3.returnGeometry = true, e3.returnZ = true), e3.where = this.definitionExpression || "1=1", e3.sqlFormat = "standard", e3;
  }
  queryExtent(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t9) => t9.queryExtent(e3 || this.createQuery(), r3));
  }
  queryFeatureCount(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t9) => t9.queryFeatureCount(e3 || this.createQuery(), r3));
  }
  queryFeatures(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t9) => t9.queryFeatures(e3 || this.createQuery(), r3)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const r4 of e4.features)
          r4.layer = this.layer, r4.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r3) {
    return this._getAssociatedLayerForQuery().then((t9) => t9.queryObjectIds(e3 || this.createQuery(), r3));
  }
  async queryCachedAttributes(e3, r3) {
    const t9 = v(this.fieldsIndex, await d2(this, s7(this)));
    return ue(this.parsedUrl.path, this.attributeStorageInfo, e3, r3, t9);
  }
  async queryCachedFeature(e3, t9) {
    const o3 = await this.queryCachedAttributes(e3, [t9]);
    if (!o3 || 0 === o3.length)
      throw new s2("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    const s8 = new g();
    return s8.attributes = o3[0], s8.layer = this, s8.sourceLayer = this, s8;
  }
  getFieldUsageInfo(e3) {
    return this.fieldsIndex.has(e3) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: r(this.associatedLayer) };
  }
  _getAssociatedLayerForQuery() {
    const e3 = this.associatedLayer;
    return r(e3) && e3.loaded ? Promise.resolve(e3) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), t(this.associatedLayer))
      throw new s2("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e3) {
      throw new s2("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e3 });
    }
    return this.associatedLayer;
  }
};
e([y({ readOnly: true })], N.prototype, "parsedUrl", null), e([y({ type: s6, readOnly: true })], N.prototype, "nodePages", void 0), e([y({ type: [l4], readOnly: true })], N.prototype, "materialDefinitions", void 0), e([y({ type: [u], readOnly: true })], N.prototype, "textureSetDefinitions", void 0), e([y({ type: [m3], readOnly: true })], N.prototype, "geometryDefinitions", void 0), e([y({ readOnly: true })], N.prototype, "serviceUpdateTimeStamp", void 0), e([y({ readOnly: true })], N.prototype, "store", void 0), e([y({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], N.prototype, "rootNode", void 0), e([y({ readOnly: true })], N.prototype, "attributeStorageInfo", void 0), e([y(C.fields)], N.prototype, "fields", void 0), e([y({ readOnly: true })], N.prototype, "fieldsIndex", null), e([y({ readOnly: true, type: He })], N.prototype, "associatedLayer", void 0), e([o("service", "associatedLayer", ["associatedLayerID"])], N.prototype, "readAssociatedLayer", null), e([y(C.outFields)], N.prototype, "outFields", void 0), e([y({ type: String, readOnly: true })], N.prototype, "objectIdField", null), e([y({ readOnly: true, type: String, json: { read: false } })], N.prototype, "displayField", null), e([y({ readOnly: true, type: String })], N.prototype, "apiKey", null), e([y({ readOnly: true, type: w2 })], N.prototype, "fullExtent", null), e([y({ readOnly: true, type: f })], N.prototype, "spatialReference", null), e([y({ readOnly: true })], N.prototype, "version", null), e([y({ readOnly: true, type: x2 })], N.prototype, "elevationInfo", null), e([y({ readOnly: true, type: Number })], N.prototype, "minScale", null), e([y({ readOnly: true, type: Number })], N.prototype, "maxScale", null), e([y({ readOnly: true, type: Number })], N.prototype, "effectiveScaleRange", null), e([y({ type: ["hide", "show"], json: { write: true } })], N.prototype, "listMode", void 0), e([y({ types: n2, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], N.prototype, "renderer", void 0), e([y({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], N.prototype, "definitionExpression", void 0), e([y(p2)], N.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], N.prototype, "popupTemplate", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], N.prototype, "normalReferenceFrame", void 0), e([y({ readOnly: true, json: { read: false } })], N.prototype, "defaultPopupTemplate", null), e([y()], N.prototype, "types", null), e([y()], N.prototype, "typeIdField", null), e([y({ json: { write: false } }), o2(new s3({ "3DObject": "3d-object", Point: "point" }))], N.prototype, "layerType", void 0), e([y()], N.prototype, "geometryType", null), e([y()], N.prototype, "profile", null), e([y({ readOnly: true, json: { read: false } })], N.prototype, "capabilities", null), N = e([a(A)], N);
var M = N;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingGroupSublayer.js
var a2;
var l7 = { type: j, readOnly: true, json: { origins: { service: { read: { source: "sublayers", reader: p5 } } }, read: false } };
function p5(r3, o3, t9) {
  if (r3 && Array.isArray(r3))
    return new j(r3.map((r4) => {
      const e3 = y3(r4);
      if (e3) {
        const o4 = new e3();
        return o4.read(r4, t9), o4;
      }
      return t9 && t9.messages && r4 && t9.messages.push(new t2("building-scene-layer:unsupported-sublayer-type", "Building scene sublayer of type '" + (r4.type || "unknown") + "' are not supported", { definition: r4, context: t9 })), null;
    }));
}
var c2 = a2 = class extends n4 {
  constructor(r3) {
    super(r3), this.type = "building-group", this.listMode = "show", this.sublayers = null;
  }
  loadAll() {
    return i(this, (r3) => a2.forEachSublayer(this.sublayers, (e3) => {
      "building-group" !== e3.type && r3(e3);
    }));
  }
};
function y3(r3) {
  return "group" === r3.layerType ? c2 : M;
}
e([y({ type: ["hide", "show", "hide-children"], json: { write: true } })], c2.prototype, "listMode", void 0), e([y(l7)], c2.prototype, "sublayers", void 0), c2 = a2 = e([a("esri.layers.buildingSublayers.BuildingGroupSublayer")], c2), function(r3) {
  function e3(r4, o3) {
    r4.forEach((r5) => {
      o3(r5), "building-group" === r5.type && e3(r5.sublayers, o3);
    });
  }
  r3.sublayersProperty = l7, r3.readSublayers = p5, r3.forEachSublayer = e3;
}(c2 || (c2 = {}));
var d3 = c2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: String, readOnly: true, json: { write: true } })], e2.prototype, "type", void 0), e2 = e([a("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p6 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var p7;
var i3 = p7 = class extends l {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new p7({ filterType: this.filterType, filterValues: p(this.filterValues) });
  }
};
e([y({ type: String, json: { write: true } })], i3.prototype, "filterType", void 0), e([y({ type: [String], json: { write: true } })], i3.prototype, "filterValues", void 0), i3 = p7 = e([a("esri.layers.support.BuildingFilterAuthoringInfoType")], i3);
var l8 = i3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c3;
var l9 = j.ofType(l8);
var n5 = c3 = class extends l {
  clone() {
    return new c3({ filterTypes: p(this.filterTypes) });
  }
};
e([y({ type: l9, json: { write: true } })], n5.prototype, "filterTypes", void 0), n5 = c3 = e([a("esri.layers.support.BuildingFilterAuthoringInfoBlock")], n5);
var m4 = n5;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p8;
var l10 = j.ofType(m4);
var n6 = p8 = class extends p6 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p8({ filterBlocks: p(this.filterBlocks) });
  }
};
e([y({ type: ["checkbox"] })], n6.prototype, "type", void 0), e([y({ type: l10, json: { write: true } })], n6.prototype, "filterBlocks", void 0), n6 = p8 = e([a("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n6);
var u2 = n6;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t6 = class extends l {
};
e([y({ readOnly: true, json: { read: false } })], t6.prototype, "type", void 0), t6 = e([a("esri.layers.support.BuildingFilterMode")], t6);
var p9 = t6;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t7;
var p10 = t7 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t7();
  }
};
e([y({ type: ["solid"], readOnly: true, json: { write: true } })], p10.prototype, "type", void 0), p10 = t7 = e([a("esri.layers.support.BuildingFilterModeSolid")], p10);
var i4 = p10;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c4;
var m5 = c4 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c4({ edges: p(this.edges) });
  }
};
e([o2({ wireFrame: "wire-frame" })], m5.prototype, "type", void 0), e([y(t4)], m5.prototype, "edges", void 0), m5 = c4 = e([a("esri.layers.support.BuildingFilterModeWireFrame")], m5);
var a3 = m5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t8;
var p11 = t8 = class extends p9 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t8();
  }
};
e([y({ type: ["x-ray"], readOnly: true, json: { write: true } })], p11.prototype, "type", void 0), p11 = t8 = e([a("esri.layers.support.BuildingFilterModeXRay")], p11);
var c5 = p11;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d4;
var a4 = { nonNullable: true, types: { key: "type", base: p9, typeMap: { solid: i4, "wire-frame": a3, "x-ray": c5 } }, json: { read: (e3) => {
  switch (e3 && e3.type) {
    case "solid":
      return i4.fromJSON(e3);
    case "wireFrame":
      return a3.fromJSON(e3);
    case "x-ray":
      return c5.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var u3 = d4 = class extends l {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i4(), this.title = "";
  }
  clone() {
    return new d4({ filterExpression: this.filterExpression, filterMode: p(this.filterMode), title: this.title });
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u3.prototype, "filterExpression", void 0), e([y(a4)], u3.prototype, "filterMode", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u3.prototype, "title", void 0), u3 = d4 = e([a("esri.layers.support.BuildingFilterBlock")], u3);
var c6 = u3;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var u4;
var d5 = j.ofType(c6);
var m6 = u4 = class extends l {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n(), this.name = null;
  }
  clone() {
    return new u4({ description: this.description, filterBlocks: p(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: p(this.filterAuthoringInfo) });
  }
};
e([y({ type: String, json: { write: true } })], m6.prototype, "description", void 0), e([y({ type: d5, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "filterBlocks", void 0), e([y({ types: { key: "type", base: p6, typeMap: { checkbox: u2 } }, json: { read: (o3) => "checkbox" === (o3 && o3.type) ? u2.fromJSON(o3) : null, write: true } })], m6.prototype, "filterAuthoringInfo", void 0), e([y({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "id", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "name", void 0), m6 = u4 = e([a("esri.layers.support.BuildingFilter")], m6);
var f2 = m6;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var n7 = class extends l {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
e([y({ type: String })], n7.prototype, "fieldName", void 0), e([y({ type: String })], n7.prototype, "modelName", void 0), e([y({ type: String })], n7.prototype, "label", void 0), e([y({ type: Number })], n7.prototype, "min", void 0), e([y({ type: Number })], n7.prototype, "max", void 0), e([y({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], n7.prototype, "mostFrequentValues", void 0), e([y({ type: [Number] })], n7.prototype, "subLayerIds", void 0), n7 = e([a("esri.layers.support.BuildingFieldStatistics")], n7);
var u5 = class extends m2.LoadableMixin(m(l)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (s.getLogger(this.declaredClass).error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const r3 = r(e3) ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(r3)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const t9 = (await U(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(t9, { origin: "service" });
  }
};
e([y({ constructOnly: true, type: String })], u5.prototype, "url", void 0), e([y({ readOnly: true, type: [n7], json: { read: { source: "summary" } } })], u5.prototype, "fields", null), u5 = e([a("esri.layers.support.BuildingSummaryStatistics")], u5);
var m7 = u5;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var F = j.ofType(f2);
var B = p(d3.sublayersProperty);
B.json.origins["web-scene"] = { type: [M], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, B.json.origins["portal-item"] = { type: [M], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } };
var P = class extends E(p3(c(_(t3(O(i2(b))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new l3({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._sublayerOverrides = null, this.filters = new F(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r3, t9) {
    const s8 = d3.readSublayers(e3, r3, t9);
    return d3.forEachSublayer(s8, (e4) => e4.layer = this), this._sublayerOverrides && (this.applySublayerOverrides(s8, this._sublayerOverrides), this._sublayerOverrides = null), s8;
  }
  applySublayerOverrides(e3, { overrides: r3, context: t9 }) {
    d3.forEachSublayer(e3, (e4) => e4.read(r3.get(e4.id), t9));
  }
  readSublayerOverrides(e3, r3) {
    var _a;
    const t9 = /* @__PURE__ */ new Map();
    for (const i5 of e3)
      null != i5 && "object" == typeof i5 && "number" == typeof i5.id ? t9.set(i5.id, i5) : (_a = r3.messages) == null ? void 0 : _a.push(new s2("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i5 }));
    return { overrides: t9, context: r3 };
  }
  writeSublayerOverrides(e3, r3, t9) {
    const s8 = [];
    d3.forEachSublayer(this.sublayers, (e4) => {
      const r4 = e4.write({}, t9);
      Object.keys(r4).length > 1 && s8.push(r4);
    }), s8.length > 0 && (r3.sublayers = s8);
  }
  writeUnappliedOverrides(e3, r3) {
    r3.sublayers = [], e3.overrides.forEach((e4) => {
      r3.sublayers.push(p(e4));
    });
  }
  write(e3, r3) {
    return e3 = super.write(e3, r3), !r3 || "web-scene" !== r3.origin && "portal-item" !== r3.origin || (this.sublayers ? this.writeSublayerOverrides(this.sublayers, e3, r3) : this._sublayerOverrides && this.writeUnappliedOverrides(this._sublayerOverrides, e3)), e3;
  }
  read(e3, r3) {
    if (super.read(e3, r3), r3 && ("web-scene" === r3.origin || "portal-item" === r3.origin) && null != e3 && Array.isArray(e3.sublayers)) {
      const t9 = this.readSublayerOverrides(e3.sublayers, r3);
      this.sublayers ? this.applySublayerOverrides(this.sublayers, t9) : this._sublayerOverrides = t9;
    }
  }
  readSummaryStatistics(e3, r3) {
    var _a;
    if ("string" == typeof r3.statisticsHRef) {
      const e4 = V((_a = this.parsedUrl) == null ? void 0 : _a.path, r3.statisticsHRef);
      return new m7({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  load(e3) {
    const r3 = r(e3) ? e3.signal : null, t9 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(w).then(() => this._fetchService(r3)).then(() => this._fetchAssociatedFeatureService(r3));
    return this.addResolvingPromise(t9), Promise.resolve(this);
  }
  loadAll() {
    return l2(this, (e3) => {
      d3.forEachSublayer(this.sublayers, (r3) => {
        "building-group" !== r3.type && e3(r3);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r3) {
    return this._debouncedSaveOperations(L.SAVE_AS, { ...r3, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(L.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType)
      throw new s2("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo;
    e3 && ("absolute-height" !== e3.mode && s.getLogger(this.declaredClass).warn(".elevationInfo=", "Building scene layers only support absolute-height elevation mode"), e3.featureExpressionInfo && "0" !== e3.featureExpressionInfo.expression && s.getLogger(this.declaredClass).warn(".elevationInfo=", "Building scene layers do not support featureExpressionInfo"));
  }
  async _fetchAssociatedFeatureService(e3) {
    const r3 = new l5(this.parsedUrl, this.portalItem, this.apiKey, e3);
    try {
      this.associatedFeatureServiceItem = await r3.fetchPortalItem();
    } catch (t9) {
      s.getLogger(this.declaredClass).warn("Associated feature service item could not be loaded", t9);
    }
  }
};
e([y({ type: ["BuildingSceneLayer"] })], P.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], P.prototype, "allSublayers", void 0), e([y(B)], P.prototype, "sublayers", void 0), e([o("service", "sublayers")], P.prototype, "readSublayers", null), e([y({ type: F, nonNullable: true, json: { write: true } })], P.prototype, "filters", void 0), e([y({ type: String, json: { write: true } })], P.prototype, "activeFilterId", void 0), e([y({ readOnly: true, type: m7 })], P.prototype, "summaryStatistics", void 0), e([o("summaryStatistics", ["statisticsHRef"])], P.prototype, "readSummaryStatistics", null), e([y({ type: [String], json: { read: false } })], P.prototype, "outFields", void 0), e([y(j2)], P.prototype, "fullExtent", void 0), e([y({ type: ["show", "hide", "hide-children"] })], P.prototype, "listMode", void 0), e([y(y2(f))], P.prototype, "spatialReference", void 0), e([y(d)], P.prototype, "elevationInfo", null), e([y({ json: { read: false }, readOnly: true })], P.prototype, "type", void 0), e([y()], P.prototype, "associatedFeatureServiceItem", void 0), P = e([a("esri.layers.BuildingSceneLayer")], P);
var C2 = P;
export {
  C2 as default
};
//# sourceMappingURL=BuildingSceneLayer-WBA4PO2Y.js.map
