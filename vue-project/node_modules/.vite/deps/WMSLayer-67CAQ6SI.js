import {
  l as l3
} from "./chunk-M7ACK5UJ.js";
import {
  o as o2
} from "./chunk-QVE4OG3D.js";
import {
  i
} from "./chunk-VVVUDKKQ.js";
import {
  e as e2
} from "./chunk-V5EOPCGF.js";
import {
  l as l2
} from "./chunk-55MPB7OZ.js";
import {
  a as a3
} from "./chunk-XJBZ6UIM.js";
import "./chunk-2LQUYG3Y.js";
import {
  _
} from "./chunk-VRZTCZFJ.js";
import {
  p as p2
} from "./chunk-AZFJJ5Y2.js";
import {
  n
} from "./chunk-EJKIE4MZ.js";
import "./chunk-YZ3HZMEM.js";
import "./chunk-5XBZ477A.js";
import {
  t as t2
} from "./chunk-YUXNJDFN.js";
import "./chunk-TKZTELJQ.js";
import {
  c as c3
} from "./chunk-CPJE5ZZA.js";
import {
  c as c2,
  f as f2
} from "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import {
  O,
  S
} from "./chunk-74KT22JL.js";
import "./chunk-BQHZXXFC.js";
import {
  b as b2
} from "./chunk-4JB2KWLF.js";
import "./chunk-3MAMOMOP.js";
import "./chunk-QPSL5BDS.js";
import {
  I
} from "./chunk-37HBRPHL.js";
import "./chunk-AIOICOJJ.js";
import "./chunk-HWGER6NN.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-ZXEHLMMH.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-G3ZCYHOR.js";
import "./chunk-TKLFTPA5.js";
import "./chunk-F6Y6UABE.js";
import "./chunk-5W2WWLX7.js";
import {
  U,
  a as a2,
  l
} from "./chunk-QP5ZWBKN.js";
import "./chunk-YSJ4W32U.js";
import {
  g
} from "./chunk-CSFUQCFV.js";
import "./chunk-ZUIHAM2A.js";
import "./chunk-SABBLK7S.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-7FGYV4GW.js";
import "./chunk-CXHYHUY6.js";
import "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-II3EAW7L.js";
import {
  U as U2
} from "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import {
  $,
  B,
  Et,
  L
} from "./chunk-6XDV3BWZ.js";
import {
  k
} from "./chunk-CH2BQDQT.js";
import {
  s as s5
} from "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import {
  j
} from "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-IMKS3PQX.js";
import "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-TZBBKXOW.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import {
  E,
  f2 as f,
  w2
} from "./chunk-T5VSOT6T.js";
import {
  s as s3
} from "./chunk-OHZM2VYI.js";
import "./chunk-FSB7TIRN.js";
import "./chunk-UIMO4FGN.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-E4M4B5ZQ.js";
import {
  r as r2
} from "./chunk-JATK7CEQ.js";
import {
  o
} from "./chunk-74TXAD7S.js";
import {
  s as s4
} from "./chunk-HIRLBWV3.js";
import {
  c
} from "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import {
  T,
  b
} from "./chunk-RLEMMDH4.js";
import {
  w
} from "./chunk-6ZUWLK7F.js";
import {
  s,
  s3 as s2
} from "./chunk-YVZY5LDV.js";
import {
  p
} from "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import {
  r,
  t
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/layers/support/WMSSublayer.js
var c4;
var h = 0;
var g2 = c4 = class extends s5(S) {
  constructor(e3) {
    super(e3), this.dimensions = null, this.fullExtents = null, this.legendUrl = null, this.legendEnabled = true, this.layer = null, this.maxScale = 0, this.minScale = 0, this.parent = null, this.popupEnabled = false, this.queryable = false, this.sublayers = null, this.spatialReferences = null, this.addHandles([a2(() => this.sublayers, "after-add", ({ item: e4 }) => {
      e4.parent = this, e4.layer = this.layer;
    }, U), a2(() => this.sublayers, "after-remove", ({ item: e4 }) => {
      e4.layer = e4.parent = null;
    }, U), l(() => this.sublayers, (e4, t3) => {
      if (t3)
        for (const r3 of t3)
          r3.layer = r3.parent = null;
      if (e4)
        for (const r3 of e4)
          r3.parent = this, r3.layer = this.layer;
    }, U)]);
  }
  get description() {
    return this._get("description");
  }
  set description(e3) {
    this._set("description", e3);
  }
  get fullExtent() {
    return this._get("fullExtent");
  }
  set fullExtent(e3) {
    this._set("fullExtent", e3);
  }
  readExtent(e3, t3) {
    return (e3 = t3.extent) ? w2.fromJSON(e3) : null;
  }
  get id() {
    const e3 = this._get("id");
    return e3 ?? h++;
  }
  set id(e3) {
    this._set("id", e3);
  }
  readLegendUrl(e3, t3) {
    return (t3 == null ? void 0 : t3.legendUrl) ?? (t3 == null ? void 0 : t3.legendURL) ?? null;
  }
  get effectiveScaleRange() {
    const { minScale: e3, maxScale: t3 } = this;
    return { minScale: e3, maxScale: t3 };
  }
  get name() {
    return this._get("name");
  }
  set name(e3) {
    this._set("name", e3);
  }
  castSublayers(e3) {
    return b(j.ofType(c4), e3);
  }
  get title() {
    return this._get("title");
  }
  set title(e3) {
    this._set("title", e3);
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e3) {
    this._setAndNotifyLayer("visible", e3);
  }
  clone() {
    var _a, _b;
    const e3 = new c4();
    return this.hasOwnProperty("description") && (e3.description = this.description), this.hasOwnProperty("fullExtent") && (e3.fullExtent = this.fullExtent.clone()), this.hasOwnProperty("fullExtents") && (e3.fullExtents = ((_a = this.fullExtents) == null ? void 0 : _a.map((e4) => e4.clone())) ?? null), this.hasOwnProperty("legendUrl") && (e3.legendUrl = this.legendUrl), this.hasOwnProperty("legendEnabled") && (e3.legendEnabled = this.legendEnabled), this.hasOwnProperty("layer") && (e3.layer = this.layer), this.hasOwnProperty("name") && (e3.name = this.name), this.hasOwnProperty("parent") && (e3.parent = this.parent), this.hasOwnProperty("queryable") && (e3.queryable = this.queryable), this.hasOwnProperty("sublayers") && (e3.sublayers = this.sublayers && this.sublayers.map((e4) => e4.clone())), this.hasOwnProperty("spatialReferences") && (e3.spatialReferences = (_b = this.spatialReferences) == null ? void 0 : _b.map((e4) => e4)), this.hasOwnProperty("visible") && (e3.visible = this.visible), this.hasOwnProperty("title") && (e3.title = this.title), e3;
  }
  _setAndNotifyLayer(e3, t3) {
    const r3 = this.layer;
    this._get(e3) !== t3 && (this._set(e3, t3), r3 && r3.emit("wms-sublayer-update", { propertyName: e3, id: this.id }));
  }
};
e([y()], g2.prototype, "description", null), e([y({ readOnly: true })], g2.prototype, "dimensions", void 0), e([y({ value: null })], g2.prototype, "fullExtent", null), e([o("fullExtent", ["extent"])], g2.prototype, "readExtent", null), e([y()], g2.prototype, "fullExtents", void 0), e([y({ type: Number, json: { write: { enabled: false, overridePolicy: () => ({ ignoreOrigin: true, enabled: true }) } } })], g2.prototype, "id", null), e([y({ type: String, json: { origins: { "web-document": { read: { source: ["legendUrl", "legendURL"] }, write: { target: "legendUrl", ignoreOrigin: true } } }, read: { source: "legendURL" }, write: { ignoreOrigin: true } } })], g2.prototype, "legendUrl", void 0), e([o(["web-document"], "legendUrl")], g2.prototype, "readLegendUrl", null), e([y({ value: true, type: Boolean, json: { read: { source: "showLegend" }, write: { target: "showLegend" }, origins: { "web-map": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], g2.prototype, "legendEnabled", void 0), e([y()], g2.prototype, "layer", void 0), e([y()], g2.prototype, "maxScale", void 0), e([y()], g2.prototype, "minScale", void 0), e([y({ readOnly: true })], g2.prototype, "effectiveScaleRange", null), e([y({ type: String, value: null, json: { read: { source: "name" }, write: { ignoreOrigin: true } } })], g2.prototype, "name", null), e([y()], g2.prototype, "parent", void 0), e([y({ type: Boolean, json: { read: { source: "showPopup" }, write: { ignoreOrigin: true, target: "showPopup" } } })], g2.prototype, "popupEnabled", void 0), e([y({ type: Boolean, json: { write: { ignoreOrigin: true } } })], g2.prototype, "queryable", void 0), e([y()], g2.prototype, "sublayers", void 0), e([s3("sublayers")], g2.prototype, "castSublayers", null), e([y({ type: [Number], json: { read: { source: "spatialReferences" } } })], g2.prototype, "spatialReferences", void 0), e([y({ type: String, value: null, json: { write: { ignoreOrigin: true } } })], g2.prototype, "title", null), e([y({ type: Boolean, value: true, json: { read: { source: "defaultVisibility" } } })], g2.prototype, "visible", null), g2 = c4 = e([a("esri.layers.support.WMSSublayer")], g2);
var m = g2;

// node_modules/@arcgis/core/layers/support/wmsUtils.js
var a4 = { 84: 4326, 83: 4269, 27: 4267 };
function l4(n2) {
  if (!n2)
    return null;
  const r3 = { idCounter: -1 };
  if ("string" == typeof n2) {
    n2 = new DOMParser().parseFromString(n2, "text/xml");
  }
  const s6 = n2.documentElement;
  if ("ServiceExceptionReport" === s6.nodeName) {
    const t3 = Array.prototype.slice.call(s6.childNodes).map((e3) => e3.textContent).join("\r\n");
    throw new s2("wmslayer:wms-capabilities-xml-is-not-valid", "The server returned errors when the WMS capabilities were requested.", t3);
  }
  const o3 = p3("Capability", s6), a5 = p3("Service", s6), l5 = o3 && p3("Request", o3);
  if (!o3 || !a5 || !l5)
    return null;
  const u2 = p3("Layer", o3);
  if (!u2)
    return null;
  const f4 = "WMS_Capabilities" === s6.nodeName || "WMT_MS_Capabilities" === s6.nodeName ? s6.getAttribute("version") : "1.3.0", d2 = x("Title", a5, "") || x("Name", a5, ""), h3 = x("AccessConstraints", a5, ""), g4 = /^none$/i.test(h3) ? "" : h3, b4 = x("Abstract", a5, ""), E3 = parseInt(x("MaxWidth", a5, "5000"), 10), w3 = parseInt(x("MaxHeight", a5, "5000"), 10), L3 = y2(l5, "GetMap"), F = N(l5, "GetMap"), C2 = A(u2, f4, r3);
  if (!C2)
    return null;
  let R2, v2 = 0;
  const I3 = Array.prototype.slice.call(o3.childNodes), T3 = C2.sublayers ?? [], U4 = (e3) => {
    null != e3 && T3.push(e3);
  };
  I3.forEach((e3) => {
    "Layer" === e3.nodeName && (0 === v2 ? R2 = e3 : 1 === v2 ? (C2.name && (C2.name = "", U4(A(R2, f4, r3))), U4(A(e3, f4, r3))) : U4(A(e3, f4, r3)), v2++);
  });
  let V3 = C2.sublayers, O3 = C2.extent;
  const _3 = C2.fullExtents ?? [];
  if (V3 || (V3 = []), 0 === V3.length && V3.push(C2), !O3) {
    const e3 = new w2(V3[0].extent);
    C2.extent = e3.toJSON(), O3 = C2.extent;
  }
  const B3 = C2.spatialReferences.length > 0 ? C2.spatialReferences : c5(C2), D = N(l5, "GetFeatureInfo"), j2 = D ? y2(l5, "GetFeatureInfo") : null, k2 = m2(V3), q = C2.minScale || 0, X2 = C2.maxScale || 0, G = C2.dimensions ?? [], W = k2.reduce((e3, t3) => e3.concat(t3.dimensions ?? []), []), P = G.concat(W).filter(M);
  let $2 = null;
  if (P.length) {
    const e3 = P.map((e4) => {
      const { extent: t3 } = e4;
      return S2(t3) ? t3.map((e5) => e5.getTime()) : t3 == null ? void 0 : t3.map((e5) => [e5.min.getTime(), e5.max.getTime()]);
    }).flat(2).filter(r);
    $2 = { startTimeField: null, endTimeField: null, trackIdField: void 0, timeExtent: [Math.min(...e3), Math.max(...e3)] };
  }
  return { copyright: g4, description: b4, dimensions: G, extent: O3, fullExtents: _3, featureInfoFormats: j2, featureInfoUrl: D, mapUrl: F, maxWidth: E3, maxHeight: w3, maxScale: X2, minScale: q, layers: k2, spatialReferences: B3, supportedImageFormatTypes: L3, timeInfo: $2, title: d2, version: f4 };
}
function u(e3) {
  const t3 = e3.filter((e4) => e4.popupEnabled && e4.name && e4.queryable);
  return t3.length ? t3.map(({ name: e4 }) => e4).join() : null;
}
function c5(e3) {
  if (e3.spatialReferences.length > 0)
    return e3.spatialReferences;
  if (e3.sublayers)
    for (const t3 of e3.sublayers) {
      const e4 = c5(t3);
      if (e4.length > 0)
        return e4;
    }
  return [];
}
function m2(e3) {
  var _a;
  let t3 = [];
  for (const n2 of e3)
    t3.push(n2), ((_a = n2.sublayers) == null ? void 0 : _a.length) && (t3 = t3.concat(m2(n2.sublayers)), delete n2.sublayers);
  return t3;
}
function f3(e3, t3, n2) {
  return t3.getAttribute(e3) ?? n2;
}
function d(e3, t3, n2, r3) {
  const i2 = p3(e3, n2);
  return i2 ? f3(t3, i2, r3) : r3;
}
function p3(e3, t3) {
  for (let n2 = 0; n2 < t3.childNodes.length; n2++) {
    const r3 = t3.childNodes[n2];
    if (E2(r3) && r3.nodeName === e3)
      return r3;
  }
  return null;
}
function h2(e3, t3) {
  if (null == t3)
    return [];
  const n2 = [];
  for (let r3 = 0; r3 < t3.childNodes.length; r3++) {
    const i2 = t3.childNodes[r3];
    E2(i2) && i2.nodeName === e3 && n2.push(i2);
  }
  return n2;
}
function x(e3, t3, n2) {
  var _a;
  return ((_a = p3(e3, t3)) == null ? void 0 : _a.textContent) ?? n2;
}
function g3(e3, t3, n2) {
  if (!e3)
    return null;
  const r3 = parseFloat(e3.getAttribute("minx")), o3 = parseFloat(e3.getAttribute("miny")), a5 = parseFloat(e3.getAttribute("maxx")), l5 = parseFloat(e3.getAttribute("maxy"));
  let u2, c6, m3, f4;
  n2 ? (u2 = isNaN(o3) ? -Number.MAX_VALUE : o3, c6 = isNaN(r3) ? -Number.MAX_VALUE : r3, m3 = isNaN(l5) ? Number.MAX_VALUE : l5, f4 = isNaN(a5) ? Number.MAX_VALUE : a5) : (u2 = isNaN(r3) ? -Number.MAX_VALUE : r3, c6 = isNaN(o3) ? -Number.MAX_VALUE : o3, m3 = isNaN(a5) ? Number.MAX_VALUE : a5, f4 = isNaN(l5) ? Number.MAX_VALUE : l5);
  const d2 = new f({ wkid: t3 });
  return new w2({ xmin: u2, ymin: c6, xmax: m3, ymax: f4, spatialReference: d2 });
}
function N(e3, t3) {
  const n2 = p3(t3, e3);
  if (n2) {
    const e4 = p3("DCPType", n2);
    if (e4) {
      const t4 = p3("HTTP", e4);
      if (t4) {
        const e5 = p3("Get", t4);
        if (e5) {
          let t5 = d("OnlineResource", "xlink:href", e5, null);
          if (t5)
            return t5.indexOf("&") === t5.length - 1 && (t5 = t5.substring(0, t5.length - 1)), C(t5, ["service", "request"]);
        }
      }
    }
  }
  return null;
}
function y2(e3, n2) {
  const r3 = h2("Operation", e3);
  if (!r3.length) {
    return h2("Format", p3(n2, e3)).map(({ textContent: e4 }) => e4).filter(r);
  }
  const i2 = [];
  for (const t3 of r3)
    if (t3.getAttribute("name") === n2) {
      const e4 = h2("Format", t3);
      for (const { textContent: t4 } of e4)
        null != t4 && i2.push(t4);
    }
  return i2;
}
function b3(e3, t3, n2) {
  const r3 = p3(t3, e3);
  if (!r3)
    return n2;
  const { textContent: i2 } = r3;
  if (null == i2 || "" === i2)
    return n2;
  const s6 = Number(i2);
  return isNaN(s6) ? n2 : s6;
}
function A(e3, t3, n2) {
  if (!e3)
    return null;
  const r3 = { id: n2.idCounter++, fullExtents: [], parentLayerId: null, queryable: "1" === e3.getAttribute("queryable"), spatialReferences: [], sublayers: null }, l5 = p3("LatLonBoundingBox", e3), u2 = p3("EX_GeographicBoundingBox", e3);
  let c6 = null;
  l5 && (c6 = g3(l5, 4326)), u2 && (c6 = new w2(0, 0, 0, 0, new f({ wkid: 4326 })), c6.xmin = parseFloat(x("westBoundLongitude", u2, "0")), c6.ymin = parseFloat(x("southBoundLatitude", u2, "0")), c6.xmax = parseFloat(x("eastBoundLongitude", u2, "0")), c6.ymax = parseFloat(x("northBoundLatitude", u2, "0"))), l5 || u2 || (c6 = new w2(-180, -90, 180, 90, new f({ wkid: 4326 }))), r3.minScale = b3(e3, "MaxScaleDenominator", 0), r3.maxScale = b3(e3, "MinScaleDenominator", 0);
  const m3 = ["1.0.0", "1.1.0", "1.1.1"].includes(t3) ? "SRS" : "CRS";
  return Array.prototype.slice.call(e3.childNodes).forEach((e4) => {
    var _a;
    if ("Name" === e4.nodeName)
      r3.name = e4.textContent || "";
    else if ("Title" === e4.nodeName)
      r3.title = e4.textContent || "";
    else if ("Abstract" === e4.nodeName)
      r3.description = e4.textContent || "";
    else if ("BoundingBox" === e4.nodeName) {
      const n3 = e4.getAttribute(m3);
      if (n3 && 0 === n3.indexOf("EPSG:")) {
        const r4 = parseInt(n3.substring(5), 10);
        0 === r4 || isNaN(r4) || c6 || (c6 = "1.3.0" === t3 ? g3(e4, r4, o2(r4)) : g3(e4, r4));
      }
      const i2 = n3 && n3.indexOf(":");
      if (i2 && i2 > -1) {
        let s6 = parseInt(n3.substring(i2 + 1, n3.length), 10);
        0 === s6 || isNaN(s6) || (s6 = a4[s6] ? a4[s6] : s6);
        const l6 = "1.3.0" === t3 ? g3(e4, s6, o2(s6)) : g3(e4, s6);
        l6 && r3.fullExtents && r3.fullExtents.push(l6);
      }
    } else if (e4.nodeName === m3) {
      (((_a = e4.textContent) == null ? void 0 : _a.split(" ")) ?? []).forEach((e5) => {
        const t4 = e5.includes(":") ? parseInt(e5.split(":")[1], 10) : parseInt(e5, 10);
        if (0 !== t4 && !isNaN(t4)) {
          const e6 = a4[t4] ? a4[t4] : t4;
          r3.spatialReferences.includes(e6) || r3.spatialReferences.push(e6);
        }
      });
    } else if ("Style" !== e4.nodeName || r3.legendURL) {
      if ("Layer" === e4.nodeName) {
        const i2 = A(e4, t3, n2);
        i2 && (i2.parentLayerId = r3.id, r3.sublayers || (r3.sublayers = []), r3.sublayers.push(i2));
      }
    } else {
      const t4 = p3("LegendURL", e4);
      if (t4) {
        const e5 = p3("OnlineResource", t4);
        e5 && (r3.legendURL = e5.getAttribute("xlink:href"));
      }
    }
  }), r3.extent = c6 == null ? void 0 : c6.toJSON(), r3.dimensions = h2("Dimension", e3).filter((e4) => e4.getAttribute("name") && e4.getAttribute("units") && e4.textContent).map((e4) => {
    const t4 = e4.getAttribute("name"), n3 = e4.getAttribute("units"), r4 = e4.textContent, i2 = e4.getAttribute("unitSymbol") ?? void 0, s6 = e4.getAttribute("default") ?? void 0, o3 = "0" !== f3("default", e4, "0"), a5 = "0" !== f3("nearestValue", e4, "0"), l6 = "0" !== f3("current", e4, "0");
    if (M({ name: t4, units: n3 })) {
      return { name: "time", units: "ISO8601", extent: I2(r4), default: I2(s6), multipleValues: o3, nearestValue: a5, current: l6 };
    }
    if (L2({ name: t4, units: n3 })) {
      return { name: "elevation", units: n3, extent: R(r4), unitSymbol: i2, default: R(s6), multipleValues: o3, nearestValue: a5 };
    }
    return { name: t4, units: n3, extent: v(r4), unitSymbol: i2, default: v(s6), multipleValues: o3, nearestValue: a5 };
  }), r3;
}
function S2(e3) {
  return Array.isArray(e3) && e3.length > 0 && e3[0] instanceof Date;
}
function E2(e3) {
  return e3.nodeType === Node.ELEMENT_NODE;
}
function L2(e3) {
  return /^elevation$/i.test(e3.name) && /^(epsg|crs):\d+$/i.test(e3.units);
}
function M(e3) {
  return /^time$/i.test(e3.name) && /^iso8601$/i.test(e3.units);
}
function C(e3, t3) {
  const n2 = [], i2 = L(e3);
  for (const r3 in i2.query)
    i2.query.hasOwnProperty(r3) && (t3.includes(r3.toLowerCase()) || n2.push(r3 + "=" + i2.query[r3]));
  return i2.path + (n2.length ? "?" + n2.join("&") : "");
}
function R(e3) {
  if (!e3)
    return;
  const n2 = e3.includes("/"), r3 = e3.split(",");
  return n2 ? r3.map((e4) => {
    const t3 = e4.split("/");
    if (t3.length < 2)
      return null;
    return { min: parseFloat(t3[0]), max: parseFloat(t3[1]), resolution: t3.length >= 3 && "0" !== t3[2] ? parseFloat(t3[2]) : void 0 };
  }).filter(r) : r3.map((e4) => parseFloat(e4));
}
function v(e3) {
  if (!e3)
    return;
  const n2 = e3.includes("/"), r3 = e3.split(",");
  return n2 ? r3.map((e4) => {
    const t3 = e4.split("/");
    if (t3.length < 2)
      return null;
    return { min: t3[0], max: t3[1], resolution: t3.length >= 3 && "0" !== t3[2] ? t3[2] : void 0 };
  }).filter(r) : r3;
}
function I2(e3) {
  if (!e3)
    return;
  const n2 = e3.includes("/"), r3 = e3.split(",");
  return n2 ? r3.map((e4) => {
    const t3 = e4.split("/");
    if (t3.length < 2)
      return null;
    return { min: new Date(t3[0]), max: new Date(t3[1]), resolution: t3.length >= 3 && "0" !== t3[2] ? T2(t3[2]) : void 0 };
  }).filter(r) : r3.map((e4) => new Date(e4));
}
function T2(e3) {
  const t3 = /(?:p(\d+y|\d+(?:.|,)\d+y)?(\d+m|\d+(?:.|,)\d+m)?(\d+d|\d+(?:.|,)\d+d)?)?(?:t(\d+h|\d+(?:.|,)\d+h)?(\d+m|\d+(?:.|,)\d+m)?(\d+s|\d+(?:.|,)\d+s)?)?/i, n2 = e3.match(t3);
  if (!n2)
    return null;
  return { years: U3(n2[1]), months: U3(n2[2]), days: U3(n2[3]), hours: U3(n2[4]), minutes: U3(n2[5]), seconds: U3(n2[6]) };
}
function U3(e3) {
  if (!e3)
    return 0;
  const t3 = /(?:\d+(?:.|,)\d+|\d+)/, n2 = e3.match(t3);
  if (!n2)
    return 0;
  const r3 = n2[0].replace(",", ".");
  return Number(r3);
}
function V(e3) {
  return e3.toISOString().replace(/\.[0-9]{3}/, "");
}
var O2 = /* @__PURE__ */ new Set([102100, 3857, 102113, 900913]);
var _2 = /* @__PURE__ */ new Set([3395, 54004]);
function B2(e3, t3) {
  let r3 = e3.wkid;
  return t(t3) ? r3 : (null != r3 && t3.includes(r3) || !e3.latestWkid || (r3 = e3.latestWkid), null != r3 && O2.has(r3) ? t3.find((e4) => O2.has(e4)) || t3.find((e4) => _2.has(e4)) || 102100 : r3);
}

// node_modules/@arcgis/core/layers/WMSLayer.js
var V2 = new s4({ bmp: "image/bmp", gif: "image/gif", jpg: "image/jpeg", png: "image/png", svg: "image/svg+xml" }, { ignoreUnknown: false });
function Q(e3) {
  return "text/html" === e3;
}
function z(e3) {
  return "text/plain" === e3;
}
var K = class extends n(a3(p2(t2(c3(_(O(b2))))))) {
  constructor(...e3) {
    super(...e3), this.allSublayers = new l2({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => e4.sublayers }), this.customParameters = null, this.customLayerParameters = null, this.copyright = null, this.description = null, this.dimensions = null, this.fullExtent = null, this.fullExtents = null, this.featureInfoFormats = null, this.featureInfoUrl = null, this.fetchFeatureInfoFunction = null, this.imageFormat = null, this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.legendEnabled = true, this.mapUrl = null, this.isReference = null, this.operationalLayerType = "WMS", this.spatialReference = null, this.spatialReferences = null, this.sublayers = null, this.type = "wms", this.url = null, this.version = null, this.addHandles([a2(() => this.sublayers, "after-add", ({ item: e4 }) => {
      e4.parent = e4.layer = this;
    }, U), a2(() => this.sublayers, "after-remove", ({ item: e4 }) => {
      e4.layer = e4.parent = null;
    }, U), l(() => this.sublayers, (e4, t3) => {
      if (t3)
        for (const r3 of t3)
          r3.layer = r3.parent = null;
      if (e4)
        for (const r3 of e4)
          r3.parent = r3.layer = this;
    }, U)]);
  }
  normalizeCtorArgs(e3, t3) {
    return "string" == typeof e3 ? { url: e3, ...t3 } : e3;
  }
  load(e3) {
    const t3 = r(e3) ? e3.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WMS"] }, e3).catch(w).then(() => this._fetchService(t3))), Promise.resolve(this);
  }
  readFullExtentFromItemOrMap(e3, t3) {
    const r3 = t3.extent;
    return r3 ? new w2({ xmin: r3[0][0], ymin: r3[0][1], xmax: r3[1][0], ymax: r3[1][1] }) : null;
  }
  writeFullExtent(e3, t3) {
    t3.extent = [[e3.xmin, e3.ymin], [e3.xmax, e3.ymax]];
  }
  get featureInfoFormat() {
    return t(this.featureInfoFormats) ? null : this.featureInfoFormats.find(Q) ?? this.featureInfoFormats.find(z) ?? null;
  }
  set featureInfoFormat(e3) {
    r(e3) ? (Q(e3) || z(e3)) && this._override("featureInfoFormat", e3) : (this.revert("featureInfoFormat", "service"), this._clearOverride("featureInfoFormat"));
  }
  readImageFormat(e3, t3) {
    const r3 = t3.supportedImageFormatTypes;
    return r3 && r3.includes("image/png") ? "image/png" : r3 && r3[0];
  }
  readSpatialReferenceFromItemOrDocument(e3, t3) {
    return new f(t3.spatialReferences[0]);
  }
  writeSpatialReferences(e3, t3) {
    var _a;
    const r3 = (_a = this.spatialReference) == null ? void 0 : _a.wkid;
    e3 && r3 ? (t3.spatialReferences = e3.filter((e4) => e4 !== r3), t3.spatialReferences.unshift(r3)) : t3.spatialReferences = e3;
  }
  readSublayersFromItemOrMap(e3, t3, r3) {
    return Y(t3.layers, r3, t3.visibleLayers);
  }
  readSublayers(e3, t3, r3) {
    return Y(t3.layers, r3);
  }
  writeSublayers(e3, t3, r3, o3) {
    var _a, _b;
    t3.layers = [];
    const s6 = /* @__PURE__ */ new Map(), i2 = e3.flatten(({ sublayers: e4 }) => e4 ?? []);
    for (const a5 of i2)
      if ("number" == typeof ((_a = a5.parent) == null ? void 0 : _a.id)) {
        const e4 = s6.get(a5.parent.id);
        null != e4 ? e4.push(a5.id) : s6.set(a5.parent.id, [a5.id]);
      }
    for (const a5 of i2) {
      const e4 = { sublayer: a5, ...o3 }, r4 = a5.write({ parentLayerId: "number" == typeof ((_b = a5.parent) == null ? void 0 : _b.id) ? a5.parent.id : -1 }, e4);
      if (s6.has(a5.id) && (r4.sublayerIds = s6.get(a5.id)), !a5.sublayers && a5.name) {
        const r5 = a5.write({}, e4);
        delete r5.id, t3.layers.push(r5);
      }
    }
    t3.visibleLayers = i2.filter(({ visible: e4, sublayers: t4 }) => e4 && !t4).map(({ name: e4 }) => e4).toArray();
  }
  createExportImageParameters(e3, t3, r3, o3) {
    const s6 = (o3 == null ? void 0 : o3.pixelRatio) ?? 1, i2 = i({ extent: e3, width: t3 }) * s6, a5 = new l3({ layer: this, scale: i2 }), { xmin: n2, ymin: l5, xmax: p4, ymax: m3, spatialReference: u2 } = e3, c6 = B2(u2, this.spatialReferences), f4 = "1.3.0" === this.version && o2(c6) ? `${l5},${n2},${m3},${p4}` : `${n2},${l5},${p4},${m3}`, y3 = a5.toJSON();
    return { bbox: f4, ["1.3.0" === this.version ? "crs" : "srs"]: null == c6 || isNaN(c6) ? void 0 : "EPSG:" + c6, ...y3 };
  }
  async fetchImage(e3, t3, r3, o3) {
    var _a, _b;
    const i2 = this.mapUrl, a5 = this.createExportImageParameters(e3, t3, r3, o3);
    if (!a5.layers) {
      const e4 = document.createElement("canvas");
      return e4.width = t3, e4.height = r3, e4;
    }
    const n2 = (_a = o3 == null ? void 0 : o3.timeExtent) == null ? void 0 : _a.start, l5 = (_b = o3 == null ? void 0 : o3.timeExtent) == null ? void 0 : _b.end, m3 = r(n2) && r(l5) ? n2.getTime() === l5.getTime() ? V(n2) : `${V(n2)}/${V(l5)}` : void 0, u2 = { responseType: "image", query: this._mixCustomParameters({ width: t3, height: r3, ...a5, time: m3, ...this.refreshParameters }), signal: o3 == null ? void 0 : o3.signal };
    return U2(i2 ?? "", u2).then((e4) => e4.data);
  }
  async fetchImageBitmap(e3, t3, r3, o3) {
    var _a, _b;
    const i2 = this.mapUrl ?? "", a5 = this.createExportImageParameters(e3, t3, r3, o3);
    if (!a5.layers) {
      const e4 = document.createElement("canvas");
      return e4.width = t3, e4.height = r3, e4;
    }
    const n2 = (_a = o3 == null ? void 0 : o3.timeExtent) == null ? void 0 : _a.start, l5 = (_b = o3 == null ? void 0 : o3.timeExtent) == null ? void 0 : _b.end, m3 = r(n2) && r(l5) ? n2.getTime() === l5.getTime() ? V(n2) : `${V(n2)}/${V(l5)}` : void 0, u2 = { responseType: "blob", query: this._mixCustomParameters({ width: t3, height: r3, ...a5, time: m3, ...this.refreshParameters }), signal: o3 == null ? void 0 : o3.signal }, { data: c6 } = await U2(i2, u2);
    return e2(c6, i2);
  }
  fetchFeatureInfo(e3, t3, r3, o3, s6) {
    const i2 = i({ extent: e3, width: t3 }), a5 = new l3({ layer: this, scale: i2 }), n2 = u(a5.visibleSublayers);
    if (t(this.featureInfoUrl) || t(n2))
      return Promise.resolve([]);
    if (t(this.fetchFeatureInfoFunction) && t(this.featureInfoFormat))
      return Promise.resolve([]);
    const l5 = "1.3.0" === this.version ? { I: o3, J: s6 } : { x: o3, y: s6 }, u2 = { query_layers: n2, request: "GetFeatureInfo", info_format: this.featureInfoFormat, feature_count: 25, width: t3, height: r3, ...l5 }, c6 = { ...this.createExportImageParameters(e3, t3, r3), ...u2 }, f4 = this._mixCustomParameters(c6);
    return r(this.fetchFeatureInfoFunction) ? this.fetchFeatureInfoFunction(f4) : this._defaultFetchFeatureInfoFunction(Et(this.featureInfoUrl, f4));
  }
  findSublayerById(e3) {
    return this.allSublayers.find((t3) => t3.id === e3);
  }
  findSublayerByName(e3) {
    return this.allSublayers.find((t3) => t3.name === e3);
  }
  serviceSupportsSpatialReference(e3) {
    return I(this.url) || null != this.spatialReferences && this.spatialReferences.some((t3) => {
      const r3 = 900913 === t3 ? f.WebMercator : new f({ wkid: t3 });
      return E(r3, e3);
    });
  }
  _defaultFetchFeatureInfoFunction(e3) {
    const t3 = document.createElement("iframe");
    t3.src = B(e3), t3.style.border = "none", t3.style.margin = "0", t3.style.width = "100%", t3.setAttribute("sandbox", "");
    const s6 = new k({ title: this.title, content: t3 }), i2 = new g({ sourceLayer: this, popupTemplate: s6 });
    return Promise.resolve([i2]);
  }
  async _fetchService(e3) {
    if (!this.resourceInfo) {
      const { path: t3, query: r3 } = this.parsedUrl ?? {};
      (r3 == null ? void 0 : r3.service) && (r3.SERVICE = r3.service, delete r3.service), (r3 == null ? void 0 : r3.request) && (r3.REQUEST = r3.request, delete r3.request);
      const { data: o3 } = await U2(t3 ?? "", { query: { SERVICE: "WMS", REQUEST: "GetCapabilities", ...r3, ...this.customParameters }, responseType: "xml", signal: e3 });
      this.resourceInfo = l4(o3);
    }
    if (this.parsedUrl) {
      const e4 = new $(this.parsedUrl.path), { httpsDomains: r3 } = s.request;
      "https" !== e4.scheme || e4.port && "443" !== e4.port || !e4.host || r3.includes(e4.host) || r3.push(e4.host);
    }
    this.read(this.resourceInfo, { origin: "service" });
  }
  _mixCustomParameters(e3) {
    if (!this.customLayerParameters && !this.customParameters)
      return e3;
    const t3 = { ...this.customParameters, ...this.customLayerParameters };
    for (const r3 in t3)
      e3[r3.toLowerCase()] = t3[r3];
    return e3;
  }
};
function X(e3, t3) {
  return e3.some((e4) => {
    for (const r3 in e4)
      if (c(e4, r3, null, t3))
        return true;
    return false;
  });
}
function Y(e3, t3, r3) {
  e3 = e3 ?? [];
  const o3 = /* @__PURE__ */ new Map();
  e3.every((e4) => null == e4.id) && (e3 = p(e3)).forEach((e4, t4) => e4.id = t4);
  for (const i2 of e3) {
    const e4 = new m();
    e4.read(i2, t3), r3 && !r3.includes(e4.name) && (e4.visible = false), o3.set(e4.id, e4);
  }
  const s6 = [];
  for (const a5 of e3) {
    const e4 = null != a5.id ? o3.get(a5.id) : null;
    if (e4)
      if (null != a5.parentLayerId && a5.parentLayerId >= 0) {
        const t4 = o3.get(a5.parentLayerId);
        if (!t4)
          continue;
        t4.sublayers || (t4.sublayers = new j()), t4.sublayers.push(e4);
      } else
        s6.push(e4);
  }
  return s6;
}
e([y({ readOnly: true })], K.prototype, "allSublayers", void 0), e([y({ json: { type: Object, write: true } })], K.prototype, "customParameters", void 0), e([y({ json: { type: Object, write: true } })], K.prototype, "customLayerParameters", void 0), e([y({ type: String, json: { write: true } })], K.prototype, "copyright", void 0), e([y()], K.prototype, "description", void 0), e([y({ readOnly: true })], K.prototype, "dimensions", void 0), e([y({ json: { type: [[Number]], read: { source: "extent" }, write: { target: "extent" }, origins: { "web-document": { write: { ignoreOrigin: true } }, "portal-item": { write: { ignoreOrigin: true } } } } })], K.prototype, "fullExtent", void 0), e([o(["web-document", "portal-item"], "fullExtent", ["extent"])], K.prototype, "readFullExtentFromItemOrMap", null), e([r2(["web-document", "portal-item"], "fullExtent", { extent: { type: [[Number]] } })], K.prototype, "writeFullExtent", null), e([y()], K.prototype, "fullExtents", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], K.prototype, "featureInfoFormat", null), e([y({ type: [String], readOnly: true })], K.prototype, "featureInfoFormats", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], K.prototype, "featureInfoUrl", void 0), e([y()], K.prototype, "fetchFeatureInfoFunction", void 0), e([y({ type: String, json: { origins: { "web-document": { default: "image/png", type: V2.jsonValues, read: { reader: V2.read, source: "format" }, write: { writer: V2.write, target: "format" } } } } })], K.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], K.prototype, "readImageFormat", null), e([y({ type: Number, json: { read: { source: "maxHeight" }, write: { target: "maxHeight" } } })], K.prototype, "imageMaxHeight", void 0), e([y({ type: Number, json: { read: { source: "maxWidth" }, write: { target: "maxWidth" } } })], K.prototype, "imageMaxWidth", void 0), e([y()], K.prototype, "imageTransparency", void 0), e([y(c2)], K.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], K.prototype, "listMode", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], K.prototype, "mapUrl", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], K.prototype, "isReference", void 0), e([y({ type: ["WMS"] })], K.prototype, "operationalLayerType", void 0), e([y()], K.prototype, "resourceInfo", void 0), e([y({ type: f, json: { origins: { service: { read: { source: "extent.spatialReference" } } }, write: false } })], K.prototype, "spatialReference", void 0), e([o(["web-document", "portal-item"], "spatialReference", ["spatialReferences"])], K.prototype, "readSpatialReferenceFromItemOrDocument", null), e([y({ type: [T], json: { read: false, origins: { service: { read: true }, "web-document": { read: false, write: { ignoreOrigin: true } }, "portal-item": { read: false, write: { ignoreOrigin: true } } } } })], K.prototype, "spatialReferences", void 0), e([r2(["web-document", "portal-item"], "spatialReferences")], K.prototype, "writeSpatialReferences", null), e([y({ type: j.ofType(m), json: { write: { target: "layers", overridePolicy(e3, t3, r3) {
  if (X(this.allSublayers, r3))
    return { ignoreOrigin: true };
} } } })], K.prototype, "sublayers", void 0), e([o(["web-document", "portal-item"], "sublayers", ["layers", "visibleLayers"])], K.prototype, "readSublayersFromItemOrMap", null), e([o("service", "sublayers", ["layers"])], K.prototype, "readSublayers", null), e([r2("sublayers", { layers: { type: [m] }, visibleLayers: { type: [String] } })], K.prototype, "writeSublayers", null), e([y({ json: { read: false }, readOnly: true, value: "wms" })], K.prototype, "type", void 0), e([y(f2)], K.prototype, "url", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], K.prototype, "version", void 0), K = e([a("esri.layers.WMSLayer")], K);
var Z = K;
export {
  Z as default
};
//# sourceMappingURL=WMSLayer-67CAQ6SI.js.map
