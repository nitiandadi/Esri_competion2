import {
  t as t10
} from "./chunk-GPU57X54.js";
import {
  A as A2,
  S as S4,
  a as a7,
  c as c9,
  l as l4
} from "./chunk-UR7T2PHF.js";
import {
  t as t9
} from "./chunk-SKYLCTPX.js";
import {
  v as v2
} from "./chunk-PFRYOO3K.js";
import {
  X,
  i as i7
} from "./chunk-KUIKC7FX.js";
import {
  R as R2
} from "./chunk-QQ6A46ZS.js";
import {
  E as E5,
  N,
  a2 as a8,
  c as c8,
  d,
  d2,
  e as e14,
  e5 as e16,
  f as f5,
  f2 as f6,
  h as h2,
  h2 as h3,
  h3 as h4,
  o3 as o12,
  o4 as o13,
  r as r10,
  r3 as r12,
  t2 as t11,
  t3 as t12,
  x2 as x4
} from "./chunk-CM4OKJSS.js";
import "./chunk-S3GGRNUO.js";
import {
  W,
  _ as _3,
  a as a6,
  h as h5,
  o as o11
} from "./chunk-7FRYP2QO.js";
import {
  _ as _2,
  n as n10,
  x as x3
} from "./chunk-23AC3IC7.js";
import {
  E as E4
} from "./chunk-GKD7ZY5C.js";
import {
  s as s6
} from "./chunk-2BQRI7XV.js";
import {
  e as e15
} from "./chunk-MK7ZVUQO.js";
import "./chunk-FRG7JNMR.js";
import {
  a as a5,
  f as f4,
  o as o9,
  o2 as o10
} from "./chunk-AKCTBZVO.js";
import {
  n as n9,
  o as o8
} from "./chunk-ITU2WGYR.js";
import {
  s as s5
} from "./chunk-IUNR7SKI.js";
import {
  R,
  s as s4
} from "./chunk-F2PDDQNV.js";
import "./chunk-BWR2PS44.js";
import {
  n as n8
} from "./chunk-UHA44FM7.js";
import {
  e as e11,
  f2 as f3,
  i as i6,
  m,
  n2 as n5,
  n3 as n6,
  o as o5,
  o2 as o6,
  o3 as o7,
  r as r7,
  r2 as r8,
  t as t5
} from "./chunk-75ZJVZDW.js";
import {
  t as t7
} from "./chunk-5NPD3OIH.js";
import {
  D as D2,
  a as a4,
  c as c7,
  e as e12,
  n as n7,
  t as t6,
  u as u4
} from "./chunk-L5V3AZEL.js";
import {
  T
} from "./chunk-6THMFCX4.js";
import "./chunk-IEBU4QQL.js";
import {
  O as O4
} from "./chunk-CPQSD22U.js";
import "./chunk-MNYWPBDW.js";
import {
  D,
  E as E3,
  G as G2,
  I,
  L as L2,
  M,
  O as O3,
  P as P2,
  V,
  Y,
  u as u3
} from "./chunk-4M3AMTD4.js";
import {
  n as n3,
  o as o3
} from "./chunk-MJIX5E4D.js";
import {
  e2 as e9,
  f as f2,
  r as r6,
  t as t4
} from "./chunk-H5ZFTV2L.js";
import {
  S as S3
} from "./chunk-KKFB57KI.js";
import {
  e as e8
} from "./chunk-XSQFM27N.js";
import {
  e as e7,
  o as o4,
  r as r5
} from "./chunk-R5TZJ3KJ.js";
import {
  e as e6
} from "./chunk-A7PY25IH.js";
import {
  E as E2,
  L,
  O as O2,
  c as c5,
  i as i3,
  u as u2,
  x as x2
} from "./chunk-T2D6QF55.js";
import {
  c as c6,
  i as i5
} from "./chunk-DUEDINK5.js";
import {
  e as e13,
  t as t8
} from "./chunk-MZ267CZB.js";
import {
  r as r11
} from "./chunk-3DBV4JBL.js";
import {
  l as l3
} from "./chunk-KZZBROE4.js";
import "./chunk-CJ2YD4VU.js";
import {
  a as a3
} from "./chunk-26N6FACI.js";
import {
  g as g2,
  i as i4
} from "./chunk-PRXITTX7.js";
import "./chunk-JGIZLXNQ.js";
import {
  e as e10
} from "./chunk-D4SYZIFV.js";
import {
  r as r9
} from "./chunk-5OPLKRAS.js";
import "./chunk-ST7DNJJS.js";
import {
  G,
  H,
  h
} from "./chunk-REIXEATJ.js";
import {
  b
} from "./chunk-ZSE573CF.js";
import {
  a as a2
} from "./chunk-6YBCJ6DZ.js";
import {
  n as n4
} from "./chunk-CCAF47ZU.js";
import {
  r as r4
} from "./chunk-FGXNBIU5.js";
import {
  S as S2,
  c as c3
} from "./chunk-XF2RZJFH.js";
import "./chunk-HRFBINZY.js";
import {
  c as c2,
  i as i2
} from "./chunk-JT54I3AY.js";
import "./chunk-DC3QI5ZE.js";
import {
  A,
  E,
  O,
  P,
  S,
  U,
  _,
  e as e4,
  e2 as e5,
  g,
  i,
  n as n2,
  o as o2,
  p as p2,
  r as r2,
  r2 as r3,
  s as s3,
  t as t3,
  u2 as u,
  z
} from "./chunk-TNTTCGVB.js";
import "./chunk-EGHLQERQ.js";
import {
  U as U2,
  c as c4
} from "./chunk-2HZTCGYV.js";
import "./chunk-Z3YY72G4.js";
import {
  Z,
  tt
} from "./chunk-M3KO43BW.js";
import {
  n
} from "./chunk-TKWZACTO.js";
import "./chunk-XFNXUG2G.js";
import "./chunk-RDTHWDIE.js";
import "./chunk-DOVXDFWE.js";
import "./chunk-M4BAPJ3L.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-KGIB6IYW.js";
import {
  e as e2,
  e4 as e3,
  l as l2
} from "./chunk-3PPVODAA.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import {
  a,
  f,
  v,
  w
} from "./chunk-WTKFW2TD.js";
import {
  s,
  s2
} from "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import {
  has
} from "./chunk-PR6SXADK.js";
import {
  o,
  t2,
  y
} from "./chunk-MGJMBJDY.js";
import {
  c,
  e,
  l,
  p,
  r,
  t,
  x
} from "./chunk-WHB7G7RI.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/3d/glTF/internal/TextureTransformUtils.js
function c10(c17) {
  if (t(c17))
    return null;
  const m6 = r(c17.offset) ? c17.offset : c6, e18 = r(c17.rotation) ? c17.rotation : 0, i14 = r(c17.scale) ? c17.scale : i5, h9 = t8(1, 0, 0, 0, 1, 0, m6[0], m6[1], 1), u10 = t8(Math.cos(e18), -Math.sin(e18), 0, Math.sin(e18), Math.cos(e18), 0, 0, 0, 1), p5 = t8(i14[0], 0, 0, 0, i14[1], 0, 0, 0, 1), j4 = e13();
  return i4(j4, u10, p5), i4(j4, h9, j4), j4;
}

// node_modules/@arcgis/core/views/3d/layers/graphics/ProcessedObjectResource.js
var s7 = class {
  constructor() {
    this.geometries = new Array(), this.materials = new Array(), this.textures = new Array();
  }
};
var t13 = class {
  constructor(t17, e18, r15) {
    this.name = t17, this.lodThreshold = e18, this.pivotOffset = r15, this.stageResources = new s7(), this.numberOfVertices = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/AttributeArray.js
function t14(t17) {
  if (t17.length < y)
    return Array.from(t17);
  if (Array.isArray(t17))
    return Float64Array.from(t17);
  switch (t17.BYTES_PER_ELEMENT) {
    case 1:
      return Uint8Array.from(t17);
    case 2:
      return Uint16Array.from(t17);
    case 4:
      return Float32Array.from(t17);
    default:
      return Float64Array.from(t17);
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BoundingInfo.js
var o14 = class {
  constructor(i14, e18, o18, c17) {
    this.primitiveIndices = i14, this._numIndexPerPrimitive = e18, this.indices = o18, this.position = c17, this._children = void 0, s6(i14.length >= 1), s6(o18.length % this._numIndexPerPrimitive == 0), s6(o18.length >= i14.length * this._numIndexPerPrimitive), s6(3 === c17.size || 4 === c17.size);
    const { data: d7, size: l9 } = c17, m6 = i14.length;
    let u10 = l9 * o18[this._numIndexPerPrimitive * i14[0]];
    a9.clear(), a9.push(u10);
    const f10 = r2(d7[u10], d7[u10 + 1], d7[u10 + 2]), x8 = t3(f10);
    for (let t17 = 0; t17 < m6; ++t17) {
      const e19 = this._numIndexPerPrimitive * i14[t17];
      for (let i15 = 0; i15 < this._numIndexPerPrimitive; ++i15) {
        u10 = l9 * o18[e19 + i15], a9.push(u10);
        let t18 = d7[u10];
        f10[0] = Math.min(t18, f10[0]), x8[0] = Math.max(t18, x8[0]), t18 = d7[u10 + 1], f10[1] = Math.min(t18, f10[1]), x8[1] = Math.max(t18, x8[1]), t18 = d7[u10 + 2], f10[2] = Math.min(t18, f10[2]), x8[2] = Math.max(t18, x8[2]);
      }
    }
    this.bbMin = f10, this.bbMax = x8;
    const P6 = A(n2(), this.bbMin, this.bbMax, 0.5);
    this.radius = 0.5 * Math.max(Math.max(x8[0] - f10[0], x8[1] - f10[1]), x8[2] - f10[2]);
    let v6 = this.radius * this.radius;
    for (let t17 = 0; t17 < a9.length; ++t17) {
      u10 = a9.getItemAt(t17);
      const i15 = d7[u10] - P6[0], e19 = d7[u10 + 1] - P6[1], s12 = d7[u10 + 2] - P6[2], n13 = i15 * i15 + e19 * e19 + s12 * s12;
      if (n13 <= v6)
        continue;
      const r15 = Math.sqrt(n13), h9 = 0.5 * (r15 - this.radius);
      this.radius = this.radius + h9, v6 = this.radius * this.radius;
      const o19 = h9 / r15;
      P6[0] += i15 * o19, P6[1] += e19 * o19, P6[2] += s12 * o19;
    }
    this.center = P6, a9.clear();
  }
  getChildren() {
    if (this._children || p2(this.bbMin, this.bbMax) <= 1)
      return this._children;
    const i14 = A(n2(), this.bbMin, this.bbMax, 0.5), s12 = this.primitiveIndices.length, n13 = new Uint8Array(s12), h9 = new Array(8);
    for (let t17 = 0; t17 < 8; ++t17)
      h9[t17] = 0;
    const { data: a12, size: c17 } = this.position;
    for (let t17 = 0; t17 < s12; ++t17) {
      let e18 = 0;
      const s13 = this._numIndexPerPrimitive * this.primitiveIndices[t17];
      let r15 = c17 * this.indices[s13], o18 = a12[r15], d8 = a12[r15 + 1], l10 = a12[r15 + 2];
      for (let i15 = 1; i15 < this._numIndexPerPrimitive; ++i15) {
        r15 = c17 * this.indices[s13 + i15];
        const t18 = a12[r15], e19 = a12[r15 + 1], n14 = a12[r15 + 2];
        t18 < o18 && (o18 = t18), e19 < d8 && (d8 = e19), n14 < l10 && (l10 = n14);
      }
      o18 < i14[0] && (e18 |= 1), d8 < i14[1] && (e18 |= 2), l10 < i14[2] && (e18 |= 4), n13[t17] = e18, ++h9[e18];
    }
    let d7 = 0;
    for (let t17 = 0; t17 < 8; ++t17)
      h9[t17] > 0 && ++d7;
    if (d7 < 2)
      return;
    const l9 = new Array(8);
    for (let t17 = 0; t17 < 8; ++t17)
      l9[t17] = h9[t17] > 0 ? new Uint32Array(h9[t17]) : void 0;
    for (let t17 = 0; t17 < 8; ++t17)
      h9[t17] = 0;
    for (let t17 = 0; t17 < s12; ++t17) {
      const i15 = n13[t17];
      l9[i15][h9[i15]++] = this.primitiveIndices[t17];
    }
    this._children = new Array();
    for (let t17 = 0; t17 < 8; ++t17)
      void 0 !== l9[t17] && this._children.push(new o14(l9[t17], this._numIndexPerPrimitive, this.indices, this.position));
    return this._children;
  }
  static prune() {
    a9.prune();
  }
};
var a9 = new l2({ deallocator: null });

// node_modules/@arcgis/core/geometry/support/triangle.js
function j(t17) {
  return t17 ? { p0: t3(t17.p0), p1: t3(t17.p1), p2: t3(t17.p2) } : { p0: n2(), p1: n2(), p2: n2() };
}
function w2(t17, n13, o18) {
  return e5(O5, n13, t17), e5(V2, o18, t17), s3(_(O5, O5, V2)) / 2;
}
var M3 = new s4(v2);
var x5 = new s4(() => j());
var O5 = n2();
var V2 = n2();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/geometryDataUtils.js
function c12(r15, o18, c17) {
  if (!r15 || !o18)
    return false;
  const { size: a12, data: f10 } = r15;
  o2(c17, 0, 0, 0), o2(g3, 0, 0, 0);
  let m6 = 0, h9 = 0;
  for (let p5 = 0; p5 < o18.length - 2; p5 += 3) {
    const r16 = o18[p5 + 0] * a12, j4 = o18[p5 + 1] * a12, d7 = o18[p5 + 2] * a12;
    o2(i8, f10[r16 + 0], f10[r16 + 1], f10[r16 + 2]), o2(u5, f10[j4 + 0], f10[j4 + 1], f10[j4 + 2]), o2(l5, f10[d7 + 0], f10[d7 + 1], f10[d7 + 2]);
    const z4 = w2(i8, u5, l5);
    z4 ? (u(i8, i8, u5), u(i8, i8, l5), g(i8, i8, 1 / 3 * z4), u(c17, c17, i8), m6 += z4) : (u(g3, g3, i8), u(g3, g3, u5), u(g3, g3, l5), h9 += 3);
  }
  return (0 !== h9 || 0 !== m6) && (0 !== m6 ? (g(c17, c17, 1 / m6), true) : 0 !== h9 && (g(c17, g3, 1 / h9), true));
}
function a10(n13, r15, o18) {
  if (!n13 || !r15)
    return false;
  const { size: s12, data: c17 } = n13;
  o2(o18, 0, 0, 0);
  let a12 = -1, f10 = 0;
  for (let t17 = 0; t17 < r15.length; t17++) {
    const n14 = r15[t17] * s12;
    a12 !== n14 && (o18[0] += c17[n14 + 0], o18[1] += c17[n14 + 1], o18[2] += c17[n14 + 2], f10++), a12 = n14;
  }
  return f10 > 1 && g(o18, o18, 1 / f10), f10 > 0;
}
function f7(o18, s12, c17, a12) {
  if (!o18)
    return false;
  o2(a12, 0, 0, 0), o2(g3, 0, 0, 0);
  let f10 = 0, l9 = 0;
  const { size: m6, data: h9 } = o18, p5 = s12 ? s12.length - 1 : h9.length / m6 - 1, j4 = p5 + (c17 ? 2 : 0);
  for (let t17 = 0; t17 < j4; t17 += 2) {
    const o19 = t17 < p5 ? t17 : p5, c18 = t17 < p5 ? t17 + 1 : 0, j5 = (s12 ? s12[o19] : o19) * m6, d7 = (s12 ? s12[c18] : c18) * m6;
    i8[0] = h9[j5], i8[1] = h9[j5 + 1], i8[2] = h9[j5 + 2], u5[0] = h9[d7], u5[1] = h9[d7 + 1], u5[2] = h9[d7 + 2], g(i8, u(i8, i8, u5), 0.5);
    const z4 = U(i8, u5);
    z4 > 0 ? (u(a12, a12, g(i8, i8, z4)), f10 += z4) : 0 === f10 && (u(g3, g3, i8), l9++);
  }
  return 0 !== f10 ? (g(a12, a12, 1 / f10), true) : 0 !== l9 && (g(a12, g3, 1 / l9), true);
}
var i8 = n2();
var u5 = n2();
var l5 = n2();
var g3 = n2();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Object3DStateID.js
var r13 = class {
  constructor(r15) {
    this.channel = r15, this.id = e3();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/utils.js
function n11(e18, r15) {
  return t(e18) && (e18 = []), e18.push(r15), e18;
}
function o15(e18, r15) {
  if (t(e18))
    return null;
  const n13 = e18.filter((t17) => t17 !== r15);
  return 0 === n13.length ? null : n13;
}
var i9 = n2();
var u6 = new Float32Array(6);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Geometry.js
var v3 = class extends r10 {
  constructor(t17, e18, i14 = [], s12 = null, n13 = e14.Mesh, r15 = null, o18 = -1) {
    super(), this.material = t17, this.mapPositions = s12, this.type = n13, this.objectAndLayerIdColor = r15, this.edgeIndicesLength = o18, this.visible = true, this._vertexAttributes = /* @__PURE__ */ new Map(), this._indices = /* @__PURE__ */ new Map(), this._boundingInfo = null;
    for (const [h9, a12] of e18)
      a12 && this._vertexAttributes.set(h9, { ...a12 });
    if (null == i14 || 0 === i14.length) {
      const t18 = A3(this._vertexAttributes), e19 = o3(t18);
      this.edgeIndicesLength = this.edgeIndicesLength < 0 ? t18 : this.edgeIndicesLength;
      for (const i15 of this._vertexAttributes.keys())
        this._indices.set(i15, e19);
    } else
      for (const [h9, a12] of i14)
        a12 && (this._indices.set(h9, n3(a12)), h9 === O4.POSITION && (this.edgeIndicesLength = this.edgeIndicesLength < 0 ? this._indices.get(h9).length : this.edgeIndicesLength));
  }
  instantiate(t17 = {}) {
    const e18 = new v3(t17.material || this.material, [], void 0, this.mapPositions, this.type, this.objectAndLayerIdColor, this.edgeIndicesLength);
    return this._vertexAttributes.forEach((t18, i14) => {
      t18.exclusive = false, e18._vertexAttributes.set(i14, t18);
    }), this._indices.forEach((t18, i14) => e18._indices.set(i14, t18)), e18._boundingInfo = this._boundingInfo, e18.transformation = t17.transformation || this.transformation, e18;
  }
  get vertexAttributes() {
    return this._vertexAttributes;
  }
  getMutableAttribute(t17) {
    let e18 = this._vertexAttributes.get(t17);
    return e18 && !e18.exclusive && (e18 = { ...e18, exclusive: true, data: t14(e18.data) }, this._vertexAttributes.set(t17, e18)), e18;
  }
  get indices() {
    return this._indices;
  }
  get indexCount() {
    const t17 = this._indices.values().next().value;
    return t17 ? t17.length : 0;
  }
  get faceCount() {
    return this.indexCount / 3;
  }
  get boundingInfo() {
    return t(this._boundingInfo) && (this._boundingInfo = this._calculateBoundingInfo()), this._boundingInfo;
  }
  computeAttachmentOrigin(t17) {
    return !!(this.type === e14.Mesh ? this._computeAttachmentOriginTriangles(t17) : this.type === e14.Line ? this._computeAttachmentOriginLines(t17) : this._computeAttachmentOriginPoints(t17)) && (r(this._transformation) && O(t17, t17, this._transformation), true);
  }
  _computeAttachmentOriginTriangles(t17) {
    const e18 = this.indices.get(O4.POSITION), i14 = this.vertexAttributes.get(O4.POSITION);
    return c12(i14, e18, t17);
  }
  _computeAttachmentOriginLines(t17) {
    const e18 = this.vertexAttributes.get(O4.POSITION), i14 = this.indices.get(O4.POSITION);
    return f7(e18, i14, i14 && x6(this.material.parameters, e18, i14), t17);
  }
  _computeAttachmentOriginPoints(t17) {
    const e18 = this.indices.get(O4.POSITION), i14 = this.vertexAttributes.get(O4.POSITION);
    return a10(i14, e18, t17);
  }
  invalidateBoundingInfo() {
    this._boundingInfo = null;
  }
  _calculateBoundingInfo() {
    const t17 = this.indices.get(O4.POSITION), e18 = this.vertexAttributes.get(O4.POSITION);
    if (!t17 || 0 === t17.length || !e18)
      return null;
    const i14 = this.type === e14.Mesh ? 3 : 1;
    s6(t17.length % i14 == 0, "Indexing error: " + t17.length + " not divisible by " + i14);
    const s12 = o3(t17.length / i14);
    return new o14(s12, i14, t17, e18);
  }
  get transformation() {
    return l(this._transformation, o4);
  }
  set transformation(t17) {
    this._transformation = t17 && t17 !== o4 ? r5(t17) : null;
  }
  get shaderTransformation() {
    return r(this._shaderTransformer) ? this._shaderTransformer(this.transformation) : this.transformation;
  }
  get shaderTransformer() {
    return this._shaderTransformer;
  }
  set shaderTransformer(t17) {
    this._shaderTransformer = t17;
  }
  get hasVolatileTransformation() {
    return r(this._shaderTransformer);
  }
  addHighlight() {
    const t17 = new r13(t6.Highlight);
    return this.highlights = n11(this.highlights, t17), t17;
  }
  removeHighlight(t17) {
    this.highlights = o15(this.highlights, t17);
  }
};
function A3(t17) {
  const e18 = t17.values().next().value;
  return null == e18 ? 0 : e18.data.length / e18.size;
}
function x6(t17, e18, i14) {
  return !(!("isClosed" in t17) || !t17.isClosed) && (i14 ? i14.length > 2 : e18.data.length > 6);
}

// node_modules/@arcgis/core/chunks/TextureOnly.glsl.js
var i10 = class extends n9 {
  constructor() {
    super(...arguments), this.color = r4(1, 1, 1, 1);
  }
};
function l6() {
  const e18 = new o10();
  return e18.include(o9), e18.fragment.uniforms.add([new f4("tex", (e19) => e19.texture), new e15("uColor", (e19) => e19.color)]), e18.fragment.code.add(o8`void main() {
vec4 texColor = texture2D(tex, uv);
gl_FragColor = texColor * uColor;
}`), e18;
}
var d3 = Object.freeze(Object.defineProperty({ __proto__: null, TextureOnlyPassParameters: i10, build: l6 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/libs/basisu/BasisU.js
function s8() {
  if (t(i11)) {
    const t17 = (t18) => a2(`esri/libs/basisu/${t18}`);
    i11 = import("./basis_transcoder-2OGEHPDC.js").then((e18) => e18.b).then(({ default: e18 }) => e18({ locateFile: t17 }).then((e19) => (e19.initializeBasis(), delete e19.then, e19)));
  }
  return i11;
}
var i11;

// node_modules/@arcgis/core/libs/basisu/TextureFormat.js
var _4;
!function(_8) {
  _8[_8.ETC1_RGB = 0] = "ETC1_RGB", _8[_8.ETC2_RGBA = 1] = "ETC2_RGBA", _8[_8.BC1_RGB = 2] = "BC1_RGB", _8[_8.BC3_RGBA = 3] = "BC3_RGBA", _8[_8.BC4_R = 4] = "BC4_R", _8[_8.BC5_RG = 5] = "BC5_RG", _8[_8.BC7_M6_RGB = 6] = "BC7_M6_RGB", _8[_8.BC7_M5_RGBA = 7] = "BC7_M5_RGBA", _8[_8.PVRTC1_4_RGB = 8] = "PVRTC1_4_RGB", _8[_8.PVRTC1_4_RGBA = 9] = "PVRTC1_4_RGBA", _8[_8.ASTC_4x4_RGBA = 10] = "ASTC_4x4_RGBA", _8[_8.ATC_RGB = 11] = "ATC_RGB", _8[_8.ATC_RGBA = 12] = "ATC_RGBA", _8[_8.FXT1_RGB = 17] = "FXT1_RGB", _8[_8.PVRTC2_4_RGB = 18] = "PVRTC2_4_RGB", _8[_8.PVRTC2_4_RGBA = 19] = "PVRTC2_4_RGBA", _8[_8.ETC2_EAC_R11 = 20] = "ETC2_EAC_R11", _8[_8.ETC2_EAC_RG11 = 21] = "ETC2_EAC_RG11", _8[_8.RGBA32 = 13] = "RGBA32", _8[_8.RGB565 = 14] = "RGB565", _8[_8.BGR565 = 15] = "BGR565", _8[_8.RGBA4444 = 16] = "RGBA4444";
}(_4 || (_4 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BasisUtil.js
var g4 = null;
var l7 = null;
async function c13() {
  return t(l7) && (l7 = s8(), g4 = await l7), l7;
}
function u7(t17, n13) {
  if (t(g4))
    return t17.byteLength;
  const r15 = new g4.BasisFile(new Uint8Array(t17)), s12 = T2(r15) ? E6(r15.getNumLevels(0), r15.getHasAlpha(), r15.getImageWidth(0, 0), r15.getImageHeight(0, 0), n13) : 0;
  return r15.close(), r15.delete(), s12;
}
function m3(t17, n13) {
  if (t(g4))
    return t17.byteLength;
  const r15 = new g4.KTX2File(new Uint8Array(t17)), s12 = _5(r15) ? E6(r15.getLevels(), r15.getHasAlpha(), r15.getWidth(), r15.getHeight(), n13) : 0;
  return r15.close(), r15.delete(), s12;
}
function E6(e18, t17, n13, s12, i14) {
  const a12 = _2(t17 ? u3.COMPRESSED_RGBA8_ETC2_EAC : u3.COMPRESSED_RGB8_ETC2), g8 = i14 && e18 > 1 ? (4 ** e18 - 1) / (3 * 4 ** (e18 - 1)) : 1;
  return Math.ceil(n13 * s12 * a12 * g8);
}
function T2(e18) {
  return e18.getNumImages() >= 1 && !e18.isUASTC();
}
function _5(e18) {
  return e18.getFaces() >= 1 && e18.isETC1S();
}
async function h6(t17, n13, r15) {
  t(g4) && (g4 = await c13());
  const s12 = new g4.BasisFile(new Uint8Array(r15));
  if (!T2(s12))
    return null;
  s12.startTranscoding();
  const i14 = p3(t17, n13, s12.getNumLevels(0), s12.getHasAlpha(), s12.getImageWidth(0, 0), s12.getImageHeight(0, 0), (e18, t18) => s12.getImageTranscodedSizeInBytes(0, e18, t18), (e18, t18, n14) => s12.transcodeImage(n14, 0, e18, t18, 0, 0));
  return s12.close(), s12.delete(), i14;
}
async function A4(t17, n13, r15) {
  t(g4) && (g4 = await c13());
  const s12 = new g4.KTX2File(new Uint8Array(r15));
  if (!_5(s12))
    return null;
  s12.startTranscoding();
  const i14 = p3(t17, n13, s12.getLevels(), s12.getHasAlpha(), s12.getWidth(), s12.getHeight(), (e18, t18) => s12.getImageTranscodedSizeInBytes(e18, 0, 0, t18), (e18, t18, n14) => s12.transcodeImage(n14, e18, 0, 0, t18, 0, -1, -1));
  return s12.close(), s12.delete(), i14;
}
function p3(e18, t17, o18, g8, l9, c17, u10, m6) {
  const { compressedTextureETC: E11, compressedTextureS3TC: T6 } = e18.capabilities, [_8, h9] = E11 ? g8 ? [_4.ETC2_RGBA, u3.COMPRESSED_RGBA8_ETC2_EAC] : [_4.ETC1_RGB, u3.COMPRESSED_RGB8_ETC2] : T6 ? g8 ? [_4.BC3_RGBA, u3.COMPRESSED_RGBA_S3TC_DXT5_EXT] : [_4.BC1_RGB, u3.COMPRESSED_RGB_S3TC_DXT1_EXT] : [_4.RGBA32, P2.RGBA], A7 = t17.hasMipmap ? o18 : Math.min(1, o18), p5 = [];
  for (let n13 = 0; n13 < A7; n13++)
    p5.push(new Uint8Array(u10(n13, _8))), m6(n13, _8, p5[n13]);
  const C2 = p5.length > 1, d7 = C2 ? L2.LINEAR_MIPMAP_LINEAR : L2.LINEAR, R4 = { ...t17, samplingMode: d7, hasMipmap: C2, internalFormat: h9, width: l9, height: c17 };
  return new E4(e18, R4, { type: "compressed", levels: p5 });
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/DDSUtil.js
var i12 = s.getLogger("esri.views.3d.webgl-engine.lib.DDSUtil");
var s9 = 542327876;
var l8 = 131072;
var m4 = 4;
function u8(e18) {
  return e18.charCodeAt(0) + (e18.charCodeAt(1) << 8) + (e18.charCodeAt(2) << 16) + (e18.charCodeAt(3) << 24);
}
function c14(e18) {
  return String.fromCharCode(255 & e18, e18 >> 8 & 255, e18 >> 16 & 255, e18 >> 24 & 255);
}
var h7 = u8("DXT1");
var p4 = u8("DXT3");
var d4 = u8("DXT5");
var g5 = 31;
var f8 = 0;
var C = 1;
var w3 = 2;
var D3 = 3;
var T3 = 4;
var _6 = 7;
var A5 = 20;
var E7 = 21;
function S5(e18, r15, n13) {
  const { textureData: i14, internalFormat: s12, width: l9, height: m6 } = c(M4(n13, r15.hasMipmap ?? false));
  return r15.samplingMode = i14.levels.length > 1 ? L2.LINEAR_MIPMAP_LINEAR : L2.LINEAR, r15.hasMipmap = i14.levels.length > 1, r15.internalFormat = s12, r15.width = l9, r15.height = m6, new E4(e18, r15, i14);
}
function M4(e18, t17) {
  const o18 = new Int32Array(e18, 0, g5);
  if (o18[f8] !== s9)
    return i12.error("Invalid magic number in DDS header"), null;
  if (!(o18[A5] & m4))
    return i12.error("Unsupported format, must contain a FourCC code"), null;
  const a12 = o18[E7];
  let u10, S8;
  switch (a12) {
    case h7:
      u10 = 8, S8 = u3.COMPRESSED_RGB_S3TC_DXT1_EXT;
      break;
    case p4:
      u10 = 16, S8 = u3.COMPRESSED_RGBA_S3TC_DXT3_EXT;
      break;
    case d4:
      u10 = 16, S8 = u3.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      break;
    default:
      return i12.error("Unsupported FourCC code:", c14(a12)), null;
  }
  let M6 = 1, x8 = o18[T3], R4 = o18[D3];
  0 == (3 & x8) && 0 == (3 & R4) || (i12.warn("Rounding up compressed texture size to nearest multiple of 4."), x8 = x8 + 3 & -4, R4 = R4 + 3 & -4);
  const b3 = x8, X2 = R4;
  let I5, j4;
  o18[w3] & l8 && false !== t17 && (M6 = Math.max(1, o18[_6])), 1 === M6 || c2(x8) && c2(R4) || (i12.warn("Ignoring mipmaps of non power of two sized compressed texture."), M6 = 1);
  let v6 = o18[C] + 4;
  const F = [];
  for (let r15 = 0; r15 < M6; ++r15)
    j4 = (x8 + 3 >> 2) * (R4 + 3 >> 2) * u10, I5 = new Uint8Array(e18, v6, j4), F.push(I5), v6 += j4, x8 = Math.max(1, x8 >> 1), R4 = Math.max(1, R4 >> 1);
  return { textureData: { type: "compressed", levels: F }, internalFormat: S8, width: b3, height: X2 };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Texture.js
var G3 = class extends r10 {
  constructor(t17, e18) {
    super(), this._data = t17, this.type = e14.Texture, this._glTexture = null, this._powerOfTwoStretchInfo = null, this._loadingPromise = null, this._loadingController = null, this.events = new n(), this._passParameters = new i10(), this.params = e18 || {}, this.params.mipmap = false !== this.params.mipmap, this.params.noUnpackFlip = this.params.noUnpackFlip || false, this.params.preMultiplyAlpha = this.params.preMultiplyAlpha || false, this.params.wrap = this.params.wrap || { s: D.REPEAT, t: D.REPEAT }, this.params.powerOfTwoResizeMode = this.params.powerOfTwoResizeMode || D2.STRETCH, this.estimatedTexMemRequired = G3._estimateTexMemRequired(this._data, this.params), this._startPreload();
  }
  _startPreload() {
    const t17 = this._data;
    t(t17) || (t17 instanceof HTMLVideoElement ? this._startPreloadVideoElement(t17) : t17 instanceof HTMLImageElement && this._startPreloadImageElement(t17));
  }
  _startPreloadVideoElement(t17) {
    if (!(Z(t17.src) || "auto" === t17.preload && t17.crossOrigin)) {
      t17.preload = "auto", t17.crossOrigin = "anonymous";
      const e18 = !t17.paused;
      if (t17.src = t17.src, e18 && t17.autoplay) {
        const e19 = () => {
          t17.removeEventListener("canplay", e19), t17.play();
        };
        t17.addEventListener("canplay", e19);
      }
    }
  }
  _startPreloadImageElement(t17) {
    tt(t17.src) || Z(t17.src) || t17.crossOrigin || (t17.crossOrigin = "anonymous", t17.src = t17.src);
  }
  static _getDataDimensions(t17) {
    return t17 instanceof HTMLVideoElement ? { width: t17.videoWidth, height: t17.videoHeight } : t17;
  }
  static _estimateTexMemRequired(t17, e18) {
    if (t(t17))
      return 0;
    if (t2(t17) || o(t17))
      return e18.encoding === c7.KTX2_ENCODING ? m3(t17, !!e18.mipmap) : e18.encoding === c7.BASIS_ENCODING ? u7(t17, !!e18.mipmap) : t17.byteLength;
    const { width: r15, height: s12 } = t17 instanceof Image || t17 instanceof ImageData || t17 instanceof HTMLCanvasElement || t17 instanceof HTMLVideoElement ? G3._getDataDimensions(t17) : e18;
    return (e18.mipmap ? 4 / 3 : 1) * r15 * s12 * (e18.components || 4) || 0;
  }
  dispose() {
    this._data = void 0;
  }
  get width() {
    return this.params.width;
  }
  get height() {
    return this.params.height;
  }
  _createDescriptor(t17) {
    return { target: M.TEXTURE_2D, pixelFormat: P2.RGBA, dataType: G2.UNSIGNED_BYTE, wrapMode: this.params.wrap, flipped: !this.params.noUnpackFlip, samplingMode: this.params.mipmap ? L2.LINEAR_MIPMAP_LINEAR : L2.LINEAR, hasMipmap: this.params.mipmap, preMultiplyAlpha: this.params.preMultiplyAlpha, maxAnisotropy: this.params.maxAnisotropy ?? (this.params.mipmap ? t17.parameters.maxMaxAnisotropy : 1) };
  }
  get glTexture() {
    return this._glTexture;
  }
  load(t17, e18) {
    if (r(this._glTexture))
      return this._glTexture;
    if (r(this._loadingPromise))
      return this._loadingPromise;
    const r15 = this._data;
    return t(r15) ? (this._glTexture = new E4(t17, this._createDescriptor(t17), null), this._glTexture) : "string" == typeof r15 ? this._loadFromURL(t17, e18, r15) : r15 instanceof Image ? this._loadFromImageElement(t17, e18, r15) : r15 instanceof HTMLVideoElement ? this._loadFromVideoElement(t17, e18, r15) : r15 instanceof ImageData || r15 instanceof HTMLCanvasElement ? this._loadFromImage(t17, r15, e18) : (t2(r15) || o(r15)) && this.params.encoding === c7.DDS_ENCODING ? (this._data = void 0, this._loadFromDDSData(t17, r15)) : (t2(r15) || o(r15)) && this.params.encoding === c7.KTX2_ENCODING ? (this._data = void 0, this._loadFromKTX2(t17, r15)) : (t2(r15) || o(r15)) && this.params.encoding === c7.BASIS_ENCODING ? (this._data = void 0, this._loadFromBasis(t17, r15)) : o(r15) ? this._loadFromPixelData(t17, r15) : t2(r15) ? this._loadFromPixelData(t17, new Uint8Array(r15)) : null;
  }
  get requiresFrameUpdates() {
    return this._data instanceof HTMLVideoElement;
  }
  frameUpdate(t17, e18, r15) {
    if (!(this._data instanceof HTMLVideoElement) || t(this._glTexture))
      return r15;
    if (this._data.readyState < B.HAVE_CURRENT_DATA || r15 === this._data.currentTime)
      return r15;
    if (r(this._powerOfTwoStretchInfo)) {
      const { framebuffer: r16, vao: s12, sourceTexture: i14 } = this._powerOfTwoStretchInfo;
      i14.setData(this._data), this._drawStretchedTexture(t17, e18, r16, s12, i14, this._glTexture);
    } else {
      const { videoWidth: t18, videoHeight: e19 } = this._data, { width: r16, height: s12 } = this._glTexture.descriptor;
      t18 !== r16 || e19 !== s12 ? this._glTexture.updateData(0, 0, 0, Math.min(t18, r16), Math.min(e19, s12), this._data) : this._glTexture.setData(this._data);
    }
    return this._glTexture.descriptor.hasMipmap && this._glTexture.generateMipmap(), this.params.updateCallback && this.params.updateCallback(), this._data.currentTime;
  }
  _loadFromDDSData(t17, e18) {
    return this._glTexture = S5(t17, this._createDescriptor(t17), e18), this._glTexture;
  }
  _loadFromKTX2(t17, e18) {
    return this._loadAsync(() => A4(t17, this._createDescriptor(t17), e18).then((t18) => (this._glTexture = t18, t18)));
  }
  _loadFromBasis(t17, e18) {
    return this._loadAsync(() => h6(t17, this._createDescriptor(t17), e18).then((t18) => (this._glTexture = t18, t18)));
  }
  _loadFromPixelData(t17, e18) {
    s6(this.params.width > 0 && this.params.height > 0);
    const r15 = this._createDescriptor(t17);
    return r15.pixelFormat = 1 === this.params.components ? P2.LUMINANCE : 3 === this.params.components ? P2.RGB : P2.RGBA, r15.width = this.params.width, r15.height = this.params.height, this._glTexture = new E4(t17, r15, e18), this._glTexture;
  }
  _loadFromURL(t17, e18, r15) {
    return this._loadAsync(async (s12) => {
      const i14 = await t10(r15, { signal: s12 });
      return f(s12), this._loadFromImage(t17, i14, e18);
    });
  }
  _loadFromImageElement(t17, e18, r15) {
    return r15.complete ? this._loadFromImage(t17, r15, e18) : this._loadAsync(async (s12) => {
      const i14 = await c4(r15, r15.src, false, s12);
      return f(s12), this._loadFromImage(t17, i14, e18);
    });
  }
  _loadFromVideoElement(t17, e18, r15) {
    return r15.readyState >= B.HAVE_CURRENT_DATA ? this._loadFromImage(t17, r15, e18) : this._loadFromVideoElementAsync(t17, e18, r15);
  }
  _loadFromVideoElementAsync(t17, r15, s12) {
    return this._loadAsync((i14) => new Promise((a12, o18) => {
      const h9 = () => {
        s12.removeEventListener("loadeddata", p5), s12.removeEventListener("error", d7), p(_8);
      }, p5 = () => {
        s12.readyState >= B.HAVE_CURRENT_DATA && (h9(), a12(this._loadFromImage(t17, s12, r15)));
      }, d7 = (t18) => {
        h9(), o18(t18 || new s2("Failed to load video"));
      };
      s12.addEventListener("loadeddata", p5), s12.addEventListener("error", d7);
      const _8 = v(i14, () => d7(a()));
    }));
  }
  _loadFromImage(t17, e18, r15) {
    const i14 = G3._getDataDimensions(e18);
    this.params.width = i14.width, this.params.height = i14.height;
    const a12 = this._createDescriptor(t17);
    return a12.pixelFormat = 3 === this.params.components ? P2.RGB : P2.RGBA, !this._requiresPowerOfTwo(t17, a12) || c2(i14.width) && c2(i14.height) ? (a12.width = i14.width, a12.height = i14.height, this._glTexture = new E4(t17, a12, e18), this._glTexture) : (this._glTexture = this._makePowerOfTwoTexture(t17, e18, i14, a12, r15), this._glTexture);
  }
  _loadAsync(t17) {
    const e18 = new AbortController();
    this._loadingController = e18;
    const r15 = t17(e18.signal);
    this._loadingPromise = r15;
    const s12 = () => {
      this._loadingController === e18 && (this._loadingController = null), this._loadingPromise === r15 && (this._loadingPromise = null);
    };
    return r15.then(s12, s12), r15;
  }
  _requiresPowerOfTwo(t17, e18) {
    const r15 = D.CLAMP_TO_EDGE, s12 = "number" == typeof e18.wrapMode ? e18.wrapMode === r15 : e18.wrapMode.s === r15 && e18.wrapMode.t === r15;
    return t17.type === r11.WEBGL1 && (e18.hasMipmap || !s12);
  }
  _makePowerOfTwoTexture(e18, r15, s12, a12, o18) {
    const { width: n13, height: h9 } = s12, l9 = i2(n13), m6 = i2(h9);
    let p5;
    switch (a12.width = l9, a12.height = m6, this.params.powerOfTwoResizeMode) {
      case D2.PAD:
        a12.textureCoordinateScaleFactor = [n13 / l9, h9 / m6], p5 = new E4(e18, a12), p5.updateData(0, 0, 0, n13, h9, r15);
        break;
      case D2.STRETCH:
      case null:
      case void 0:
        p5 = this._stretchToPowerOfTwo(e18, r15, a12, o18());
        break;
      default:
        n4(this.params.powerOfTwoResizeMode);
    }
    return a12.hasMipmap && p5.generateMipmap(), p5;
  }
  _stretchToPowerOfTwo(t17, e18, r15, s12) {
    const i14 = new E4(t17, r15), a12 = new x3(t17, { colorTarget: Y.TEXTURE, depthStencilTarget: V.NONE }, i14), o18 = new E4(t17, { target: M.TEXTURE_2D, pixelFormat: r15.pixelFormat, dataType: G2.UNSIGNED_BYTE, wrapMode: D.CLAMP_TO_EDGE, samplingMode: L2.LINEAR, flipped: !!r15.flipped, maxAnisotropy: 8, preMultiplyAlpha: r15.preMultiplyAlpha }, e18), n13 = f5(t17), h9 = t17.getBoundFramebufferObject();
    return this._drawStretchedTexture(t17, s12, a12, n13, o18, i14), this.requiresFrameUpdates ? this._powerOfTwoStretchInfo = { vao: n13, sourceTexture: o18, framebuffer: a12 } : (n13.dispose(true), o18.dispose(), a12.detachColorTexture(), a12.dispose()), t17.bindFramebuffer(h9), i14;
  }
  _drawStretchedTexture(t17, e18, r15, s12, i14, a12) {
    this._passParameters.texture = i14, t17.bindFramebuffer(r15);
    const o18 = t17.getViewport();
    t17.setViewport(0, 0, a12.descriptor.width, a12.descriptor.height), t17.bindTechnique(e18, this._passParameters, null), t17.bindVAO(s12), t17.drawArrays(E3.TRIANGLE_STRIP, 0, n10(s12, "geometry")), t17.bindFramebuffer(null), t17.setViewport(o18.x, o18.y, o18.width, o18.height), this._passParameters.texture = null;
  }
  unload() {
    if (r(this._powerOfTwoStretchInfo)) {
      const { framebuffer: t17, vao: e18, sourceTexture: r15 } = this._powerOfTwoStretchInfo;
      e18.dispose(true), r15.dispose(), t17.dispose(), this._glTexture = null, this._powerOfTwoStretchInfo = null;
    }
    if (r(this._glTexture) && (this._glTexture.dispose(), this._glTexture = null), r(this._loadingController)) {
      const t17 = this._loadingController;
      this._loadingController = null, this._loadingPromise = null, t17.abort();
    }
    this.events.emit("unloaded");
  }
};
var B;
!function(t17) {
  t17[t17.HAVE_NOTHING = 0] = "HAVE_NOTHING", t17[t17.HAVE_METADATA = 1] = "HAVE_METADATA", t17[t17.HAVE_CURRENT_DATA = 2] = "HAVE_CURRENT_DATA", t17[t17.HAVE_FUTURE_DATA = 3] = "HAVE_FUTURE_DATA", t17[t17.HAVE_ENOUGH_DATA = 4] = "HAVE_ENOUGH_DATA";
}(B || (B = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderSlot.js
var E8;
!function(E11) {
  E11[E11.INTEGRATED_MESH = 0] = "INTEGRATED_MESH", E11[E11.OPAQUE_TERRAIN = 1] = "OPAQUE_TERRAIN", E11[E11.OPAQUE_MATERIAL = 2] = "OPAQUE_MATERIAL", E11[E11.TRANSPARENT_MATERIAL = 3] = "TRANSPARENT_MATERIAL", E11[E11.TRANSPARENT_TERRAIN = 4] = "TRANSPARENT_TERRAIN", E11[E11.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL = 5] = "TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL", E11[E11.OCCLUDED_TERRAIN = 6] = "OCCLUDED_TERRAIN", E11[E11.OCCLUDER_MATERIAL = 7] = "OCCLUDER_MATERIAL", E11[E11.TRANSPARENT_OCCLUDER_MATERIAL = 8] = "TRANSPARENT_OCCLUDER_MATERIAL", E11[E11.OCCLUSION_PIXELS = 9] = "OCCLUSION_PIXELS", E11[E11.POSTPROCESSING_ENVIRONMENT_OPAQUE = 10] = "POSTPROCESSING_ENVIRONMENT_OPAQUE", E11[E11.POSTPROCESSING_ENVIRONMENT_TRANSPARENT = 11] = "POSTPROCESSING_ENVIRONMENT_TRANSPARENT", E11[E11.LASERLINES = 12] = "LASERLINES", E11[E11.LASERLINES_CONTRAST_CONTROL = 13] = "LASERLINES_CONTRAST_CONTROL", E11[E11.HUD_MATERIAL = 14] = "HUD_MATERIAL", E11[E11.LABEL_MATERIAL = 15] = "LABEL_MATERIAL", E11[E11.LINE_CALLOUTS = 16] = "LINE_CALLOUTS", E11[E11.LINE_CALLOUTS_HUD_DEPTH = 17] = "LINE_CALLOUTS_HUD_DEPTH", E11[E11.DRAPED_MATERIAL = 18] = "DRAPED_MATERIAL", E11[E11.DRAPED_WATER = 19] = "DRAPED_WATER", E11[E11.VOXEL = 20] = "VOXEL", E11[E11.MAX_SLOTS = 21] = "MAX_SLOTS";
}(E8 || (E8 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/verticalOffsetUtils.js
var v4 = class {
  constructor(t17 = 0) {
    this.offset = t17, this.tmpVertex = n2();
  }
  applyToVertex(t17, s12, e18) {
    const i14 = t17 + this.localOrigin[0], r15 = s12 + this.localOrigin[1], a12 = e18 + this.localOrigin[2], o18 = this.offset / Math.sqrt(i14 * i14 + r15 * r15 + a12 * a12);
    return this.tmpVertex[0] = t17 + i14 * o18, this.tmpVertex[1] = s12 + r15 * o18, this.tmpVertex[2] = e18 + a12 * o18, this.tmpVertex;
  }
  applyToAabb(t17) {
    for (let r15 = 0; r15 < 3; ++r15)
      O6[r15] = t17[0 + r15] + this.localOrigin[r15], z2[r15] = t17[3 + r15] + this.localOrigin[r15], T4[r15] = O6[r15];
    const s12 = this.applyToVertex(O6[0], O6[1], O6[2]);
    for (let r15 = 0; r15 < 3; ++r15)
      t17[r15] = s12[r15], t17[r15 + 3] = s12[r15];
    const e18 = (s13) => {
      const e19 = this.applyToVertex(s13[0], s13[1], s13[2]);
      for (let i15 = 0; i15 < 3; ++i15)
        t17[i15 + 0] = Math.min(t17[i15 + 0], e19[i15]), t17[i15 + 3] = Math.max(t17[i15 + 3], e19[i15]);
    };
    for (let r15 = 1; r15 < 8; ++r15) {
      for (let t18 = 0; t18 < 3; ++t18)
        T4[t18] = 0 == (r15 & 1 << t18) ? O6[t18] : z2[t18];
      e18(T4);
    }
    let i14 = 0;
    for (let r15 = 0; r15 < 3; ++r15) {
      O6[r15] * z2[r15] < 0 && (i14 |= 1 << r15);
    }
    if (0 !== i14 && 7 !== i14) {
      for (let r15 = 0; r15 < 8; ++r15)
        if (0 == (i14 & r15)) {
          for (let t18 = 0; t18 < 3; ++t18)
            i14[t18] ? T4[t18] = 0 : T4[t18] = 0 != (r15 & 1 << t18) ? O6[t18] : z2[t18];
          e18(T4);
        }
    }
    for (let r15 = 0; r15 < 3; ++r15)
      t17[r15 + 0] -= this.localOrigin[r15], t17[r15 + 3] -= this.localOrigin[r15];
    return t17;
  }
};
var O6 = n2();
var z2 = n2();
var T4 = n2();
var g6 = class {
  constructor(t17 = 0) {
    this.componentLocalOriginLength = 0, this._tmpVertex = n2(), this._mbs = R(), this._obb = { center: n2(), halfSize: n8(), quaternion: null }, this._totalOffset = 0, this._offset = 0, this._resetOffset(t17);
  }
  _resetOffset(t17) {
    this._offset = t17, this._totalOffset = t17;
  }
  set offset(t17) {
    this._resetOffset(t17);
  }
  get offset() {
    return this._offset;
  }
  set componentOffset(t17) {
    this._totalOffset = this._offset + t17;
  }
  set localOrigin(t17) {
    this.componentLocalOriginLength = Math.sqrt(t17[0] * t17[0] + t17[1] * t17[1] + t17[2] * t17[2]);
  }
  applyToVertex(t17, s12, e18) {
    const i14 = t17, r15 = s12, a12 = e18 + this.componentLocalOriginLength, o18 = this._totalOffset / Math.sqrt(i14 * i14 + r15 * r15 + a12 * a12);
    return this._tmpVertex[0] = t17 + i14 * o18, this._tmpVertex[1] = s12 + r15 * o18, this._tmpVertex[2] = e18 + a12 * o18, this._tmpVertex;
  }
  applyToAabb(t17) {
    const s12 = t17[0], e18 = t17[1], i14 = t17[2] + this.componentLocalOriginLength, r15 = t17[3], a12 = t17[4], o18 = t17[5] + this.componentLocalOriginLength, h9 = s12 * r15 < 0 ? 0 : Math.min(Math.abs(s12), Math.abs(r15)), n13 = e18 * a12 < 0 ? 0 : Math.min(Math.abs(e18), Math.abs(a12)), f10 = i14 * o18 < 0 ? 0 : Math.min(Math.abs(i14), Math.abs(o18)), l9 = Math.sqrt(h9 * h9 + n13 * n13 + f10 * f10);
    if (l9 < this._totalOffset)
      return t17[0] -= s12 < 0 ? this._totalOffset : 0, t17[1] -= e18 < 0 ? this._totalOffset : 0, t17[2] -= i14 < 0 ? this._totalOffset : 0, t17[3] += r15 > 0 ? this._totalOffset : 0, t17[4] += a12 > 0 ? this._totalOffset : 0, t17[5] += o18 > 0 ? this._totalOffset : 0, t17;
    const m6 = Math.max(Math.abs(s12), Math.abs(r15)), _8 = Math.max(Math.abs(e18), Math.abs(a12)), b3 = Math.max(Math.abs(i14), Math.abs(o18)), c17 = Math.sqrt(m6 * m6 + _8 * _8 + b3 * b3), p5 = this._totalOffset / c17, u10 = this._totalOffset / l9;
    return t17[0] += s12 * (s12 > 0 ? p5 : u10), t17[1] += e18 * (e18 > 0 ? p5 : u10), t17[2] += i14 * (i14 > 0 ? p5 : u10), t17[3] += r15 * (r15 < 0 ? p5 : u10), t17[4] += a12 * (a12 < 0 ? p5 : u10), t17[5] += o18 * (o18 < 0 ? p5 : u10), t17;
  }
  applyToMbs(t17) {
    const s12 = Math.sqrt(t17[0] * t17[0] + t17[1] * t17[1] + t17[2] * t17[2]), e18 = this._totalOffset / s12;
    return this._mbs[0] = t17[0] + t17[0] * e18, this._mbs[1] = t17[1] + t17[1] * e18, this._mbs[2] = t17[2] + t17[2] * e18, this._mbs[3] = t17[3] + t17[3] * this._totalOffset / s12, this._mbs;
  }
  applyToObb(t17) {
    const s12 = t17.center, e18 = this._totalOffset / Math.sqrt(s12[0] * s12[0] + s12[1] * s12[1] + s12[2] * s12[2]);
    this._obb.center[0] = s12[0] + s12[0] * e18, this._obb.center[1] = s12[1] + s12[1] * e18, this._obb.center[2] = s12[2] + s12[2] * e18, E(this._obb.halfSize, t17.halfSize, t17.quaternion), u(this._obb.halfSize, this._obb.halfSize, t17.center);
    const i14 = this._totalOffset / Math.sqrt(this._obb.halfSize[0] * this._obb.halfSize[0] + this._obb.halfSize[1] * this._obb.halfSize[1] + this._obb.halfSize[2] * this._obb.halfSize[2]);
    return this._obb.halfSize[0] += this._obb.halfSize[0] * i14, this._obb.halfSize[1] += this._obb.halfSize[1] * i14, this._obb.halfSize[2] += this._obb.halfSize[2] * i14, e5(this._obb.halfSize, this._obb.halfSize, t17.center), S3(I2, t17.quaternion), E(this._obb.halfSize, this._obb.halfSize, I2), this._obb.halfSize[0] *= this._obb.halfSize[0] < 0 ? -1 : 1, this._obb.halfSize[1] *= this._obb.halfSize[1] < 0 ? -1 : 1, this._obb.halfSize[2] *= this._obb.halfSize[2] < 0 ? -1 : 1, this._obb.quaternion = t17.quaternion, this._obb;
  }
};
var x7 = class {
  constructor(t17 = 0) {
    this.offset = t17, this.sphere = R(), this.tmpVertex = n2();
  }
  applyToVertex(t17, s12, e18) {
    const i14 = this.objectTransform.transform;
    let r15 = i14[0] * t17 + i14[4] * s12 + i14[8] * e18 + i14[12], a12 = i14[1] * t17 + i14[5] * s12 + i14[9] * e18 + i14[13], o18 = i14[2] * t17 + i14[6] * s12 + i14[10] * e18 + i14[14];
    const h9 = this.offset / Math.sqrt(r15 * r15 + a12 * a12 + o18 * o18);
    r15 += r15 * h9, a12 += a12 * h9, o18 += o18 * h9;
    const n13 = this.objectTransform.inverse;
    return this.tmpVertex[0] = n13[0] * r15 + n13[4] * a12 + n13[8] * o18 + n13[12], this.tmpVertex[1] = n13[1] * r15 + n13[5] * a12 + n13[9] * o18 + n13[13], this.tmpVertex[2] = n13[2] * r15 + n13[6] * a12 + n13[10] * o18 + n13[14], this.tmpVertex;
  }
  applyToMinMax(t17, s12) {
    const e18 = this.offset / Math.sqrt(t17[0] * t17[0] + t17[1] * t17[1] + t17[2] * t17[2]);
    t17[0] += t17[0] * e18, t17[1] += t17[1] * e18, t17[2] += t17[2] * e18;
    const i14 = this.offset / Math.sqrt(s12[0] * s12[0] + s12[1] * s12[1] + s12[2] * s12[2]);
    s12[0] += s12[0] * i14, s12[1] += s12[1] * i14, s12[2] += s12[2] * i14;
  }
  applyToAabb(t17) {
    const s12 = this.offset / Math.sqrt(t17[0] * t17[0] + t17[1] * t17[1] + t17[2] * t17[2]);
    t17[0] += t17[0] * s12, t17[1] += t17[1] * s12, t17[2] += t17[2] * s12;
    const e18 = this.offset / Math.sqrt(t17[3] * t17[3] + t17[4] * t17[4] + t17[5] * t17[5]);
    return t17[3] += t17[3] * e18, t17[4] += t17[4] * e18, t17[5] += t17[5] * e18, t17;
  }
  applyToBoundingSphere(t17) {
    const s12 = Math.sqrt(t17[0] * t17[0] + t17[1] * t17[1] + t17[2] * t17[2]), e18 = this.offset / s12;
    return this.sphere[0] = t17[0] + t17[0] * e18, this.sphere[1] = t17[1] + t17[1] * e18, this.sphere[2] = t17[2] + t17[2] * e18, this.sphere[3] = t17[3] + t17[3] * this.offset / s12, this.sphere;
  }
};
var S6 = new x7();
function y3(s12) {
  return r(s12) ? (S6.offset = s12, S6) : null;
}
var q = new g6();
var d5 = new v4();
var I2 = e8();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/bufferWriterUtils.js
function d6(e18, t17, f10, o18) {
  const r15 = f10.typedBuffer, n13 = f10.typedBufferStride, s12 = e18.length;
  o18 *= n13;
  for (let i14 = 0; i14 < s12; ++i14) {
    const f11 = 2 * e18[i14];
    r15[o18] = t17[f11], r15[o18 + 1] = t17[f11 + 1], o18 += n13;
  }
}
function u9(e18, t17, f10, o18, r15) {
  const n13 = f10.typedBuffer, s12 = f10.typedBufferStride, i14 = e18.length;
  if (o18 *= s12, null == r15 || 1 === r15)
    for (let c17 = 0; c17 < i14; ++c17) {
      const f11 = 3 * e18[c17];
      n13[o18] = t17[f11], n13[o18 + 1] = t17[f11 + 1], n13[o18 + 2] = t17[f11 + 2], o18 += s12;
    }
  else
    for (let c17 = 0; c17 < i14; ++c17) {
      const f11 = 3 * e18[c17];
      for (let e19 = 0; e19 < r15; ++e19)
        n13[o18] = t17[f11], n13[o18 + 1] = t17[f11 + 1], n13[o18 + 2] = t17[f11 + 2], o18 += s12;
    }
}
function a11(e18, t17, f10, o18, r15 = 1) {
  const n13 = f10.typedBuffer, s12 = f10.typedBufferStride, i14 = e18.length;
  if (o18 *= s12, 1 === r15)
    for (let c17 = 0; c17 < i14; ++c17) {
      const f11 = 4 * e18[c17];
      n13[o18] = t17[f11], n13[o18 + 1] = t17[f11 + 1], n13[o18 + 2] = t17[f11 + 2], n13[o18 + 3] = t17[f11 + 3], o18 += s12;
    }
  else
    for (let c17 = 0; c17 < i14; ++c17) {
      const f11 = 4 * e18[c17];
      for (let e19 = 0; e19 < r15; ++e19)
        n13[o18] = t17[f11], n13[o18 + 1] = t17[f11 + 1], n13[o18 + 2] = t17[f11 + 2], n13[o18 + 3] = t17[f11 + 3], o18 += s12;
    }
}
function g7(e18, f10, o18, r15, n13, s12 = 1) {
  if (!o18)
    return void u9(e18, f10, r15, n13, s12);
  const i14 = r15.typedBuffer, c17 = r15.typedBufferStride, l9 = e18.length, d7 = o18[0], a12 = o18[1], p5 = o18[2], y4 = o18[4], B3 = o18[5], g8 = o18[6], b3 = o18[8], h9 = o18[9], O9 = o18[10], N5 = o18[12], S8 = o18[13], m6 = o18[14];
  n13 *= c17;
  let A7 = 0, L4 = 0, R4 = 0;
  const v6 = H(o18) ? (e19) => {
    A7 = f10[e19] + N5, L4 = f10[e19 + 1] + S8, R4 = f10[e19 + 2] + m6;
  } : (e19) => {
    const t17 = f10[e19], o19 = f10[e19 + 1], r16 = f10[e19 + 2];
    A7 = d7 * t17 + y4 * o19 + b3 * r16 + N5, L4 = a12 * t17 + B3 * o19 + h9 * r16 + S8, R4 = p5 * t17 + g8 * o19 + O9 * r16 + m6;
  };
  if (1 === s12)
    for (let t17 = 0; t17 < l9; ++t17)
      v6(3 * e18[t17]), i14[n13] = A7, i14[n13 + 1] = L4, i14[n13 + 2] = R4, n13 += c17;
  else
    for (let t17 = 0; t17 < l9; ++t17) {
      v6(3 * e18[t17]);
      for (let e19 = 0; e19 < s12; ++e19)
        i14[n13] = A7, i14[n13 + 1] = L4, i14[n13 + 2] = R4, n13 += c17;
    }
}
function b2(e18, o18, r15, n13, s12, i14 = 1) {
  if (!r15)
    return void u9(e18, o18, n13, s12, i14);
  const c17 = r15, l9 = n13.typedBuffer, d7 = n13.typedBufferStride, a12 = e18.length, p5 = c17[0], y4 = c17[1], B3 = c17[2], g8 = c17[4], b3 = c17[5], h9 = c17[6], O9 = c17[8], N5 = c17[9], S8 = c17[10], m6 = !G(c17), A7 = 1e-6, L4 = 1 - A7;
  s12 *= d7;
  let R4 = 0, v6 = 0, E11 = 0;
  const F = H(c17) ? (e19) => {
    R4 = o18[e19], v6 = o18[e19 + 1], E11 = o18[e19 + 2];
  } : (e19) => {
    const t17 = o18[e19], f10 = o18[e19 + 1], r16 = o18[e19 + 2];
    R4 = p5 * t17 + g8 * f10 + O9 * r16, v6 = y4 * t17 + b3 * f10 + N5 * r16, E11 = B3 * t17 + h9 * f10 + S8 * r16;
  };
  if (1 === i14)
    if (m6)
      for (let t17 = 0; t17 < a12; ++t17) {
        F(3 * e18[t17]);
        const f10 = R4 * R4 + v6 * v6 + E11 * E11;
        if (f10 < L4 && f10 > A7) {
          const e19 = 1 / Math.sqrt(f10);
          l9[s12] = R4 * e19, l9[s12 + 1] = v6 * e19, l9[s12 + 2] = E11 * e19;
        } else
          l9[s12] = R4, l9[s12 + 1] = v6, l9[s12 + 2] = E11;
        s12 += d7;
      }
    else
      for (let t17 = 0; t17 < a12; ++t17)
        F(3 * e18[t17]), l9[s12] = R4, l9[s12 + 1] = v6, l9[s12 + 2] = E11, s12 += d7;
  else
    for (let t17 = 0; t17 < a12; ++t17) {
      if (F(3 * e18[t17]), m6) {
        const e19 = R4 * R4 + v6 * v6 + E11 * E11;
        if (e19 < L4 && e19 > A7) {
          const t18 = 1 / Math.sqrt(e19);
          R4 *= t18, v6 *= t18, E11 *= t18;
        }
      }
      for (let e19 = 0; e19 < i14; ++e19)
        l9[s12] = R4, l9[s12 + 1] = v6, l9[s12 + 2] = E11, s12 += d7;
    }
}
function h8(e18, t17, o18, r15, n13, s12 = 1) {
  if (!o18)
    return void a11(e18, t17, r15, n13, s12);
  const i14 = o18, c17 = r15.typedBuffer, l9 = r15.typedBufferStride, d7 = e18.length, u10 = i14[0], p5 = i14[1], y4 = i14[2], B3 = i14[4], g8 = i14[5], b3 = i14[6], h9 = i14[8], O9 = i14[9], N5 = i14[10], S8 = !G(i14), m6 = 1e-6, A7 = 1 - m6;
  if (n13 *= l9, 1 === s12)
    for (let f10 = 0; f10 < d7; ++f10) {
      const o19 = 4 * e18[f10], r16 = t17[o19], s13 = t17[o19 + 1], i15 = t17[o19 + 2], d8 = t17[o19 + 3];
      let a12 = u10 * r16 + B3 * s13 + h9 * i15, L4 = p5 * r16 + g8 * s13 + O9 * i15, R4 = y4 * r16 + b3 * s13 + N5 * i15;
      if (S8) {
        const e19 = a12 * a12 + L4 * L4 + R4 * R4;
        if (e19 < A7 && e19 > m6) {
          const t18 = 1 / Math.sqrt(e19);
          a12 *= t18, L4 *= t18, R4 *= t18;
        }
      }
      c17[n13] = a12, c17[n13 + 1] = L4, c17[n13 + 2] = R4, c17[n13 + 3] = d8, n13 += l9;
    }
  else
    for (let f10 = 0; f10 < d7; ++f10) {
      const o19 = 4 * e18[f10], r16 = t17[o19], i15 = t17[o19 + 1], d8 = t17[o19 + 2], a12 = t17[o19 + 3];
      let L4 = u10 * r16 + B3 * i15 + h9 * d8, R4 = p5 * r16 + g8 * i15 + O9 * d8, v6 = y4 * r16 + b3 * i15 + N5 * d8;
      if (S8) {
        const e19 = L4 * L4 + R4 * R4 + v6 * v6;
        if (e19 < A7 && e19 > m6) {
          const t18 = 1 / Math.sqrt(e19);
          L4 *= t18, R4 *= t18, v6 *= t18;
        }
      }
      for (let e19 = 0; e19 < s12; ++e19)
        c17[n13] = L4, c17[n13 + 1] = R4, c17[n13 + 2] = v6, c17[n13 + 3] = a12, n13 += l9;
    }
}
function O7(e18, t17, f10, o18, r15, n13 = 1) {
  const s12 = o18.typedBuffer, i14 = o18.typedBufferStride, c17 = e18.length;
  if (r15 *= i14, f10 !== t17.length || 4 !== f10)
    if (1 !== n13)
      if (4 !== f10)
        for (let l9 = 0; l9 < c17; ++l9) {
          const f11 = 3 * e18[l9];
          for (let e19 = 0; e19 < n13; ++e19)
            s12[r15] = t17[f11], s12[r15 + 1] = t17[f11 + 1], s12[r15 + 2] = t17[f11 + 2], s12[r15 + 3] = 255, r15 += i14;
        }
      else
        for (let l9 = 0; l9 < c17; ++l9) {
          const f11 = 4 * e18[l9];
          for (let e19 = 0; e19 < n13; ++e19)
            s12[r15] = t17[f11], s12[r15 + 1] = t17[f11 + 1], s12[r15 + 2] = t17[f11 + 2], s12[r15 + 3] = t17[f11 + 3], r15 += i14;
        }
    else {
      if (4 === f10) {
        for (let f11 = 0; f11 < c17; ++f11) {
          const o19 = 4 * e18[f11];
          s12[r15] = t17[o19], s12[r15 + 1] = t17[o19 + 1], s12[r15 + 2] = t17[o19 + 2], s12[r15 + 3] = t17[o19 + 3], r15 += i14;
        }
        return;
      }
      for (let f11 = 0; f11 < c17; ++f11) {
        const o19 = 3 * e18[f11];
        s12[r15] = t17[o19], s12[r15 + 1] = t17[o19 + 1], s12[r15 + 2] = t17[o19 + 2], s12[r15 + 3] = 255, r15 += i14;
      }
    }
  else {
    s12[r15] = t17[0], s12[r15 + 1] = t17[1], s12[r15 + 2] = t17[2], s12[r15 + 3] = t17[3];
    const e19 = new Uint32Array(o18.typedBuffer.buffer, o18.start), f11 = i14 / 4, l9 = e19[r15 /= 4];
    r15 += f11;
    const d7 = c17 * n13;
    for (let t18 = 1; t18 < d7; ++t18)
      e19[r15] = l9, r15 += f11;
  }
}
function N2(e18, t17, f10, o18, r15 = 1) {
  const n13 = t17.typedBuffer, s12 = t17.typedBufferStride;
  if (o18 *= s12, 1 === r15)
    for (let i14 = 0; i14 < f10; ++i14)
      n13[o18] = e18[0], n13[o18 + 1] = e18[1], n13[o18 + 2] = e18[2], n13[o18 + 3] = e18[3], o18 += s12;
  else
    for (let i14 = 0; i14 < f10; ++i14)
      for (let t18 = 0; t18 < r15; ++t18)
        n13[o18] = e18[0], n13[o18 + 1] = e18[1], n13[o18 + 2] = e18[2], n13[o18 + 3] = e18[3], o18 += s12;
}
function S7(t17, f10, l9, u10, p5, y4) {
  for (const B3 of f10.fieldNames) {
    const f11 = t17.vertexAttributes.get(B3), S8 = t17.indices.get(B3);
    if (f11 && S8)
      switch (B3) {
        case O4.POSITION: {
          s6(3 === f11.size);
          const e18 = p5.getField(B3, i3);
          s6(!!e18, `No buffer view for ${B3}`), e18 && g7(S8, f11.data, l9, e18, y4);
          break;
        }
        case O4.NORMAL: {
          s6(3 === f11.size);
          const e18 = p5.getField(B3, i3);
          s6(!!e18, `No buffer view for ${B3}`), e18 && b2(S8, f11.data, u10, e18, y4);
          break;
        }
        case O4.UV0: {
          s6(2 === f11.size);
          const e18 = p5.getField(B3, u2);
          s6(!!e18, `No buffer view for ${B3}`), e18 && d6(S8, f11.data, e18, y4);
          break;
        }
        case O4.COLOR:
        case O4.SYMBOLCOLOR: {
          s6(3 === f11.size || 4 === f11.size);
          const e18 = p5.getField(B3, x2);
          s6(!!e18, `No buffer view for ${B3}`), e18 && O7(S8, f11.data, f11.size, e18, y4);
          break;
        }
        case O4.TANGENT: {
          s6(4 === f11.size);
          const e18 = p5.getField(B3, c5);
          s6(!!e18, `No buffer view for ${B3}`), e18 && h8(S8, f11.data, u10, e18, y4);
          break;
        }
        case O4.PROFILERIGHT:
        case O4.PROFILEUP:
        case O4.PROFILEVERTEXANDNORMAL:
        case O4.FEATUREVALUE: {
          s6(4 === f11.size);
          const e18 = p5.getField(B3, c5);
          s6(!!e18, `No buffer view for ${B3}`), e18 && a11(S8, f11.data, e18, y4);
        }
      }
    else if (B3 === O4.OBJECTANDLAYERIDCOLOR && r(t17.objectAndLayerIdColor)) {
      const e18 = t17.indices.get(O4.POSITION);
      if (s6(!!e18, `No buffer view for ${B3}`), e18) {
        const f12 = e18.length, o18 = p5.getField(B3, x2);
        N2(t17.objectAndLayerIdColor, o18, f12, y4);
      }
    }
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultBufferWriter.js
var r14 = class {
  constructor(t17) {
    this.vertexBufferLayout = t17;
  }
  allocate(t17) {
    return this.vertexBufferLayout.createBuffer(t17);
  }
  elementCount(e18) {
    return e18.indices.get(O4.POSITION).length;
  }
  write(t17, r15, i14, u10, f10) {
    S7(i14, this.vertexBufferLayout, t17, r15, u10, f10);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/StencilUtils.js
var i13 = { func: I.LESS };
var s10 = { func: I.ALWAYS };
var e17 = { mask: 255 };
var f9 = { function: { func: I.ALWAYS, ref: a4.OutlineVisualElementMask, mask: a4.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.ZERO } };
var o17 = { function: { func: I.ALWAYS, ref: a4.OutlineVisualElementMask, mask: a4.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.REPLACE } };
var P3 = { function: { func: I.EQUAL, ref: a4.OutlineVisualElementMask, mask: a4.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.KEEP } };
var m5 = { function: { func: I.NOTEQUAL, ref: a4.OutlineVisualElementMask, mask: a4.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.KEEP } };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechnique.js
var k = class extends f6 {
  constructor() {
    super(...arguments), this.isSchematic = false, this.usePBR = false, this.mrrFactors = r2(0, 1, 0.5), this.hasVertexColors = false, this.hasSymbolColors = false, this.doubleSided = false, this.doubleSidedType = "normal", this.cullFace = n7.Back, this.emissiveFactor = r2(0, 0, 0), this.instancedDoublePrecision = false, this.normalType = a8.Attribute, this.receiveSSAO = true, this.receiveShadows = true, this.castShadows = true, this.shadowMappingEnabled = false, this.ambient = r2(0.2, 0.2, 0.2), this.diffuse = r2(0.8, 0.8, 0.8), this.externalColor = r4(1, 1, 1, 1), this.colorMixMode = "multiply", this.opacity = 1, this.layerOpacity = 1, this.origin = n2(), this.hasSlicePlane = false, this.hasSliceHighlight = true, this.offsetTransparentBackfaces = false, this.vvSizeEnabled = false, this.vvSizeMinSize = [1, 1, 1], this.vvSizeMaxSize = [100, 100, 100], this.vvSizeOffset = [0, 0, 0], this.vvSizeFactor = [1, 1, 1], this.vvSizeValue = [1, 1, 1], this.vvColorEnabled = false, this.vvColorValues = [0, 0, 0, 0, 0, 0, 0, 0], this.vvColorColors = [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], this.vvSymbolAnchor = [0, 0, 0], this.vvSymbolRotationMatrix = e6(), this.vvOpacityEnabled = false, this.vvOpacityValues = [], this.vvOpacityOpacities = [], this.transparent = false, this.writeDepth = true, this.customDepthTest = e12.Less, this.textureAlphaMode = u4.Blend, this.textureAlphaCutoff = o12, this.textureAlphaPremultiplied = false, this.hasOccludees = false, this.renderOccluded = c8.Occlude;
  }
};
var _7 = class extends e16 {
  initializeConfiguration(e18, t17) {
    t17.hasWebGL2Context = e18.rctx.type === r11.WEBGL2, t17.spherical = e18.viewingMode === l3.Global, t17.doublePrecisionRequiresObfuscation = e18.rctx.driverTest.doublePrecisionRequiresObfuscation.result, t17.textureCoordinateType = t17.hasColorTexture || t17.hasMetallicRoughnessTexture || t17.hasEmissionTexture || t17.hasOcclusionTexture || t17.hasNormalTexture ? d.Default : d.None, t17.objectAndLayerIdColorInstanced = t17.instanced;
  }
  initializeProgram(e18) {
    return this._initializeProgram(e18, _7.shader);
  }
  _initializeProgram(e18, t17) {
    return new o13(e18.rctx, t17.get().build(this.configuration), E5);
  }
  _convertDepthTestFunction(e18) {
    return e18 === e12.Lequal ? I.LEQUAL : I.LESS;
  }
  _makePipeline(e18, t17) {
    const i14 = this.configuration, s12 = e18 === o11.NONE, r15 = e18 === o11.FrontFace;
    return W({ blending: i14.output !== h2.Color && i14.output !== h2.Alpha || !i14.transparent ? null : s12 ? c9 : A2(e18), culling: N3(i14) ? h5(i14.cullFace) : null, depthTest: { func: l4(e18, this._convertDepthTestFunction(i14.customDepthTest)) }, depthWrite: (s12 || r15) && i14.writeDepth ? a6 : null, colorWrite: _3, stencilWrite: i14.hasOccludees ? e17 : null, stencilTest: i14.hasOccludees ? t17 ? o17 : f9 : null, polygonOffset: s12 || r15 ? null : a7(i14.enableOffset) });
  }
  initializePipeline() {
    return this._occludeePipelineState = this._makePipeline(this.configuration.transparencyPassType, true), this._makePipeline(this.configuration.transparencyPassType, false);
  }
  getPipelineState(e18, t17) {
    return t17 ? this._occludeePipelineState : super.getPipelineState(e18, t17);
  }
};
function N3(e18) {
  return e18.cullFace !== n7.None || !e18.hasSlicePlane && (!e18.transparent && !e18.doubleSidedMode);
}
_7.shader = new t11(X, () => import("./DefaultMaterial.glsl-AEI2T75K.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultTechniqueConfiguration.js
var s11 = class extends t12 {
  constructor() {
    super(...arguments), this.hasWebGL2Context = false;
  }
};
e2([r12({ constValue: true })], s11.prototype, "hasSliceHighlight", void 0), e2([r12({ constValue: false })], s11.prototype, "hasSliceInVertexProgram", void 0), e2([r12({ constValue: false })], s11.prototype, "instancedDoublePrecision", void 0), e2([r12({ constValue: false })], s11.prototype, "useLegacyTerrainShading", void 0), e2([r12({ constValue: false })], s11.prototype, "hasModelTransformation", void 0), e2([r12({ constValue: a5.Pass })], s11.prototype, "pbrTextureBindType", void 0), e2([r12()], s11.prototype, "hasWebGL2Context", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechniqueConfiguration.js
var c16 = class extends s11 {
  constructor() {
    super(...arguments), this.output = h2.Color, this.alphaDiscardMode = u4.Opaque, this.doubleSidedMode = i7.None, this.pbrMode = d2.Disabled, this.cullFace = n7.None, this.transparencyPassType = o11.NONE, this.normalType = a8.Attribute, this.textureCoordinateType = d.None, this.customDepthTest = e12.Less, this.spherical = false, this.hasVertexColors = false, this.hasSymbolColors = false, this.hasVerticalOffset = false, this.hasSlicePlane = false, this.hasSliceHighlight = true, this.hasColorTexture = false, this.hasMetallicRoughnessTexture = false, this.hasEmissionTexture = false, this.hasOcclusionTexture = false, this.hasNormalTexture = false, this.hasScreenSizePerspective = false, this.hasVertexTangents = false, this.hasOccludees = false, this.hasMultipassTerrain = false, this.hasModelTransformation = false, this.offsetBackfaces = false, this.vvSize = false, this.vvColor = false, this.receiveShadows = false, this.receiveAmbientOcclusion = false, this.textureAlphaPremultiplied = false, this.instanced = false, this.instancedColor = false, this.objectAndLayerIdColorInstanced = false, this.instancedDoublePrecision = false, this.doublePrecisionRequiresObfuscation = false, this.writeDepth = true, this.transparent = false, this.enableOffset = true, this.cullAboveGround = false, this.snowCover = false, this.hasColorTextureTransform = false, this.hasEmissionTextureTransform = false, this.hasNormalTextureTransform = false, this.hasOcclusionTextureTransform = false, this.hasMetallicRoughnessTextureTransform = false;
  }
};
e2([r12({ count: h2.COUNT })], c16.prototype, "output", void 0), e2([r12({ count: u4.COUNT })], c16.prototype, "alphaDiscardMode", void 0), e2([r12({ count: i7.COUNT })], c16.prototype, "doubleSidedMode", void 0), e2([r12({ count: d2.COUNT })], c16.prototype, "pbrMode", void 0), e2([r12({ count: n7.COUNT })], c16.prototype, "cullFace", void 0), e2([r12({ count: o11.COUNT })], c16.prototype, "transparencyPassType", void 0), e2([r12({ count: a8.COUNT })], c16.prototype, "normalType", void 0), e2([r12({ count: d.COUNT })], c16.prototype, "textureCoordinateType", void 0), e2([r12({ count: e12.COUNT })], c16.prototype, "customDepthTest", void 0), e2([r12()], c16.prototype, "spherical", void 0), e2([r12()], c16.prototype, "hasVertexColors", void 0), e2([r12()], c16.prototype, "hasSymbolColors", void 0), e2([r12()], c16.prototype, "hasVerticalOffset", void 0), e2([r12()], c16.prototype, "hasSlicePlane", void 0), e2([r12()], c16.prototype, "hasSliceHighlight", void 0), e2([r12()], c16.prototype, "hasColorTexture", void 0), e2([r12()], c16.prototype, "hasMetallicRoughnessTexture", void 0), e2([r12()], c16.prototype, "hasEmissionTexture", void 0), e2([r12()], c16.prototype, "hasOcclusionTexture", void 0), e2([r12()], c16.prototype, "hasNormalTexture", void 0), e2([r12()], c16.prototype, "hasScreenSizePerspective", void 0), e2([r12()], c16.prototype, "hasVertexTangents", void 0), e2([r12()], c16.prototype, "hasOccludees", void 0), e2([r12()], c16.prototype, "hasMultipassTerrain", void 0), e2([r12()], c16.prototype, "hasModelTransformation", void 0), e2([r12()], c16.prototype, "offsetBackfaces", void 0), e2([r12()], c16.prototype, "vvSize", void 0), e2([r12()], c16.prototype, "vvColor", void 0), e2([r12()], c16.prototype, "receiveShadows", void 0), e2([r12()], c16.prototype, "receiveAmbientOcclusion", void 0), e2([r12()], c16.prototype, "textureAlphaPremultiplied", void 0), e2([r12()], c16.prototype, "instanced", void 0), e2([r12()], c16.prototype, "instancedColor", void 0), e2([r12()], c16.prototype, "objectAndLayerIdColorInstanced", void 0), e2([r12()], c16.prototype, "instancedDoublePrecision", void 0), e2([r12()], c16.prototype, "doublePrecisionRequiresObfuscation", void 0), e2([r12()], c16.prototype, "writeDepth", void 0), e2([r12()], c16.prototype, "transparent", void 0), e2([r12()], c16.prototype, "enableOffset", void 0), e2([r12()], c16.prototype, "cullAboveGround", void 0), e2([r12()], c16.prototype, "snowCover", void 0), e2([r12()], c16.prototype, "hasColorTextureTransform", void 0), e2([r12()], c16.prototype, "hasEmissionTextureTransform", void 0), e2([r12()], c16.prototype, "hasNormalTextureTransform", void 0), e2([r12()], c16.prototype, "hasOcclusionTextureTransform", void 0), e2([r12()], c16.prototype, "hasMetallicRoughnessTextureTransform", void 0), e2([r12({ constValue: true })], c16.prototype, "hasVvInstancing", void 0), e2([r12({ constValue: false })], c16.prototype, "useCustomDTRExponentForWater", void 0), e2([r12({ constValue: false })], c16.prototype, "supportsTextureAtlas", void 0), e2([r12({ constValue: true })], c16.prototype, "useFillLights", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/RealisticTreeTechnique.js
var t16 = class extends _7 {
  initializeConfiguration(i14, a12) {
    super.initializeConfiguration(i14, a12), a12.hasMetallicRoughnessTexture = false, a12.hasEmissionTexture = false, a12.hasOcclusionTexture = false, a12.hasNormalTexture = false, a12.hasModelTransformation = false, a12.normalType = a8.Attribute, a12.doubleSidedMode = i7.WindingOrder, a12.hasVertexTangents = false;
  }
  initializeProgram(e18) {
    return this._initializeProgram(e18, t16.shader);
  }
};
t16.shader = new t11(R2, () => import("./RealisticTree.glsl-SYEMTSMS.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultMaterial.js
var E9 = class extends h4 {
  constructor(e18) {
    super(e18, j2), this.supportsEdges = true, this._configuration = new c16(), this._vertexBufferLayout = L3(this.parameters);
  }
  isVisibleForOutput(e18) {
    return e18 !== h2.Shadow && e18 !== h2.ShadowExcludeHighlight && e18 !== h2.ShadowHighlight || this.parameters.castShadows;
  }
  isVisible() {
    const t17 = this.parameters;
    if (!super.isVisible() || 0 === t17.layerOpacity)
      return false;
    const { instanced: r15, hasVertexColors: a12, hasSymbolColors: s12, vvColorEnabled: i14 } = t17, o18 = r(r15) && r15.includes("color"), n13 = "replace" === t17.colorMixMode, h9 = t17.opacity > 0, c17 = t17.externalColor && t17.externalColor[3] > 0;
    return a12 && (o18 || i14 || s12) ? !!n13 || h9 : a12 ? n13 ? c17 : h9 : o18 || i14 || s12 ? !!n13 || h9 : n13 ? c17 : h9;
  }
  getConfiguration(t17, r15) {
    return this._configuration.output = t17, this._configuration.hasNormalTexture = !!this.parameters.normalTextureId, this._configuration.hasColorTexture = !!this.parameters.textureId, this._configuration.hasVertexTangents = this.parameters.hasVertexTangents, this._configuration.instanced = !!this.parameters.instanced, this._configuration.instancedDoublePrecision = this.parameters.instancedDoublePrecision, this._configuration.vvSize = this.parameters.vvSizeEnabled, this._configuration.hasVerticalOffset = r(this.parameters.verticalOffset), this._configuration.hasScreenSizePerspective = r(this.parameters.screenSizePerspective), this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasSliceHighlight = this.parameters.hasSliceHighlight, this._configuration.alphaDiscardMode = this.parameters.textureAlphaMode, this._configuration.normalType = this.parameters.normalType, this._configuration.transparent = this.parameters.transparent, this._configuration.writeDepth = this.parameters.writeDepth, r(this.parameters.customDepthTest) && (this._configuration.customDepthTest = this.parameters.customDepthTest), this._configuration.hasOccludees = this.parameters.hasOccludees, this._configuration.cullFace = this.parameters.hasSlicePlane ? n7.None : this.parameters.cullFace, this._configuration.hasMultipassTerrain = r15.multipassTerrain.enabled, this._configuration.cullAboveGround = r15.multipassTerrain.cullAboveGround, this._configuration.hasModelTransformation = r(this.parameters.modelTransformation), t17 !== h2.Color && t17 !== h2.Alpha || (this._configuration.hasVertexColors = this.parameters.hasVertexColors, this._configuration.hasSymbolColors = this.parameters.hasSymbolColors, this.parameters.treeRendering ? this._configuration.doubleSidedMode = i7.WindingOrder : this._configuration.doubleSidedMode = this.parameters.doubleSided && "normal" === this.parameters.doubleSidedType ? i7.View : this.parameters.doubleSided && "winding-order" === this.parameters.doubleSidedType ? i7.WindingOrder : i7.None, this._configuration.instancedColor = r(this.parameters.instanced) && this.parameters.instanced.includes("color"), this._configuration.receiveShadows = this.parameters.receiveShadows && this.parameters.shadowMappingEnabled, this._configuration.receiveAmbientOcclusion = !!r15.ssaoHelper.active && this.parameters.receiveSSAO, this._configuration.vvColor = this.parameters.vvColorEnabled, this._configuration.textureAlphaPremultiplied = !!this.parameters.textureAlphaPremultiplied, this._configuration.pbrMode = this.parameters.usePBR ? this.parameters.isSchematic ? d2.Schematic : d2.Normal : d2.Disabled, this._configuration.hasMetallicRoughnessTexture = !!this.parameters.metallicRoughnessTextureId, this._configuration.hasEmissionTexture = !!this.parameters.emissiveTextureId, this._configuration.hasOcclusionTexture = !!this.parameters.occlusionTextureId, this._configuration.offsetBackfaces = !(!this.parameters.transparent || !this.parameters.offsetTransparentBackfaces), this._configuration.transparencyPassType = r15.transparencyPassType, this._configuration.enableOffset = r15.camera.relativeElevation < S4, this._configuration.snowCover = this.hasSnowCover(r15), this._configuration.hasColorTextureTransform = !!this.parameters.colorTextureTransformMatrix, this._configuration.hasNormalTextureTransform = !!this.parameters.normalTextureTransformMatrix, this._configuration.hasEmissionTextureTransform = !!this.parameters.emissiveTextureTransformMatrix, this._configuration.hasOcclusionTextureTransform = !!this.parameters.occlusionTextureTransformMatrix, this._configuration.hasMetallicRoughnessTextureTransform = !!this.parameters.metallicRoughnessTextureTransformMatrix), this._configuration;
  }
  hasSnowCover(t17) {
    return r(t17.weather) && t17.weatherVisible && "snowy" === t17.weather.type && "enabled" === t17.weather.snowCover;
  }
  intersect(c17, l9, m6, p5, d7, f10) {
    if (r(this.parameters.verticalOffset)) {
      const e18 = m6.camera;
      o2(z3, l9[12], l9[13], l9[14]);
      let c18 = null;
      switch (m6.viewingMode) {
        case l3.Global:
          c18 = z(B2, z3);
          break;
        case l3.Local:
          c18 = r3(B2, N4);
      }
      let f11 = 0;
      const g8 = e5(G4, z3, e18.eye), T6 = s3(g8), _8 = g(g8, g8, 1 / T6);
      let x8 = null;
      this.parameters.screenSizePerspective && (x8 = P(c18, _8)), f11 += N(e18, T6, this.parameters.verticalOffset, x8 ?? 0, this.parameters.screenSizePerspective), g(c18, c18, f11), S(H2, c18, m6.transform.inverseRotation), p5 = e5(D4, p5, H2), d7 = e5(V3, d7, H2);
    }
    x4(c17, m6, p5, d7, y3(m6.verticalOffset), f10);
  }
  requiresSlot(e18, t17) {
    if (t17 === h2.Color || t17 === h2.Alpha || t17 === h2.Depth || t17 === h2.Normal || t17 === h2.Shadow || t17 === h2.ShadowHighlight || t17 === h2.ShadowExcludeHighlight || t17 === h2.Highlight || t17 === h2.ObjectAndLayerIdColor) {
      return e18 === (this.parameters.transparent ? this.parameters.writeDepth ? E8.TRANSPARENT_MATERIAL : E8.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL : E8.OPAQUE_MATERIAL) || e18 === E8.DRAPED_MATERIAL;
    }
    return false;
  }
  createGLMaterial(e18) {
    return new I3(e18);
  }
  createBufferWriter() {
    return new r14(this._vertexBufferLayout);
  }
};
var I3 = class extends h3 {
  constructor(e18) {
    super({ ...e18, ...e18.material.parameters });
  }
  _updateShadowState(e18) {
    e18.shadowMap.enabled !== this._material.parameters.shadowMappingEnabled && this._material.setParameters({ shadowMappingEnabled: e18.shadowMap.enabled });
  }
  _updateOccludeeState(e18) {
    e18.hasOccludees !== this._material.parameters.hasOccludees && this._material.setParameters({ hasOccludees: e18.hasOccludees });
  }
  beginSlot(e18) {
    this._output !== h2.Color && this._output !== h2.Alpha || (this._updateShadowState(e18), this._updateOccludeeState(e18));
    const r15 = this._material.parameters;
    this.updateTexture(r15.textureId);
    const a12 = e18.camera.viewInverseTransposeMatrix;
    return o2(r15.origin, a12[3], a12[7], a12[11]), this._material.setParameters(this.textureBindParameters), this.ensureTechnique(r15.treeRendering ? t16 : _7, e18);
  }
};
var P4 = class extends k {
  constructor() {
    super(...arguments), this.initTextureTransparent = false, this.treeRendering = false, this.hasVertexTangents = false;
  }
};
var j2 = new P4();
function L3(e18) {
  const t17 = T().vec3f(O4.POSITION).vec3f(O4.NORMAL), r15 = e18.textureId || e18.normalTextureId || e18.metallicRoughnessTextureId || e18.emissiveTextureId || e18.occlusionTextureId;
  return e18.hasVertexTangents && t17.vec4f(O4.TANGENT), r15 && t17.vec2f(O4.UV0), e18.hasVertexColors && t17.vec4u8(O4.COLOR), e18.hasSymbolColors && t17.vec4u8(O4.SYMBOLCOLOR), has("enable-feature:objectAndLayerId-rendering") && t17.vec4u8(O4.OBJECTANDLAYERIDCOLOR), t17;
}
var D4 = n2();
var V3 = n2();
var N4 = r2(0, 0, 1);
var B2 = n2();
var H2 = n2();
var z3 = n2();
var G4 = n2();

// node_modules/@arcgis/core/views/3d/layers/graphics/wosrLoader.js
var j3 = s.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");
async function A6(e18, t17) {
  const n13 = await M5(e18, t17), s12 = await k2(n13.textureDefinitions ?? {}, t17);
  let o18 = 0;
  for (const r15 in s12)
    if (s12.hasOwnProperty(r15)) {
      const e19 = s12[r15];
      o18 += (e19 == null ? void 0 : e19.image) ? e19.image.width * e19.image.height * 4 : 0;
    }
  return { resource: n13, textures: s12, size: o18 + e10(n13) };
}
async function M5(r15, n13) {
  const s12 = r(n13) && n13.streamDataRequester;
  if (s12)
    return P5(r15, s12, n13);
  const i14 = await b(U2(r15, e(n13)));
  if (true === i14.ok)
    return i14.value.data;
  w(i14.error), U3(i14.error);
}
async function P5(e18, r15, n13) {
  const s12 = await b(r15.request(e18, "json", n13));
  if (true === s12.ok)
    return s12.value;
  w(s12.error), U3(s12.error.details.url);
}
function U3(e18) {
  throw new s2("", `Request for object resource failed: ${e18}`);
}
function E10(e18) {
  const t17 = e18.params, r15 = t17.topology;
  let n13 = true;
  switch (t17.vertexAttributes || (j3.warn("Geometry must specify vertex attributes"), n13 = false), t17.topology) {
    case "PerAttributeArray":
      break;
    case "Indexed":
    case null:
    case void 0: {
      const e19 = t17.faces;
      if (e19) {
        if (t17.vertexAttributes)
          for (const r16 in t17.vertexAttributes) {
            const t18 = e19[r16];
            t18 && t18.values ? (null != t18.valueType && "UInt32" !== t18.valueType && (j3.warn(`Unsupported indexed geometry indices type '${t18.valueType}', only UInt32 is currently supported`), n13 = false), null != t18.valuesPerElement && 1 !== t18.valuesPerElement && (j3.warn(`Unsupported indexed geometry values per element '${t18.valuesPerElement}', only 1 is currently supported`), n13 = false)) : (j3.warn(`Indexed geometry does not specify face indices for '${r16}' attribute`), n13 = false);
          }
      } else
        j3.warn("Indexed geometries must specify faces"), n13 = false;
      break;
    }
    default:
      j3.warn(`Unsupported topology '${r15}'`), n13 = false;
  }
  e18.params.material || (j3.warn("Geometry requires material"), n13 = false);
  const s12 = e18.params.vertexAttributes;
  for (const o18 in s12) {
    s12[o18].values || (j3.warn("Geometries with externally defined attributes are not yet supported"), n13 = false);
  }
  return n13;
}
function I4(e18, t17) {
  const r15 = new Array(), n13 = new Array(), s12 = new Array(), a12 = new t9(), l9 = e18.resource, m6 = r9.parse(l9.version || "1.0", "wosr");
  R3.validate(m6);
  const f10 = l9.model.name, d7 = l9.model.geometries, b3 = l9.materialDefinitions ?? {}, v6 = e18.textures;
  let j4 = 0;
  const A7 = /* @__PURE__ */ new Map();
  for (let u10 = 0; u10 < d7.length; u10++) {
    const e19 = d7[u10];
    if (!E10(e19))
      continue;
    const l10 = O8(e19), c17 = e19.params.vertexAttributes, m7 = [];
    for (const t18 in c17) {
      const e20 = c17[t18], r16 = e20.values;
      m7.push([t18, new s5(r16, e20.valuesPerElement, true)]);
    }
    const f11 = [];
    if ("PerAttributeArray" !== e19.params.topology) {
      const t18 = e19.params.faces;
      for (const e20 in t18)
        f11.push([e20, t18[e20].values]);
    }
    const M6 = l10.texture, P6 = v6 && v6[M6];
    if (P6 && !A7.has(M6)) {
      const { image: e20, params: t18 } = P6, r16 = new G3(e20, t18);
      n13.push(r16), A7.set(M6, r16);
    }
    const U4 = A7.get(M6), I5 = U4 ? U4.id : void 0, T6 = l10.material;
    let k3 = a12.get(T6, M6);
    if (t(k3)) {
      const e20 = b3[T6.substring(T6.lastIndexOf("/") + 1)].params;
      1 === e20.transparency && (e20.transparency = 0);
      const r16 = P6 && P6.alphaChannelUsage, n14 = e20.transparency > 0 || "transparency" === r16 || "maskAndTransparency" === r16, s13 = P6 ? q2(P6.alphaChannelUsage) : void 0, i14 = { ambient: e4(e20.diffuse), diffuse: e4(e20.diffuse), opacity: 1 - (e20.transparency || 0), transparent: n14, textureAlphaMode: s13, textureAlphaCutoff: 0.33, textureId: I5, initTextureTransparent: true, doubleSided: true, cullFace: n7.None, colorMixMode: e20.externalColorMixMode || "tint", textureAlphaPremultiplied: !!P6 && !!P6.params.preMultiplyAlpha };
      r(t17) && t17.materialParamsMixin && Object.assign(i14, t17.materialParamsMixin), k3 = new E9(i14), a12.set(T6, M6, k3);
    }
    s12.push(k3);
    const R4 = new v3(k3, m7, f11);
    j4 += f11.position ? f11.position.length : 0, r15.push(R4);
  }
  return { engineResources: [{ name: f10, stageResources: { textures: n13, materials: s12, geometries: r15 }, pivotOffset: l9.model.pivotOffset, numberOfVertices: j4, lodThreshold: null }], referenceBoundingBox: T5(r15) };
}
function T5(e18) {
  const t17 = S2();
  return e18.forEach((e19) => {
    const r15 = e19.boundingInfo;
    r(r15) && (c3(t17, r15.bbMin), c3(t17, r15.bbMax));
  }), t17;
}
async function k2(e18, t17) {
  const r15 = [];
  for (const a12 in e18) {
    const n14 = e18[a12], s13 = n14.images[0].data;
    if (!s13) {
      j3.warn("Externally referenced texture data is not yet supported");
      continue;
    }
    const i14 = n14.encoding + ";base64," + s13, u10 = "/textureDefinitions/" + a12, l9 = "rgba" === n14.channels ? n14.alphaChannelUsage || "transparency" : "none", c17 = { noUnpackFlip: true, wrap: { s: D.REPEAT, t: D.REPEAT }, preMultiplyAlpha: q2(l9) !== u4.Opaque }, p5 = r(t17) && t17.disableTextures ? Promise.resolve(null) : t10(i14, t17);
    r15.push(p5.then((e19) => ({ refId: u10, image: e19, params: c17, alphaChannelUsage: l9 })));
  }
  const n13 = await Promise.all(r15), s12 = {};
  for (const o18 of n13)
    s12[o18.refId] = o18;
  return s12;
}
function q2(e18) {
  switch (e18) {
    case "mask":
      return u4.Mask;
    case "maskAndTransparency":
      return u4.MaskBlend;
    case "none":
      return u4.Opaque;
    default:
      return u4.Blend;
  }
}
function O8(e18) {
  const t17 = e18.params;
  return { id: 1, material: t17.material, texture: t17.texture, region: t17.texture };
}
var R3 = new r9(1, 2, "wosr");

// node_modules/@arcgis/core/views/3d/layers/graphics/objectResourceUtils.js
async function te(o18, s12) {
  const i14 = re(a3(o18));
  if ("wosr" === i14.fileType) {
    const e18 = await (s12.cache ? s12.cache.loadWOSR(i14.url, s12) : A6(i14.url, s12)), { engineResources: t17, referenceBoundingBox: r15 } = I4(e18, s12);
    return { lods: t17, referenceBoundingBox: r15, isEsriSymbolResource: false, isWosr: true };
  }
  const n13 = await (s12.cache ? s12.cache.loadGLTF(i14.url, s12, !!s12.usePBR) : m(new n6(s12.streamDataRequester), i14.url, s12, s12.usePBR)), a12 = x(n13.model.meta, "ESRI_proxyEllipsoid"), u10 = n13.meta.isEsriSymbolResource && r(a12) && n13.meta.uri.includes("/RealisticTrees/");
  u10 && !n13.customMeta.esriTreeRendering && (n13.customMeta.esriTreeRendering = true, le(n13, a12));
  const l9 = !!s12.usePBR, c17 = n13.meta.isEsriSymbolResource ? { usePBR: l9, isSchematic: false, treeRendering: u10, mrrFactors: [0, 1, 0.2] } : { usePBR: l9, isSchematic: false, treeRendering: false, mrrFactors: [0, 1, 0.5] }, m6 = { ...s12.materialParamsMixin, treeRendering: u10 }, { engineResources: f10, referenceBoundingBox: d7 } = oe(n13, c17, m6, s12.skipHighLods && null == i14.specifiedLodIndex ? { skipHighLods: true } : { skipHighLods: false, singleLodIndex: i14.specifiedLodIndex });
  return { lods: f10, referenceBoundingBox: d7, isEsriSymbolResource: n13.meta.isEsriSymbolResource, isWosr: false };
}
function re(e18) {
  const t17 = e18.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);
  if (t17)
    return { fileType: "gltf", url: t17[1], specifiedLodIndex: null != t17[4] ? Number(t17[4]) : null };
  return e18.match(/(.*\.(json|json\.gz))$/) ? { fileType: "wosr", url: e18, specifiedLodIndex: null } : { fileType: "unknown", url: e18, specifiedLodIndex: null };
}
function oe(e18, t17, o18, s12) {
  const i14 = e18.model, n13 = new Array(), a12 = /* @__PURE__ */ new Map(), u10 = /* @__PURE__ */ new Map(), l9 = i14.lods.length, c17 = S2();
  return i14.lods.forEach((e19, m6) => {
    const f10 = true === s12.skipHighLods && (l9 > 1 && 0 === m6 || l9 > 3 && 1 === m6) || false === s12.skipHighLods && null != s12.singleLodIndex && m6 !== s12.singleLodIndex;
    if (f10 && 0 !== m6)
      return;
    const d7 = new t13(e19.name, e19.lodThreshold, [0, 0, 0]);
    e19.parts.forEach((e20) => {
      const s13 = f10 ? new E9({}) : se(i14, e20, d7, t17, o18, a12, u10), { geometry: n14, vertexCount: l10 } = ie(e20, r(s13) ? s13 : new E9({})), p5 = n14.boundingInfo;
      r(p5) && 0 === m6 && (c3(c17, p5.bbMin), c3(c17, p5.bbMax)), r(s13) && (d7.stageResources.geometries.push(n14), d7.numberOfVertices += l10);
    }), f10 || n13.push(d7);
  }), { engineResources: n13, referenceBoundingBox: c17 };
}
function se(e18, t17, s12, i14, n13, a12, u10) {
  const l9 = t17.material + (t17.attributes.normal ? "_normal" : "") + (t17.attributes.color ? "_color" : "") + (t17.attributes.texCoord0 ? "_texCoord0" : "") + (t17.attributes.tangent ? "_tangent" : ""), c17 = e18.materials.get(t17.material), m6 = r(t17.attributes.texCoord0), f10 = r(t17.attributes.normal);
  if (t(c17))
    return null;
  const d7 = ae(c17.alphaMode);
  if (!a12.has(l9)) {
    if (m6) {
      const t18 = (t19, o19 = false) => {
        if (r(t19) && !u10.has(t19)) {
          const s14 = e18.textures.get(t19);
          if (r(s14)) {
            const e19 = s14.data;
            u10.set(t19, new G3(t7(e19) ? e19.data : e19, { ...s14.parameters, preMultiplyAlpha: !t7(e19) && o19, encoding: t7(e19) && r(e19.encoding) ? e19.encoding : void 0 }));
          }
        }
      };
      t18(c17.textureColor, d7 !== u4.Opaque), t18(c17.textureNormal), t18(c17.textureOcclusion), t18(c17.textureEmissive), t18(c17.textureMetallicRoughness);
    }
    const o18 = c17.color[0] ** (1 / o7), s13 = c17.color[1] ** (1 / o7), p6 = c17.color[2] ** (1 / o7), g8 = c17.emissiveFactor[0] ** (1 / o7), b3 = c17.emissiveFactor[1] ** (1 / o7), x8 = c17.emissiveFactor[2] ** (1 / o7), h9 = r(c17.textureColor) && m6 ? u10.get(c17.textureColor) : null;
    a12.set(l9, new E9({ ...i14, transparent: d7 === u4.Blend, customDepthTest: e12.Lequal, textureAlphaMode: d7, textureAlphaCutoff: c17.alphaCutoff, diffuse: [o18, s13, p6], ambient: [o18, s13, p6], opacity: c17.opacity, doubleSided: c17.doubleSided, doubleSidedType: "winding-order", cullFace: c17.doubleSided ? n7.None : n7.Back, hasVertexColors: !!t17.attributes.color, hasVertexTangents: !!t17.attributes.tangent, normalType: f10 ? a8.Attribute : a8.ScreenDerivative, castShadows: true, receiveSSAO: true, textureId: r(h9) ? h9.id : void 0, colorMixMode: c17.colorMixMode, normalTextureId: r(c17.textureNormal) && m6 ? u10.get(c17.textureNormal).id : void 0, textureAlphaPremultiplied: r(h9) && !!h9.params.preMultiplyAlpha, occlusionTextureId: r(c17.textureOcclusion) && m6 ? u10.get(c17.textureOcclusion).id : void 0, emissiveTextureId: r(c17.textureEmissive) && m6 ? u10.get(c17.textureEmissive).id : void 0, metallicRoughnessTextureId: r(c17.textureMetallicRoughness) && m6 ? u10.get(c17.textureMetallicRoughness).id : void 0, emissiveFactor: [g8, b3, x8], mrrFactors: [c17.metallicFactor, c17.roughnessFactor, i14.mrrFactors[2]], isSchematic: false, colorTextureTransformMatrix: c10(c17.colorTextureTransform), normalTextureTransformMatrix: c10(c17.normalTextureTransform), occlusionTextureTransformMatrix: c10(c17.occlusionTextureTransform), emissiveTextureTransformMatrix: c10(c17.emissiveTextureTransform), metallicRoughnessTextureTransformMatrix: c10(c17.metallicRoughnessTextureTransform), ...n13 }));
  }
  const p5 = a12.get(l9);
  if (s12.stageResources.materials.push(p5), m6) {
    const e19 = (e20) => {
      r(e20) && s12.stageResources.textures.push(u10.get(e20));
    };
    e19(c17.textureColor), e19(c17.textureNormal), e19(c17.textureOcclusion), e19(c17.textureEmissive), e19(c17.textureMetallicRoughness);
  }
  return p5;
}
function ie(e18, t17) {
  const o18 = e18.attributes.position.count, i14 = ue(e18.indices || o18, e18.primitiveType), n13 = r8(i3, o18);
  t4(n13, e18.attributes.position, e18.transform);
  const a12 = [[O4.POSITION, new s5(n13.typedBuffer, n13.elementCount, true)]], u10 = [[O4.POSITION, i14]];
  if (r(e18.attributes.normal)) {
    const t18 = r8(i3, o18);
    g2(ne, e18.transform), r6(t18, e18.attributes.normal, ne), a12.push([O4.NORMAL, new s5(t18.typedBuffer, t18.elementCount, true)]), u10.push([O4.NORMAL, i14]);
  }
  if (r(e18.attributes.tangent)) {
    const t18 = r8(c5, o18);
    g2(ne, e18.transform), r7(t18, e18.attributes.tangent, ne), a12.push([O4.TANGENT, new s5(t18.typedBuffer, t18.elementCount, true)]), u10.push([O4.TANGENT, i14]);
  }
  if (r(e18.attributes.texCoord0)) {
    const t18 = r8(u2, o18);
    n5(t18, e18.attributes.texCoord0), a12.push([O4.UV0, new s5(t18.typedBuffer, t18.elementCount, true)]), u10.push([O4.UV0, i14]);
  }
  if (r(e18.attributes.color)) {
    const t18 = r8(x2, o18);
    if (4 === e18.attributes.color.elementCount)
      e18.attributes.color instanceof c5 ? o5(t18, e18.attributes.color, 255) : e18.attributes.color instanceof x2 ? e11(t18, e18.attributes.color) : e18.attributes.color instanceof L && o5(t18, e18.attributes.color, 1 / 256);
    else {
      t5(t18, 255, 255, 255, 255);
      const r15 = new O2(t18.buffer, 0, 4);
      e18.attributes.color instanceof i3 ? f2(r15, e18.attributes.color, 255) : e18.attributes.color instanceof O2 ? e9(r15, e18.attributes.color) : e18.attributes.color instanceof E2 && f2(r15, e18.attributes.color, 1 / 256);
    }
    a12.push([O4.COLOR, new s5(t18.typedBuffer, t18.elementCount, true)]), u10.push([O4.COLOR, i14]);
  }
  return { geometry: new v3(t17, a12, u10), vertexCount: o18 };
}
var ne = e6();
function ae(e18) {
  switch (e18) {
    case "BLEND":
      return u4.Blend;
    case "MASK":
      return u4.Mask;
    case "OPAQUE":
    case null:
    case void 0:
      return u4.Opaque;
  }
}
function ue(e18, t17) {
  switch (t17) {
    case E3.TRIANGLES:
      return o6(e18);
    case E3.TRIANGLE_STRIP:
      return f3(e18);
    case E3.TRIANGLE_FAN:
      return i6(e18);
  }
}
function le(e18, t17) {
  for (let r15 = 0; r15 < e18.model.lods.length; ++r15) {
    const s12 = e18.model.lods[r15];
    for (const i14 of s12.parts) {
      const s13 = i14.attributes.normal;
      if (t(s13))
        return;
      const g8 = i14.attributes.position, b3 = g8.count, h9 = n2(), T6 = n2(), w4 = n2(), j4 = r8(x2, b3), M6 = r8(i3, b3), v6 = h(e7(), i14.transform);
      for (let o18 = 0; o18 < b3; o18++) {
        g8.getVec(o18, T6), s13.getVec(o18, h9), O(T6, T6, i14.transform), e5(w4, T6, t17.center), i(w4, w4, t17.radius);
        const n13 = w4[2], a12 = s3(w4), p5 = Math.min(0.45 + 0.55 * a12 * a12, 1);
        i(w4, w4, t17.radius), null !== v6 && O(w4, w4, v6), z(w4, w4), r15 + 1 !== e18.model.lods.length && e18.model.lods.length > 1 && A(w4, w4, h9, n13 > -1 ? 0.2 : Math.min(-4 * n13 - 3.8, 1)), M6.setVec(o18, w4), j4.set(o18, 0, 255 * p5), j4.set(o18, 1, 255 * p5), j4.set(o18, 2, 255 * p5), j4.set(o18, 3, 255);
      }
      i14.attributes.normal = M6, i14.attributes.color = j4;
    }
  }
}
export {
  te as fetch,
  oe as gltfToEngineResources,
  re as parseUrl
};
//# sourceMappingURL=objectResourceUtils-R5RGENYR.js.map
