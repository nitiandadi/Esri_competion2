import {
  o
} from "./chunk-B62I7GXM.js";
import {
  r as r2
} from "./chunk-5XHWTD5S.js";
import {
  i as i2
} from "./chunk-QMR6RKUD.js";
import "./chunk-Y6E6VI7G.js";
import {
  He
} from "./chunk-ABCADCZZ.js";
import "./chunk-YYZ27YWF.js";
import "./chunk-J7UL3GVF.js";
import "./chunk-I472ON7U.js";
import "./chunk-UQVFVW24.js";
import "./chunk-BR62GZUK.js";
import "./chunk-PKRRI2EQ.js";
import "./chunk-LYJMRI6I.js";
import "./chunk-Z4V4JOQU.js";
import "./chunk-76KZNCTA.js";
import "./chunk-2HL3WCZQ.js";
import "./chunk-IARZYQAP.js";
import "./chunk-XE7ZCKKE.js";
import "./chunk-YXIPNXU3.js";
import "./chunk-FCDGNIOF.js";
import "./chunk-FAQPWMFY.js";
import "./chunk-KAJ7UKNO.js";
import "./chunk-KXH42XSQ.js";
import "./chunk-KQT37XTK.js";
import "./chunk-ARRABRN2.js";
import "./chunk-XKQGIVQO.js";
import "./chunk-XJBZ6UIM.js";
import "./chunk-2LQUYG3Y.js";
import "./chunk-Y26PAPAL.js";
import "./chunk-TQCDA7Z6.js";
import "./chunk-TDFTAVQL.js";
import "./chunk-3ZOUEUIN.js";
import "./chunk-NOYFNECX.js";
import "./chunk-7HK5OJHH.js";
import "./chunk-VRZTCZFJ.js";
import "./chunk-AZFJJ5Y2.js";
import "./chunk-EJKIE4MZ.js";
import "./chunk-YZ3HZMEM.js";
import "./chunk-5XBZ477A.js";
import "./chunk-YUXNJDFN.js";
import "./chunk-TKZTELJQ.js";
import "./chunk-CPJE5ZZA.js";
import "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import "./chunk-74KT22JL.js";
import "./chunk-DE73MUZI.js";
import {
  a,
  c,
  i,
  u
} from "./chunk-BQHZXXFC.js";
import "./chunk-4JB2KWLF.js";
import {
  x as x2
} from "./chunk-3MAMOMOP.js";
import "./chunk-YUDZNCBK.js";
import "./chunk-QPSL5BDS.js";
import {
  d
} from "./chunk-37HBRPHL.js";
import "./chunk-AIOICOJJ.js";
import "./chunk-7WIVOZQ6.js";
import "./chunk-OXCMSIKI.js";
import "./chunk-HWGER6NN.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-ZXEHLMMH.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-G3ZCYHOR.js";
import "./chunk-TKLFTPA5.js";
import "./chunk-F6Y6UABE.js";
import "./chunk-4ZMXDH56.js";
import "./chunk-EOI6A2XM.js";
import "./chunk-5W2WWLX7.js";
import "./chunk-U6PCZE74.js";
import "./chunk-WLWGIFGY.js";
import "./chunk-IZJW67TO.js";
import "./chunk-Q4UXP7RG.js";
import "./chunk-JZSNGIOH.js";
import "./chunk-EXHPOUUQ.js";
import "./chunk-6PNW7TCI.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import "./chunk-QP5ZWBKN.js";
import "./chunk-QAGMOCSO.js";
import "./chunk-EPZLAQP3.js";
import "./chunk-VSUGA5AN.js";
import "./chunk-E3JHIVZP.js";
import "./chunk-3ACAMBZX.js";
import "./chunk-G3A2XEXX.js";
import "./chunk-JKBONAYS.js";
import {
  f,
  y
} from "./chunk-YSJ4W32U.js";
import "./chunk-3EIJOCWD.js";
import "./chunk-HRIBADXS.js";
import "./chunk-CSFUQCFV.js";
import "./chunk-ZUIHAM2A.js";
import "./chunk-SABBLK7S.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-7FGYV4GW.js";
import {
  b
} from "./chunk-CXHYHUY6.js";
import "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-II3EAW7L.js";
import "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import "./chunk-6XDV3BWZ.js";
import "./chunk-CH2BQDQT.js";
import "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-IMKS3PQX.js";
import "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-FZCZQIVS.js";
import "./chunk-JYX5X6UR.js";
import "./chunk-MQUNEV3K.js";
import "./chunk-WVICJPEU.js";
import "./chunk-TZBBKXOW.js";
import "./chunk-W6NQZGUS.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-MEFRCURY.js";
import "./chunk-FSB7TIRN.js";
import "./chunk-UIMO4FGN.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-E4M4B5ZQ.js";
import "./chunk-JATK7CEQ.js";
import "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import "./chunk-AFQAO5F4.js";
import "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-RLEMMDH4.js";
import {
  E,
  x
} from "./chunk-6ZUWLK7F.js";
import {
  s2,
  s3
} from "./chunk-YVZY5LDV.js";
import "./chunk-H32MMKAJ.js";
import {
  s
} from "./chunk-MKHZ5X6F.js";
import {
  r,
  t
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/layers/save/featureLayerUtils.js
var I = s2.getLogger("esri.layers.FeatureLayer");
var S = "Feature Service";
function g(e, t2) {
  return `Layer (title: ${e.title}, id: ${e.id}) of type '${e.declaredClass}' ${t2}`;
}
function j(e, r3) {
  if (r3.type !== S)
    throw new s3("feature-layer:portal-item-wrong-type", g(e, `should have portal item of type "${S}"`));
}
async function L(e) {
  if (await e.load(), f(e))
    throw new s3("feature-layer:save", g(e, "using an in-memory source cannot be saved to a portal item"));
}
function P(e, r3) {
  let a2 = (e.messages ?? []).filter(({ type: e2 }) => "error" === e2).map(({ name: e2, message: r4, details: a3 }) => new s3(e2, r4, a3));
  if ((r3 == null ? void 0 : r3.ignoreUnsupported) && (a2 = a2.filter(({ name: e2 }) => "layer:unsupported" !== e2 && "symbol:unsupported" !== e2 && "symbol-layer:unsupported" !== e2 && "property:unsupported" !== e2 && "url:unsupported" !== e2)), a2.length > 0)
    throw new s3("feature-layer:save", "Failed to save feature layer due to unsupported or invalid content. See 'details.errors' for more detailed information", { errors: a2 });
}
async function J(e, t2, r3) {
  "beforeSave" in e && "function" == typeof e.beforeSave && await e.beforeSave();
  const a2 = e.write({}, t2);
  return P(t2, r3), a2;
}
function N(e) {
  const { layer: t2, layerJSON: r3 } = e;
  return t2.isTable ? { layers: [], tables: [r3] } : { layers: [r3], tables: [] };
}
function O(e) {
  i(e, u.JSAPI), e.typeKeywords && (e.typeKeywords = e.typeKeywords.filter((e2, t2, r3) => r3.indexOf(e2) === t2));
}
function E2(e) {
  const r3 = e.portalItem;
  if (!r3)
    throw I.error("save: requires the portalItem property to be set"), new s3("feature-layer:portal-item-not-set", g(e, "requires the portalItem property to be set"));
  if (!r3.loaded)
    throw new s3("feature-layer:portal-item-not-loaded", g(e, "cannot be saved to a portal item that does not exist or is inaccessible"));
  j(e, r3);
}
async function T(e, t2) {
  return /\/\d+\/?$/.test(e.url ?? "") ? N(t2[0]) : $(e, t2);
}
async function $(e, t2) {
  const { layer: { url: r3, customParameters: a2, apiKey: o2 } } = t2[0];
  let s4 = await e.fetchData("json");
  s4 && null != s4.layers && null != s4.tables || (s4 = await x3(s4, { url: r3 ?? "", customParameters: a2, apiKey: o2 }, t2.map((e2) => e2.layer.layerId)));
  for (const l of t2)
    K(l.layer, l.layerJSON, s4);
  return s4;
}
async function x3(e, t2, r3) {
  var a2, o2;
  e || (e = {}), (a2 = e).layers || (a2.layers = []), (o2 = e).tables || (o2.tables = []);
  const { url: s4, customParameters: l, apiKey: i3 } = t2, { serviceJSON: n, layersJSON: u2 } = await r2(s4, { customParameters: l, apiKey: i3 }), c2 = A(e.layers, n.layers, r3), y2 = A(e.tables, n.tables, r3);
  e.layers = c2.itemResources, e.tables = y2.itemResources;
  const d2 = [...c2.added, ...y2.added], m = u2 ? [...u2.layers, ...u2.tables] : [];
  return await U(e, d2, s4, m), e;
}
function A(t2, r3, a2) {
  const o2 = s(t2, r3, (e, t3) => e.id === t3.id);
  t2 = t2.filter((e) => !o2.removed.some((t3) => t3.id === e.id));
  const s4 = o2.added.map(({ id: e }) => ({ id: e }));
  return s4.forEach(({ id: e }) => {
    t2.push({ id: e });
  }), { itemResources: t2, added: s4.filter(({ id: e }) => !a2.includes(e)) };
}
async function U(e, t2, r3, o2) {
  const s4 = t2.map(({ id: e2 }) => new He({ url: r3, layerId: e2, sourceJSON: o2.find(({ id: t3 }) => t3 === e2) }));
  await E(s4.map((e2) => e2.load())), s4.forEach((t3) => {
    const { layerId: r4, loaded: o3, defaultPopupTemplate: s5 } = t3;
    if (!o3 || t(s5))
      return;
    K(t3, { id: r4, popupInfo: s5.toJSON() }, e);
  });
}
function K(e, t2, r3) {
  e.isTable ? F(r3.tables, t2) : F(r3.layers, t2);
}
function F(e, t2) {
  if (!e)
    return;
  const r3 = e.findIndex(({ id: e2 }) => e2 === t2.id);
  -1 === r3 ? e.push(t2) : e[r3] = t2;
}
function R(e) {
  const { portalItem: t2 } = e;
  return y(e) && !e.dynamicDataSource && !!(t2 == null ? void 0 : t2.loaded) && t2.type === S;
}
async function D(e) {
  if (!(e == null ? void 0 : e.length))
    throw new s3("feature-layer-utils-saveall:missing-parameters", "'layers' array should contain at least one feature layer");
  await Promise.all(e.map((e2) => e2.load()));
  for (const o2 of e)
    if (!R(o2))
      throw new s3("feature-layer-utils-saveall:invalid-parameters", `'layers' array should only contain layers or tables in a feature service loaded from 'Feature Service' item. ${g(o2, "does not conform")}`, { layer: o2 });
  const r3 = e.map((e2) => e2.portalItem.id);
  if (new Set(r3).size > 1)
    throw new s3("feature-layer-utils-saveall:invalid-parameters", "All layers in the 'layers' array should be loaded from the same portal item");
  const a2 = e.map((e2) => e2.layerId);
  if (new Set(a2).size !== a2.length)
    throw new s3("feature-layer-utils-saveall:invalid-parameters", "'layers' array should contain only one instance each of layer or table in a feature service");
}
function q(e, t2) {
  var r3, a2;
  let o2 = x2.from(t2);
  return o2.id && (o2 = o2.clone(), o2.id = null), (r3 = o2).type ?? (r3.type = S), (a2 = o2).portal ?? (a2.portal = b.getDefault()), j(e, o2), o2;
}
async function z(e, t2) {
  const { url: r3, layerId: a2, title: s4, fullExtent: l, isTable: i3 } = e, n = d(r3), p = r(n) && "FeatureServer" === n.serverType;
  t2.url = p ? r3 : `${r3}/${a2}`, t2.title || (t2.title = s4), t2.extent = null, !i3 && r(l) && (t2.extent = await a(l)), c(t2, u.METADATA), c(t2, u.MULTI_LAYER), i(t2, u.SINGLE_LAYER), i3 && i(t2, u.TABLE), O(t2);
}
async function C(e, t2, r3) {
  var _a;
  const a2 = e.portal;
  await (a2 == null ? void 0 : a2.signIn()), await ((_a = a2 == null ? void 0 : a2.user) == null ? void 0 : _a.addItem({ item: e, data: t2, folder: r3 == null ? void 0 : r3.folder }));
}
var M = x(Y);
async function Y(e, t2) {
  await L(e), E2(e);
  const r3 = e.portalItem, a2 = o(r3), o2 = await J(e, a2, t2), s4 = await T(r3, [{ layer: e, layerJSON: o2 }]);
  return O(r3), await r3.update({ data: s4 }), i2(a2), r3;
}
var _ = x(async (e, t2) => {
  await D(e);
  const r3 = e[0].portalItem, a2 = o(r3), o2 = await Promise.all(e.map((e2) => J(e2, a2, t2))), s4 = await T(r3, e.map((e2, t3) => ({ layer: e2, layerJSON: o2[t3] })));
  return O(r3), await r3.update({ data: s4 }), await Promise.all(e.slice(1).map((e2) => e2.portalItem.reload())), i2(a2), r3.clone();
});
var B = x(G);
async function G(e, t2, r3) {
  await L(e);
  const a2 = q(e, t2), o2 = o(a2), s4 = N({ layer: e, layerJSON: await J(e, o2, r3) });
  return await z(e, a2), await C(a2, s4, r3), e.portalItem = a2, i2(o2), a2;
}
export {
  M as save,
  _ as saveAll,
  B as saveAs
};
//# sourceMappingURL=featureLayerUtils-7NZH5WDP.js.map
