import {
  s
} from "./chunk-JKIHHWKC.js";
import {
  T
} from "./chunk-UHF3OUQV.js";
import "./chunk-GMLVDTS4.js";
import "./chunk-G7CHVXDR.js";
import "./chunk-CPSZPA6H.js";
import "./chunk-Y54MR3BP.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-JY6H6KI3.js";
import "./chunk-TTCQP5LX.js";
import "./chunk-C2WY74GI.js";
import "./chunk-MCOYI7PX.js";
import "./chunk-EL4OGCJC.js";
import {
  p
} from "./chunk-XPATKIHO.js";
import "./chunk-MKHZ5X6F.js";
import {
  r,
  t
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/widgets/TimeSlider/utils.js
async function s2(t2, e) {
  var _a;
  const { fullTimeExtent: n } = ((_a = t2.widgets) == null ? void 0 : _a.timeSlider) ?? {};
  return n || s(t2.allLayers, e);
}
function o(t2) {
  const e = t2.numThumbs ?? 2, i = t2.currentTimeExtent;
  if (i) {
    const { start: t3, end: s3 } = i;
    return r(t3) && r(s3) && t3.getTime() === s3.getTime() ? "instant" : 2 === e ? "time-window" : t(t3) || 0 === t3.getTime() ? "cumulative-from-start" : "cumulative-from-end";
  }
  return 2 === e ? "time-window" : "cumulative-from-start";
}
function u(t2) {
  const { numStops: n, stopInterval: r2, stops: i } = t2;
  return i ? { dates: p(i) } : r2 ? { interval: r2.clone() } : { count: n ?? 5 };
}
function m(e, n) {
  const r2 = e.currentTimeExtent;
  if (!r2)
    return null;
  const { start: i, end: s3 } = r2, o2 = i ?? s3 ?? null;
  switch (n) {
    case "time-window":
      return new T({ start: i, end: s3 });
    case "cumulative-from-start":
      return new T({ start: null, end: o2 });
    case "cumulative-from-end":
      return new T({ start: o2, end: null });
    case "instant":
      return new T({ start: o2, end: o2 });
  }
}
export {
  s2 as getFullTimeExtentFromWebDocument,
  o as getModeFromTimeSlider,
  u as getStopsFromTimeSlider,
  m as getTimeExtentFromTimeSlider
};
//# sourceMappingURL=utils-22QZSQRO.js.map
