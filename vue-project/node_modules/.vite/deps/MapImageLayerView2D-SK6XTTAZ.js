import {
  v
} from "./chunk-G7E2UCT4.js";
import {
  a as a3
} from "./chunk-R7FMJULK.js";
import {
  S,
  a as a2
} from "./chunk-TO3ZY23Z.js";
import {
  n
} from "./chunk-L22HV6UV.js";
import "./chunk-DLJ7JTHR.js";
import {
  ae
} from "./chunk-5I3MQMKK.js";
import "./chunk-X52AT6Y2.js";
import "./chunk-LSZKZXKW.js";
import "./chunk-J7OMJ47S.js";
import "./chunk-VLSIPNEZ.js";
import "./chunk-4FSIMQ5G.js";
import "./chunk-5MOZZS3P.js";
import "./chunk-7XVHXPW5.js";
import {
  i as i2
} from "./chunk-J5CNSFEW.js";
import {
  f,
  u
} from "./chunk-F6PAWSTX.js";
import "./chunk-NBN7PDMJ.js";
import "./chunk-6CHYNNZQ.js";
import "./chunk-OFMRQG54.js";
import "./chunk-GR3QAE4S.js";
import "./chunk-XBPKFV6W.js";
import "./chunk-J6VS6FXY.js";
import "./chunk-3H5NJQM5.js";
import "./chunk-7JT5C6ZX.js";
import "./chunk-AZEN5UFW.js";
import "./chunk-T4KF4XXH.js";
import "./chunk-F7QXAEAV.js";
import "./chunk-VV2CU7S7.js";
import "./chunk-FYA3X5C5.js";
import "./chunk-YA2ZN33B.js";
import "./chunk-DKDRIIV4.js";
import "./chunk-5SYMUP5B.js";
import "./chunk-R3MRUDAD.js";
import "./chunk-R6XKQWZ7.js";
import "./chunk-FUIUGV4X.js";
import "./chunk-LYEEAWXU.js";
import "./chunk-6SCM5LCL.js";
import "./chunk-223SE4BY.js";
import "./chunk-63WRUMNA.js";
import "./chunk-O2JKCGK6.js";
import "./chunk-WAPZ634R.js";
import "./chunk-OIQIEWHK.js";
import "./chunk-HUKDJ3MH.js";
import "./chunk-53FPJYCC.js";
import "./chunk-MSPZCZRZ.js";
import "./chunk-RURSJOSG.js";
import {
  c
} from "./chunk-QSLY5NRR.js";
import "./chunk-75NMPQ6B.js";
import "./chunk-3L7LAMFR.js";
import "./chunk-2JIMWZPW.js";
import "./chunk-23AC3IC7.js";
import "./chunk-GKD7ZY5C.js";
import "./chunk-5U6MVA3N.js";
import "./chunk-UHA44FM7.js";
import "./chunk-TQAOUM4T.js";
import "./chunk-TFWV44LH.js";
import "./chunk-RRNRSHX3.js";
import "./chunk-IEBU4QQL.js";
import "./chunk-4M3AMTD4.js";
import "./chunk-MXRYGWSY.js";
import "./chunk-33DQ3DIB.js";
import "./chunk-KVNI5TTW.js";
import "./chunk-U34LDFXK.js";
import "./chunk-V2OTMPXZ.js";
import "./chunk-OEIEPNC6.js";
import "./chunk-RPLKMGIJ.js";
import "./chunk-5VDXKCKM.js";
import "./chunk-XAGRIALY.js";
import "./chunk-6NPCB5RV.js";
import "./chunk-DDAW6PTY.js";
import "./chunk-PNAN35AP.js";
import "./chunk-HNKLBBNC.js";
import "./chunk-D2UI2BQN.js";
import "./chunk-5MV6T7MH.js";
import "./chunk-U3IHIDSP.js";
import "./chunk-34FJTA26.js";
import {
  i
} from "./chunk-XU3CQCW6.js";
import "./chunk-DUEDINK5.js";
import "./chunk-MZ267CZB.js";
import "./chunk-3DBV4JBL.js";
import "./chunk-CJ2YD4VU.js";
import "./chunk-PRXITTX7.js";
import "./chunk-JGIZLXNQ.js";
import "./chunk-TE3PC254.js";
import "./chunk-3IDKVHSA.js";
import "./chunk-PXPM76YN.js";
import "./chunk-NWZTRS6O.js";
import "./chunk-77E52HT5.js";
import "./chunk-26N6FACI.js";
import "./chunk-HBVUBDHI.js";
import "./chunk-5JG6YWQJ.js";
import "./chunk-7Q77X7UJ.js";
import "./chunk-NOYTM57S.js";
import "./chunk-OPQ632ST.js";
import "./chunk-U6GC73UT.js";
import "./chunk-6N2I7LNE.js";
import "./chunk-66ZWVXB2.js";
import "./chunk-E4ZXXRPV.js";
import "./chunk-AJY7W6KP.js";
import "./chunk-YIJX6PSI.js";
import "./chunk-NCSDM2FH.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-N5RJDK35.js";
import "./chunk-LC5BGIRA.js";
import "./chunk-ST7DNJJS.js";
import {
  b
} from "./chunk-FNGJTVTP.js";
import "./chunk-VB6BMHUU.js";
import "./chunk-H66NMTBW.js";
import "./chunk-K7L4V6NL.js";
import "./chunk-UZL5FYFX.js";
import "./chunk-HM62IZSE.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-BRWDGS6Y.js";
import "./chunk-CVSP2FBZ.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-PELFA5QO.js";
import "./chunk-2CREJO6O.js";
import "./chunk-FFJQJQND.js";
import "./chunk-YMSHUIGU.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-RCZJUTGU.js";
import "./chunk-REIXEATJ.js";
import "./chunk-YEFLZ2OV.js";
import "./chunk-XP5MC636.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-TM5UW7VI.js";
import "./chunk-WVLEGBEW.js";
import {
  l
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-MS6YQPPG.js";
import "./chunk-CRF4O3Y3.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-KSENJC5Z.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-YZRPNTZZ.js";
import "./chunk-EVKJKYHI.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-YT74S35I.js";
import "./chunk-U5I7FQWJ.js";
import "./chunk-M3KO43BW.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-CNEENAOZ.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-SZO7ZKE4.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-UADQEL54.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-YHZVWABO.js";
import "./chunk-WATRS3LJ.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import {
  j
} from "./chunk-QLY5H3XF.js";
import {
  s
} from "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var p = (p2) => {
  let a4 = class extends p2 {
    initialize() {
      this.exportImageParameters = new c({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get floors() {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.floors) ?? null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), this.commitProperty("floors"), (this._get("exportImageVersion") || 0) + 1;
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
  };
  return e([y()], a4.prototype, "exportImageParameters", void 0), e([y({ readOnly: true })], a4.prototype, "floors", null), e([y({ readOnly: true })], a4.prototype, "exportImageVersion", null), e([y()], a4.prototype, "layer", void 0), e([y()], a4.prototype, "suspended", void 0), e([y(b)], a4.prototype, "timeExtent", void 0), a4 = e([a("esri.views.layers.MapImageLayerView")], a4), a4;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var f2 = class extends p(i2(f(u))) {
  constructor() {
    super(...arguments), this._highlightGraphics = new i(), this._updateHash = "";
  }
  fetchPopupFeatures(t, e2) {
    return this._popupHighlightHelper.fetchPopupFeatures(t, e2);
  }
  update(t) {
    const r = `${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;
    this._updateHash !== r && (this._updateHash = r, this.strategy.update(t).catch((t2) => {
      j(t2) || s.getLogger(this.declaredClass).error(t2);
    }), t.stationary && this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)), this._highlightView.processUpdate(t);
  }
  attach() {
    const { imageMaxWidth: t, imageMaxHeight: e2, version: i3 } = this.layer, s2 = i3 >= 10.3, a4 = i3 >= 10;
    this._bitmapContainer = new a3(), this.container.addChild(this._bitmapContainer), this._highlightView = new ae({ view: this.view, graphics: this._highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new n(this.view.featuresTilingScheme), defaultPointSymbolEnabled: false }), this.container.addChild(this._highlightView.container), this._popupHighlightHelper = new S({ createFetchPopupFeaturesQueryGeometry: (t2, e3) => a2(t2, e3, this.view), highlightGraphics: this._highlightGraphics, highlightGraphicUpdated: (t2, e3) => {
      this._highlightView.graphicUpdateHandler({ graphic: t2, property: e3 });
    }, layerView: this, updatingHandles: this.updatingHandles }), this.strategy = new v({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: t, imageMaxHeight: e2, imageRotationSupported: s2, imageNormalizationSupported: a4, hidpi: true }), this.addAttachHandles(l(() => this.exportImageVersion, () => this.requestUpdate())), this.requestUpdate();
  }
  detach() {
    this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy(), this._popupHighlightHelper.destroy();
  }
  moveStart() {
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  supportsSpatialReference(t) {
    return this.layer.serviceSupportsSpatialReference(t);
  }
  async doRefresh() {
    this._updateHash = "", this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  fetchImage(t, e2, i3, r) {
    return this.layer.fetchImage(t, e2, i3, { timeExtent: this.timeExtent, floors: this.floors, ...r });
  }
  fetchImageBitmap(t, e2, i3, r) {
    return this.layer.fetchImageBitmap(t, e2, i3, { timeExtent: this.timeExtent, floors: this.floors, ...r });
  }
  highlight(t) {
    return this._popupHighlightHelper.highlight(t);
  }
};
e([y()], f2.prototype, "strategy", void 0), e([y()], f2.prototype, "updating", void 0), f2 = e([a("esri.views.2d.layers.MapImageLayerView2D")], f2);
var w = f2;
export {
  w as default
};
//# sourceMappingURL=MapImageLayerView2D-SK6XTTAZ.js.map
