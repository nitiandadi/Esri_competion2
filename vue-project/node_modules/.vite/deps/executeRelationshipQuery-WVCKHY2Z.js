import {
  t
} from "./chunk-2JB37XX2.js";
import {
  f
} from "./chunk-WVLEGBEW.js";
import {
  d
} from "./chunk-LHSSC5DZ.js";
import {
  x
} from "./chunk-G356VNM2.js";
import "./chunk-IMDA6RVE.js";
import "./chunk-GGTMSDMZ.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-2OJTWNQ6.js";
import "./chunk-Z5QBM3A6.js";
import "./chunk-MRALC5D7.js";
import "./chunk-CYZ4XVBT.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-XF2RZJFH.js";
import "./chunk-HRFBINZY.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-EALW5DHT.js";
import "./chunk-EAKUFEPO.js";
import "./chunk-EQMIUIFH.js";
import "./chunk-KK57CPHE.js";
import "./chunk-7MMTDLQQ.js";
import "./chunk-TJWUU7NW.js";
import "./chunk-Q62HELM6.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-JT54I3AY.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-6CVKQGVU.js";
import {
  U
} from "./chunk-2HZTCGYV.js";
import "./chunk-Z3YY72G4.js";
import "./chunk-M3KO43BW.js";
import "./chunk-LRFOTULU.js";
import "./chunk-HPP5IXU5.js";
import "./chunk-UADQEL54.js";
import "./chunk-4D6JGHEF.js";
import "./chunk-CT6YILLI.js";
import "./chunk-LJAKPJDJ.js";
import "./chunk-CCWBAM3L.js";
import "./chunk-TKWZACTO.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-DOQX2NNO.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-2ZX6RZTI.js";
import "./chunk-5Q7F7FJ6.js";
import "./chunk-XFNXUG2G.js";
import "./chunk-27R7KBOL.js";
import "./chunk-RDTHWDIE.js";
import "./chunk-EAFLFTSD.js";
import "./chunk-DOVXDFWE.js";
import "./chunk-M4BAPJ3L.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-KGIB6IYW.js";
import "./chunk-3PPVODAA.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-WTKFW2TD.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import "./chunk-WHB7G7RI.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/rest/query/operations/queryRelatedRecords.js
function o(e, t2) {
  const o2 = e.toJSON();
  return o2.objectIds && (o2.objectIds = o2.objectIds.join(",")), o2.orderByFields && (o2.orderByFields = o2.orderByFields.join(",")), o2.outFields && !(t2 == null ? void 0 : t2.returnCountOnly) ? o2.outFields.includes("*") ? o2.outFields = "*" : o2.outFields = o2.outFields.join(",") : delete o2.outFields, o2.outSpatialReference && (o2.outSR = o2.outSR.wkid || JSON.stringify(o2.outSR.toJSON()), delete o2.outSpatialReference), o2.dynamicDataSource && (o2.layer = JSON.stringify({ source: o2.dynamicDataSource }), delete o2.dynamicDataSource), o2;
}
async function r(e, t2, o2) {
  const r2 = await s(e, t2, o2), n3 = r2.data, a = n3.geometryType, d2 = n3.spatialReference, c = {};
  for (const s2 of n3.relatedRecordGroups) {
    const e2 = { fields: void 0, objectIdFieldName: void 0, geometryType: a, spatialReference: d2, hasZ: !!n3.hasZ, hasM: !!n3.hasM, features: s2.relatedRecords };
    if (null != s2.objectId)
      c[s2.objectId] = e2;
    else
      for (const t3 in s2)
        s2.hasOwnProperty(t3) && "relatedRecords" !== t3 && (c[s2[t3]] = e2);
  }
  return { ...r2, data: c };
}
async function n(e, t2, o2) {
  const r2 = await s(e, t2, o2, { returnCountOnly: true }), n3 = r2.data, a = {};
  for (const s2 of n3.relatedRecordGroups)
    null != s2.objectId && (a[s2.objectId] = s2.count);
  return { ...r2, data: a };
}
async function s(r2, n3, s2 = {}, a) {
  const d2 = t({ ...r2.query, f: "json", ...a, ...o(n3, a) });
  return U(r2.path + "/queryRelatedRecords", { ...s2, query: { ...s2.query, ...d2 } });
}

// node_modules/@arcgis/core/rest/query/executeRelationshipQuery.js
async function n2(e, n3, u2) {
  n3 = d.from(n3);
  const a = f(e);
  return r(a, n3, u2).then((t2) => {
    const r2 = t2.data, e2 = {};
    return Object.keys(r2).forEach((t3) => e2[t3] = x.fromJSON(r2[t3])), e2;
  });
}
async function u(r2, o2, n3) {
  o2 = d.from(o2);
  const u2 = f(r2);
  return n(u2, o2, { ...n3 }).then((t2) => t2.data);
}
export {
  n2 as executeRelationshipQuery,
  u as executeRelationshipQueryForCount
};
//# sourceMappingURL=executeRelationshipQuery-WVCKHY2Z.js.map
