import {
  p as p5
} from "./chunk-WEBQZFS7.js";
import {
  _ as _2,
  a2 as a4,
  d,
  n2 as n4,
  u
} from "./chunk-KEBXREDC.js";
import {
  c2 as c,
  d as d2,
  g2,
  l as l3,
  m as m4
} from "./chunk-M6GJ5NLR.js";
import {
  J,
  N
} from "./chunk-ZE4I5TQG.js";
import {
  v as v3
} from "./chunk-3F26JL34.js";
import {
  f as f2,
  i,
  s as s3
} from "./chunk-POASDJDE.js";
import {
  x
} from "./chunk-TDFTAVQL.js";
import {
  u as u2
} from "./chunk-3ZOUEUIN.js";
import {
  T as T3,
  _,
  a as a3,
  n as n3
} from "./chunk-WLWGIFGY.js";
import {
  n as n2,
  y as y4
} from "./chunk-EPZLAQP3.js";
import {
  b,
  j
} from "./chunk-VSUGA5AN.js";
import {
  a as a2,
  m as m2,
  p as p3
} from "./chunk-E3JHIVZP.js";
import {
  p as p4
} from "./chunk-G3A2XEXX.js";
import {
  T as T2,
  m as m3
} from "./chunk-3EIJOCWD.js";
import {
  g
} from "./chunk-CSFUQCFV.js";
import {
  n
} from "./chunk-ZUIHAM2A.js";
import {
  U
} from "./chunk-JU2WP2RZ.js";
import {
  y as y2
} from "./chunk-MQUNEV3K.js";
import {
  v as v2
} from "./chunk-M7CMZTD6.js";
import {
  v2 as v
} from "./chunk-ERJGVLTB.js";
import {
  f2 as f,
  p3 as p2,
  w,
  w2
} from "./chunk-T5VSOT6T.js";
import {
  m,
  y as y3
} from "./chunk-FSB7TIRN.js";
import {
  l as l2
} from "./chunk-NXJOIK2O.js";
import {
  o as o4
} from "./chunk-F4DUNBGT.js";
import {
  o as o3
} from "./chunk-E4M4B5ZQ.js";
import {
  r as r2
} from "./chunk-JATK7CEQ.js";
import {
  o
} from "./chunk-74TXAD7S.js";
import {
  o as o2,
  s as s2
} from "./chunk-HIRLBWV3.js";
import {
  l
} from "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  t6 as t2,
  y3 as y
} from "./chunk-OA5ES74L.js";
import {
  T
} from "./chunk-RLEMMDH4.js";
import {
  s3 as s
} from "./chunk-YVZY5LDV.js";
import {
  p
} from "./chunk-H32MMKAJ.js";
import {
  e as e2,
  r,
  t
} from "./chunk-HVCAHUYB.js";

// node_modules/@arcgis/core/renderers/FlowRenderer.js
var c2;
var d3 = new s2({ flow_from: "flow-from", flow_to: "flow-to" });
var h = c2 = class extends y4(l) {
  constructor(o6) {
    super(o6), this.density = 0.8, this.color = new l2([255, 255, 255, 1]), this.maxPathLength = 200, this.trailWidth = 1.5, this.flowSpeed = 10, this.trailLength = 100, this.smoothing = 0, this.flowRepresentation = "flow-from", this.type = "flow", this.authoringInfo = null, this.legendOptions = null, this.trailCap = "butt", this.background = "none";
  }
  clone() {
    var _a, _b;
    const { density: o6, maxPathLength: t3, trailWidth: e3, flowSpeed: r3, trailLength: i3, smoothing: s4, flowRepresentation: n6, trailCap: p9, background: a6 } = this, l8 = this.color.clone(), m10 = (this.visualVariables || []).map((o7) => o7.clone()), d9 = (_a = this.authoringInfo) == null ? void 0 : _a.clone(), h4 = (_b = this.legendOptions) == null ? void 0 : _b.clone();
    return new c2({ density: o6, color: l8, maxPathLength: t3, trailWidth: e3, flowSpeed: r3, trailLength: i3, trailCap: p9, background: a6, smoothing: s4, flowRepresentation: n6, visualVariables: m10, authoringInfo: d9, legendOptions: h4 });
  }
  getSymbol(o6, t3) {
  }
  async getSymbolAsync(o6, t3) {
  }
  getSymbols() {
    return [];
  }
};
e([y({ type: Number, json: { write: true } })], h.prototype, "density", void 0), e([y({ type: l2, json: { write: { allowNull: true } } })], h.prototype, "color", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], h.prototype, "maxPathLength", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], h.prototype, "trailWidth", void 0), e([y({ type: Number, json: { write: true } })], h.prototype, "flowSpeed", void 0), e([y({ type: Number, json: { write: true } })], h.prototype, "trailLength", void 0), e([y({ type: Number, cast: o4, json: { write: false } })], h.prototype, "smoothing", void 0), e([y({ type: d3.apiValues, json: { type: d3.jsonValues, read: { reader: d3.read }, write: { writer: d3.write } } })], h.prototype, "flowRepresentation", void 0), e([o3({ flowRenderer: "flow" })], h.prototype, "type", void 0), e([y({ type: j, json: { write: true } })], h.prototype, "authoringInfo", void 0), e([y({ type: p4, json: { write: true } })], h.prototype, "legendOptions", void 0), e([y({ type: String, json: { write: true } })], h.prototype, "trailCap", void 0), e([y({ type: String, json: { write: true } })], h.prototype, "background", void 0), h = c2 = e([a("esri.renderers.FlowRenderer")], h);
var u3 = h;

// node_modules/@arcgis/core/renderers/support/ColormapInfo.js
var l4 = class extends l {
  constructor() {
    super(...arguments), this.value = null, this.label = null, this.color = null;
  }
};
e([y({ type: Number, json: { write: true } })], l4.prototype, "value", void 0), e([y({ type: String, json: { write: true } })], l4.prototype, "label", void 0), e([y({ type: l2, json: { type: [T], write: true } })], l4.prototype, "color", void 0), l4 = e([a("esri.renderers.support.ColormapInfo")], l4);
var c3 = l4;

// node_modules/@arcgis/core/renderers/RasterColormapRenderer.js
var c4;
var m5 = c4 = class extends l {
  constructor(o6) {
    super(o6), this.colormapInfos = null, this.type = "raster-colormap";
  }
  static createFromColormap(o6, r3) {
    if (!o6)
      return null;
    const t3 = 5 === o6[0].length, e3 = [...o6].sort((o7) => o7[0][0] - o7[1][0]).map((o7) => c3.fromJSON({ value: o7[0], color: t3 ? o7.slice(1, 5) : o7.slice(1, 4).concat([255]), label: r3 ? r3[o7[0]] ?? "" : o7[0] }));
    return new c4({ colormapInfos: e3 });
  }
  static createFromColorramp(o6) {
    const r3 = _2(o6);
    return c4.createFromColormap(r3);
  }
  clone() {
    return new c4({ colormapInfos: this.colormapInfos.map((o6) => o6.toJSON()) });
  }
  extractColormap() {
    return this.colormapInfos.map(({ value: o6, color: r3 }) => [o6, r3.r, r3.g, r3.b, r3.a > 1 ? r3.a : 255 * r3.a & 255]).sort((o6, r3) => o6[0] - r3[0]);
  }
};
e([y({ type: [c3], json: { write: true } })], m5.prototype, "colormapInfos", void 0), e([o3({ rasterColormap: "raster-colormap" })], m5.prototype, "type", void 0), m5 = c4 = e([a("esri.renderers.RasterColormapRenderer")], m5);
var l5 = m5;

// node_modules/@arcgis/core/renderers/RasterShadedReliefRenderer.js
var c5;
var d4 = c5 = class extends l {
  constructor(e3) {
    super(e3), this.altitude = 45, this.azimuth = 315, this.colorRamp = null, this.hillshadeType = "traditional", this.pixelSizePower = 0.664, this.pixelSizeFactor = 0.024, this.scalingType = "none", this.type = "raster-shaded-relief", this.zFactor = 1;
  }
  readColorRamp(e3) {
    return p3(e3);
  }
  clone() {
    return new c5({ hillshadeType: this.hillshadeType, altitude: this.altitude, azimuth: this.azimuth, zFactor: this.zFactor, scalingType: this.scalingType, pixelSizeFactor: this.pixelSizeFactor, pixelSizePower: this.pixelSizePower, colorRamp: p(this.colorRamp) });
  }
};
e([y({ type: Number, json: { write: true } })], d4.prototype, "altitude", void 0), e([y({ type: Number, json: { write: true } })], d4.prototype, "azimuth", void 0), e([y({ types: m2, json: { write: true } })], d4.prototype, "colorRamp", void 0), e([o("colorRamp")], d4.prototype, "readColorRamp", null), e([y({ type: ["traditional", "multi-directional"], json: { write: true } })], d4.prototype, "hillshadeType", void 0), e([y({ type: Number, json: { write: true } })], d4.prototype, "pixelSizePower", void 0), e([y({ type: Number, json: { write: true } })], d4.prototype, "pixelSizeFactor", void 0), e([y({ type: ["none", "adjusted"], json: { write: true } })], d4.prototype, "scalingType", void 0), e([o3({ rasterShadedRelief: "raster-shaded-relief" })], d4.prototype, "type", void 0), e([y({ type: Number, json: { write: true } })], d4.prototype, "zFactor", void 0), d4 = c5 = e([a("esri.renderers.RasterShadedReliefRenderer")], d4);
var m6 = d4;

// node_modules/@arcgis/core/renderers/RasterStretchRenderer.js
var d5;
var h2 = d5 = class extends l {
  constructor(t3) {
    super(t3), this.colorRamp = null, this.computeGamma = false, this.dynamicRangeAdjustment = false, this.gamma = [], this.maxPercent = null, this.minPercent = null, this.numberOfStandardDeviations = null, this.outputMax = null, this.outputMin = null, this.sigmoidStrengthLevel = null, this.statistics = [], this.histograms = null, this.useGamma = false, this.stretchType = "none", this.type = "raster-stretch";
  }
  readColorRamp(t3) {
    if (t3)
      return p3(t3);
  }
  writeStatistics(t3, e3, r3) {
    (t3 == null ? void 0 : t3.length) && (Array.isArray(t3[0]) || (t3 = t3.map((t4) => [t4.min, t4.max, t4.avg, t4.stddev])), e3[r3] = t3);
  }
  readStretchType(t3, e3) {
    let r3 = e3.stretchType;
    return "number" == typeof r3 && (r3 = a4[r3]), n4.read(r3);
  }
  clone() {
    return new d5({ stretchType: this.stretchType, outputMin: this.outputMin, outputMax: this.outputMax, useGamma: this.useGamma, computeGamma: this.computeGamma, statistics: p(this.statistics), gamma: p(this.gamma), sigmoidStrengthLevel: this.sigmoidStrengthLevel, numberOfStandardDeviations: this.numberOfStandardDeviations, minPercent: this.minPercent, maxPercent: this.maxPercent, colorRamp: p(this.colorRamp), histograms: p(this.histograms), dynamicRangeAdjustment: this.dynamicRangeAdjustment });
  }
};
e([y({ types: m2, json: { write: true } })], h2.prototype, "colorRamp", void 0), e([o("colorRamp")], h2.prototype, "readColorRamp", null), e([y({ type: Boolean, json: { write: true } })], h2.prototype, "computeGamma", void 0), e([y({ type: Boolean, json: { write: { target: "dra" }, read: { source: "dra" } } })], h2.prototype, "dynamicRangeAdjustment", void 0), e([y({ type: [Number], json: { write: true } })], h2.prototype, "gamma", void 0), e([y({ type: Number, json: { write: true } })], h2.prototype, "maxPercent", void 0), e([y({ type: Number, json: { write: true } })], h2.prototype, "minPercent", void 0), e([y({ type: Number, json: { write: true } })], h2.prototype, "numberOfStandardDeviations", void 0), e([y({ type: Number, json: { read: { source: "max" }, write: { target: "max" } } })], h2.prototype, "outputMax", void 0), e([y({ type: Number, json: { read: { source: "min" }, write: { target: "min" } } })], h2.prototype, "outputMin", void 0), e([y({ type: Number, json: { write: true } })], h2.prototype, "sigmoidStrengthLevel", void 0), e([y({ json: { type: [[Number]], write: true } })], h2.prototype, "statistics", void 0), e([y()], h2.prototype, "histograms", void 0), e([r2("statistics")], h2.prototype, "writeStatistics", null), e([y({ type: Boolean, json: { write: true } })], h2.prototype, "useGamma", void 0), e([y({ type: n4.apiValues, json: { type: n4.jsonValues, write: n4.write } })], h2.prototype, "stretchType", void 0), e([o("stretchType", ["stretchType"])], h2.prototype, "readStretchType", null), e([o3({ rasterStretch: "raster-stretch" })], h2.prototype, "type", void 0), h2 = d5 = e([a("esri.renderers.RasterStretchRenderer")], h2);
var y5 = h2;

// node_modules/@arcgis/core/renderers/VectorFieldRenderer.js
var u4;
var Z = /* @__PURE__ */ new Set(["esriMetersPerSecond", "esriKilometersPerHour", "esriKnots", "esriFeetPerSecond", "esriMilesPerHour"]);
var b2 = new s2({ beaufort_ft: "beaufort-ft", beaufort_km: "beaufort-km", beaufort_kn: "beaufort-kn", beaufort_m: "beaufort-m", beaufort_mi: "beaufort-mi", classified_arrow: "classified-arrow", ocean_current_kn: "ocean-current-kn", ocean_current_m: "ocean-current-m", simple_scalar: "simple-scalar", single_arrow: "single-arrow", wind_speed: "wind-barb" });
var h3 = new s2({ flow_from: "flow-from", flow_to: "flow-to" });
var E = u4 = class extends y4(l) {
  constructor(e3) {
    super(e3), this.attributeField = "Magnitude", this.flowRepresentation = "flow-from", this.rotationType = "arithmetic", this.style = "single-arrow", this.symbolTileSize = 50, this.type = "vector-field";
  }
  readInputUnit(e3, M) {
    return Z.has(e3) ? c.fromJSON(e3) : null;
  }
  readOutputUnit(e3, M) {
    return Z.has(e3) ? c.fromJSON(e3) : null;
  }
  get styleRenderer() {
    const e3 = this.style, M = this.attributeField, i3 = this._createStyleRenderer(e3);
    return i3.field = M, i3;
  }
  get sizeVariables() {
    const e3 = [];
    if (this.visualVariables)
      for (const M of this.visualVariables)
        "size" === M.type && e3.push(M);
    if (0 === e3.length) {
      const M = new b({ field: "Magnitude", minSize: 0.2 * this.symbolTileSize, maxSize: 0.8 * this.symbolTileSize });
      this.visualVariables ? this.visualVariables.push(M) : this._set("visualVariables", [M]), e3.push(M);
    }
    return e3;
  }
  get rotationVariables() {
    const e3 = [];
    if (this.visualVariables)
      for (const M of this.visualVariables)
        "rotation" === M.type && e3.push(M);
    if (0 === e3.length) {
      const M = new n2({ field: "Direction", rotationType: this.rotationType });
      this.visualVariables ? this.visualVariables.push(M) : this._set("visualVariables", [M]), e3.push(M);
    }
    return e3;
  }
  clone() {
    return new u4({ attributeField: this.attributeField, flowRepresentation: this.flowRepresentation, rotationType: this.rotationType, symbolTileSize: this.symbolTileSize, style: this.style, visualVariables: p(this.visualVariables), inputUnit: this.inputUnit, outputUnit: this.outputUnit });
  }
  async getGraphicsFromPixelData(e3, M = false, t3 = []) {
    var _a;
    const a6 = new Array(), I2 = l3(this.inputUnit, this.outputUnit), o6 = ((_a = this.rotationVariables[0]) == null ? void 0 : _a.rotationType) || this.rotationType, A2 = M ? d2(e3.pixelBlock, "vector-uv", o6, I2) : g2(e3.pixelBlock, "vector-magdir", I2);
    if (t(A2))
      return a6;
    const s4 = e3.extent, d9 = r(A2.mask) && A2.mask.length > 0;
    let n6 = 0;
    const y7 = (s4.xmax - s4.xmin) / A2.width, C = (s4.ymax - s4.ymin) / A2.height;
    for (let r3 = 0; r3 < A2.height; r3++)
      for (let e4 = 0; e4 < A2.width; e4++, n6++) {
        let M2 = new w({ x: s4.xmin + e4 * y7 + y7 / 2, y: s4.ymax - r3 * C - C / 2, spatialReference: s4.spatialReference });
        M2 = (await v3(M2))[0];
        const I3 = t3.some((e5) => e5.intersects(M2));
        if ((!d9 || A2.mask[n6]) && !I3) {
          const e5 = { Magnitude: A2.pixels[0][n6], Direction: A2.pixels[1][n6] }, t4 = new g({ geometry: { type: "point", x: M2.x, y: M2.y, spatialReference: s4.spatialReference }, attributes: e5 });
          t4.symbol = this._getVisualVariablesAppliedSymbol(t4), a6.push(t4);
        }
      }
    return a6;
  }
  getSymbol(e3, M) {
  }
  async getSymbolAsync(e3, M) {
  }
  getSymbols() {
    return [];
  }
  getClassBreakInfos() {
    var _a;
    return (_a = this.styleRenderer) == null ? void 0 : _a.classBreakInfos;
  }
  getDefaultSymbol() {
    var _a;
    return (_a = this.styleRenderer) == null ? void 0 : _a.defaultSymbol;
  }
  _getDefaultSymbol(e3) {
    return new y3({ path: "M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z", outline: new m({ width: 0 }), size: 20, color: e3 || new l2([0, 92, 230]) });
  }
  _getVisualVariablesAppliedSymbol(e3) {
    var _a, _b;
    if (!e3)
      return;
    const M = (_b = (_a = this.styleRenderer) == null ? void 0 : _a.getSymbol(e3)) == null ? void 0 : _b.clone(), i3 = this.sizeVariables, t3 = this.rotationVariables;
    if (i3 && i3.length && this.sizeVariables.forEach((i4) => J(M, T2([i4], e3))), t3 && t3.length) {
      const i4 = "flow-to" === this.flowRepresentation === ("ocean-current-kn" === this.style || "ocean-current-m" === this.style) ? 0 : 180;
      e3.attributes.Direction = e3.attributes.Direction + i4, this.rotationVariables.forEach((i5) => N(M, m3(i5, e3), i5.axis));
    }
    return M;
  }
  _createStyleRenderer(e3) {
    let M = { defaultSymbol: this._getDefaultSymbol(), classBreakInfos: [] };
    switch (e3) {
      case "single-arrow":
        M = this._createSingleArrowRenderer();
        break;
      case "beaufort-kn":
        M = this._createBeaufortKnotsRenderer();
        break;
      case "beaufort-m":
        M = this._createBeaufortMeterRenderer();
        break;
      case "beaufort-ft":
        M = this._createBeaufortFeetRenderer();
        break;
      case "beaufort-mi":
        M = this._createBeaufortMilesRenderer();
        break;
      case "beaufort-km":
        M = this._createBeaufortKilometersRenderer();
        break;
      case "ocean-current-m":
        M = this._createCurrentMeterRenderer();
        break;
      case "ocean-current-kn":
        M = this._createCurrentKnotsRenderer();
        break;
      case "simple-scalar":
        M = this._createSimpleScalarRenderer();
        break;
      case "wind-barb":
        M = this._createWindBarbsRenderer();
        break;
      case "classified-arrow":
        M = this._createClassifiedArrowRenderer();
    }
    return new _(M);
  }
  _createSingleArrowRenderer() {
    return { defaultSymbol: this._getDefaultSymbol() };
  }
  _createBeaufortKnotsRenderer() {
    const e3 = [0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 55, 63], i3 = [[40, 146, 199], [89, 162, 186], [129, 179, 171], [160, 194, 155], [191, 212, 138], [218, 230, 119], [250, 250, 100], [252, 213, 83], [252, 179, 102], [250, 141, 52], [247, 110, 42], [240, 71, 29]];
    return { defaultSymbol: this._getDefaultSymbol(new l2([214, 47, 39])), classBreakInfos: this._getClassBreaks(e3, i3) };
  }
  _createBeaufortMeterRenderer() {
    const e3 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7], i3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]];
    return { defaultSymbol: this._getDefaultSymbol(new l2([214, 47, 39])), classBreakInfos: this._getClassBreaks(e3, i3) };
  }
  _createBeaufortFeetRenderer() {
    const e3 = this._getDefaultSymbol(new l2([214, 47, 39]));
    let i3 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a6 = 3.28084;
    i3 = i3.map((e4) => e4 * a6);
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i3, t3) };
  }
  _createBeaufortMilesRenderer() {
    const e3 = this._getDefaultSymbol(new l2([214, 47, 39]));
    let i3 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a6 = 2.23694;
    i3 = i3.map((e4) => e4 * a6);
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i3, t3) };
  }
  _createBeaufortKilometersRenderer() {
    const e3 = this._getDefaultSymbol(new l2([214, 47, 39]));
    let i3 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const t3 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], a6 = 3.6;
    i3 = i3.map((e4) => e4 * a6);
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i3, t3) };
  }
  _createCurrentMeterRenderer() {
    const e3 = [0, 0.5, 1, 1.5, 2], i3 = [[78, 26, 153], [179, 27, 26], [202, 128, 26], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new l2([177, 177, 177])), classBreakInfos: this._getClassBreaks(e3, i3) };
  }
  _createCurrentKnotsRenderer() {
    const e3 = [0, 0.25, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4], i3 = [[0, 0, 0], [0, 37, 100], [78, 26, 153], [151, 0, 100], [179, 27, 26], [177, 78, 26], [202, 128, 26], [177, 179, 52], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new l2([177, 177, 177])), classBreakInfos: this._getClassBreaks(e3, i3) };
  }
  _createClassifiedArrowRenderer() {
    var _a;
    const e3 = this._getDefaultSymbol(new l2([56, 168, 0]));
    let i3 = [0, 1e-6, 3.5, 7, 10.5, 14];
    if ((_a = this.sizeVariables) == null ? void 0 : _a.length) {
      const e4 = this.sizeVariables[0].minDataValue, M = this.sizeVariables[0].maxDataValue;
      if (e4 && M) {
        const t4 = (M - e4) / 5;
        i3 = Array.from(Array(6).keys()).map((M2) => e4 + t4 * M2);
      }
    }
    const t3 = [[56, 168, 0], [139, 309, 0], [255, 255, 0], [255, 128, 0], [255, 0, 0]];
    return { defaultSymbol: e3, classBreakInfos: this._getClassBreaks(i3, t3) };
  }
  _createSimpleScalarRenderer() {
    return { defaultSymbol: n.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=", height: 20, width: 20, type: "esriPMS", angle: 0 }) };
  }
  _createWindBarbsRenderer() {
    const e3 = Array.from(Array(31).keys()).map((e4) => 5 * e4), M = [{ range: "0-5", path: "M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "5-10", path: "M25 0 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "10-15", path: "M25 0 L25 40 L10 45 L25 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "15-20", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "20-25", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "25-30", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "30-35", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "35-40", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "40-45", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "45-50", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "50-55", path: "M25 0 L25 40 L10 40 L25 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "55-60", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "60-65", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "65-70", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "70-75", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "75-80", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "80-85", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "85-90", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "90-95", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "95-100", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "100-105", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "105-110", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "110-115", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "115-120", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "120-125", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "125-130", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "130-135", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "135-140", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "140-145", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "145-150", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }], i3 = n.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC", height: 20, width: 20, type: "esriPMS", angle: 0 }), t3 = e3.map((t4, a6) => {
      let I2;
      if (a6 !== e3.length - 1)
        if (0 === a6)
          I2 = { minValue: t4, maxValue: e3[a6 + 1], symbol: i3 };
        else {
          const i4 = n.fromJSON({ type: "esriPMS", imageData: M[a6].imageData, contentType: "image/svg+xml", height: 32, width: 32, angle: 0 });
          I2 = { minValue: t4, maxValue: e3[a6 + 1], symbol: i4 };
        }
      return new a3(I2);
    });
    return { defaultSymbol: i3, classBreakInfos: t3 };
  }
  _getClassBreaks(e3, i3) {
    return i3.map((i4, t3) => new a3({ minValue: e3[t3], maxValue: e3[t3 + 1], symbol: this._getDefaultSymbol(new l2(i4)) }));
  }
};
e([y({ type: String, json: { write: true } })], E.prototype, "attributeField", void 0), e([y({ type: h3.apiValues, json: { type: h3.jsonValues, read: { reader: h3.read }, write: { writer: h3.write } } })], E.prototype, "flowRepresentation", void 0), e([y({ type: ["geographic", "arithmetic"], json: { write: true } })], E.prototype, "rotationType", void 0), e([y({ type: b2.apiValues, json: { type: b2.jsonValues, read: { reader: b2.read }, write: { writer: b2.write } } })], E.prototype, "style", void 0), e([y({ json: { write: true } })], E.prototype, "symbolTileSize", void 0), e([y({ type: c.apiValues, json: { type: c.jsonValues, write: { writer: c.write } } })], E.prototype, "inputUnit", void 0), e([o("inputUnit")], E.prototype, "readInputUnit", null), e([y({ type: c.apiValues, json: { type: c.jsonValues, read: { reader: c.read }, write: { writer: c.write } } })], E.prototype, "outputUnit", void 0), e([o("outputUnit")], E.prototype, "readOutputUnit", null), e([o3({ vectorField: "vector-field" })], E.prototype, "type", void 0), e([y({ type: _ })], E.prototype, "styleRenderer", null), e([y({ type: b })], E.prototype, "sizeVariables", null), e([y({ type: n2 })], E.prototype, "rotationVariables", null), E = u4 = e([a("esri.renderers.VectorFieldRenderer")], E);
var x2 = E;

// node_modules/@arcgis/core/rasterRenderers.js
var l6 = { key: "type", base: null, typeMap: { "unique-value": T3, "class-breaks": _, "raster-colormap": l5, "raster-stretch": y5, "vector-field": x2, "raster-shaded-relief": m6, flow: u3 } };
var d6 = { ...l6, typeMap: { ...l6.typeMap } };
delete d6.typeMap["vector-field"], delete d6.typeMap.flow;
var p6 = { uniqueValue: T3, classBreaks: _, rasterStretch: y5, rasterColormap: l5, vectorField: x2, rasterShadedRelief: m6, flowRenderer: u3 };
function u5(e3) {
  return e3 && p6[e3.type] || null;
}
function c6(r3, s4) {
  if (!r3)
    return null;
  if ("classBreaks" === r3.type && r3.classificationMethod) {
    const e3 = r3.authoringInfo || { classificationMethod: "" };
    e3.classificationMethod = r3.classificationMethod, r3.authoringInfo = e3;
  }
  "vectorField" === r3.type && r3.visualVariables && !Array.isArray(r3.visualVariables) && (r3.visualVariables = [r3.visualVariables]);
  const t3 = u5(r3);
  if (t3) {
    const e3 = new t3();
    return e3.read(r3, s4), e3;
  }
  return s4 && s4.messages && r3 && s4.messages.push(new t2("renderer:unsupported", "Renderers of type '" + (r3.type || "unknown") + "' are not supported", { definition: r3, context: s4 })), null;
}

// node_modules/@arcgis/core/layers/support/RasterFunction.js
var u6;
var c7 = /* @__PURE__ */ new Set(["raster", "raster2", "dem", "fillraster"]);
var p7 = /* @__PURE__ */ new Set(["rasters"]);
var m7 = (t3) => t3 && t3.rasterFunction ? d7.fromJSON(t3) : t3;
var f3 = (t3) => t3 && t3 instanceof d7 ? t3.toJSON() : t3;
var l7 = (t3) => (t3 == null ? void 0 : t3.functionName) && !t3.declaredClass;
var y6 = (t3) => l7(t3) ? new d7(t3) : t3;
var F = (t3) => {
  if (null == t3)
    return null;
  t3 = p(t3);
  const r3 = {};
  for (const e3 of Object.keys(t3))
    c7.has(e3.toLowerCase()) ? r3[e3] = m7(t3[e3]) : p7.has(e3.toLowerCase()) && Array.isArray(t3[e3]) ? r3[e3] = t3[e3].map(m7) : r3[e3] = t3[e3];
  return r3;
};
var d7 = u6 = class extends l {
  constructor(t3) {
    super(t3), this.functionName = null, this.outputPixelType = "unknown", this.variableName = null, this.rasterFunctionDefinition = null;
  }
  set functionArguments(t3) {
    if (t3) {
      const r3 = Object.keys(t3);
      if (r3.some((r4) => c7.has(r4.toLowerCase()) && l7(t3[r4])) || r3.some((r4) => p7.has(r4.toLowerCase()) && Array.isArray(t3[r4]) && t3[r4].some((t4) => l7(t4)))) {
        t3 = p(t3);
        for (const e3 of r3)
          c7.has(e3.toLowerCase()) ? t3[e3] = y6(t3[e3]) : p7.has(e3.toLowerCase()) && Array.isArray(t3[e3]) && (t3[e3] = t3[e3].map((t4) => y6(t4)));
      }
    }
    this._set("functionArguments", t3);
  }
  readFunctionArguments(t3) {
    return F(t3);
  }
  writeFunctionArguments(t3, r3, e3) {
    const o6 = {};
    for (const n6 of Object.keys(t3))
      c7.has(n6.toLowerCase()) ? o6[n6] = f3(t3[n6]) : p7.has(n6.toLowerCase()) && Array.isArray(t3[n6]) ? o6[n6] = t3[n6].map(f3) : o6[n6] = f3(t3[n6]);
    r3[e3] = o6;
  }
  readFunctionName(t3, r3) {
    const e3 = r3.rasterFunctionInfos, o6 = r3.name;
    return o6 || (e3 && e3.length && "None" !== e3[0].name ? e3[0].name : r3.rasterFunctionDefinition ? r3.rasterFunctionDefinition.name : r3.rasterFunction);
  }
  clone() {
    return new u6({ functionName: this.functionName, functionArguments: p(this.functionArguments), outputPixelType: this.outputPixelType, variableName: this.variableName, rasterFunctionDefinition: p(this.rasterFunctionDefinition) });
  }
};
e([y({ json: { type: Object, name: "rasterFunctionArguments" } })], d7.prototype, "functionArguments", null), e([o("functionArguments")], d7.prototype, "readFunctionArguments", null), e([r2("functionArguments")], d7.prototype, "writeFunctionArguments", null), e([y({ json: { type: String, write: { target: "rasterFunction" } } })], d7.prototype, "functionName", void 0), e([o("functionName", ["rasterFunction", "rasterFunctionInfos", "rasterFunctionDefinition"])], d7.prototype, "readFunctionName", null), e([o3({ C128: "c128", C64: "c64", F32: "f32", F64: "f64", S16: "s16", S32: "s32", S8: "s8", U1: "u1", U16: "u16", U2: "u2", U32: "u32", U4: "u4", U8: "u8", UNKNOWN: "unknown" }, { ignoreUnknown: false }), y({ json: { default: "unknown" } })], d7.prototype, "outputPixelType", void 0), e([y({ type: String, json: { read: true, write: true } })], d7.prototype, "variableName", void 0), e([y({ type: Object, json: { name: "rasterFunctionDefinition" } })], d7.prototype, "rasterFunctionDefinition", void 0), d7 = u6 = e([a("esri.layers.support.RasterFunction")], d7);
var w3 = d7;

// node_modules/@arcgis/core/layers/support/rasterEnums.js
var o5 = o2()({ RSP_NearestNeighbor: "nearest", RSP_BilinearInterpolation: "bilinear", RSP_CubicConvolution: "cubic", RSP_Majority: "majority" });
var i2 = o2()({ esriNoDataMatchAny: "any", esriNoDataMatchAll: "all" });

// node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js
var p8;
var m8 = { base: p2, key: "type", typeMap: { extent: w2, polygon: v } };
var u7 = p8 = class extends l {
  constructor(e3) {
    super(e3), this.areaOfInterest = null, this.subsetDefinitions = null;
  }
  get dimensions() {
    const { subsetDefinitions: e3 } = this;
    if (null == e3 || 0 === e3.length)
      return [];
    const t3 = /* @__PURE__ */ new Map();
    e3.forEach((e4) => {
      if (!e4.dimensionName)
        return;
      let s5, r3;
      if (Array.isArray(e4.values[0])) {
        const t4 = e4.values;
        s5 = t4[0][0], r3 = t4[e4.values.length - 1][1];
      } else {
        const t4 = e4.values;
        s5 = t4[0], r3 = t4[e4.values.length - 1];
      }
      if (t3.has(e4.dimensionName)) {
        const o6 = t3.get(e4.dimensionName);
        o6[0] = Math.min(s5, o6[0]), o6[1] = Math.max(r3, o6[1]);
      } else
        t3.set(e4.dimensionName, [s5, r3]);
    });
    const s4 = [];
    for (const r3 of t3)
      s4.push({ name: r3[0], extent: r3[1] });
    return s4;
  }
  get variables() {
    const { subsetDefinitions: e3 } = this;
    if (null == e3 || 0 === e3.length)
      return [];
    const t3 = /* @__PURE__ */ new Set();
    return e3.forEach((e4) => {
      e4.variableName && t3.add(e4.variableName);
    }), [...t3];
  }
  clone() {
    var _a;
    const e3 = (_a = this.subsetDefinitions) == null ? void 0 : _a.map((e4) => e4.clone()), t3 = this.areaOfInterest ? this.areaOfInterest.clone() : this.areaOfInterest;
    return new p8({ areaOfInterest: t3, subsetDefinitions: e3 });
  }
};
e([y({ types: m8, json: { read: v2, write: true } })], u7.prototype, "areaOfInterest", void 0), e([y({ readOnly: true })], u7.prototype, "dimensions", null), e([y({ readOnly: true })], u7.prototype, "variables", null), e([y({ type: [p5], json: { write: true } })], u7.prototype, "subsetDefinitions", void 0), u7 = p8 = e([a("esri.layers.support.MultidimensionalSubset")], u7);
var c8 = u7;

// node_modules/@arcgis/core/layers/support/RasterJobHandler.js
var n5 = class {
  constructor() {
    this._workerThread = null, this._destroyed = false;
  }
  async initialize() {
    const e3 = await u2("RasterWorker");
    this._destroyed ? e3.close() : this._workerThread = e3;
  }
  destroy() {
    this._destroyed = true, this._workerThread && (this._workerThread.close(), this._workerThread = null);
  }
  async convertVectorFieldData(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n6 = await this._workerThread.invoke("convertVectorFieldData", { pixelBlock: r3.pixelBlock.toJSON(), type: r3.dataType }, o6);
    return n6 ? new m4(n6) : null;
  }
  async decode(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n6 = await this._workerThread.invoke("decode", r3, o6);
    return n6 ? new m4(n6) : null;
  }
  async symbolize(o6, n6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const a6 = { extent: o6.extent && o6.extent.toJSON(), pixelBlock: r(o6.pixelBlock) && o6.pixelBlock.toJSON(), simpleStretchParams: o6.simpleStretchParams, bandIds: o6.bandIds }, i3 = await this._workerThread.invoke("symbolize", a6, n6);
    return i3 ? new m4(i3) : null;
  }
  async updateSymbolizer(r3, o6) {
    var _a;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = (_a = r3 == null ? void 0 : r3.rendererJSON) == null ? void 0 : _a.histograms;
    await Promise.all(this._workerThread.broadcast("updateSymbolizer", { symbolizerJSON: r3.toJSON(), histograms: t3 }, o6));
  }
  async updateRasterFunction(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    await Promise.all(this._workerThread.broadcast("updateRasterFunction", { rasterFunctionJSON: r3.toJSON() }, o6));
  }
  async process(o6, n6) {
    var _a;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const a6 = await this._workerThread.invoke("process", { extent: (_a = o6.extent) == null ? void 0 : _a.toJSON(), primaryPixelBlocks: o6.primaryPixelBlocks.map((e3) => r(e3) ? e3.toJSON() : null), primaryRasterIds: o6.primaryRasterIds }, n6);
    return a6 ? new m4(a6) : null;
  }
  async stretch(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const n6 = { srcPixelBlock: r3.pixelBlock.toJSON(), stretchParams: r3.stretchParams }, a6 = await this._workerThread.invoke("stretch", n6, o6);
    return a6 ? new m4(a6) : null;
  }
  async split(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const n6 = { srcPixelBlock: r3.pixelBlock.toJSON(), tileSize: r3.tileSize, maximumPyramidLevel: r3.maximumPyramidLevel }, a6 = await this._workerThread.invoke("split", n6, o6);
    return a6 && a6.forEach((e3, r4) => {
      a6.set(r4, e3 ? m4.fromJSON(e3) : null);
    }), a6;
  }
  async estimateStatisticsHistograms(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!(r3 == null ? void 0 : r3.pixelBlock))
      return null;
    const t3 = { srcPixelBlock: r3.pixelBlock.toJSON() };
    return await this._workerThread.invoke("estimateStatisticsHistograms", t3, o6);
  }
  async mosaicAndTransform(o6, n6) {
    var _a;
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!((_a = o6 == null ? void 0 : o6.srcPixelBlocks) == null ? void 0 : _a.length))
      return { pixelBlock: null };
    const a6 = { ...o6, srcPixelBlocks: o6.srcPixelBlocks.map((e3) => r(e3) ? e3.toJSON() : null) }, i3 = await this._workerThread.invoke("mosaicAndTransform", a6, n6);
    return { pixelBlock: i3.pixelBlock ? new m4(i3.pixelBlock) : null, localNorthDirections: i3.localNorthDirections };
  }
  async createFlowMesh(r3, o6) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = { buffer: r3.flowData.data.buffer, maskBuffer: r3.flowData.mask.buffer, width: r3.flowData.width, height: r3.flowData.height }, { meshType: n6, simulationSettings: a6 } = r3, i3 = await this._workerThread.invoke("createFlowMesh", { meshType: n6, flowData: t3, simulationSettings: a6 }, { ...o6, transferList: [t3.buffer, t3.maskBuffer] });
    return { vertexData: new Float32Array(i3.vertexBuffer), indexData: new Uint32Array(i3.indexBuffer) };
  }
  getProjectionOffsetGrid(o6, t3) {
    if (!this._workerThread)
      throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n6 = r(o6.datumTransformation) ? o6.datumTransformation.steps.map((e3) => ({ wkid: e3.wkid, wkt: e3.wkt, isInverse: e3.isInverse })) : null, a6 = r(o6.rasterTransform) ? o6.rasterTransform.toJSON() : null, i3 = { projectedExtent: o6.projectedExtent.toJSON(), srcBufferExtent: o6.srcBufferExtent.toJSON(), pixelSize: o6.pixelSize, hasWrapAround: o6.hasWrapAround, spacing: o6.spacing, datumTransformationSteps: n6, rasterTransform: a6, isAdaptive: o6.isAdaptive, includeGCSGrid: o6.includeGCSGrid };
    return this._workerThread.invoke("getProjectionOffsetGrid", i3, t3);
  }
};

// node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js
var w4 = 0.25;
var x3 = a2.fromJSON({ type: "multipart", colorRamps: [{ fromColor: [0, 0, 255], toColor: [0, 255, 255] }, { fromColor: [0, 255, 255], toColor: [255, 255, 0] }, { fromColor: [255, 255, 0], toColor: [255, 0, 0] }] });
var T4 = a2.fromJSON(d[0]);
var R = /* @__PURE__ */ new Set(["scientific", "standard-time", "vector-uv", "vector-magdir", "vector-u", "vector-v", "vector-magnitude", "vector-direction"]);
function j2(e3, n6) {
  const { attributeTable: a6, colormap: r3 } = e3;
  if (K(e3)) {
    const n7 = Y(e3);
    if (r(n7))
      return n7;
  }
  if (r(r3)) {
    const n7 = U2(e3);
    if (r(n7))
      return n7;
  }
  if (r(a6)) {
    const n7 = F2(e3);
    if (r(n7))
      return n7;
  }
  return I(e3, n6);
}
function k(e3, t3 = false) {
  const n6 = ["raster-stretch"];
  return O(e3) && n6.push("raster-colormap"), W(e3) && n6.push("unique-value"), J2(e3, t3) && n6.push("class-breaks"), A(e3) && n6.push("raster-shaded-relief"), K(e3) && n6.push("vector-field"), Q(e3) && n6.push("flow"), n6;
}
function V(e3, t3, n6) {
  const a6 = ["nearest", "bilinear", "cubic", "majority"].find((e4) => e4 === (n6 == null ? void 0 : n6.toLowerCase()));
  if ("Map" === t3)
    return a6 ?? "bilinear";
  if ("standard-time" === e3.dataType)
    return a6 ?? "nearest";
  return "thematic" === e3.dataType || e3.attributeTable || e3.colormap ? "nearest" === a6 || "majority" === a6 ? a6 : "nearest" : a6 ?? "bilinear";
}
function I(e3, a6) {
  e3 = S(e3, a6 == null ? void 0 : a6.variableName);
  const { bandCount: r3 } = e3;
  let { bandIds: s4, stretchType: o6 } = a6 || {};
  (s4 == null ? void 0 : s4.some((e4) => e4 >= r3)) && (s4 = null);
  let i3 = e2(e3.statistics), l8 = e2(e3.histograms);
  r3 > 1 ? (s4 = (s4 == null ? void 0 : s4.length) ? s4 : L(e3), i3 = null == i3 ? null : s4 == null ? void 0 : s4.map((e4) => i3[e4]), l8 = null == l8 ? null : s4 == null ? void 0 : s4.map((e4) => l8[e4])) : s4 = [0], null == o6 && (o6 = q(e3));
  let u9 = false;
  switch (o6) {
    case "none":
      u9 = false;
      break;
    case "percent-clip":
      u9 = !(l8 == null ? void 0 : l8.length);
      break;
    default:
      u9 = !(i3 == null ? void 0 : i3.length);
  }
  const { dataType: m10 } = e3, c9 = 1 === (s4 == null ? void 0 : s4.length) && R.has(m10) ? x3 : null, f5 = new y5({ stretchType: o6, dynamicRangeAdjustment: u9, colorRamp: c9, outputMin: 0, outputMax: 255, gamma: 1 === (s4 == null ? void 0 : s4.length) ? [1] : [1, 1, 1], useGamma: false });
  return "percent-clip" === o6 ? f5.maxPercent = f5.minPercent = w4 : "standard-deviation" === o6 && (f5.numberOfStandardDeviations = 2), u9 || !r(e3.multidimensionalInfo) && !(a6 == null ? void 0 : a6.includeStatisticsInStretch) || ("percent-clip" === o6 ? f5.histograms = l8 : "min-max" !== o6 && "standard-deviation" !== o6 || (f5.statistics = i3)), f5;
}
function S(e3, a6) {
  if (!a6)
    return e3;
  let r3 = e2(e3.statistics), s4 = e2(e3.histograms);
  const { multidimensionalInfo: i3 } = e3;
  if (a6 && r(i3)) {
    const e4 = i3.variables.find((e5) => e5.name === a6);
    if (e4) {
      const { statistics: t3, histograms: n6 } = e4;
      (t3 == null ? void 0 : t3.length) && (r3 = t3), (n6 == null ? void 0 : n6.length) && (s4 = n6);
    }
  }
  return u.fromJSON({ ...e3.toJSON(), statistics: r3, histograms: s4 });
}
function L(e3) {
  const t3 = e3.bandCount;
  if (1 === t3)
    return null;
  if (2 === t3)
    return [0];
  const n6 = e3.keyProperties && e3.keyProperties.BandProperties;
  let a6;
  if (n6 && n6.length === t3) {
    const { red: e4, green: t4, blue: r3, nir: s4 } = E2(n6);
    null != e4 && null != t4 && null != r3 ? a6 = [e4, t4, r3] : null != s4 && null != e4 && null != t4 && (a6 = [s4, e4, t4]);
  }
  return !a6 && t3 >= 3 && (a6 = [0, 1, 2]), a6;
}
function E2(e3) {
  var _a;
  const t3 = {};
  for (let n6 = 0; n6 < e3.length; n6++) {
    const a6 = e3[n6], r3 = (_a = a6.BandName) == null ? void 0 : _a.toLowerCase();
    if ("red" === r3)
      t3.red = n6;
    else if ("green" === r3)
      t3.green = n6;
    else if ("blue" === r3)
      t3.blue = n6;
    else if ("nearinfrared" === r3 || "nearinfrared_1" === r3 || "nir" === r3)
      t3.nir = n6;
    else if (a6.WavelengthMax && a6.WavelengthMin) {
      const e4 = a6.WavelengthMin, r4 = a6.WavelengthMax;
      null == t3.blue && e4 >= 410 && e4 <= 480 && r4 >= 480 && r4 <= 540 ? t3.blue = n6 : null == t3.green && e4 >= 490 && e4 <= 560 && r4 >= 560 && r4 <= 610 ? t3.green = n6 : null == t3.red && e4 >= 595 && e4 <= 670 && r4 >= 660 && r4 <= 730 ? t3.red = n6 : null == t3.nir && e4 >= 700 && e4 <= 860 && r4 >= 800 && r4 <= 950 && (t3.nir = n6);
    }
  }
  return t3;
}
function q(e3) {
  let n6 = "percent-clip";
  const { pixelType: a6, dataType: r3, histograms: s4, statistics: o6, multidimensionalInfo: i3 } = e3, l8 = R.has(r3) || "generic" === r3 && r(i3);
  return "u8" !== a6 || "processed" !== r3 && r(s4) && r(o6) ? "u8" === a6 || "elevation" === r3 || l8 ? n6 = "min-max" : r(s4) ? n6 = "percent-clip" : r(o6) && (n6 = "min-max") : n6 = "none", n6;
}
function F2(n6, a6, r3, s4) {
  if (!W(n6, a6))
    return null;
  const { attributeTable: o6, statistics: i3 } = n6, u9 = N2(o6, a6), m10 = z(o6, "red"), p9 = z(o6, "green"), d9 = z(o6, "blue"), b3 = new j(), h4 = [], g3 = /* @__PURE__ */ new Set(), v4 = !!(m10 && p9 && d9);
  if (r(o6))
    o6.features.forEach((t3) => {
      const n7 = t3.attributes[u9.name];
      if (!g3.has(t3.attributes[u9.name]) && null != n7) {
        g3.add(n7);
        const a7 = v4 && ("single" === m10.type || "double" === m10.type) && ("single" === p9.type || "double" === p9.type) && ("single" === d9.type || "double" === d9.type) && !o6.features.some((e3) => e3.attributes[m10.name] > 1 || e3.attributes[p9.name] > 1 || e3.attributes[d9.name] > 1), r4 = a7 ? 255 : 1;
        h4.push(new n3({ value: t3.attributes[u9.name], label: t3.attributes[u9.name] + "", symbol: { type: "simple-fill", style: "solid", outline: null, color: new l2(v4 ? [t3.attributes[m10.name] * r4, t3.attributes[p9.name] * r4, t3.attributes[d9.name] * r4, 1] : [0, 0, 0, 0]) } }));
      }
    });
  else if (i3 == null ? void 0 : i3[0])
    for (let t3 = i3[0].min; t3 <= i3[0].max; t3++)
      h4.push(new n3({ value: t3, label: t3.toString(), symbol: { type: "simple-fill", style: "solid", outline: null, color: new l2([0, 0, 0, 0]) } }));
  if (h4.sort((e3, t3) => e3.value && "string" == typeof e3.value.valueOf() ? 0 : e3.value > t3.value ? 1 : -1), !v4) {
    const t3 = _2(T4, { numColors: h4.length });
    h4.forEach((n7, a7) => n7.symbol.color = new l2(t3[a7].slice(1, 4))), b3.colorRamp = T4;
  }
  if (r3 || s4) {
    const t3 = r3 || _2(s4, { numColors: h4.length }).map((e3) => e3.slice(1));
    h4.forEach((n7, a7) => n7.symbol.color = new l2(t3[a7])), b3.colorRamp = s4;
  }
  return new T3({ field: u9.name, uniqueValueInfos: h4, authoringInfo: b3 });
}
function N2(e3, n6, a6) {
  let r3;
  return r(e3) ? (r3 = n6 ? e3.fields.find((e4) => n6.toLowerCase() === e4.name.toLowerCase()) : P(e3.fields), r3 || (a6 || (r3 = e3.fields.find((e4) => "string" === e4.type)), r3 || (r3 = z(e3, "value")))) : r3 = new y2({ name: "value" }), r3;
}
function P(e3) {
  let t3;
  for (let n6 = 0; n6 < e3.length; n6++) {
    const a6 = e3[n6].name.toLowerCase();
    if ("string" === e3[n6].type) {
      if (a6.startsWith("class")) {
        t3 = e3[n6];
        break;
      }
      null == t3 && (a6.endsWith("name") || a6.endsWith("type")) && (t3 = e3[n6]);
    }
  }
  return t3;
}
function z(e3, t3) {
  return t(e3) ? null : e3.fields.find((e4) => e4.name.toLowerCase() === t3);
}
function W(e3, t3) {
  const { attributeTable: n6, bandCount: r3 } = e3;
  if (t(n6) && H(e3))
    return true;
  if (t(n6) || r3 > 1)
    return false;
  if (t3) {
    if (null == n6.fields.find((e4) => e4.name.toLowerCase() === t3.toLowerCase()))
      return false;
  }
  return true;
}
function O(e3) {
  const { bandCount: n6, colormap: a6 } = e3;
  return r(a6) && a6.length > 0 && 1 === n6;
}
function U2(e3) {
  if (!O(e3))
    return null;
  let a6;
  const { attributeTable: r3, colormap: s4 } = e3;
  if (r(r3)) {
    const e4 = z(r3, "value"), t3 = N2(r3, null, true);
    "string" === t3.type && (a6 = {}, r3.features.forEach((n6) => {
      const r4 = n6.attributes;
      a6[r4[e4.name]] = t3 ? r4[t3.name] : r4[e4.name];
    }));
  }
  return l5.createFromColormap(e2(s4), a6);
}
function A(e3) {
  const { bandCount: t3, dataType: n6, pixelType: a6 } = e3;
  return "elevation" === n6 || "generic" === n6 && 1 === t3 && ("s16" === a6 || "s32" === a6 || "f32" === a6 || "f64" === a6);
}
function J2(e3, n6 = false) {
  const { attributeTable: a6, bandCount: r3 } = e3;
  return 1 === r3 && (!n6 || r(a6) || r(e3.histograms));
}
function H(e3) {
  var _a, _b, _c;
  return ["u8", "s8"].includes(e3.pixelType) && null != ((_b = (_a = e3.statistics) == null ? void 0 : _a[0]) == null ? void 0 : _b.min) && null != ((_c = e3.statistics[0]) == null ? void 0 : _c.max) && 1 === e3.bandCount;
}
function K(e3) {
  const { dataType: t3 } = e3;
  return "vector-uv" === t3 || "vector-magdir" === t3;
}
function Q(e3) {
  const { dataType: t3 } = e3;
  return "vector-uv" === t3 || "vector-magdir" === t3;
}
var X = /* @__PURE__ */ new Map([["m/s", "meter-per-second"], ["km/h", "kilometer-per-hour"], ["knots", "knots"], ["ft/s", "feet-per-second"], ["mph", "mile-per-hour"]]);
function Y(e3) {
  if (!K(e3))
    return null;
  let n6;
  if (r(e3.statistics) && e3.statistics.length && ("vector-magdir" === e3.dataType || "vector-uv" === e3.dataType)) {
    const { minMagnitude: t3, maxMagnitude: a7 } = te(e3.dataType, e3.statistics);
    n6 = [{ type: "size", field: "Magnitude", minSize: 10, maxSize: 40, minDataValue: t3, maxDataValue: a7 }];
  }
  const a6 = r(e3.multidimensionalInfo) ? X.get(e3.multidimensionalInfo.variables[0].unit) : null, r3 = new x2({ visualVariables: n6, inputUnit: a6, rotationType: "geographic" });
  return r3.visualVariables = [...r3.sizeVariables, ...r3.rotationVariables], r3;
}
function Z2(e3) {
  var _a;
  return { color: (_a = e3.symbolLayers[0].material) == null ? void 0 : _a.color, type: "esriSFS", style: "esriSFSSolid" };
}
function $2(e3) {
  var _a, _b, _c;
  if ("uniqueValue" === e3.type) {
    const t3 = e3.uniqueValueInfos, n6 = t3 == null ? void 0 : t3[0].symbol;
    return ((_a = n6 == null ? void 0 : n6.symbolLayers) == null ? void 0 : _a.length) && (e3.uniqueValueInfos = t3 == null ? void 0 : t3.map((e4) => ({ value: e4.value, label: e4.label, symbol: e4.symbol ? Z2(e4.symbol) : null }))), e3;
  }
  if ("classBreaks" === e3.type) {
    const t3 = e3.classBreakInfos;
    return ((_c = (_b = t3[0].symbol) == null ? void 0 : _b.symbolLayers) == null ? void 0 : _c.length) && (e3.classBreakInfos = t3.map((e4) => ({ classMinValue: e4.classMinValue, classMaxValue: e4.classMaxValue, label: e4.label, symbol: e4.symbol ? Z2(e4.symbol) : null }))), e3;
  }
  return e3;
}
function te(e3, t3) {
  let n6, a6;
  if ("vector-magdir" === e3)
    n6 = t3[0].min, a6 = t3[0].max;
  else {
    const e4 = t3[0].min, r3 = t3[0].max, s4 = t3[1].min, o6 = t3[1].max;
    n6 = 0, a6 = Math.max(Math.abs(e4), Math.abs(s4), Math.abs(r3), Math.abs(o6));
  }
  return { minMagnitude: n6, maxMagnitude: a6 };
}

// node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js
async function u8(u9, m10, f5) {
  var _a, _b, _c, _d, _e, _f;
  const p9 = f2(u9), { renderingRule: c9, sourceJSON: d9 } = m10 || {}, h4 = c9 ? JSON.stringify(c9.rasterFunctionDefinition || c9) : null, g3 = s3({ ...p9.query, renderingRule: h4, f: "json" }), v4 = i(g3, f5);
  u9 = p9.path;
  const y7 = d9 || await U(u9, v4).then((e3) => e3.data), S2 = y7.hasRasterAttributeTable ? U(`${u9}/rasterAttributeTable`, v4) : null, V2 = y7.hasColormap ? U(`${u9}/colormap`, v4) : null, x4 = y7.hasHistograms ? U(`${u9}/histograms`, v4) : null, b3 = y7.currentVersion >= 10.3 ? U(`${u9}/keyProperties`, v4) : null, D = y7.hasMultidimensions ? U(`${u9}/multidimensionalInfo`, v4) : null, R2 = await Promise.allSettled([S2, V2, x4, b3, D]);
  let T5 = null;
  if (y7.minValues && y7.minValues.length === y7.bandCount) {
    T5 = [];
    for (let e3 = 0; e3 < y7.minValues.length; e3++)
      T5.push({ min: y7.minValues[e3], max: y7.maxValues[e3], avg: y7.meanValues[e3], stddev: y7.stdvValues[e3] });
  }
  const j3 = w2.fromJSON(y7.extent), w5 = Math.ceil(j3.width / y7.pixelSizeX - 0.1), J3 = Math.ceil(j3.height / y7.pixelSizeY - 0.1), N3 = f.fromJSON(y7.spatialReference || y7.extent.spatialReference), O2 = "fulfilled" === R2[0].status && R2[0].value ? x.fromJSON(R2[0].value.data) : null, I2 = "fulfilled" === R2[1].status ? (_a = R2[1].value) == null ? void 0 : _a.data.colormap : null, z2 = "fulfilled" === R2[2].status ? (_b = R2[2].value) == null ? void 0 : _b.data.histograms : null, C = "fulfilled" === R2[3].status ? ((_c = R2[3].value) == null ? void 0 : _c.data) ?? {} : {}, $3 = "fulfilled" === R2[4].status ? (_d = R2[4].value) == null ? void 0 : _d.data.multidimensionalInfo : null;
  ((_e = $3 == null ? void 0 : $3.variables) == null ? void 0 : _e.length) && $3.variables.forEach((e3) => {
    var _a2;
    ((_a2 = e3.statistics) == null ? void 0 : _a2.length) && e3.statistics.forEach((e4) => {
      e4.avg = e4.mean, e4.stddev = e4.standardDeviation;
    });
  });
  const { defaultVariable: P2, serviceDataType: E3 } = y7;
  P2 && P2 !== C.DefaultVariable && (C.DefaultVariable = P2), E3 && E3.includes("esriImageServiceDataTypeVector") && !E3.includes(C.DataType) && (C.DataType = E3.replace("esriImageServiceDataType", ""));
  let M = y7.noDataValue;
  return ((_f = y7.noDataValues) == null ? void 0 : _f.length) && y7.noDataValues.some((e3) => e3 !== M) && (M = y7.noDataValues), new u({ width: w5, height: J3, bandCount: y7.bandCount, extent: w2.fromJSON(y7.extent), spatialReference: N3, pixelSize: new w({ x: y7.pixelSizeX, y: y7.pixelSizeY, spatialReference: N3 }), pixelType: y7.pixelType.toLowerCase(), statistics: T5, attributeTable: O2, colormap: I2, histograms: z2, keyProperties: C, noDataValue: M, multidimensionalInfo: $3 });
}
function m9(e3, t3, a6) {
  return u8(e3, { sourceJSON: t3 }, a6);
}
function f4(e3, t3, a6) {
  return u8(e3, { renderingRule: t3 }, a6);
}

export {
  l6 as l,
  d6 as d,
  c6 as c,
  w3 as w,
  o5 as o,
  i2 as i,
  c8 as c2,
  n5 as n,
  j2 as j,
  k,
  V,
  S,
  L,
  $2 as $,
  m9 as m,
  f4 as f
};
//# sourceMappingURL=chunk-RXVGJIXX.js.map
