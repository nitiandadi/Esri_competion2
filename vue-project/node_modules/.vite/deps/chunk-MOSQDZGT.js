import {
  s
} from "./chunk-GWFG4NRK.js";
import {
  i
} from "./chunk-3U7SS7RC.js";
import {
  u2 as u
} from "./chunk-CPSZPA6H.js";
import {
  a2 as a,
  e,
  v2 as v,
  y3 as y
} from "./chunk-Y54MR3BP.js";
import {
  r
} from "./chunk-HVCAHUYB.js";

// node_modules/@arcgis/core/analysis/Analysis.js
var n = 0;
var l = class extends u(i(s(v))) {
  constructor(e2) {
    super(e2), this.id = `${Date.now().toString(16)}-analysis-${n++}`, this.title = null;
  }
  get parent() {
    return this._get("parent");
  }
  set parent(e2) {
    const t = this.parent;
    if (r(t))
      switch (t.type) {
        case "line-of-sight":
        case "dimension":
          t.releaseAnalysis(this);
          break;
        case "2d":
        case "3d":
          t.analyses.includes(this) && t.analyses.remove(this);
      }
    this._set("parent", e2);
  }
  get isEditable() {
    return this.requiredPropertiesForEditing.every(r);
  }
};
e([y({ type: String, constructOnly: true, clonable: false })], l.prototype, "id", void 0), e([y({ type: String })], l.prototype, "title", void 0), e([y({ constructOnly: true })], l.prototype, "type", void 0), e([y({ clonable: false, value: null })], l.prototype, "parent", null), e([y({ readOnly: true })], l.prototype, "isEditable", null), e([y({ readOnly: true })], l.prototype, "requiredPropertiesForEditing", void 0), l = e([a("esri.analysis.Analysis")], l);
var c = l;

export {
  c
};
//# sourceMappingURL=chunk-MOSQDZGT.js.map
