import {
  S,
  d,
  g,
  j as j3
} from "./chunk-R66KUL6G.js";
import {
  l as l2
} from "./chunk-55MPB7OZ.js";
import "./chunk-TDFTAVQL.js";
import {
  _
} from "./chunk-VRZTCZFJ.js";
import {
  p
} from "./chunk-AZFJJ5Y2.js";
import {
  n as n2
} from "./chunk-EJKIE4MZ.js";
import "./chunk-YZ3HZMEM.js";
import "./chunk-5XBZ477A.js";
import {
  t
} from "./chunk-YUXNJDFN.js";
import "./chunk-TKZTELJQ.js";
import {
  c
} from "./chunk-CPJE5ZZA.js";
import {
  f as f2
} from "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import {
  O
} from "./chunk-74KT22JL.js";
import "./chunk-BQHZXXFC.js";
import {
  b as b2
} from "./chunk-4JB2KWLF.js";
import "./chunk-3MAMOMOP.js";
import "./chunk-QPSL5BDS.js";
import "./chunk-AIOICOJJ.js";
import "./chunk-HWGER6NN.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-ZXEHLMMH.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-5W2WWLX7.js";
import "./chunk-U6PCZE74.js";
import "./chunk-WLWGIFGY.js";
import "./chunk-IZJW67TO.js";
import "./chunk-Q4UXP7RG.js";
import "./chunk-JZSNGIOH.js";
import "./chunk-EXHPOUUQ.js";
import "./chunk-6PNW7TCI.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import {
  U,
  a as a2,
  j as j2,
  l
} from "./chunk-QP5ZWBKN.js";
import "./chunk-QAGMOCSO.js";
import "./chunk-EPZLAQP3.js";
import "./chunk-VSUGA5AN.js";
import "./chunk-E3JHIVZP.js";
import "./chunk-3ACAMBZX.js";
import "./chunk-G3A2XEXX.js";
import "./chunk-JKBONAYS.js";
import "./chunk-YSJ4W32U.js";
import "./chunk-3EIJOCWD.js";
import "./chunk-HRIBADXS.js";
import "./chunk-CSFUQCFV.js";
import "./chunk-ZUIHAM2A.js";
import "./chunk-SABBLK7S.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-7FGYV4GW.js";
import "./chunk-CXHYHUY6.js";
import {
  m
} from "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-II3EAW7L.js";
import "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import {
  qt
} from "./chunk-6XDV3BWZ.js";
import "./chunk-CH2BQDQT.js";
import "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import {
  j
} from "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-IMKS3PQX.js";
import {
  n
} from "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-MQUNEV3K.js";
import "./chunk-WVICJPEU.js";
import "./chunk-TZBBKXOW.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import {
  f2 as f,
  w2
} from "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-FSB7TIRN.js";
import "./chunk-UIMO4FGN.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-E4M4B5ZQ.js";
import {
  r as r2
} from "./chunk-JATK7CEQ.js";
import {
  o
} from "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import {
  u2
} from "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import {
  b
} from "./chunk-RLEMMDH4.js";
import {
  w
} from "./chunk-6ZUWLK7F.js";
import "./chunk-YVZY5LDV.js";
import {
  u
} from "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import {
  r
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/layers/support/KMLSublayer.js
var S2;
var k = S2 = class extends n.EventedMixin(u2(m)) {
  constructor(...e2) {
    super(...e2), this.description = null, this.id = null, this.networkLink = null, this.sublayers = null, this.title = null, this.sourceJSON = null, this.fullExtent = null, this.addHandles([a2(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = this, e3.layer = this.layer;
    }, U), a2(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, U), l(() => this.sublayers, (e3, t2) => {
      if (t2)
        for (const r3 of t2)
          r3.layer = r3.parent = null;
      if (e3)
        for (const r3 of e3)
          r3.parent = this, r3.layer = this.layer;
    }, U)]);
  }
  initialize() {
    j2(() => this.networkLink).then(() => j2(() => true === this.visible)).then(() => this.load());
  }
  load(e2) {
    var _a;
    if (!this.networkLink)
      return;
    if (this.networkLink.viewFormat)
      return;
    const r3 = r(e2) ? e2.signal : null, s = this._fetchService(((_a = this._get("networkLink")) == null ? void 0 : _a.href) ?? "", r3).then((e3) => {
      var _a2;
      const r4 = j3(e3.sublayers);
      this.fullExtent = w2.fromJSON(r4), this.sourceJSON = e3;
      const s2 = b(j.ofType(S2), S(S2, e3));
      this.sublayers ? this.sublayers.addMany(s2) : this.sublayers = s2, (_a2 = this.layer) == null ? void 0 : _a2.emit("sublayer-update"), this.layer && this.layer.notifyChange("visibleSublayers");
    });
    return this.addResolvingPromise(s), Promise.resolve(this);
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e2) {
    this._get("visible") !== e2 && (this._set("visible", e2), this.layer && this.layer.notifyChange("visibleSublayers"));
  }
  readVisible(e2, t2) {
    return !!t2.visibility;
  }
  set layer(e2) {
    this._set("layer", e2), this.sublayers && this.sublayers.forEach((t2) => t2.layer = e2);
  }
  _fetchService(e2, t2) {
    return g(e2, this.layer.outSpatialReference, this.layer.refreshInterval, t2).then((e3) => d(e3.data));
  }
};
e([y()], k.prototype, "description", void 0), e([y()], k.prototype, "id", void 0), e([y({ readOnly: true, value: null })], k.prototype, "networkLink", void 0), e([y({ json: { write: { allowNull: true } } })], k.prototype, "parent", void 0), e([y({ type: j.ofType(S2), json: { write: { allowNull: true } } })], k.prototype, "sublayers", void 0), e([y({ value: null, json: { read: { source: "name", reader: (e2) => u(e2) } } })], k.prototype, "title", void 0), e([y({ value: true })], k.prototype, "visible", null), e([o("visible", ["visibility"])], k.prototype, "readVisible", null), e([y()], k.prototype, "sourceJSON", void 0), e([y({ value: null })], k.prototype, "layer", null), e([y({ type: w2 })], k.prototype, "fullExtent", void 0), k = S2 = e([a("esri.layers.support.KMLSublayer")], k);
var g2 = k;

// node_modules/@arcgis/core/layers/KMLLayer.js
var F = ["kml", "xml"];
var O2 = class extends n2(p(t(c(_(O(b2)))))) {
  constructor(...e2) {
    super(...e2), this._visibleFolders = [], this.allSublayers = new l2({ getCollections: () => [this.sublayers], getChildrenFunction: (e3) => e3.sublayers }), this.outSpatialReference = f.WGS84, this.path = null, this.legendEnabled = false, this.operationalLayerType = "KML", this.sublayers = null, this.type = "kml", this.url = null;
  }
  initialize() {
    this.addHandles([l(() => this.sublayers, (e2, r3) => {
      r3 && r3.forEach((e3) => {
        e3.parent = null, e3.layer = null;
      }), e2 && e2.forEach((e3) => {
        e3.parent = this, e3.layer = this;
      });
    }, U), this.on("sublayer-update", () => this.notifyChange("fullExtent"))]);
  }
  normalizeCtorArgs(e2, r3) {
    return "string" == typeof e2 ? { url: e2, ...r3 } : e2;
  }
  readSublayersFromItemOrWebMap(e2, r3) {
    this._visibleFolders = r3.visibleFolders;
  }
  readSublayers(e2, r3, t2) {
    return S(g2, r3, t2, this._visibleFolders);
  }
  writeSublayers(e2, r3) {
    const t2 = [], o2 = e2.toArray();
    for (; o2.length; ) {
      const e3 = o2[0];
      e3.networkLink || (e3.visible && t2.push(e3.id), e3.sublayers && o2.push(...e3.sublayers.toArray())), o2.shift();
    }
    r3.visibleFolders = t2;
  }
  get title() {
    const e2 = this._get("title");
    return e2 && "defaults" !== this.originOf("title") ? e2 : this.url ? qt(this.url, F) || "KML" : e2 || "";
  }
  set title(e2) {
    this._set("title", e2);
  }
  get visibleSublayers() {
    const e2 = this.sublayers, r3 = [], t2 = (e3) => {
      e3.visible && (r3.push(e3), e3.sublayers && e3.sublayers.forEach(t2));
    };
    return e2 && e2.forEach(t2), r3;
  }
  get fullExtent() {
    return this._recomputeFullExtent();
  }
  load(e2) {
    const r3 = r(e2) ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["KML"], supportsData: false }, e2).catch(w).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  destroy() {
    super.destroy(), this.allSublayers.destroy();
  }
  async _fetchService(e2) {
    const r3 = await Promise.resolve().then(() => this.resourceInfo ? { ssl: false, data: this.resourceInfo } : g(this.url ?? "", this.outSpatialReference, this.refreshInterval, e2)), t2 = d(r3.data);
    t2 && this.read(t2, { origin: "service" });
  }
  _recomputeFullExtent() {
    let e2 = null;
    r(this.extent) && (e2 = this.extent.clone());
    const r3 = (t2) => {
      if (t2.sublayers)
        for (const s of t2.sublayers.items)
          r3(s), s.visible && s.fullExtent && (r(e2) ? e2.union(s.fullExtent) : e2 = s.fullExtent.clone());
    };
    return r3(this), e2;
  }
};
e([y({ readOnly: true })], O2.prototype, "allSublayers", void 0), e([y({ type: f })], O2.prototype, "outSpatialReference", void 0), e([y({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], O2.prototype, "path", void 0), e([y({ readOnly: true, json: { read: false, write: false } })], O2.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], O2.prototype, "listMode", void 0), e([y({ type: ["KML"] })], O2.prototype, "operationalLayerType", void 0), e([y({})], O2.prototype, "resourceInfo", void 0), e([y({ type: j.ofType(g2), json: { write: { ignoreOrigin: true } } })], O2.prototype, "sublayers", void 0), e([o(["web-map", "portal-item"], "sublayers", ["visibleFolders"])], O2.prototype, "readSublayersFromItemOrWebMap", null), e([o("service", "sublayers", ["sublayers"])], O2.prototype, "readSublayers", null), e([r2("sublayers")], O2.prototype, "writeSublayers", null), e([y({ readOnly: true, json: { read: false } })], O2.prototype, "type", void 0), e([y({ json: { origins: { "web-map": { read: { source: "title" } } }, write: { ignoreOrigin: true } } })], O2.prototype, "title", null), e([y(f2)], O2.prototype, "url", void 0), e([y({ readOnly: true })], O2.prototype, "visibleSublayers", null), e([y({ type: w2 })], O2.prototype, "extent", void 0), e([y()], O2.prototype, "fullExtent", null), O2 = e([a("esri.layers.KMLLayer")], O2);
var M = O2;
export {
  M as default
};
//# sourceMappingURL=KMLLayer-J4XBW2WI.js.map
