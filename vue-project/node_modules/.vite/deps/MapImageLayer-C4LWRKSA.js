import {
  c as c2
} from "./chunk-OEZJEJTV.js";
import "./chunk-75NMPQ6B.js";
import {
  E,
  Z,
  y as y2
} from "./chunk-T2FDM5U5.js";
import {
  n as n2
} from "./chunk-3L7LAMFR.js";
import "./chunk-STWTMZUP.js";
import "./chunk-KNZN23EY.js";
import {
  e as e2
} from "./chunk-V7BOUFVB.js";
import {
  i as i2
} from "./chunk-RPLKMGIJ.js";
import "./chunk-5OPLKRAS.js";
import {
  l
} from "./chunk-DLEEZ5CX.js";
import "./chunk-BRSYQXRG.js";
import "./chunk-PZ3NLWD3.js";
import "./chunk-6HL7UH4H.js";
import "./chunk-2JB37XX2.js";
import "./chunk-FQONAW2G.js";
import "./chunk-7Q77X7UJ.js";
import "./chunk-WL7ITUMO.js";
import "./chunk-CP43AUSV.js";
import "./chunk-NOYTM57S.js";
import "./chunk-OPQ632ST.js";
import "./chunk-U6GC73UT.js";
import "./chunk-6ZICJ4HF.js";
import "./chunk-6N2I7LNE.js";
import {
  e as e3
} from "./chunk-ED3H44RD.js";
import "./chunk-C5E4KZMK.js";
import {
  i
} from "./chunk-52DUL4NM.js";
import {
  p as p2
} from "./chunk-NNXHBH3J.js";
import "./chunk-4YR3FESC.js";
import "./chunk-UWJ3NERY.js";
import "./chunk-VEBWU4PY.js";
import "./chunk-AJY7W6KP.js";
import "./chunk-OO5RYTED.js";
import {
  a2 as a4
} from "./chunk-VGIPOM7J.js";
import {
  a as a2
} from "./chunk-YIJX6PSI.js";
import {
  o as o2
} from "./chunk-VV4LINSF.js";
import "./chunk-FDEQGLCU.js";
import "./chunk-MEYRAFYY.js";
import "./chunk-LSZOFED5.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-B4X5M3MB.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-J6WWDJVY.js";
import {
  _
} from "./chunk-KJ3RR72T.js";
import {
  p
} from "./chunk-ITOWSLB4.js";
import {
  n
} from "./chunk-WIR7P2UT.js";
import "./chunk-4YJQ46TP.js";
import "./chunk-LC5BGIRA.js";
import "./chunk-ST7DNJJS.js";
import {
  t as t2
} from "./chunk-N44T6V5D.js";
import {
  c
} from "./chunk-NCRISAUE.js";
import {
  f
} from "./chunk-RDMK4OP2.js";
import {
  O
} from "./chunk-3MIQEU54.js";
import "./chunk-37ZA7E6R.js";
import "./chunk-46X6GKZ5.js";
import "./chunk-QUU4FGR5.js";
import "./chunk-2DDJXYOO.js";
import "./chunk-HM62IZSE.js";
import "./chunk-X2F6PX2U.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-6PRVLRT2.js";
import {
  b
} from "./chunk-RSFKYEWD.js";
import "./chunk-GKH6NL2K.js";
import "./chunk-G6COWIFJ.js";
import "./chunk-QF2PMVYK.js";
import "./chunk-WZMBTZP2.js";
import {
  T as T2
} from "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-BRWDGS6Y.js";
import "./chunk-L6EWR437.js";
import {
  a as a3
} from "./chunk-PELFA5QO.js";
import "./chunk-HZKQDRDV.js";
import "./chunk-FAK3SJAD.js";
import "./chunk-2CREJO6O.js";
import "./chunk-POTXVYUT.js";
import "./chunk-YMSHUIGU.js";
import "./chunk-T5PSDOZP.js";
import "./chunk-REIXEATJ.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-YEFLZ2OV.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-XP5MC636.js";
import "./chunk-MYKXVBXI.js";
import "./chunk-TM5UW7VI.js";
import "./chunk-WVLEGBEW.js";
import "./chunk-NUSLMJR5.js";
import "./chunk-QX5IKXT7.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-OKST3HK4.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-X6SQQQR4.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-PSN7WPOI.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-5CMPUNQG.js";
import {
  U
} from "./chunk-QJXSE36Y.js";
import "./chunk-WV4G3ROK.js";
import "./chunk-M3KO43BW.js";
import "./chunk-JT4JPYB6.js";
import "./chunk-SZO7ZKE4.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-6TTVNN6M.js";
import "./chunk-3UXY2S4E.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import {
  r as r3,
  w2
} from "./chunk-H2ENCYR3.js";
import {
  o
} from "./chunk-SVHG5VY2.js";
import "./chunk-UADQEL54.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  r2,
  t3 as t,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import {
  T
} from "./chunk-PXVSWY3C.js";
import {
  j,
  w
} from "./chunk-QLY5H3XF.js";
import {
  s2 as s
} from "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  r
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/layers/MapImageLayer.js
var k = class extends n(a4(t2(E(y2(p2(c(_(O(p(i(o2(a3(b))))))))))))) {
  constructor(...e4) {
    super(...e4), this.dateFieldsTimeReference = null, this.datesInUnknownTimezone = false, this.dpi = 96, this.gdbVersion = null, this.imageFormat = "png24", this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.isReference = null, this.labelsVisible = false, this.operationalLayerType = "ArcGISMapServiceLayer", this.preferredTimeReference = null, this.sourceJSON = null, this.sublayers = null, this.type = "map-image", this.url = null;
  }
  normalizeCtorArgs(e4, r4) {
    return "string" == typeof e4 ? { url: e4, ...r4 } : e4;
  }
  load(e4) {
    const r4 = r(e4) ? e4.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Map Service"] }, e4).catch(w).then(() => this._fetchService(r4))), Promise.resolve(this);
  }
  readImageFormat(e4, r4) {
    const t3 = r4.supportedImageFormatTypes;
    return t3 && t3.includes("PNG32") ? "png32" : "png24";
  }
  writeSublayers(e4, r4, t3, i3) {
    var _a;
    if (!this.loaded || !e4)
      return;
    const o3 = e4.slice().reverse().flatten(({ sublayers: e5 }) => e5 && e5.toArray().reverse()).toArray();
    let s2 = false;
    if (this.capabilities && this.capabilities.operations.supportsExportMap && ((_a = this.capabilities.exportMap) == null ? void 0 : _a.supportsDynamicLayers)) {
      const e5 = t(i3.origin);
      if (e5 === r2.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("service").sublayers;
        s2 = n2(o3, e6, r2.SERVICE);
      } else if (e5 > r2.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("portal-item");
        s2 = n2(o3, e6.sublayers, t(e6.origin));
      }
    }
    const a5 = [], p3 = { writeSublayerStructure: s2, ...i3 };
    let n3 = s2;
    o3.forEach((e5) => {
      const r5 = e5.write({}, p3);
      a5.push(r5), n3 = n3 || "user" === e5.originOf("visible");
    });
    a5.some((e5) => Object.keys(e5).length > 1) && (r4.layers = a5), n3 && (r4.visibleLayers = o3.filter((e5) => e5.visible).map((e5) => e5.id));
  }
  createExportImageParameters(e4, r4, t3, i3) {
    const o3 = i3 && i3.pixelRatio || 1;
    e4 && this.version >= 10 && (e4 = e4.clone().shiftCentralMeridian());
    const s2 = new c2({ layer: this, floors: i3 == null ? void 0 : i3.floors, scale: i2({ extent: e4, width: r4 }) * o3 }), a5 = s2.toJSON();
    s2.destroy();
    const p3 = !i3 || !i3.rotation || this.version < 10.3 ? {} : { rotation: -i3.rotation }, n3 = e4 && e4.spatialReference, m = n3.wkid || JSON.stringify(n3.toJSON());
    a5.dpi *= o3;
    const l2 = {};
    if (i3 == null ? void 0 : i3.timeExtent) {
      const { start: e5, end: r5 } = i3.timeExtent.toJSON();
      l2.time = e5 && r5 && e5 === r5 ? "" + e5 : `${e5 ?? "null"},${r5 ?? "null"}`;
    } else
      this.timeInfo && !this.timeInfo.hasLiveData && (l2.time = "null,null");
    return { bbox: e4 && e4.xmin + "," + e4.ymin + "," + e4.xmax + "," + e4.ymax, bboxSR: m, imageSR: m, size: r4 + "," + t3, ...a5, ...p3, ...l2 };
  }
  async fetchImage(e4, r4, t3, i3) {
    const { data: o3 } = await this._fetchImage("image", e4, r4, t3, i3);
    return o3;
  }
  async fetchImageBitmap(e4, r4, t3, i3) {
    const { data: o3, url: s2 } = await this._fetchImage("blob", e4, r4, t3, i3);
    return e2(o3, s2);
  }
  async fetchRecomputedExtents(e4 = {}) {
    const i3 = { ...e4, query: { returnUpdates: true, f: "json", ...this.customParameters, token: this.apiKey } }, { data: o3 } = await U(this.url, i3), { extent: s2, fullExtent: a5, timeExtent: p3 } = o3, n3 = s2 || a5;
    return { fullExtent: n3 && w2.fromJSON(n3), timeExtent: p3 && T2.fromJSON({ start: p3[0], end: p3[1] }) };
  }
  loadAll() {
    return l(this, (e4) => {
      e4(this.allSublayers);
    });
  }
  serviceSupportsSpatialReference(e4) {
    return e3(this, e4);
  }
  async _fetchImage(e4, t3, o3, s2, a5) {
    var _a, _b, _c;
    const p3 = { responseType: e4, signal: (a5 == null ? void 0 : a5.signal) ?? null, query: { ...this.parsedUrl.query, ...this.createExportImageParameters(t3, o3, s2, a5), f: "image", ...this.refreshParameters, ...this.customParameters, token: this.apiKey } }, n3 = this.parsedUrl.path + "/export";
    if (null != ((_a = p3.query) == null ? void 0 : _a.dynamicLayers) && !((_c = (_b = this.capabilities) == null ? void 0 : _b.exportMap) == null ? void 0 : _c.supportsDynamicLayers))
      throw new s("mapimagelayer:dynamiclayer-not-supported", `service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`, { query: p3.query });
    try {
      const { data: e5 } = await U(n3, p3);
      return { data: e5, url: n3 };
    } catch (l2) {
      if (j(l2))
        throw l2;
      throw new s("mapimagelayer:image-fetch-error", `Unable to load image: ${n3}`, { error: l2 });
    }
  }
  async _fetchService(e4) {
    if (this.sourceJSON)
      return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t3, ssl: i3 } = await U(this.parsedUrl.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters, token: this.apiKey }, signal: e4 });
    i3 && (this.url = this.url.replace(/^http:/i, "https:")), this.sourceJSON = t3, this.read(t3, { origin: "service", url: this.parsedUrl });
  }
};
e([y({ type: a2 })], k.prototype, "dateFieldsTimeReference", void 0), e([y({ type: Boolean })], k.prototype, "datesInUnknownTimezone", void 0), e([y()], k.prototype, "dpi", void 0), e([y()], k.prototype, "gdbVersion", void 0), e([y()], k.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], k.prototype, "readImageFormat", null), e([y({ json: { origins: { service: { read: { source: "maxImageHeight" } } } } })], k.prototype, "imageMaxHeight", void 0), e([y({ json: { origins: { service: { read: { source: "maxImageWidth" } } } } })], k.prototype, "imageMaxWidth", void 0), e([y()], k.prototype, "imageTransparency", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], k.prototype, "isReference", void 0), e([y({ json: { read: false, write: false } })], k.prototype, "labelsVisible", void 0), e([y({ type: ["ArcGISMapServiceLayer"] })], k.prototype, "operationalLayerType", void 0), e([y({ json: { read: false, write: false } })], k.prototype, "popupEnabled", void 0), e([y({ type: a2 })], k.prototype, "preferredTimeReference", void 0), e([y()], k.prototype, "sourceJSON", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], k.prototype, "sublayers", void 0), e([r3("sublayers", { layers: { type: [Z] }, visibleLayers: { type: [T] } })], k.prototype, "writeSublayers", null), e([y({ type: ["show", "hide", "hide-children"] })], k.prototype, "listMode", void 0), e([y({ json: { read: false }, readOnly: true, value: "map-image" })], k.prototype, "type", void 0), e([y(f)], k.prototype, "url", void 0), k = e([a("esri.layers.MapImageLayer")], k);
var _2 = k;
export {
  _2 as default
};
//# sourceMappingURL=MapImageLayer-C4LWRKSA.js.map
