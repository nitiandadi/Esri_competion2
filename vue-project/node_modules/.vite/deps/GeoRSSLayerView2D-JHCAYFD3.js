import {
  i
} from "./chunk-YMI47MX7.js";
import "./chunk-XTJAXAJE.js";
import {
  ae
} from "./chunk-NOLTMJFN.js";
import "./chunk-WHOFED4P.js";
import "./chunk-LSZKZXKW.js";
import "./chunk-NE5M7AOS.js";
import "./chunk-4FSIMQ5G.js";
import "./chunk-KSKGTAHP.js";
import "./chunk-6CHYNNZQ.js";
import "./chunk-OFMRQG54.js";
import "./chunk-C5WM5BY7.js";
import {
  f,
  u
} from "./chunk-OJZLQ7WV.js";
import "./chunk-GR3QAE4S.js";
import "./chunk-XBPKFV6W.js";
import "./chunk-7XVHXPW5.js";
import "./chunk-J6VS6FXY.js";
import "./chunk-3H5NJQM5.js";
import "./chunk-3QNFBCRR.js";
import "./chunk-F7LUL6DS.js";
import "./chunk-AZEN5UFW.js";
import "./chunk-TOX3CURZ.js";
import "./chunk-VV2CU7S7.js";
import "./chunk-FYA3X5C5.js";
import "./chunk-YA2ZN33B.js";
import "./chunk-DKDRIIV4.js";
import "./chunk-5SYMUP5B.js";
import "./chunk-R3MRUDAD.js";
import "./chunk-R6XKQWZ7.js";
import "./chunk-GSFOZZVA.js";
import "./chunk-LYEEAWXU.js";
import "./chunk-6SCM5LCL.js";
import "./chunk-223SE4BY.js";
import "./chunk-63WRUMNA.js";
import "./chunk-O2JKCGK6.js";
import "./chunk-WAPZ634R.js";
import "./chunk-ZJ5OO4BL.js";
import "./chunk-WEOA3BYJ.js";
import "./chunk-53FPJYCC.js";
import "./chunk-MSPZCZRZ.js";
import "./chunk-RURSJOSG.js";
import "./chunk-2JIMWZPW.js";
import "./chunk-23AC3IC7.js";
import "./chunk-GKD7ZY5C.js";
import "./chunk-UHA44FM7.js";
import "./chunk-TQAOUM4T.js";
import "./chunk-TFWV44LH.js";
import "./chunk-RRNRSHX3.js";
import "./chunk-IEBU4QQL.js";
import "./chunk-4M3AMTD4.js";
import "./chunk-MXRYGWSY.js";
import "./chunk-J5XD5R5N.js";
import "./chunk-KVNI5TTW.js";
import "./chunk-V2OTMPXZ.js";
import "./chunk-OEIEPNC6.js";
import "./chunk-U34LDFXK.js";
import "./chunk-5VDXKCKM.js";
import "./chunk-XAGRIALY.js";
import "./chunk-6NPCB5RV.js";
import "./chunk-DDAW6PTY.js";
import "./chunk-HNKLBBNC.js";
import "./chunk-PNAN35AP.js";
import "./chunk-D2UI2BQN.js";
import "./chunk-5MV6T7MH.js";
import "./chunk-U3IHIDSP.js";
import "./chunk-34FJTA26.js";
import "./chunk-DUEDINK5.js";
import "./chunk-MZ267CZB.js";
import "./chunk-3DBV4JBL.js";
import "./chunk-CJ2YD4VU.js";
import "./chunk-PRXITTX7.js";
import "./chunk-JGIZLXNQ.js";
import "./chunk-PXPM76YN.js";
import "./chunk-NWZTRS6O.js";
import "./chunk-77E52HT5.js";
import "./chunk-HBVUBDHI.js";
import "./chunk-26N6FACI.js";
import "./chunk-FQONAW2G.js";
import "./chunk-7Q77X7UJ.js";
import "./chunk-NOYTM57S.js";
import "./chunk-OPQ632ST.js";
import "./chunk-U6GC73UT.js";
import "./chunk-6N2I7LNE.js";
import "./chunk-AETSRGIG.js";
import "./chunk-VEBWU4PY.js";
import "./chunk-AJY7W6KP.js";
import {
  p,
  t
} from "./chunk-OO5RYTED.js";
import "./chunk-YIJX6PSI.js";
import "./chunk-MEYRAFYY.js";
import "./chunk-LSZOFED5.js";
import "./chunk-GHN5ZUCM.js";
import "./chunk-B4X5M3MB.js";
import "./chunk-CNIE5HLE.js";
import "./chunk-N5RJDK35.js";
import {
  x
} from "./chunk-J6WWDJVY.js";
import "./chunk-LC5BGIRA.js";
import "./chunk-ST7DNJJS.js";
import "./chunk-37ZA7E6R.js";
import "./chunk-46X6GKZ5.js";
import "./chunk-QUU4FGR5.js";
import "./chunk-2DDJXYOO.js";
import "./chunk-HM62IZSE.js";
import "./chunk-X2F6PX2U.js";
import "./chunk-HFRO4PG3.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-BRWDGS6Y.js";
import "./chunk-PELFA5QO.js";
import "./chunk-2CREJO6O.js";
import "./chunk-POTXVYUT.js";
import "./chunk-YMSHUIGU.js";
import "./chunk-T5PSDOZP.js";
import "./chunk-REIXEATJ.js";
import "./chunk-CCAF47ZU.js";
import "./chunk-YEFLZ2OV.js";
import "./chunk-W42YI6TX.js";
import "./chunk-ICG3HFWD.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-XP5MC636.js";
import "./chunk-TM5UW7VI.js";
import "./chunk-WVLEGBEW.js";
import "./chunk-NUSLMJR5.js";
import "./chunk-QX5IKXT7.js";
import "./chunk-ONU3G4LF.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-OKST3HK4.js";
import "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-X6SQQQR4.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-PSN7WPOI.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import {
  h,
  l
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-QJXSE36Y.js";
import "./chunk-WV4G3ROK.js";
import "./chunk-M3KO43BW.js";
import {
  k
} from "./chunk-JT4JPYB6.js";
import {
  j
} from "./chunk-SZO7ZKE4.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-6TTVNN6M.js";
import "./chunk-3UXY2S4E.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-7FMLQXIT.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-UADQEL54.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/views/2d/layers/GeoRSSLayerView2D.js
var y = class extends f(u) {
  constructor() {
    super(...arguments), this._graphicsViewMap = {}, this._popupTemplates = /* @__PURE__ */ new Map(), this.graphicsViews = [];
  }
  async hitTest(e2, r) {
    if (!this.graphicsViews.length)
      return null;
    const s = this.layer;
    return this.graphicsViews.reverse().map((r2) => {
      const i2 = this._popupTemplates.get(r2), t2 = r2.hitTest(e2);
      for (const e3 of t2)
        e3.layer = s, e3.sourceLayer = s, e3.popupTemplate = i2;
      return t2;
    }).flat().map((r2) => ({ type: "graphic", graphic: r2, layer: s, mapPoint: e2 }));
  }
  update(e2) {
    if (this.graphicsViews)
      for (const r of this.graphicsViews)
        r.processUpdate(e2);
  }
  attach() {
    this.addAttachHandles([l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.featureCollections;
    }, (e2) => {
      this._clear();
      for (const { popupInfo: i2, featureSet: t2, layerDefinition: o } of e2) {
        const e3 = x.fromJSON(t2), p2 = new j(e3.features), n = o.drawingInfo, m = i2 ? k.fromJSON(i2) : null, y2 = t(n.renderer), g2 = new ae({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: p2, renderer: y2, container: new i(this.view.featuresTilingScheme) });
        this._graphicsViewMap[e3.geometryType] = g2, this._popupTemplates.set(g2, m), "polygon" !== e3.geometryType || this.layer.polygonSymbol ? "polyline" !== e3.geometryType || this.layer.lineSymbol ? "point" !== e3.geometryType || this.layer.pointSymbol || (this.layer.pointSymbol = y2.symbol) : this.layer.lineSymbol = y2.symbol : this.layer.polygonSymbol = y2.symbol, this.graphicsViews.push(g2), this.container.addChild(g2.container);
      }
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.polygonSymbol;
    }, (e2) => {
      this._graphicsViewMap.polygon.renderer = new p({ symbol: e2 });
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.lineSymbol;
    }, (e2) => {
      this._graphicsViewMap.polyline.renderer = new p({ symbol: e2 });
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.pointSymbol;
    }, (e2) => {
      this._graphicsViewMap.point.renderer = new p({ symbol: e2 });
    }, h)]);
  }
  detach() {
    this._clear();
  }
  moveStart() {
  }
  moveEnd() {
  }
  viewChange() {
    for (const e2 of this.graphicsViews)
      e2.viewChange();
  }
  _clear() {
    this.container.removeAllChildren();
    for (const e2 of this.graphicsViews)
      e2.destroy();
    this._graphicsViewMap = {}, this._popupTemplates.clear(), this.graphicsViews.length = 0;
  }
};
y = e([a("esri.views.2d.layers.GeoRSSLayerView2D")], y);
var g = y;
export {
  g as default
};
//# sourceMappingURL=GeoRSSLayerView2D-JHCAYFD3.js.map
