import {
  n
} from "./chunk-5B3MSXV4.js";
import {
  o
} from "./chunk-JVOFUEA4.js";
import "./chunk-UZ2MSG7E.js";
import "./chunk-AQNLVOSU.js";
import "./chunk-VAKRQRV6.js";
import "./chunk-TZVXXAQI.js";
import "./chunk-6ZJGGXFT.js";
import "./chunk-AATTIYMG.js";
import "./chunk-NKU7VSVT.js";
import "./chunk-CSXCA65Q.js";
import "./chunk-RSRGRQCE.js";
import "./chunk-EMUQ7G7L.js";
import "./chunk-46UYDOF4.js";
import "./chunk-B4N37FMV.js";
import "./chunk-QARJUBJV.js";
import "./chunk-DJZ2IN55.js";
import "./chunk-E4XXNNS2.js";
import "./chunk-372CNO3V.js";
import "./chunk-KKWP7B7A.js";
import "./chunk-SX7NW3RK.js";
import "./chunk-RFBUNXCZ.js";
import "./chunk-QCYWXXBM.js";
import "./chunk-CCKR7UFK.js";
import "./chunk-DNXRTHCH.js";
import "./chunk-66OCZHWI.js";
import "./chunk-3JVZYYA3.js";
import "./chunk-MWIMWDJV.js";
import "./chunk-LUSFZCEU.js";
import "./chunk-2KKFAUOD.js";
import "./chunk-M2DTCG2D.js";
import "./chunk-AVTBKAM2.js";
import "./chunk-UZM66DAH.js";
import "./chunk-CFTD44JM.js";
import "./chunk-MI7FJDLG.js";
import "./chunk-5XBZ477A.js";
import "./chunk-TKZTELJQ.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-F6Y6UABE.js";
import {
  l,
  u
} from "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import "./chunk-QP5ZWBKN.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-5WYME2YP.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-JATK7CEQ.js";
import "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-RLEMMDH4.js";
import "./chunk-6ZUWLK7F.js";
import "./chunk-YVZY5LDV.js";
import "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/support/HeatmapSource.js
var i = class {
  constructor() {
    this.gradient = null, this.height = 512, this.intensities = null, this.width = 512;
  }
  render(i2) {
    l(i2, 512, this.intensities, this.gradient, this.minDensity, this.maxDensity);
  }
};

// node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/HeatmapTileRenderer.js
var o2 = class extends o {
  constructor(e2) {
    super(e2), this._intensityInfo = { minDensity: 0, maxDensity: 0 }, this.type = "heatmap", this.featuresView = { attributeView: { initialize: () => {
    }, requestUpdate: () => {
    } }, requestRender: () => {
    } }, this._container = new n(e2.tileInfoView);
  }
  createTile(e2) {
    const t = this._container.createTile(e2);
    return this.tileInfoView.getTileCoords(t.bitmap, e2), t.bitmap.resolution = this.tileInfoView.getTileResolution(e2), t;
  }
  onConfigUpdate() {
    const e2 = this.layer.renderer;
    if ("heatmap" === e2.type) {
      const { minDensity: t, maxDensity: r, colorStops: s } = e2;
      this._intensityInfo.minDensity = t, this._intensityInfo.maxDensity = r, this._gradient = u(s), this.tiles.forEach((e3) => {
        const i2 = e3.bitmap.source;
        i2 && (i2.minDensity = t, i2.maxDensity = r, i2.gradient = this._gradient, e3.bitmap.invalidateTexture());
      });
    }
  }
  hitTest() {
    return Promise.resolve([]);
  }
  install(e2) {
    e2.addChild(this._container);
  }
  uninstall(e2) {
    this._container.removeAllChildren(), e2.removeChild(this._container);
  }
  disposeTile(e2) {
    this._container.removeChild(e2), e2.destroy();
  }
  supportsRenderer(e2) {
    return e2 && "heatmap" === e2.type;
  }
  onTileData(e2) {
    const t = this.tiles.get(e2.tileKey);
    if (!t)
      return;
    const i2 = e2.intensityInfo, { minDensity: r, maxDensity: s } = this._intensityInfo, o3 = t.bitmap.source || new i();
    o3.intensities = i2 && i2.matrix || null, o3.minDensity = r, o3.maxDensity = s, o3.gradient = this._gradient, t.bitmap.source = o3, this._container.addChild(t), this._container.requestRender(), this.requestUpdate();
  }
  onTileError(e2) {
    console.error(e2);
  }
  lockGPUUploads() {
  }
  unlockGPUUploads() {
  }
  fetchResource(e2, t) {
    return console.error(e2), Promise.reject();
  }
};
o2 = e([a("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")], o2);
var a2 = o2;
export {
  a2 as default
};
//# sourceMappingURL=HeatmapTileRenderer-V6VUXB5V.js.map
