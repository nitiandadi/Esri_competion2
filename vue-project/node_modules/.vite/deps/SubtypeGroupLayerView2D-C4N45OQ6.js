import {
  D
} from "./chunk-HI2QC6PO.js";
import "./chunk-CXZVU2FA.js";
import "./chunk-6OTYIG36.js";
import "./chunk-5JO7O74F.js";
import "./chunk-O3BUMSRA.js";
import "./chunk-QLNXKYD4.js";
import "./chunk-FYUZA5OZ.js";
import "./chunk-ZUM343MO.js";
import "./chunk-ABGFNHDH.js";
import "./chunk-MUKO5DYY.js";
import "./chunk-KS5WYVQD.js";
import "./chunk-HCWIAQV3.js";
import "./chunk-B4YFY6OM.js";
import "./chunk-DEBYWO5M.js";
import "./chunk-37BTU2M3.js";
import "./chunk-BS6YMIVT.js";
import "./chunk-E4XXNNS2.js";
import "./chunk-BEFJ4DTX.js";
import "./chunk-XF6VFSZY.js";
import "./chunk-46UYDOF4.js";
import "./chunk-372CNO3V.js";
import "./chunk-VGTB7JUJ.js";
import "./chunk-QARJUBJV.js";
import "./chunk-YNAIRSAG.js";
import "./chunk-NH5FBVDR.js";
import "./chunk-QCYWXXBM.js";
import "./chunk-CCKR7UFK.js";
import "./chunk-DNXRTHCH.js";
import "./chunk-MLSUYO53.js";
import "./chunk-XNKMMOMK.js";
import "./chunk-DZUX232E.js";
import "./chunk-Y5D76CBW.js";
import "./chunk-U4SHM5SM.js";
import "./chunk-UPHB5F2K.js";
import "./chunk-A7TOAPHC.js";
import "./chunk-EPKCQJY3.js";
import "./chunk-3JVZYYA3.js";
import "./chunk-MWIMWDJV.js";
import "./chunk-6D47PMZF.js";
import "./chunk-AVTBKAM2.js";
import "./chunk-HERKGCCA.js";
import "./chunk-SB6UPWEY.js";
import "./chunk-XTUZNPIG.js";
import "./chunk-6VXAAN5J.js";
import {
  y
} from "./chunk-DNJQQSFB.js";
import "./chunk-XS5XP6X5.js";
import "./chunk-RD6VLGGM.js";
import "./chunk-PVSQPGR7.js";
import "./chunk-KCW42CAI.js";
import "./chunk-B536ET7B.js";
import "./chunk-54NTLRPC.js";
import "./chunk-7HK5OJHH.js";
import "./chunk-7WIVOZQ6.js";
import "./chunk-PDQWP33P.js";
import "./chunk-RZNNSB7A.js";
import "./chunk-5Z6OHN6Z.js";
import "./chunk-TKZTELJQ.js";
import "./chunk-OXPHYLAY.js";
import "./chunk-JKIHHWKC.js";
import "./chunk-NBVRAQMU.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-ZUCPDNAU.js";
import "./chunk-A4GUE3HH.js";
import "./chunk-ZJBIBQFZ.js";
import "./chunk-HNMSCBZJ.js";
import "./chunk-OIMP53SC.js";
import "./chunk-43D3HGVY.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import {
  h,
  l
} from "./chunk-Y44VKGHM.js";
import "./chunk-WPXKVF3K.js";
import "./chunk-EXVE3AJP.js";
import "./chunk-Y74QPJ3T.js";
import "./chunk-OVUZXV2P.js";
import "./chunk-VTZGYKHD.js";
import "./chunk-MI3ZQEJV.js";
import "./chunk-HRIBADXS.js";
import "./chunk-GPWY2LRL.js";
import "./chunk-3ZZKMNU2.js";
import "./chunk-SXUQWH7K.js";
import "./chunk-WAUZFAX7.js";
import "./chunk-3JPUCMWK.js";
import "./chunk-GCXFCVSM.js";
import "./chunk-CU2KO5NT.js";
import "./chunk-EXL23DF3.js";
import "./chunk-ECM7B2HV.js";
import "./chunk-L5JOPRWD.js";
import "./chunk-JYFMP3PO.js";
import "./chunk-CBAVHWPY.js";
import "./chunk-OJCBSPLX.js";
import "./chunk-EMRZKKP3.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-SQBJ6KPL.js";
import "./chunk-MKMLHQNH.js";
import "./chunk-PHPHIDTF.js";
import "./chunk-P6SQPYDS.js";
import "./chunk-SFT755VT.js";
import "./chunk-GWFG4NRK.js";
import "./chunk-YXFIF2O5.js";
import "./chunk-E4MAG7OK.js";
import "./chunk-YVQV6YXG.js";
import "./chunk-3KALZGFA.js";
import "./chunk-M47YTHQ5.js";
import "./chunk-OJKTPYH5.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-DXGYZ4HI.js";
import "./chunk-CKHNR7DG.js";
import "./chunk-FY3NCRRH.js";
import "./chunk-CIPSOFMY.js";
import "./chunk-3U7SS7RC.js";
import "./chunk-UHF3OUQV.js";
import "./chunk-6U5BQYRW.js";
import "./chunk-LUOENZ4F.js";
import "./chunk-QGRPG4XS.js";
import "./chunk-M73MMEC7.js";
import "./chunk-A5CTLI5A.js";
import "./chunk-WUBKNERF.js";
import "./chunk-VACYSSCT.js";
import "./chunk-4HXSKBAW.js";
import "./chunk-FFQG5TD2.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-GLDJLPWH.js";
import "./chunk-GMLVDTS4.js";
import "./chunk-G7CHVXDR.js";
import "./chunk-OAZLVZFS.js";
import "./chunk-CPSZPA6H.js";
import {
  a2 as a,
  e
} from "./chunk-Y54MR3BP.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-JY6H6KI3.js";
import "./chunk-TTCQP5LX.js";
import "./chunk-C2WY74GI.js";
import "./chunk-MCOYI7PX.js";
import "./chunk-EL4OGCJC.js";
import {
  has
} from "./chunk-XPATKIHO.js";
import "./chunk-MKHZ5X6F.js";
import {
  r
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function l2(e2, r2) {
  return !e2.visible || 0 !== e2.minScale && r2 > e2.minScale || 0 !== e2.maxScale && r2 < e2.maxScale;
}
var o = class extends D {
  initialize() {
    this.addHandles([l(() => this.view.scale, () => this._update(), h)], "constructor");
  }
  isUpdating() {
    var _a;
    const e2 = this.layer.sublayers.some((e3) => null != e3.renderer), r2 = this._commandsQueue.updating, s = null != this._updatingRequiredFieldsPromise, i = !this._proxy || !this._proxy.isReady, t = this._pipelineIsUpdating, a2 = null == this.tileRenderer || ((_a = this.tileRenderer) == null ? void 0 : _a.updating), n = e2 && (r2 || s || i || t || a2);
    return has("esri-2d-log-updating") && console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${e2}
  -> hasPendingCommand ${r2}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${i}
  -> updatingPipeline ${t}
  -> updatingTileRenderer ${a2}
`), n;
  }
  _injectOverrides(e2) {
    let s = super._injectOverrides(e2);
    const i = this.view.scale, t = this.layer.sublayers.filter((e3) => l2(e3, i)).map((e3) => e3.subtypeCode);
    if (!t.length)
      return s;
    s = r(s) ? s : new y().toJSON();
    const n = `NOT ${this.layer.subtypeField} IN (${t.join(",")})`;
    return s.where = s.where ? `(${s.where}) AND (${n})` : n, s;
  }
  _setLayersForFeature(e2) {
    const r2 = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r2.name], i = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = e2.sourceLayer = i;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r2 = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r2})` : "1=2";
    let i = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return i += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: i };
  }
};
o = e([a("esri.views.2d.layers.SubtypeGroupLayerView2D")], o);
var u = o;
export {
  u as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-C4N45OQ6.js.map
