import {
  c
} from "./chunk-WIY455LN.js";
import "./chunk-3MIQEU54.js";
import {
  f,
  i,
  s
} from "./chunk-WVLEGBEW.js";
import {
  U
} from "./chunk-QJXSE36Y.js";
import "./chunk-WV4G3ROK.js";
import "./chunk-M3KO43BW.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-QXPN4D5D.js";
import {
  l
} from "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/rest/networks/support/QueryNamedTraceConfigurationsResult.js
var a2 = class extends l {
  constructor(r) {
    super(r), this.namedTraceConfigurations = [];
  }
};
e([y({ type: [c], json: { read: { source: "traceConfigurations" }, write: { target: "traceConfigurations" } } })], a2.prototype, "namedTraceConfigurations", void 0), a2 = e([a("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")], a2);
var p = a2;

// node_modules/@arcgis/core/rest/networks/queryNamedTraceConfigurations.js
async function e2(e3, n, i2) {
  const g = f(e3), l2 = n.toJSON();
  n.globalIds && n.globalIds.length > 0 && (l2.globalIds = JSON.stringify(n.globalIds)), n.creators && n.creators.length > 0 && (l2.creators = JSON.stringify(n.creators)), n.tags && n.tags.length > 0 && (l2.tags = JSON.stringify(n.tags)), n.names && n.names.length > 0 && (l2.names = JSON.stringify(n.names));
  const f2 = { ...l2, f: "json" }, m = s({ ...g.query, ...f2 }), u = i(m, { ...i2, method: "post" }), c2 = `${g.path}/traceConfigurations/query`, { data: p2 } = await U(c2, u);
  if (!p2)
    return null;
  return p.fromJSON(p2);
}
export {
  e2 as queryNamedTraceConfigurations
};
//# sourceMappingURL=queryNamedTraceConfigurations-TRM6DDM7.js.map
