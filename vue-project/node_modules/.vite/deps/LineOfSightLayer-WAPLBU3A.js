import {
  g
} from "./chunk-2MXDM7E7.js";
import "./chunk-LKPW5VN6.js";
import {
  c as c3
} from "./chunk-JV43P5YE.js";
import "./chunk-OWSDEANX.js";
import "./chunk-5ZDDV642.js";
import {
  c as c2
} from "./chunk-QSDDU4NM.js";
import "./chunk-FNGJTVTP.js";
import {
  O
} from "./chunk-3MIQEU54.js";
import {
  b
} from "./chunk-Q3FHJWKB.js";
import {
  x
} from "./chunk-CVSP2FBZ.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import {
  un
} from "./chunk-RCZJUTGU.js";
import "./chunk-REIXEATJ.js";
import "./chunk-YEFLZ2OV.js";
import {
  l as l2,
  w as w2
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import {
  n,
  t as t2
} from "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-LVRAFE6T.js";
import {
  c,
  m,
  u as u2
} from "./chunk-Y3KJPDCE.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-YT74S35I.js";
import "./chunk-U5I7FQWJ.js";
import "./chunk-M3KO43BW.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-7OAHPHOV.js";
import {
  j
} from "./chunk-SZO7ZKE4.js";
import {
  i,
  l
} from "./chunk-YMLMMCYX.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-YHZVWABO.js";
import "./chunk-WATRS3LJ.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import {
  w
} from "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import {
  u2 as u
} from "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e as e2,
  v2 as v,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  d,
  e,
  o,
  r,
  t
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/analysis/featureReferenceUtils.js
function t3(e3, t4) {
  return l3(e3) === l3(t4);
}
function l3(t4) {
  if (t(t4))
    return null;
  const l5 = null != t4.layer ? t4.layer.id : "";
  let r5 = null;
  return r5 = null != t4.objectId ? t4.objectId : null != t4.layer && "objectIdField" in t4.layer && null != t4.layer.objectIdField && null != t4.attributes ? t4.attributes[t4.layer.objectIdField] : t4.uid, null == r5 ? null : `o-${l5}-${r5}`;
}
var r2 = { json: { write: { writer: n2, target: { "feature.layerId": { type: [Number, String] }, "feature.objectId": { type: [Number, String] } } }, origins: { "web-scene": { read: u3 } } } };
function n2(t4, l5) {
  var _a;
  t(t4) || null == ((_a = t4.layer) == null ? void 0 : _a.objectIdField) || null == t4.attributes || (l5.feature = { layerId: t4.layer.id, objectId: t4.attributes[t4.layer.objectIdField] });
}
function u3(e3) {
  if (null != e3.layerId && null != e3.objectId)
    return { uid: null, layer: { id: e3.layerId, objectIdField: "ObjectId" }, attributes: { ObjectId: e3.objectId } };
}

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisObserver.js
var f = class extends u(i(v)) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return d(this.position, o2.position) && d(this.elevationInfo, o2.elevationInfo) && t3(this.feature, o2.feature);
  }
};
e2([y({ type: w }), g()], f.prototype, "position", void 0), e2([y({ type: x }), g()], f.prototype, "elevationInfo", void 0), e2([y(r2)], f.prototype, "feature", void 0), f = e2([a("esri.analysis.LineOfSightAnalysisObserver")], f);
var u4 = f;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisTarget.js
var m2 = class extends u(l) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return d(this.position, o2.position) && d(this.elevationInfo, o2.elevationInfo) && t3(this.feature, o2.feature);
  }
};
e2([y({ type: w }), g()], m2.prototype, "position", void 0), e2([y({ type: x }), g()], m2.prototype, "elevationInfo", void 0), e2([y(r2)], m2.prototype, "feature", void 0), m2 = e2([a("esri.analysis.LineOfSightAnalysisTarget")], m2);
var f2 = m2;

// node_modules/@arcgis/core/support/elevationInfoUtils.js
function r4(e3) {
  return e3 ? E : Z;
}
function u5(t4, n3) {
  return t(n3) || !n3.mode ? r4(t4).mode : n3.mode;
}
function i2(e3, n3) {
  return u5(!!r(e3) && e3.hasZ, n3);
}
var E = { mode: "absolute-height", offset: 0 };
var Z = { mode: "on-the-ground", offset: null };

// node_modules/@arcgis/core/analysis/LineOfSightAnalysis.js
var b2 = j.ofType(f2);
var x2 = class extends c3 {
  constructor(e3) {
    super(e3), this.type = "line-of-sight", this.observer = null, this.extent = null;
  }
  initialize() {
    this.addHandles(l2(() => this._computeExtent(), (e3) => {
      (t(e3) || t(e3.pending)) && this._set("extent", r(e3) ? e3.extent : null);
    }, w2));
  }
  get targets() {
    return this._get("targets") || new b2();
  }
  set targets(e3) {
    this._set("targets", n(e3, this.targets, b2));
  }
  get spatialReference() {
    return r(this.observer) && r(this.observer.position) ? this.observer.position.spatialReference : null;
  }
  get requiredPropertiesForEditing() {
    return [o(this.observer, (e3) => e3.position)];
  }
  async waitComputeExtent() {
    const e3 = this._computeExtent();
    return r(e3) ? e(e3.pending) : Promise.resolve();
  }
  _computeExtent() {
    const e3 = this.spatialReference;
    if (t(this.observer) || t(this.observer.position) || t(e3))
      return null;
    const t4 = (e4) => "absolute-height" === i2(e4.position, e4.elevationInfo), r5 = this.observer.position, o2 = u2(r5.x, r5.y, r5.z, r5.x, r5.y, r5.z);
    for (const i3 of this.targets)
      if (r(i3.position)) {
        const t5 = un(i3.position, e3);
        if (r(t5.pending))
          return { pending: t5.pending, extent: null };
        if (r(t5.geometry)) {
          const { x: e4, y: r6, z: s2 } = t5.geometry;
          c(o2, [e4, r6, s2]);
        }
      }
    const s = m(o2, e3);
    return t4(this.observer) && this.targets.every(t4) || (s.zmin = void 0, s.zmax = void 0), { pending: null, extent: s };
  }
  clear() {
    this.observer = null, this.targets.removeAll();
  }
};
e2([y({ type: ["line-of-sight"] })], x2.prototype, "type", void 0), e2([y({ type: u4, json: { read: true, write: true } })], x2.prototype, "observer", void 0), e2([y({ cast: t2, type: b2, nonNullable: true, json: { read: true, write: true } })], x2.prototype, "targets", null), e2([y({ value: null, readOnly: true })], x2.prototype, "extent", void 0), e2([y({ readOnly: true })], x2.prototype, "spatialReference", null), e2([y({ readOnly: true })], x2.prototype, "requiredPropertiesForEditing", null), x2 = e2([a("esri.analysis.LineOfSightAnalysis")], x2);
var O2 = x2;

// node_modules/@arcgis/core/layers/LineOfSightLayer.js
var f3 = j.ofType(f2);
var g2 = class extends c2(O(b)) {
  constructor(e3) {
    super(e3), this.type = "line-of-sight", this.operationalLayerType = "LineOfSightLayer", this.analysis = new O2(), this.opacity = 1;
  }
  initialize() {
    this.addHandles(l2(() => this.analysis, (e3, t4) => {
      r(t4) && t4.parent === this && (t4.parent = null), r(e3) && (e3.parent = this);
    }, w2));
  }
  async load() {
    return r(this.analysis) && this.addResolvingPromise(this.analysis.waitComputeExtent()), this;
  }
  get observer() {
    return o(this.analysis, (e3) => e3.observer);
  }
  set observer(e3) {
    o(this.analysis, (t4) => t4.observer = e3);
  }
  get targets() {
    return r(this.analysis) ? this.analysis.targets : new j();
  }
  set targets(e3) {
    var _a;
    n(e3, (_a = this.analysis) == null ? void 0 : _a.targets);
  }
  get fullExtent() {
    return r(this.analysis) ? this.analysis.extent : null;
  }
  get spatialReference() {
    return r(this.analysis) ? e(this.analysis.spatialReference) : null;
  }
  releaseAnalysis(e3) {
    this.analysis === e3 && (this.analysis = new O2());
  }
};
e2([y({ json: { read: false }, readOnly: true })], g2.prototype, "type", void 0), e2([y({ type: ["LineOfSightLayer"] })], g2.prototype, "operationalLayerType", void 0), e2([y({ type: u4, json: { read: true, write: { ignoreOrigin: true } } })], g2.prototype, "observer", null), e2([y({ type: f3, json: { read: true, write: { ignoreOrigin: true } } })], g2.prototype, "targets", null), e2([y({ nonNullable: true, json: { read: false, write: false } })], g2.prototype, "analysis", void 0), e2([y({ readOnly: true })], g2.prototype, "fullExtent", null), e2([y({ readOnly: true })], g2.prototype, "spatialReference", null), e2([y({ readOnly: true, json: { read: false, write: false, origins: { service: { read: false, write: false }, "portal-item": { read: false, write: false }, "web-document": { read: false, write: false } } } })], g2.prototype, "opacity", void 0), e2([y({ type: ["show", "hide"] })], g2.prototype, "listMode", void 0), g2 = e2([a("esri.layers.LineOfSightLayer")], g2);
var j2 = g2;
export {
  j2 as default
};
//# sourceMappingURL=LineOfSightLayer-WAPLBU3A.js.map
