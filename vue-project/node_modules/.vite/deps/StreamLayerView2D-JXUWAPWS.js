import {
  D
} from "./chunk-JVFXSHND.js";
import "./chunk-JS5BBP66.js";
import "./chunk-WSPTGWUV.js";
import {
  e as e2
} from "./chunk-FRHIREEO.js";
import "./chunk-4UIQ3FQB.js";
import "./chunk-B6QNIB4A.js";
import "./chunk-6ZJGGXFT.js";
import "./chunk-AATTIYMG.js";
import "./chunk-ECBW37F4.js";
import "./chunk-BTELXCWJ.js";
import "./chunk-HCWIAQV3.js";
import "./chunk-JEN3J6RC.js";
import "./chunk-DEBYWO5M.js";
import "./chunk-37BTU2M3.js";
import "./chunk-VBBXLTF2.js";
import "./chunk-EMUQ7G7L.js";
import "./chunk-46UYDOF4.js";
import "./chunk-VGTB7JUJ.js";
import "./chunk-QARJUBJV.js";
import "./chunk-UNKGAJFQ.js";
import "./chunk-DJZ2IN55.js";
import "./chunk-E4XXNNS2.js";
import "./chunk-372CNO3V.js";
import "./chunk-DZUX232E.js";
import "./chunk-RFBUNXCZ.js";
import "./chunk-PFMJX5Q6.js";
import "./chunk-QCYWXXBM.js";
import "./chunk-CCKR7UFK.js";
import "./chunk-DNXRTHCH.js";
import "./chunk-4S6QYDLW.js";
import "./chunk-6N66PUXI.js";
import "./chunk-HERKGCCA.js";
import "./chunk-SB6UPWEY.js";
import "./chunk-HWMFYBFS.js";
import "./chunk-EOF72YID.js";
import "./chunk-3FNYVRHQ.js";
import "./chunk-66OCZHWI.js";
import "./chunk-XEFASELW.js";
import "./chunk-3JVZYYA3.js";
import "./chunk-MWIMWDJV.js";
import "./chunk-LUSFZCEU.js";
import "./chunk-6VXAAN5J.js";
import "./chunk-AVTBKAM2.js";
import "./chunk-UQVFVW24.js";
import "./chunk-FCDGNIOF.js";
import "./chunk-FAQPWMFY.js";
import "./chunk-ARRABRN2.js";
import "./chunk-XKQGIVQO.js";
import {
  x
} from "./chunk-TDFTAVQL.js";
import "./chunk-3ZOUEUIN.js";
import "./chunk-NOYFNECX.js";
import "./chunk-7HK5OJHH.js";
import "./chunk-YZ3HZMEM.js";
import "./chunk-5XBZ477A.js";
import "./chunk-TKZTELJQ.js";
import "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import "./chunk-QPSL5BDS.js";
import "./chunk-7WIVOZQ6.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-F6Y6UABE.js";
import "./chunk-4ZMXDH56.js";
import "./chunk-EOI6A2XM.js";
import "./chunk-5W2WWLX7.js";
import "./chunk-IZJW67TO.js";
import "./chunk-JZSNGIOH.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import {
  l
} from "./chunk-QP5ZWBKN.js";
import "./chunk-VSUGA5AN.js";
import "./chunk-E3JHIVZP.js";
import "./chunk-G3A2XEXX.js";
import "./chunk-JKBONAYS.js";
import "./chunk-YSJ4W32U.js";
import "./chunk-3EIJOCWD.js";
import "./chunk-HRIBADXS.js";
import "./chunk-CSFUQCFV.js";
import "./chunk-ZUIHAM2A.js";
import "./chunk-SABBLK7S.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-7FGYV4GW.js";
import "./chunk-CXHYHUY6.js";
import "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-II3EAW7L.js";
import "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import "./chunk-6XDV3BWZ.js";
import "./chunk-CH2BQDQT.js";
import "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-IMKS3PQX.js";
import "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-FZCZQIVS.js";
import "./chunk-JYX5X6UR.js";
import "./chunk-MQUNEV3K.js";
import "./chunk-WVICJPEU.js";
import "./chunk-TZBBKXOW.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-FSB7TIRN.js";
import "./chunk-UIMO4FGN.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-E4M4B5ZQ.js";
import "./chunk-JATK7CEQ.js";
import "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  r as r2,
  y3 as y
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-RLEMMDH4.js";
import "./chunk-6ZUWLK7F.js";
import {
  s3 as s
} from "./chunk-YVZY5LDV.js";
import "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import {
  r,
  t
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/2d/layers/StreamLayerView2D.js
function u(e3, t2) {
  if (t(e3) && t(t2))
    return null;
  const r3 = {};
  return r(t2) && (r3.geometry = t2.toJSON()), r(e3) && (r3.where = e3), r3;
}
var m = class extends D {
  constructor() {
    super(...arguments), this._enabledEventTypes = /* @__PURE__ */ new Set(), this._isUserPaused = false, this.errorString = null, this.connectionStatus = "disconnected";
  }
  initialize() {
    this.addHandles([l(() => this.layer.customParameters, (e3) => this._proxy.updateCustomParameters(e3)), this.layer.on("send-message-to-socket", (e3) => this._proxy.sendMessageToSocket(e3)), this.layer.on("send-message-to-client", (e3) => this._proxy.sendMessageToClient(e3)), l(() => this.layer.purgeOptions, () => this._update()), l(() => this.suspended, (e3) => {
      e3 ? this._proxy.pauseStream() : this._isUserPaused || this._proxy.resumeStream();
    })], "constructor");
  }
  get connectionError() {
    if (this.errorString)
      return new s("stream-controller", this.errorString);
  }
  pause() {
    this._isUserPaused = true, this._proxy.pauseStream();
  }
  resume() {
    this._isUserPaused = false, this._proxy.resumeStream();
  }
  on(e3, t2) {
    if (Array.isArray(e3))
      return r2(e3.map((e4) => this.on(e4, t2)));
    const s2 = ["data-received", "message-received"].includes(e3);
    s2 && (this._enabledEventTypes.add(e3), this._proxy.enableEvent(e3, true));
    const o = super.on(e3, t2), i = this;
    return { remove() {
      o.remove(), s2 && (i._proxy.closed || i.hasEventListener(e3) || i._proxy.enableEvent(e3, false));
    } };
  }
  queryLatestObservations(e3, r3) {
    var _a, _b, _c;
    if (!(((_a = this.layer.timeInfo) == null ? void 0 : _a.endField) || ((_b = this.layer.timeInfo) == null ? void 0 : _b.startField) || ((_c = this.layer.timeInfo) == null ? void 0 : _c.trackIdField)))
      throw new s("streamlayer-no-timeField", "queryLatestObservation can only be used with services that define a TrackIdField");
    return this._proxy.queryLatestObservations(this._cleanUpQuery(e3), r3).then((e4) => {
      const t2 = x.fromJSON(e4);
      return t2.features.forEach((e5) => {
        e5.layer = this.layer, e5.sourceLayer = this.layer;
      }), t2;
    });
  }
  detach() {
    super.detach(), this.connectionStatus = "disconnected";
  }
  _createClientOptions() {
    return { ...super._createClientOptions(), setProperty: (e3) => {
      this.set(e3.propertyName, e3.value);
    } };
  }
  _createTileRendererHash(e3) {
    const t2 = `${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(u(this.layer.definitionExpression, this.layer.geometryDefinition))})`;
    return super._createTileRendererHash(e3) + t2;
  }
  async _createServiceOptions() {
    const e3 = this.layer, { objectIdField: t2 } = e3, r3 = e3.fields.map((e4) => e4.toJSON()), s2 = e2(e3.geometryType), o = e3.timeInfo && e3.timeInfo.toJSON() || null, i = e3.spatialReference ? e3.spatialReference.toJSON() : null;
    return { type: "stream", fields: r3, geometryType: s2, objectIdField: t2, timeInfo: o, source: this.layer.parsedUrl, serviceFilter: u(this.layer.definitionExpression, this.layer.geometryDefinition), purgeOptions: this.layer.purgeOptions.toJSON(), enabledEventTypes: Array.from(this._enabledEventTypes.values()), spatialReference: i, maxReconnectionAttempts: this.layer.maxReconnectionAttempts, maxReconnectionInterval: this.layer.maxReconnectionInterval, updateInterval: this.layer.updateInterval, customParameters: e3.customParameters };
  }
};
e([y()], m.prototype, "errorString", void 0), e([y({ readOnly: true })], m.prototype, "connectionError", null), e([y()], m.prototype, "connectionStatus", void 0), m = e([a("esri.views.2d.layers.StreamLayerView2D")], m);
var y2 = m;
export {
  y2 as default
};
//# sourceMappingURL=StreamLayerView2D-JXUWAPWS.js.map
