import {
  a,
  c as c3
} from "./chunk-26N6FACI.js";
import {
  y
} from "./chunk-VB6BMHUU.js";
import {
  U,
  b,
  d,
  j,
  p as p2
} from "./chunk-H66NMTBW.js";
import {
  a as a2,
  p2 as p,
  x
} from "./chunk-CRF4O3Y3.js";
import {
  b as b2
} from "./chunk-YZRPNTZZ.js";
import {
  c as c2
} from "./chunk-LVRAFE6T.js";
import {
  Ct,
  L
} from "./chunk-M3KO43BW.js";
import {
  s2 as s
} from "./chunk-UG2OEDEE.js";
import {
  c,
  r
} from "./chunk-WHB7G7RI.js";

// node_modules/@arcgis/core/symbols/support/webStyleSymbolUtils.js
function h(t, e, r2, n) {
  return t.name ? t.styleName && "Esri2DPointSymbolsStyle" === t.styleName ? U2(t, e, n) : p2(t, e, n).then((o) => d2(c(o), t.name, e, r2, n)) : Promise.reject(new s("symbolstyleutils:style-symbol-reference-name-missing", "Missing name in style symbol reference"));
}
function d2(l, f, g, h2, d3) {
  var _a;
  const U3 = l.data, N = g && r(g.portal) ? g.portal : b2.getDefault(), w = { portal: N, url: L(l.baseUrl), origin: "portal-item" }, S = U3.items.find((t) => t.name === f);
  if (!S) {
    const t = `The symbol name '${f}' could not be found`;
    return Promise.reject(new s("symbolstyleutils:symbol-name-not-found", t, { symbolName: f }));
  }
  let D = c2(b(S, h2), w), O = ((_a = S.thumbnail) == null ? void 0 : _a.href) ?? null;
  const P = S.thumbnail && S.thumbnail.imageData;
  c3() && (D = a(D) ?? "", O = a(O));
  const E = { portal: N, url: L(Ct(D)), origin: "portal-item" };
  return j(D, d3).then((e) => {
    const r2 = "cimRef" === h2 ? d(e.data) : e.data, o = y(r2, E);
    if (o && x(o)) {
      if (O) {
        const t = c2(O, w);
        o.thumbnail = new p({ url: t });
      } else
        P && (o.thumbnail = new p({ url: `data:image/png;base64,${P}` }));
      l.styleUrl ? o.styleOrigin = new a2({ portal: g.portal, styleUrl: l.styleUrl, name: f }) : l.styleName && (o.styleOrigin = new a2({ portal: g.portal, styleName: l.styleName, name: f }));
    }
    return o;
  });
}
function U2(t, e, r2) {
  const o = U.replace(/\{SymbolName\}/gi, t.name), l = r(e.portal) ? e.portal : b2.getDefault();
  return j(o, r2).then((t2) => {
    const e2 = d(t2.data);
    return y(e2, { portal: l, url: L(Ct(o)), origin: "portal-item" });
  });
}

export {
  h,
  d2 as d
};
//# sourceMappingURL=chunk-ENW65ERW.js.map
