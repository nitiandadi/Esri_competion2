import {
  t
} from "./chunk-XCZVGB7V.js";
import {
  f
} from "./chunk-KQSNRPAM.js";
import {
  d
} from "./chunk-Z6WPQYGK.js";
import {
  x
} from "./chunk-KCW42CAI.js";
import "./chunk-GPWY2LRL.js";
import "./chunk-3ZZKMNU2.js";
import "./chunk-SXUQWH7K.js";
import "./chunk-WAUZFAX7.js";
import "./chunk-3JPUCMWK.js";
import "./chunk-GCXFCVSM.js";
import "./chunk-CU2KO5NT.js";
import "./chunk-EXL23DF3.js";
import "./chunk-ECM7B2HV.js";
import "./chunk-L5JOPRWD.js";
import "./chunk-CBAVHWPY.js";
import "./chunk-OJCBSPLX.js";
import "./chunk-EMRZKKP3.js";
import "./chunk-SQBJ6KPL.js";
import {
  U
} from "./chunk-MKMLHQNH.js";
import "./chunk-PHPHIDTF.js";
import "./chunk-P6SQPYDS.js";
import "./chunk-SFT755VT.js";
import "./chunk-GWFG4NRK.js";
import "./chunk-YXFIF2O5.js";
import "./chunk-E4MAG7OK.js";
import "./chunk-YVQV6YXG.js";
import "./chunk-3KALZGFA.js";
import "./chunk-M47YTHQ5.js";
import "./chunk-OJKTPYH5.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-CKHNR7DG.js";
import "./chunk-FY3NCRRH.js";
import "./chunk-CIPSOFMY.js";
import "./chunk-3U7SS7RC.js";
import "./chunk-6U5BQYRW.js";
import "./chunk-LUOENZ4F.js";
import "./chunk-QGRPG4XS.js";
import "./chunk-M73MMEC7.js";
import "./chunk-A5CTLI5A.js";
import "./chunk-WUBKNERF.js";
import "./chunk-VACYSSCT.js";
import "./chunk-4HXSKBAW.js";
import "./chunk-FFQG5TD2.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-GLDJLPWH.js";
import "./chunk-GMLVDTS4.js";
import "./chunk-G7CHVXDR.js";
import "./chunk-OAZLVZFS.js";
import "./chunk-CPSZPA6H.js";
import "./chunk-Y54MR3BP.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-JY6H6KI3.js";
import "./chunk-TTCQP5LX.js";
import "./chunk-C2WY74GI.js";
import "./chunk-MCOYI7PX.js";
import "./chunk-EL4OGCJC.js";
import "./chunk-XPATKIHO.js";
import "./chunk-MKHZ5X6F.js";
import "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/rest/query/operations/queryRelatedRecords.js
function o(e, t2) {
  const o2 = e.toJSON();
  return o2.objectIds && (o2.objectIds = o2.objectIds.join(",")), o2.orderByFields && (o2.orderByFields = o2.orderByFields.join(",")), o2.outFields && !(t2 == null ? void 0 : t2.returnCountOnly) ? o2.outFields.includes("*") ? o2.outFields = "*" : o2.outFields = o2.outFields.join(",") : delete o2.outFields, o2.outSpatialReference && (o2.outSR = o2.outSR.wkid || JSON.stringify(o2.outSR.toJSON()), delete o2.outSpatialReference), o2.dynamicDataSource && (o2.layer = JSON.stringify({ source: o2.dynamicDataSource }), delete o2.dynamicDataSource), o2;
}
async function r(e, t2, o2) {
  const r2 = await s(e, t2, o2), n3 = r2.data, a = n3.geometryType, d2 = n3.spatialReference, c = {};
  for (const s2 of n3.relatedRecordGroups) {
    const e2 = { fields: void 0, objectIdFieldName: void 0, geometryType: a, spatialReference: d2, hasZ: !!n3.hasZ, hasM: !!n3.hasM, features: s2.relatedRecords };
    if (null != s2.objectId)
      c[s2.objectId] = e2;
    else
      for (const t3 in s2)
        s2.hasOwnProperty(t3) && "relatedRecords" !== t3 && (c[s2[t3]] = e2);
  }
  return { ...r2, data: c };
}
async function n(e, t2, o2) {
  const r2 = await s(e, t2, o2, { returnCountOnly: true }), n3 = r2.data, a = {};
  for (const s2 of n3.relatedRecordGroups)
    null != s2.objectId && (a[s2.objectId] = s2.count);
  return { ...r2, data: a };
}
async function s(r2, n3, s2 = {}, a) {
  const d2 = t({ ...r2.query, f: "json", ...a, ...o(n3, a) });
  return U(r2.path + "/queryRelatedRecords", { ...s2, query: { ...s2.query, ...d2 } });
}

// node_modules/@arcgis/core/rest/query/executeRelationshipQuery.js
async function n2(e, n3, u2) {
  n3 = d.from(n3);
  const a = f(e);
  return r(a, n3, u2).then((t2) => {
    const r2 = t2.data, e2 = {};
    return Object.keys(r2).forEach((t3) => e2[t3] = x.fromJSON(r2[t3])), e2;
  });
}
async function u(r2, o2, n3) {
  o2 = d.from(o2);
  const u2 = f(r2);
  return n(u2, o2, { ...n3 }).then((t2) => t2.data);
}
export {
  n2 as executeRelationshipQuery,
  u as executeRelationshipQueryForCount
};
//# sourceMappingURL=executeRelationshipQuery-7ELXAHL6.js.map
