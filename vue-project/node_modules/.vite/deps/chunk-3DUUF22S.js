import {
  a as a2
} from "./chunk-SU4IQNSG.js";
import {
  T
} from "./chunk-UHF3OUQV.js";
import {
  r as r2
} from "./chunk-GMLVDTS4.js";
import {
  o as o2
} from "./chunk-G7CHVXDR.js";
import {
  s
} from "./chunk-OAZLVZFS.js";
import {
  l
} from "./chunk-CPSZPA6H.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-Y54MR3BP.js";
import {
  o,
  p
} from "./chunk-XPATKIHO.js";
import {
  r
} from "./chunk-HVCAHUYB.js";

// node_modules/@arcgis/core/webdoc/widgets/FloorFilter.js
var s2;
var n = s2 = class extends l {
  constructor(e2) {
    super(e2), this.enabled = false, this.longNames = false, this.minimized = false, this.pinnedLevels = false, this.site = null, this.facility = null, this.level = null;
  }
  clone() {
    return new s2(p({ enabled: this.enabled, longNames: this.longNames, minimized: this.minimized, pinnedLevels: this.pinnedLevels, site: this.site, facility: this.facility, level: this.level }));
  }
};
e([y({ type: Boolean, json: { read: { source: "enabled" }, write: { target: "enabled" } } })], n.prototype, "enabled", void 0), e([y({ type: Boolean, json: { read: { source: "longNames" }, write: { target: "longNames" } } })], n.prototype, "longNames", void 0), e([y({ type: Boolean, json: { read: { source: "minimized" }, write: { target: "minimized" } } })], n.prototype, "minimized", void 0), e([y({ type: Boolean, json: { read: { source: "pinnedLevels" }, write: { target: "pinnedLevels" } } })], n.prototype, "pinnedLevels", void 0), e([y({ type: String, json: { read: { source: "site" }, write: { target: "site" } } })], n.prototype, "site", void 0), e([y({ type: String, json: { read: { source: "facility" }, write: { target: "facility" } } })], n.prototype, "facility", void 0), e([y({ type: String, json: { read: { source: "level" }, write: { target: "level" } } })], n.prototype, "level", void 0), n = s2 = e([a("esri.webdoc.widgets.FloorFilter")], n);
var l2 = n;

// node_modules/@arcgis/core/webdoc/widgets/Range.js
var i;
var n2 = new s({ slider: "slider", picker: "picker" });
var p2 = i = class extends l {
  constructor(e2) {
    super(e2), this.interactionMode = null, this.numStops = null, this.stopInterval = null;
  }
  clone() {
    return new i({ interactionMode: this.interactionMode, numStops: this.numStops, stopInterval: this.stopInterval });
  }
};
e([y({ type: n2.apiValues, nonNullable: true, json: { type: n2.jsonValues, default: null, read: { reader: n2.read }, write: { isRequired: true, writer: n2.write } } })], p2.prototype, "interactionMode", void 0), e([y({ type: Number, json: { read: { source: "numberOfStops" }, write: { target: "numberOfStops", overridePolicy() {
  const e2 = null != this.stopInterval;
  return { enabled: !e2, isRequired: !e2 };
} } } })], p2.prototype, "numStops", void 0), e([y({ type: Number, json: { write: { overridePolicy() {
  return { isRequired: null == this.numStops };
} } } })], p2.prototype, "stopInterval", void 0), p2 = i = e([a("esri.webdoc.widgets.Range")], p2);
var u = p2;

// node_modules/@arcgis/core/webdoc/widgets/TimeSlider.js
var a3;
var c = a3 = class extends l {
  constructor(t) {
    super(t), this.currentTimeExtent = null, this.fullTimeExtent = null, this.loop = false, this.numStops = null, this.numThumbs = null, this.stopDelay = null, this.stopInterval = null, this.stops = null;
  }
  readCurrentTimeExtent(t) {
    if (!t)
      return;
    const r3 = null != t[0] ? new Date(t[0]) : null, o3 = null != t[1] ? new Date(t[1]) : null;
    return new T({ start: r3, end: o3 });
  }
  writeCurrentTimeExtent(t, e2, r3) {
    t && o(r3, [r(t.start) ? t.start.getTime() : null, r(t.end) ? t.end.getTime() : null], e2);
  }
  readFullTimeExtent(t, r3) {
    const o3 = r3.properties;
    if (!o3)
      return;
    const s3 = null != o3.endTime ? new Date(o3.endTime) : null, n4 = null != o3.startTime ? new Date(o3.startTime) : null;
    return new T({ start: n4, end: s3 });
  }
  writeFullTimeExtent(t, e2) {
    if (!t)
      return;
    const r3 = e2.properties = e2.properties || {}, o3 = t.end, s3 = t.start;
    o3 && (r3.endTime = r(o3) ? o3.getTime() : null), s3 && (r3.startTime = r(s3) ? s3.getTime() : null);
  }
  readStopInterval(t, e2, o3) {
    return t ? a2.fromJSON({ value: t.interval, unit: t.units }, o3) : null;
  }
  writeStopInterval(t, e2, r3, o3) {
    if (!t)
      return;
    const s3 = t.toJSON(o3);
    o(r3, { interval: s3.value, units: s3.unit }, e2);
  }
  readStops(t) {
    return t && t.length ? t.map((t2) => new Date(t2)) : null;
  }
  writeStops(t, e2, r3) {
    t && t.length && o(r3, t.map((t2) => t2.getTime()), e2);
  }
  clone() {
    return new a3(p({ currentTimeExtent: this.currentTimeExtent, fullTimeExtent: this.fullTimeExtent, loop: this.loop, numStops: this.numStops, numThumbs: this.numThumbs, stopDelay: this.stopDelay, stopInterval: this.stopInterval, stops: this.stops }));
  }
};
e([y({ type: T, json: { read: { source: "properties.currentTimeExtent" }, write: { target: "properties.currentTimeExtent" } } })], c.prototype, "currentTimeExtent", void 0), e([o2("currentTimeExtent")], c.prototype, "readCurrentTimeExtent", null), e([r2("currentTimeExtent")], c.prototype, "writeCurrentTimeExtent", null), e([y({ type: T, json: { read: { source: ["properties.endTime", "properties.startTime"] }, write: { target: { "properties.endTime": { type: Number }, "properties.startTime": { type: Number } } } } })], c.prototype, "fullTimeExtent", void 0), e([o2("fullTimeExtent")], c.prototype, "readFullTimeExtent", null), e([r2("fullTimeExtent")], c.prototype, "writeFullTimeExtent", null), e([y({ type: Boolean, nonNullable: true, json: { default: false, read: { source: "properties.loop" }, write: { target: "properties.loop" } } })], c.prototype, "loop", void 0), e([y({ type: Number, json: { read: { source: "properties.numberOfStops" }, write: { target: "properties.numberOfStops", overridePolicy() {
  var _a;
  const t = !!this.stopInterval, e2 = !!((_a = this.stops) == null ? void 0 : _a.length), r3 = !(t || e2);
  return { enabled: r3, isRequired: r3 };
} } } })], c.prototype, "numStops", void 0), e([y({ type: [1, 2], nonNullable: true, json: { read: { source: "properties.thumbCount" }, write: { target: "properties.thumbCount", isRequired: true } } })], c.prototype, "numThumbs", void 0), e([y({ type: Number, nonNullable: true, json: { read: { source: "properties.thumbMovingRate" }, write: { target: "properties.thumbMovingRate", isRequired: true } } })], c.prototype, "stopDelay", void 0), e([y({ type: a2, json: { read: { source: "properties.timeStopInterval" }, write: { target: "properties.timeStopInterval", overridePolicy() {
  var _a;
  const t = null != this.numStops, e2 = !!((_a = this.stops) == null ? void 0 : _a.length);
  return { enabled: !e2, isRequired: !(t || e2) };
} } } })], c.prototype, "stopInterval", void 0), e([o2("stopInterval")], c.prototype, "readStopInterval", null), e([r2("stopInterval")], c.prototype, "writeStopInterval", null), e([y({ type: [Date], json: { read: { source: "properties.stops" }, write: { target: "properties.stops", overridePolicy() {
  return { isRequired: null == this.numStops && !this.stopInterval };
} } } })], c.prototype, "stops", void 0), e([o2("stops")], c.prototype, "readStops", null), e([r2("stops")], c.prototype, "writeStops", null), c = a3 = e([a("esri.webdoc.widgets.TimeSlider")], c);
var d = c;

// node_modules/@arcgis/core/webdoc/Widgets.js
var m;
var c2 = m = class extends l {
  constructor(r3) {
    super(r3), this.range = null, this.timeSlider = null, this.floorFilter = null;
  }
  clone() {
    return new m(p({ range: this.range, timeSlider: this.timeSlider, floorFilter: this.floorFilter }));
  }
};
e([y({ type: u, json: { write: true } })], c2.prototype, "range", void 0), e([y({ type: d, json: { write: true } })], c2.prototype, "timeSlider", void 0), e([y({ type: l2, json: { write: true } })], c2.prototype, "floorFilter", void 0), c2 = m = e([a("esri.webdoc.Widgets")], c2);
var n3 = c2;

export {
  d,
  n3 as n
};
//# sourceMappingURL=chunk-3DUUF22S.js.map
