import {
  D
} from "./chunk-JVFXSHND.js";
import "./chunk-JS5BBP66.js";
import "./chunk-WSPTGWUV.js";
import "./chunk-FRHIREEO.js";
import "./chunk-4UIQ3FQB.js";
import "./chunk-B6QNIB4A.js";
import "./chunk-6ZJGGXFT.js";
import "./chunk-AATTIYMG.js";
import "./chunk-ECBW37F4.js";
import "./chunk-BTELXCWJ.js";
import "./chunk-HCWIAQV3.js";
import "./chunk-JEN3J6RC.js";
import "./chunk-DEBYWO5M.js";
import "./chunk-37BTU2M3.js";
import "./chunk-VBBXLTF2.js";
import "./chunk-EMUQ7G7L.js";
import "./chunk-46UYDOF4.js";
import "./chunk-VGTB7JUJ.js";
import "./chunk-QARJUBJV.js";
import "./chunk-UNKGAJFQ.js";
import "./chunk-DJZ2IN55.js";
import "./chunk-E4XXNNS2.js";
import "./chunk-372CNO3V.js";
import "./chunk-DZUX232E.js";
import "./chunk-RFBUNXCZ.js";
import "./chunk-PFMJX5Q6.js";
import "./chunk-QCYWXXBM.js";
import "./chunk-CCKR7UFK.js";
import "./chunk-DNXRTHCH.js";
import "./chunk-4S6QYDLW.js";
import "./chunk-6N66PUXI.js";
import "./chunk-HERKGCCA.js";
import "./chunk-SB6UPWEY.js";
import "./chunk-HWMFYBFS.js";
import "./chunk-EOF72YID.js";
import "./chunk-3FNYVRHQ.js";
import "./chunk-66OCZHWI.js";
import "./chunk-XEFASELW.js";
import "./chunk-3JVZYYA3.js";
import "./chunk-MWIMWDJV.js";
import "./chunk-LUSFZCEU.js";
import "./chunk-6VXAAN5J.js";
import "./chunk-AVTBKAM2.js";
import "./chunk-UQVFVW24.js";
import {
  y
} from "./chunk-FCDGNIOF.js";
import "./chunk-FAQPWMFY.js";
import "./chunk-ARRABRN2.js";
import "./chunk-XKQGIVQO.js";
import "./chunk-TDFTAVQL.js";
import "./chunk-3ZOUEUIN.js";
import "./chunk-NOYFNECX.js";
import "./chunk-7HK5OJHH.js";
import "./chunk-YZ3HZMEM.js";
import "./chunk-5XBZ477A.js";
import "./chunk-TKZTELJQ.js";
import "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import "./chunk-QPSL5BDS.js";
import "./chunk-7WIVOZQ6.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-F6Y6UABE.js";
import "./chunk-4ZMXDH56.js";
import "./chunk-EOI6A2XM.js";
import "./chunk-5W2WWLX7.js";
import "./chunk-IZJW67TO.js";
import "./chunk-JZSNGIOH.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import {
  h,
  l
} from "./chunk-QP5ZWBKN.js";
import "./chunk-VSUGA5AN.js";
import "./chunk-E3JHIVZP.js";
import "./chunk-G3A2XEXX.js";
import "./chunk-JKBONAYS.js";
import "./chunk-YSJ4W32U.js";
import "./chunk-3EIJOCWD.js";
import "./chunk-HRIBADXS.js";
import "./chunk-CSFUQCFV.js";
import "./chunk-ZUIHAM2A.js";
import "./chunk-SABBLK7S.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-7FGYV4GW.js";
import "./chunk-CXHYHUY6.js";
import "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-II3EAW7L.js";
import "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import "./chunk-6XDV3BWZ.js";
import "./chunk-CH2BQDQT.js";
import "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-IMKS3PQX.js";
import "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-FZCZQIVS.js";
import "./chunk-JYX5X6UR.js";
import "./chunk-MQUNEV3K.js";
import "./chunk-WVICJPEU.js";
import "./chunk-TZBBKXOW.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-FSB7TIRN.js";
import "./chunk-UIMO4FGN.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-E4M4B5ZQ.js";
import "./chunk-JATK7CEQ.js";
import "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-RLEMMDH4.js";
import "./chunk-6ZUWLK7F.js";
import "./chunk-YVZY5LDV.js";
import {
  has
} from "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import {
  r
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function l2(e2, r2) {
  return !e2.visible || 0 !== e2.minScale && r2 > e2.minScale || 0 !== e2.maxScale && r2 < e2.maxScale;
}
var o = class extends D {
  initialize() {
    this.addHandles([l(() => this.view.scale, () => this._update(), h)], "constructor");
  }
  isUpdating() {
    var _a;
    const e2 = this.layer.sublayers.some((e3) => null != e3.renderer), r2 = this._commandsQueue.updating, s = null != this._updatingRequiredFieldsPromise, i = !this._proxy || !this._proxy.isReady, t = this._pipelineIsUpdating, a2 = null == this.tileRenderer || ((_a = this.tileRenderer) == null ? void 0 : _a.updating), n = e2 && (r2 || s || i || t || a2);
    return has("esri-2d-log-updating") && console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${e2}
  -> hasPendingCommand ${r2}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${i}
  -> updatingPipeline ${t}
  -> updatingTileRenderer ${a2}
`), n;
  }
  _injectOverrides(e2) {
    let s = super._injectOverrides(e2);
    const i = this.view.scale, t = this.layer.sublayers.filter((e3) => l2(e3, i)).map((e3) => e3.subtypeCode);
    if (!t.length)
      return s;
    s = r(s) ? s : new y().toJSON();
    const n = `NOT ${this.layer.subtypeField} IN (${t.join(",")})`;
    return s.where = s.where ? `(${s.where}) AND (${n})` : n, s;
  }
  _setLayersForFeature(e2) {
    const r2 = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r2.name], i = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = e2.sourceLayer = i;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r2 = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r2})` : "1=2";
    let i = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return i += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: i };
  }
};
o = e([a("esri.views.2d.layers.SubtypeGroupLayerView2D")], o);
var u = o;
export {
  u as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-REKYHK7C.js.map
