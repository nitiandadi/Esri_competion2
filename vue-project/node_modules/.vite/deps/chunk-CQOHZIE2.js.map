{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js", "../../@arcgis/core/chunks/DefaultMaterial.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport{neverReached as a}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function e(e,o){const n=e.fragment;switch(n.code.add(r`struct ShadingNormalParameters {\r\nvec3 normalView;\r\nvec3 viewDirection;\r\n} shadingParams;`),o.doubleSidedMode){case i.None:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\r\nreturn normalize(params.normalView);\r\n}`);break;case i.View:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\r\nreturn dot(params.normalView, params.viewDirection) > 0.0 ? normalize(-params.normalView) : normalize(params.normalView);\r\n}`);break;case i.WindingOrder:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\r\nreturn gl_FrontFacing ? normalize(params.normalView) : normalize(-params.normalView);\r\n}`);break;default:a(o.doubleSidedMode);case i.COUNT:}}var i;!function(a){a[a.None=0]=\"None\",a[a.View=1]=\"View\",a[a.WindingOrder=2]=\"WindingOrder\",a[a.COUNT=3]=\"COUNT\"}(i||(i={}));export{e as Normals,i as NormalsDoubleSidedMode};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport{TextureCoordinateAttributeType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as t}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{NormalsDoubleSidedMode as n}from\"./Normals.glsl.js\";import{textureSize as r}from\"../util/WebGL2Utils.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";import{createTexture2DDrawSizeUniforms as o}from\"../../shaderModules/Texture2DDrawUniform.js\";import{createTexture2DPassSizeUniforms as s}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as d}from\"../../shaderModules/TextureSizeUniformType.js\";import{BindType as m}from\"../../shaderTechnique/BindType.js\";import{VertexAttribute as i}from\"../../../lib/VertexAttribute.js\";function c(c,u){const l=c.fragment;if(u.hasVertexTangents?(c.attributes.add(i.TANGENT,\"vec4\"),c.varyings.add(\"vTangent\",\"vec4\"),u.doubleSidedMode===n.WindingOrder?l.code.add(a`mat3 computeTangentSpace(vec3 normal) {\r\nfloat tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;\r\nvec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);\r\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\r\nreturn mat3(tangent, bitangent, normal);\r\n}`):l.code.add(a`mat3 computeTangentSpace(vec3 normal) {\r\nfloat tangentHeadedness = vTangent.w;\r\nvec3 tangent = normalize(vTangent.xyz);\r\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\r\nreturn mat3(tangent, bitangent, normal);\r\n}`)):(c.extensions.add(\"GL_OES_standard_derivatives\"),l.code.add(a`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {\r\nvec3 Q1 = dFdx(pos);\r\nvec3 Q2 = dFdy(pos);\r\nvec2 stx = dFdx(st);\r\nvec2 sty = dFdy(st);\r\nfloat det = stx.t * sty.s - sty.t * stx.s;\r\nvec3 T = stx.t * Q2 - sty.t * Q1;\r\nT = T - normal * dot(normal, T);\r\nT *= inversesqrt(max(dot(T,T), 1.e-10));\r\nvec3 B = sign(det) * cross(normal, T);\r\nreturn mat3(T, B, normal);\r\n}`)),u.textureCoordinateType!==e.None){c.include(t,u);const e=u.supportsTextureAtlas?u.hasWebGL2Context?d.None:d.Size:d.None;l.uniforms.add(u.pbrTextureBindType===m.Pass?s(\"normalTexture\",(e=>e.textureNormal),e):o(\"normalTexture\",(e=>e.textureNormal),e)),l.code.add(a`\r\n    vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {\r\n      vtc.uv = uv;\r\n      ${u.supportsTextureAtlas?a`vtc.size = ${r(u,\"normalTexture\")};`:\"\"}\r\n      vec3 rawNormal = textureLookup(normalTexture, vtc).rgb * 2.0 - 1.0;\r\n      return tangentSpace * rawNormal;\r\n    }\r\n  `)}}export{c as ComputeNormalTexture};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport{isSome as r}from\"../../../../../../core/maybe.js\";import{c as e}from\"../../../../../../chunks/mat3f32.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as a}from\"../../shaderModules/Matrix3PassUniform.js\";function s(s){s.vertex.uniforms.add(new a(\"colorTextureTransformMatrix\",(o=>r(o.colorTextureTransformMatrix)?o.colorTextureTransformMatrix:e()))),s.varyings.add(\"colorUV\",\"vec2\"),s.vertex.code.add(o`void forwardColorUV(){\r\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)}function i(s){s.vertex.uniforms.add(new a(\"normalTextureTransformMatrix\",(o=>r(o.normalTextureTransformMatrix)?o.normalTextureTransformMatrix:e()))),s.varyings.add(\"normalUV\",\"vec2\"),s.vertex.code.add(o`void forwardNormalUV(){\r\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)}function t(s){s.vertex.uniforms.add(new a(\"emissiveTextureTransformMatrix\",(o=>r(o.emissiveTextureTransformMatrix)?o.emissiveTextureTransformMatrix:e()))),s.varyings.add(\"emissiveUV\",\"vec2\"),s.vertex.code.add(o`void forwardEmissiveUV(){\r\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)}function n(s){s.vertex.uniforms.add(new a(\"occlusionTextureTransformMatrix\",(o=>r(o.occlusionTextureTransformMatrix)?o.occlusionTextureTransformMatrix:e()))),s.varyings.add(\"occlusionUV\",\"vec2\"),s.vertex.code.add(o`void forwardOcclusionUV(){\r\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)}function x(s){s.vertex.uniforms.add(new a(\"metallicRoughnessTextureTransformMatrix\",(o=>r(o.metallicRoughnessTextureTransformMatrix)?o.metallicRoughnessTextureTransformMatrix:e()))),s.varyings.add(\"metallicRoughnessUV\",\"vec2\"),s.vertex.code.add(o`void forwardMetallicRoughnessUV(){\r\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)}export{s as colorTextureUV,t as emissiveTextureUV,x as metallicRoughnessTextureUV,i as normalTextureUV,n as occlusionTextureUV};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport{isSome as e}from\"../core/maybe.js\";import{I as r}from\"./mat4f64.js\";import{ForwardLinearDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as l}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as n,NormalAttributeType as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as h}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as w,addAmbientBoostFactor as x,addLightingGlobalFactor as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as M,PBRMode as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{colorTextureUV as A,normalTextureUV as N,emissiveTextureUV as S,occlusionTextureUV as E,metallicRoughnessTextureUV as V}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as _}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as F}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as U}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as B,addCameraPosition as I}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as R}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as W}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as G}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as q}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as H}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as J}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as K}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function Q(Q){const X=new q,{vertex:Y,fragment:Z,varyings:ee}=X;return B(Y,Q),X.include(c),ee.add(\"vpos\",\"vec3\"),X.include(_,Q),X.include(t,Q),X.include(v,Q),Q.hasColorTextureTransform&&X.include(A),Q.output!==i.Color&&Q.output!==i.Alpha||(Q.hasNormalTextureTransform&&X.include(N),Q.hasEmissionTextureTransform&&X.include(S),Q.hasOcclusionTextureTransform&&X.include(E),Q.hasMetallicRoughnessTextureTransform&&X.include(V),I(Y,Q),X.include(n,Q),X.include(s,Q),Q.normalType===d.Attribute&&Q.offsetBackfaces&&X.include(a),X.include(b,Q),X.include(p,Q),Q.instancedColor&&X.attributes.add(K.INSTANCECOLOR,\"vec4\"),ee.add(\"localvpos\",\"vec3\"),X.include(g,Q),X.include(o,Q),X.include(m,Q),X.include(u,Q),Y.uniforms.add(new z(\"externalColor\",(e=>e.externalColor))),ee.add(\"vcolorExt\",\"vec4\"),Q.hasMultipassTerrain&&ee.add(\"depth\",\"float\"),Q.hasModelTransformation&&Y.uniforms.add(new k(\"model\",(o=>e(o.modelTransformation)?o.modelTransformation:r))),Y.code.add(G`\r\n      void main(void) {\r\n        forwardNormalizedVertexColor();\r\n        vcolorExt = externalColor;\r\n        ${Q.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\r\n        vcolorExt *= vvColor();\r\n        vcolorExt *= getSymbolColor();\r\n        forwardColorMixMode();\r\n\r\n        if (vcolorExt.a < ${G.float(D)}) {\r\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\r\n        } else {\r\n          vpos = calculateVPos();\r\n          localvpos = vpos - view[3].xyz;\r\n          vpos = subtractOrigin(vpos);\r\n          ${Q.normalType===d.Attribute?G`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:\"\"}\r\n          vpos = addVerticalOffset(vpos, localOrigin);\r\n          ${Q.hasVertexTangents?\"vTangent = dpTransformVertexTangent(tangent);\":\"\"}\r\n          gl_Position = transformPosition(proj, view, ${Q.hasModelTransformation?\"model,\":\"\"} vpos);\r\n          ${Q.normalType===d.Attribute&&Q.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\r\n        }\r\n\r\n        ${Q.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\r\n        forwardLinearDepth();\r\n        forwardTextureCoordinates();\r\n        ${Q.hasColorTextureTransform?G`forwardColorUV();`:\"\"}\r\n        ${Q.hasNormalTextureTransform?G`forwardNormalUV();`:\"\"}\r\n        ${Q.hasEmissionTextureTransform?G`forwardEmissiveUV();`:\"\"}\r\n        ${Q.hasOcclusionTextureTransform?G`forwardOcclusionUV();`:\"\"}\r\n        ${Q.hasMetallicRoughnessTextureTransform?G`forwardMetallicRoughnessUV();`:\"\"}\r\n      }\r\n    `)),Q.output===i.Alpha&&(X.include(l,Q),X.include(F,Q),X.include(T,Q),Z.uniforms.add([new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),Z.include(U),Z.code.add(G`\r\n      void main() {\r\n        discardBySlice(vpos);\r\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\r\n        ${Q.hasColorTexture?G`\r\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\r\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\r\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\r\n        ${Q.hasVertexColors?G`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\r\n        gl_FragColor = vec4(opacity_);\r\n      }\r\n    `)),Q.output===i.Color&&(X.include(l,Q),X.include(w,Q),X.include(f,Q),X.include(F,Q),X.include(Q.instancedDoublePrecision?P:$,Q),X.include(T,Q),I(Z,Q),Z.uniforms.add([Y.uniforms.get(\"localOrigin\"),new R(\"ambient\",(e=>e.ambient)),new R(\"diffuse\",(e=>e.diffuse)),new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),X.include(M,Q),X.include(L,Q),Z.include(U),X.include(j,Q),x(Z),y(Z),C(Z),Z.code.add(G`\r\n      void main() {\r\n        discardBySlice(vpos);\r\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\r\n        ${Q.hasColorTexture?G`\r\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\r\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\r\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\r\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\r\n        ${Q.normalType===d.ScreenDerivative?G`\r\n                vec3 normal = screenDerivativeNormal(localvpos);`:G`\r\n                shadingParams.normalView = vNormalWorld;\r\n                vec3 normal = shadingNormal(shadingParams);`}\r\n        ${Q.pbrMode===O.Normal?\"applyPBRFactors();\":\"\"}\r\n        float ssao = evaluateAmbientOcclusionInverse();\r\n        ssao *= getBakedOcclusion();\r\n\r\n        vec3 posWorld = vpos + localOrigin;\r\n\r\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\r\n        float shadow = ${Q.receiveShadows?\"readShadowMap(vpos, linearDepth)\":Q.spherical?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\r\n\r\n        vec3 matColor = max(ambient, diffuse);\r\n        ${Q.hasVertexColors?G`\r\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\r\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`\r\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\r\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\r\n        ${Q.hasNormalTexture?G`\r\n                mat3 tangentSpace = ${Q.hasVertexTangents?\"computeTangentSpace(normal);\":\"computeTangentSpace(normal, vpos, vuv0);\"}\r\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`:G`vec3 shadingNormal = normal;`}\r\n        vec3 normalGround = ${Q.spherical?G`normalize(posWorld);`:G`vec3(0.0, 0.0, 1.0);`}\r\n\r\n        ${Q.snowCover?G`\r\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\r\n                albedo = mix(albedo, vec3(1), snow);\r\n                shadingNormal = mix(shadingNormal, normal, snow);\r\n                ssao = mix(ssao, 1.0, snow);`:\"\"}\r\n\r\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\r\n\r\n        ${Q.pbrMode===O.Normal||Q.pbrMode===O.Schematic?G`\r\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\r\n                ${Q.snowCover?G`\r\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\r\n                        emission = mix(emission, vec3(0.0), snow);`:\"\"}\r\n\r\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:G`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\r\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\r\n        ${Q.transparencyPassType===J.Color?G`gl_FragColor = premultiplyAlpha(gl_FragColor);`:\"\"}\r\n      }\r\n    `)),X.include(h,Q),X}const X=Object.freeze(Object.defineProperty({__proto__:null,build:Q},Symbol.toStringTag,{value:\"Module\"}));export{X as D,Q as b};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIgI,SAASA,GAAEA,KAAEC,IAAE;AAAC,QAAMC,KAAEF,IAAE;AAAS,UAAOE,GAAE,KAAK,IAAID;AAAA;AAAA;AAAA,iBAGpK,GAAEA,GAAE,iBAAgB;AAAA,IAAC,KAAKE,GAAE;AAAK,MAAAD,GAAE,KAAK,IAAID;AAAA;AAAA,EAE3D;AAAE;AAAA,IAAM,KAAKE,GAAE;AAAK,MAAAD,GAAE,KAAK,IAAID;AAAA;AAAA,EAE/B;AAAE;AAAA,IAAM,KAAKE,GAAE;AAAa,MAAAD,GAAE,KAAK,IAAID;AAAA;AAAA,EAEvC;AAAE;AAAA,IAAM;AAAQ,QAAEA,GAAE,eAAe;AAAA,IAAE,KAAKE,GAAE;AAAA,EAAM;AAAC;AAAC,IAAIA;AAAE,CAAC,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,OAAK,CAAC,IAAE,QAAOA,GAAEA,GAAE,OAAK,CAAC,IAAE,QAAOA,GAAEA,GAAE,eAAa,CAAC,IAAE,gBAAeA,GAAEA,GAAE,QAAM,CAAC,IAAE;AAAO,EAAED,OAAIA,KAAE,CAAC,EAAE;;;ACTskB,SAASE,GAAEA,IAAEC,IAAE;AAAC,QAAM,IAAED,GAAE;AAAS,MAAGC,GAAE,qBAAmBD,GAAE,WAAW,IAAI,EAAE,SAAQ,MAAM,GAAEA,GAAE,SAAS,IAAI,YAAW,MAAM,GAAEC,GAAE,oBAAkBC,GAAE,eAAa,EAAE,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKn6B,IAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKb,MAAIH,GAAE,WAAW,IAAI,6BAA6B,GAAE,EAAE,KAAK,IAAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAW/D,IAAGF,GAAE,0BAAwB,EAAE,MAAK;AAAC,IAAAD,GAAE,QAAQI,IAAEH,EAAC;AAAE,UAAMI,MAAEJ,GAAE,uBAAqBA,GAAE,mBAAiBI,GAAE,OAAKA,GAAE,OAAKA,GAAE;AAAK,MAAE,SAAS,IAAIJ,GAAE,uBAAqB,EAAE,OAAK,EAAE,iBAAiB,CAAAI,QAAGA,IAAE,eAAeA,GAAC,IAAEJ,GAAE,iBAAiB,CAAAI,QAAGA,IAAE,eAAeA,GAAC,CAAC,GAAE,EAAE,KAAK,IAAIF;AAAA;AAAA;AAAA,QAGlQF,GAAE,uBAAqBE,gBAAeG,GAAEL,IAAE,eAAe,OAAK;AAAA;AAAA;AAAA;AAAA,GAInE;AAAA,EAAC;AAAC;;;AC5BoP,SAASM,GAAEA,IAAE;AAAC,EAAAA,GAAE,OAAO,SAAS,IAAI,IAAIC,GAAE,+BAA+B,CAAAC,OAAG,EAAEA,GAAE,2BAA2B,IAAEA,GAAE,8BAA4B,EAAE,CAAE,CAAC,GAAEF,GAAE,SAAS,IAAI,WAAU,MAAM,GAAEA,GAAE,OAAO,KAAK,IAAIE;AAAA;AAAA,EAE5b;AAAC;AAAC,SAASC,GAAEH,IAAE;AAAC,EAAAA,GAAE,OAAO,SAAS,IAAI,IAAIC,GAAE,gCAAgC,CAAAC,OAAG,EAAEA,GAAE,4BAA4B,IAAEA,GAAE,+BAA6B,EAAE,CAAE,CAAC,GAAEF,GAAE,SAAS,IAAI,YAAW,MAAM,GAAEA,GAAE,OAAO,KAAK,IAAIE;AAAA;AAAA,EAE3M;AAAC;AAAC,SAASE,GAAEJ,IAAE;AAAC,EAAAA,GAAE,OAAO,SAAS,IAAI,IAAIC,GAAE,kCAAkC,CAAAC,OAAG,EAAEA,GAAE,8BAA8B,IAAEA,GAAE,iCAA+B,EAAE,CAAE,CAAC,GAAEF,GAAE,SAAS,IAAI,cAAa,MAAM,GAAEA,GAAE,OAAO,KAAK,IAAIE;AAAA;AAAA,EAEnN;AAAC;AAAC,SAASG,GAAEL,IAAE;AAAC,EAAAA,GAAE,OAAO,SAAS,IAAI,IAAIC,GAAE,mCAAmC,CAAAC,OAAG,EAAEA,GAAE,+BAA+B,IAAEA,GAAE,kCAAgC,EAAE,CAAE,CAAC,GAAEF,GAAE,SAAS,IAAI,eAAc,MAAM,GAAEA,GAAE,OAAO,KAAK,IAAIE;AAAA;AAAA,EAEvN;AAAC;AAAC,SAASI,GAAEN,IAAE;AAAC,EAAAA,GAAE,OAAO,SAAS,IAAI,IAAIC,GAAE,2CAA2C,CAAAC,OAAG,EAAEA,GAAE,uCAAuC,IAAEA,GAAE,0CAAwC,EAAE,CAAE,CAAC,GAAEF,GAAE,SAAS,IAAI,uBAAsB,MAAM,GAAEA,GAAE,OAAO,KAAK,IAAIE;AAAA;AAAA,EAEvP;AAAC;;;ACVw0I,SAAS,EAAEK,IAAE;AAAC,QAAMC,KAAE,IAAIC,MAAE,EAAC,QAAO,GAAE,UAAS,GAAE,UAAS,GAAE,IAAED;AAAE,SAAO,EAAE,GAAED,EAAC,GAAEC,GAAE,QAAQC,EAAC,GAAE,GAAG,IAAI,QAAO,MAAM,GAAED,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQE,IAAEH,EAAC,GAAEA,GAAE,4BAA0BC,GAAE,QAAQG,EAAC,GAAEJ,GAAE,WAAS,EAAE,SAAOA,GAAE,WAAS,EAAE,UAAQA,GAAE,6BAA2BC,GAAE,QAAQI,EAAC,GAAEL,GAAE,+BAA6BC,GAAE,QAAQK,EAAC,GAAEN,GAAE,gCAA8BC,GAAE,QAAQM,EAAC,GAAEP,GAAE,wCAAsCC,GAAE,QAAQO,EAAC,GAAEC,GAAE,GAAET,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQS,IAAEV,EAAC,GAAEA,GAAE,eAAaG,GAAE,aAAWH,GAAE,mBAAiBC,GAAE,QAAQU,EAAC,GAAEV,GAAE,QAAQQ,IAAET,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAEA,GAAE,kBAAgBC,GAAE,WAAW,IAAI,EAAE,eAAc,MAAM,GAAE,GAAG,IAAI,aAAY,MAAM,GAAEA,GAAE,QAAQC,IAAEF,EAAC,GAAEC,GAAE,QAAQW,IAAEZ,EAAC,GAAEC,GAAE,QAAQI,IAAEL,EAAC,GAAEC,GAAE,QAAQU,IAAEX,EAAC,GAAE,EAAE,SAAS,IAAI,IAAIW,GAAE,iBAAiB,CAAAA,QAAGA,IAAE,aAAc,CAAC,GAAE,GAAG,IAAI,aAAY,MAAM,GAAEX,GAAE,uBAAqB,GAAG,IAAI,SAAQ,OAAO,GAAEA,GAAE,0BAAwB,EAAE,SAAS,IAAI,IAAIW,GAAE,SAAS,CAAAT,OAAG,EAAEA,GAAE,mBAAmB,IAAEA,GAAE,sBAAoB,CAAE,CAAC,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA;AAAA,UAI1vKF,GAAE,iBAAe,gCAA8B;AAAA;AAAA;AAAA;AAAA;AAAA,4BAK7BE,GAAE,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMzBF,GAAE,eAAaG,GAAE,YAAUD,6DAA0D;AAAA;AAAA,YAErFF,GAAE,oBAAkB,kDAAgD;AAAA,wDACxBA,GAAE,yBAAuB,WAAS;AAAA,YAC9EA,GAAE,eAAaG,GAAE,aAAWH,GAAE,kBAAgB,iGAA+F;AAAA;AAAA;AAAA,UAG/IA,GAAE,sBAAoB,wCAAsC;AAAA;AAAA;AAAA,UAG5DA,GAAE,2BAAyBE,wBAAqB;AAAA,UAChDF,GAAE,4BAA0BE,yBAAsB;AAAA,UAClDF,GAAE,8BAA4BE,2BAAwB;AAAA,UACtDF,GAAE,+BAA6BE,4BAAyB;AAAA,UACxDF,GAAE,uCAAqCE,oCAAiC;AAAA;AAAA,KAE7E,IAAGF,GAAE,WAAS,EAAE,UAAQC,GAAE,QAAQY,IAAEb,EAAC,GAAEC,GAAE,QAAQG,IAAEJ,EAAC,GAAEC,GAAE,QAAQM,IAAEP,EAAC,GAAE,EAAE,SAAS,IAAI,CAAC,IAAIE,GAAE,WAAW,CAAAS,QAAGA,IAAE,OAAQ,GAAE,IAAIT,GAAE,gBAAgB,CAAAS,QAAGA,IAAE,YAAa,CAAC,CAAC,GAAEX,GAAE,mBAAiB,EAAE,SAAS,IAAI,IAAI,EAAE,OAAO,CAAAW,QAAGA,IAAE,OAAQ,CAAC,GAAE,EAAE,QAAQN,EAAC,GAAE,EAAE,KAAK,IAAIH;AAAA;AAAA;AAAA,UAGnPF,GAAE,sBAAoB,2CAAyC;AAAA,UAC/DA,GAAE,kBAAgBE;AAAA,iDACqBF,GAAE,2BAAyBE,cAAWA;AAAA,kBACrEF,GAAE,4BAA0B,gCAA8B;AAAA,mDAC3BE;AAAA,UACvCF,GAAE,kBAAgBE,0HAAuHA;AAAA;AAAA;AAAA,KAG9I,IAAGF,GAAE,WAAS,EAAE,UAAQC,GAAE,QAAQY,IAAEb,EAAC,GAAEC,GAAE,QAAQa,IAAEd,EAAC,GAAEC,GAAE,QAAQM,IAAEP,EAAC,GAAEC,GAAE,QAAQG,IAAEJ,EAAC,GAAEC,GAAE,QAAQD,GAAE,2BAAyBe,KAAEC,IAAEhB,EAAC,GAAEC,GAAE,QAAQM,IAAEP,EAAC,GAAES,GAAE,GAAET,EAAC,GAAE,EAAE,SAAS,IAAI,CAAC,EAAE,SAAS,IAAI,aAAa,GAAE,IAAIW,GAAE,WAAW,CAAAA,QAAGA,IAAE,OAAQ,GAAE,IAAIA,GAAE,WAAW,CAAAA,QAAGA,IAAE,OAAQ,GAAE,IAAIT,GAAE,WAAW,CAAAS,QAAGA,IAAE,OAAQ,GAAE,IAAIT,GAAE,gBAAgB,CAAAS,QAAGA,IAAE,YAAa,CAAC,CAAC,GAAEX,GAAE,mBAAiB,EAAE,SAAS,IAAI,IAAI,EAAE,OAAO,CAAAW,QAAGA,IAAE,OAAQ,CAAC,GAAEV,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQM,IAAEP,EAAC,GAAE,EAAE,QAAQK,EAAC,GAAEJ,GAAE,QAAQU,IAAEX,EAAC,GAAEe,GAAE,CAAC,GAAEF,GAAE,CAAC,GAAEV,GAAE,CAAC,GAAE,EAAE,KAAK,IAAID;AAAA;AAAA;AAAA,UAG9dF,GAAE,sBAAoB,2CAAyC;AAAA,UAC/DA,GAAE,kBAAgBE;AAAA,iDACqBF,GAAE,2BAAyBE,cAAWA;AAAA,kBACrEF,GAAE,4BAA0B,gCAA8B;AAAA,mDAC3BE;AAAA;AAAA,UAEvCF,GAAE,eAAaG,GAAE,mBAAiBD;AAAA,oEACsBA;AAAA;AAAA;AAAA,UAGxDF,GAAE,YAAUY,GAAE,SAAO,uBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAO3BZ,GAAE,iBAAe,qCAAmCA,GAAE,YAAU,0DAAwD;AAAA;AAAA;AAAA,UAGvIA,GAAE,kBAAgBE;AAAA;AAAA,uIAEyGA;AAAA;AAAA;AAAA,UAG3HF,GAAE,mBAAiBE;AAAA,sCACSF,GAAE,oBAAkB,iCAA+B;AAAA,kFACTE;AAAA,8BAClDF,GAAE,YAAUE,2BAAwBA;AAAA;AAAA,UAExDF,GAAE,YAAUE;AAAA;AAAA;AAAA;AAAA,gDAIwB;AAAA;AAAA;AAAA;AAAA,UAIpCF,GAAE,YAAUY,GAAE,UAAQZ,GAAE,YAAUY,GAAE,YAAUV;AAAA;AAAA,kBAEtCF,GAAE,YAAUE;AAAA;AAAA,sEAEsC;AAAA;AAAA,mNAE6IA;AAAA;AAAA,UAEvMF,GAAE,yBAAuBE,GAAE,QAAMA,qDAAkD;AAAA;AAAA,KAExF,IAAGD,GAAE,QAAQ,GAAED,EAAC,GAAEC;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["e", "o", "n", "i", "a", "c", "u", "i", "o", "a", "e", "r", "s", "e", "o", "i", "t", "n", "x", "Q", "X", "o", "a", "s", "i", "t", "n", "x", "c", "r", "e", "d", "u", "p", "h", "v"]
}
