import {
  e as e11,
  l as l9,
  r as r13,
  s as s11,
  w as w6
} from "./chunk-SD3MRWWY.js";
import {
  P,
  e as e9,
  i as i13,
  o as o6,
  u as u5
} from "./chunk-ZTTXR2P2.js";
import {
  Gt,
  H,
  St,
  Y,
  Z,
  _ as _2,
  e as e10,
  ft,
  gt,
  ht,
  jt,
  lt,
  ot,
  pt,
  tt,
  ut,
  wt,
  xt,
  yt
} from "./chunk-BXXB2APG.js";
import {
  c as c10
} from "./chunk-VG55DFRV.js";
import "./chunk-THTW4KRY.js";
import "./chunk-KSRUQ6PQ.js";
import "./chunk-5SBOPOJJ.js";
import "./chunk-WQ64YIYM.js";
import "./chunk-NXYKN3ZF.js";
import "./chunk-5MAK42GD.js";
import {
  n as n7
} from "./chunk-NWZTRS6O.js";
import {
  e as e7,
  f as f5,
  i as i6,
  r as r10
} from "./chunk-77E52HT5.js";
import {
  d as d4
} from "./chunk-FPS5O6YZ.js";
import "./chunk-KYJD6PVR.js";
import {
  h as h4
} from "./chunk-RITPHS54.js";
import "./chunk-D2UI2BQN.js";
import "./chunk-5MV6T7MH.js";
import {
  l as l8
} from "./chunk-U3IHIDSP.js";
import {
  r as r12,
  t as t11
} from "./chunk-UUBCK4NC.js";
import "./chunk-34FJTA26.js";
import {
  a as a12,
  i as i10,
  l as l7
} from "./chunk-6EQJNBJO.js";
import {
  t as t10
} from "./chunk-DUEDINK5.js";
import {
  e as e8
} from "./chunk-MZ267CZB.js";
import {
  r as r11
} from "./chunk-3DBV4JBL.js";
import {
  F,
  J,
  N,
  S as S3,
  j as j6
} from "./chunk-UXJ7LOVI.js";
import "./chunk-UTGANG7C.js";
import "./chunk-WOEVHDZW.js";
import {
  l as l6
} from "./chunk-KZZBROE4.js";
import {
  n as n8
} from "./chunk-CJ2YD4VU.js";
import "./chunk-TW64FC7J.js";
import {
  a as a11
} from "./chunk-AX2TVMRJ.js";
import "./chunk-BOUOK7KP.js";
import "./chunk-26N6FACI.js";
import {
  M as M2,
  h as h3,
  i as i5,
  r as r9,
  s as s7
} from "./chunk-PRXITTX7.js";
import {
  a as a8,
  m as m3,
  o as o5,
  r as r8,
  z
} from "./chunk-JGIZLXNQ.js";
import {
  j as j5,
  p as p4
} from "./chunk-5BYH2DSF.js";
import "./chunk-3IDKVHSA.js";
import {
  s as s8
} from "./chunk-D4SYZIFV.js";
import {
  D,
  R as R2
} from "./chunk-XUGPBDOA.js";
import "./chunk-JY5TSDLZ.js";
import "./chunk-G3CPVDW2.js";
import "./chunk-PXPM76YN.js";
import {
  e as e6,
  t as t9
} from "./chunk-LGZ4BCMJ.js";
import {
  s as s10
} from "./chunk-CMMKNUCY.js";
import "./chunk-OIJ5J5ZA.js";
import "./chunk-2JB37XX2.js";
import "./chunk-5EF7J5GZ.js";
import "./chunk-CP43AUSV.js";
import "./chunk-G63AQLOB.js";
import "./chunk-M5GIVS5Q.js";
import "./chunk-XXDTEEJA.js";
import "./chunk-OPQ632ST.js";
import "./chunk-U6GC73UT.js";
import {
  W,
  e as e3,
  e2 as e4,
  e3 as e5,
  n as n6,
  o as o4,
  r as r6,
  r2 as r7,
  t as t7,
  t2 as t8
} from "./chunk-33Y575UF.js";
import {
  f as f4,
  h as h2,
  i as i4,
  n2 as n5,
  p as p3,
  v as v5,
  w as w5
} from "./chunk-HS45YVN7.js";
import "./chunk-SGLDT3EC.js";
import "./chunk-KMKTFSFZ.js";
import "./chunk-5ZDDV642.js";
import {
  m as m6
} from "./chunk-7W27Q2ZM.js";
import {
  u as u4
} from "./chunk-VSOGWTK5.js";
import "./chunk-QS7JATZ7.js";
import {
  L as L3
} from "./chunk-JU3TKWZ7.js";
import "./chunk-NC6SXEMY.js";
import "./chunk-VGE7POXD.js";
import "./chunk-RMSEZQLS.js";
import "./chunk-RSGOERDK.js";
import "./chunk-WVLEGBEW.js";
import {
  l as l5
} from "./chunk-TQCVRALN.js";
import "./chunk-72XDZD6U.js";
import {
  He
} from "./chunk-6FSTKAO3.js";
import "./chunk-LCCPKYWG.js";
import {
  v as v7
} from "./chunk-6JKYZ2HT.js";
import "./chunk-A32C3AV2.js";
import "./chunk-Z5XAWPXR.js";
import "./chunk-QEAHRYXT.js";
import "./chunk-KIR65PYA.js";
import "./chunk-CBPSNSHU.js";
import {
  c as c8
} from "./chunk-BXCDE7OD.js";
import "./chunk-3Q42SQKM.js";
import "./chunk-N5RJDK35.js";
import "./chunk-YINM2X73.js";
import "./chunk-TYNFM6KS.js";
import "./chunk-2MXTJGGQ.js";
import {
  d as d3
} from "./chunk-LHSSC5DZ.js";
import "./chunk-GPC3G5ZE.js";
import "./chunk-TXTRTJKV.js";
import "./chunk-DP34NAR5.js";
import "./chunk-SKVPVOJE.js";
import "./chunk-ED3H44RD.js";
import {
  c as c4
} from "./chunk-BGFAQ7IX.js";
import "./chunk-7R74OHEA.js";
import "./chunk-YAHOVOUK.js";
import "./chunk-TDIYMFIJ.js";
import "./chunk-OP7TT6MW.js";
import "./chunk-AJY7W6KP.js";
import "./chunk-24GIQSAO.js";
import {
  a as a5
} from "./chunk-G65A4RB3.js";
import "./chunk-5Z5EL26H.js";
import "./chunk-XLBI6T7A.js";
import "./chunk-G356VNM2.js";
import "./chunk-L4RMMCLB.js";
import "./chunk-74O5RNN6.js";
import "./chunk-G3VRYZIG.js";
import "./chunk-LIQ4GX6J.js";
import "./chunk-J4FALWOT.js";
import "./chunk-MN4E5VOA.js";
import "./chunk-EQMSF3LN.js";
import "./chunk-ST7DNJJS.js";
import "./chunk-PPF7YG5M.js";
import "./chunk-RPT2LTMJ.js";
import "./chunk-JP2SJCCZ.js";
import "./chunk-VGMWYIHA.js";
import "./chunk-IV6V2NFV.js";
import {
  d as d2
} from "./chunk-HZKQDRDV.js";
import "./chunk-QIPM2JON.js";
import "./chunk-2CREJO6O.js";
import "./chunk-RVPWRWBW.js";
import "./chunk-EPJSBV4J.js";
import {
  An,
  en,
  rn,
  tn
} from "./chunk-SLPOHICA.js";
import "./chunk-REIXEATJ.js";
import "./chunk-7YGY53FV.js";
import "./chunk-XP5MC636.js";
import {
  b as b4
} from "./chunk-ZH4VVE2N.js";
import "./chunk-APWPNAOK.js";
import {
  b as b3,
  j as j4
} from "./chunk-ZSE573CF.js";
import {
  s as s6
} from "./chunk-CNSRWRDO.js";
import "./chunk-NIRK3SGG.js";
import "./chunk-IAZ7N6B7.js";
import {
  a as a9,
  c as c3,
  d
} from "./chunk-IGOXVXHJ.js";
import {
  a as a7
} from "./chunk-6YBCJ6DZ.js";
import {
  m as m4,
  x
} from "./chunk-IFB6JAZV.js";
import "./chunk-IMDA6RVE.js";
import "./chunk-GGTMSDMZ.js";
import "./chunk-ICG3HFWD.js";
import {
  T
} from "./chunk-4NXG3DDL.js";
import "./chunk-RRDTWKKD.js";
import "./chunk-WRRQGHKT.js";
import "./chunk-Z7EVRM6O.js";
import "./chunk-H5PGGDUF.js";
import "./chunk-XS2IGMN6.js";
import "./chunk-YEBACBC7.js";
import "./chunk-UKGDL4FF.js";
import "./chunk-JSP5XSQW.js";
import "./chunk-3VYMEEEU.js";
import "./chunk-ZV33SC25.js";
import "./chunk-PRUHFPTL.js";
import "./chunk-ONJXOTQ7.js";
import "./chunk-4VX5PWQN.js";
import "./chunk-K55CPJL4.js";
import "./chunk-HM62IZSE.js";
import {
  g as g3
} from "./chunk-2OJTWNQ6.js";
import "./chunk-QKWZO2WR.js";
import {
  v as v6
} from "./chunk-GEQPBGLO.js";
import {
  U as U2,
  a as a6,
  f as f3,
  h,
  j as j3,
  l as l3,
  w as w4
} from "./chunk-2UAIGHM2.js";
import "./chunk-CCAF47ZU.js";
import {
  a as a10
} from "./chunk-KFVYVU45.js";
import "./chunk-CCNZLEW5.js";
import "./chunk-FGXNBIU5.js";
import "./chunk-L2YYMVOS.js";
import "./chunk-KGIL42MH.js";
import "./chunk-A3HP4ESO.js";
import {
  S2
} from "./chunk-Z5QBM3A6.js";
import "./chunk-MRALC5D7.js";
import "./chunk-CYZ4XVBT.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-XF2RZJFH.js";
import "./chunk-HRFBINZY.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-EALW5DHT.js";
import "./chunk-EAKUFEPO.js";
import "./chunk-EQMIUIFH.js";
import {
  m as m5
} from "./chunk-KK57CPHE.js";
import "./chunk-7MMTDLQQ.js";
import "./chunk-TJWUU7NW.js";
import "./chunk-Q62HELM6.js";
import {
  c as c2
} from "./chunk-BQXNXAP2.js";
import {
  l as l4
} from "./chunk-BHQVXYUV.js";
import "./chunk-DKH5QOVM.js";
import {
  a as a4,
  b as b2
} from "./chunk-JT54I3AY.js";
import "./chunk-DC3QI5ZE.js";
import {
  g as g2
} from "./chunk-TNTTCGVB.js";
import {
  r as r5
} from "./chunk-EGHLQERQ.js";
import {
  _,
  m as m2
} from "./chunk-6CVKQGVU.js";
import {
  U as U3
} from "./chunk-2HZTCGYV.js";
import "./chunk-Z3YY72G4.js";
import "./chunk-M3KO43BW.js";
import {
  I,
  a as a13,
  a2 as a14,
  c2 as c5,
  c3 as c6,
  c4 as c7,
  c5 as c9,
  i2 as i8,
  i3 as i9,
  i4 as i11,
  u as u3
} from "./chunk-LRFOTULU.js";
import {
  i as i7,
  s as s9
} from "./chunk-HPP5IXU5.js";
import {
  L as L2,
  S,
  m,
  u as u2
} from "./chunk-UADQEL54.js";
import {
  he,
  ie,
  xe
} from "./chunk-4D6JGHEF.js";
import {
  i as i12
} from "./chunk-CT6YILLI.js";
import {
  j as j2
} from "./chunk-LJAKPJDJ.js";
import "./chunk-CCWBAM3L.js";
import {
  n as n4
} from "./chunk-TKWZACTO.js";
import {
  l as l2,
  s as s5
} from "./chunk-6K5VVUVI.js";
import "./chunk-DOQX2NNO.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-2ZX6RZTI.js";
import {
  o as o3,
  v2 as v4
} from "./chunk-5Q7F7FJ6.js";
import {
  E as E2,
  M,
  R3 as R,
  c3 as c,
  f2,
  r2 as r4,
  w as w2,
  w2 as w3
} from "./chunk-XFNXUG2G.js";
import {
  i as i3
} from "./chunk-27R7KBOL.js";
import {
  s as s4
} from "./chunk-RDTHWDIE.js";
import "./chunk-EAFLFTSD.js";
import "./chunk-DOVXDFWE.js";
import "./chunk-M4BAPJ3L.js";
import "./chunk-QXPN4D5D.js";
import {
  l
} from "./chunk-KGIB6IYW.js";
import {
  A as A2,
  a2 as a3,
  e as e2,
  n2 as n,
  n4 as n2,
  o as o2,
  t as t2,
  t2 as t3,
  t6,
  v as v2,
  v2 as v3,
  y3 as y2
} from "./chunk-3PPVODAA.js";
import "./chunk-MTJ2HM2W.js";
import {
  n as n3,
  r as r3,
  t as t4
} from "./chunk-PXVSWY3C.js";
import {
  A,
  C,
  E,
  L,
  U,
  a as a2,
  b,
  f,
  g,
  i as i2,
  j,
  p as p2,
  t as t5,
  v,
  y
} from "./chunk-WTKFW2TD.js";
import {
  s as s2,
  s2 as s3
} from "./chunk-UG2OEDEE.js";
import {
  r as r2
} from "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import {
  has
} from "./chunk-PR6SXADK.js";
import {
  u
} from "./chunk-MGJMBJDY.js";
import {
  a,
  e,
  i,
  o,
  p,
  r,
  s,
  t,
  w
} from "./chunk-WHB7G7RI.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/BreakpointsOwner.js
var n9 = { widthBreakpoint: { getValue(e24) {
  const i37 = e24.viewSize[0], s29 = e24.breakpoints, a36 = this.values;
  return i37 <= s29.xsmall ? a36.xsmall : i37 <= s29.small ? a36.small : i37 <= s29.medium ? a36.medium : i37 <= s29.large ? a36.large : a36.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", small: "esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", medium: "esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge", large: "esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge", xlarge: "esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large" } }, heightBreakpoint: { getValue(e24) {
  const i37 = e24.viewSize[1], s29 = e24.breakpoints, a36 = this.values;
  return i37 <= s29.xsmall ? a36.xsmall : i37 <= s29.small ? a36.small : i37 <= s29.medium ? a36.medium : i37 <= s29.large ? a36.large : a36.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", small: "esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", medium: "esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge", large: "esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge", xlarge: "esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large" } }, orientation: { getValue(e24) {
  const i37 = e24.viewSize, s29 = i37[0], a36 = i37[1], t32 = this.values;
  return a36 >= s29 ? t32.portrait : t32.landscape;
}, values: { portrait: "portrait", landscape: "landscape" }, valueToClassName: { portrait: "esri-view-orientation-portrait", landscape: "esri-view-orientation-landscape" } } };
var o7 = { xsmall: 544, small: 768, medium: 992, large: 1200 };
function m7(e24) {
  const i37 = e24;
  return i37 && i37.xsmall < i37.small && i37.small < i37.medium && i37.medium < i37.large;
}
function g4(e24, i37) {
  return i37 ? n9[e24].valueToClassName[i37].split(" ") : [];
}
var w7 = (w18) => {
  let d18 = class extends w18 {
    constructor(...e24) {
      super(...e24), this._breakpointsHandles = new t3(), this.orientation = null, this.widthBreakpoint = null, this.heightBreakpoint = null, this.breakpoints = o7;
    }
    initialize() {
      this._breakpointsHandles.add(l3(() => [this.breakpoints, this.size], () => this._updateClassNames(), h));
    }
    destroy() {
      this.destroyed || (this._removeActiveClassNames(), this._breakpointsHandles = a(this._breakpointsHandles));
    }
    set breakpoints(e24) {
      if (e24 === this._get("breakpoints"))
        return;
      const i37 = m7(e24);
      if (!i37) {
        const e25 = JSON.stringify(o7, null, 2);
        console.warn("provided breakpoints are not valid, using defaults:" + e25);
      }
      e24 = i37 ? e24 : o7, this._set("breakpoints", { ...e24 });
    }
    _updateClassNames() {
      if (!this.container)
        return;
      const e24 = t4.acquire(), s29 = t4.acquire();
      let a36, t32 = false;
      for (a36 in n9) {
        const i37 = this[a36], r28 = n9[a36].getValue({ viewSize: this.size, breakpoints: this.breakpoints });
        i37 !== r28 && (t32 = true, this[a36] = r28, g4(a36, i37).forEach((e25) => s29.push(e25)), g4(a36, r28).forEach((i38) => e24.push(i38)));
      }
      t32 && (this._applyClassNameChanges(e24, s29), t4.release(e24), t4.release(s29));
    }
    _applyClassNameChanges(e24, i37) {
      const s29 = this.container;
      s29 && (i37.forEach((e25) => s29.classList.remove(e25)), e24.forEach((e25) => s29.classList.add(e25)));
    }
    _removeActiveClassNames() {
      const e24 = this.container;
      if (!e24)
        return;
      let i37;
      for (i37 in n9)
        g4(i37, this[i37]).forEach((i38) => e24.classList.remove(i38));
    }
  };
  return e2([y2()], d18.prototype, "breakpoints", null), e2([y2()], d18.prototype, "orientation", void 0), e2([y2()], d18.prototype, "widthBreakpoint", void 0), e2([y2()], d18.prototype, "heightBreakpoint", void 0), d18 = e2([a3("esri.views.BreakpointsOwner")], d18), d18;
};

// node_modules/@arcgis/core/views/overlay/ViewOverlay.js
var a15 = class extends v3 {
  constructor() {
    super(...arguments), this.items = new j2(), this._watchUpdatingTracking = new c3(), this._callbacks = /* @__PURE__ */ new Map(), this._projector = i4(), this._hiddenProjector = i4();
  }
  get needsRender() {
    return this.items.length > 0;
  }
  get updating() {
    var _a;
    return ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) ?? false;
  }
  initialize() {
    const t32 = document.createElement("div");
    t32.className = "esri-overlay-surface", this._set("surface", t32), this._hiddenSurface = document.createElement("div"), this._hiddenSurface.setAttribute("style", "visibility: hidden;"), t32.appendChild(this._hiddenSurface), this._watchUpdatingTracking.addOnCollectionChange(() => this.items, (t33) => {
      for (const e24 of t33.added) {
        const t34 = () => e24.render();
        this._callbacks.set(e24, t34), this._projector.append(this.surface, t34);
      }
      for (const e24 of t33.removed) {
        const t34 = this._projector.detach(this._callbacks.get(e24));
        this.surface.removeChild(t34.domNode), this._callbacks.delete(e24);
      }
    });
  }
  addItem(t32) {
    this.items.add(t32);
  }
  removeItem(t32) {
    this.items.remove(t32);
  }
  destroy() {
    this.items.removeAll(), this._callbacks.forEach((t32) => this._projector.detach(t32)), this._callbacks = null, this._projector = null, this._watchUpdatingTracking.destroy();
  }
  render() {
    this._projector.renderNow();
  }
  computeBoundingRect(t32) {
    const e24 = this._hiddenSurface, r28 = this._hiddenProjector;
    let o30;
    const s29 = () => (o30 = t32.render(), o30);
    r28.append(e24, s29), r28.renderNow();
    const i37 = { left: 0, top: 0, right: 0, bottom: 0 };
    if (o30 && o30.domNode) {
      const t33 = o30.domNode.getBoundingClientRect();
      i37.left = t33.left, i37.top = t33.top, i37.right = t33.right, i37.bottom = t33.bottom;
    }
    for (r28.detach(s29); e24.firstChild; )
      e24.removeChild(e24.firstChild);
    return i37;
  }
  overlaps(t32, e24) {
    const r28 = this.computeBoundingRect(t32), o30 = this.computeBoundingRect(e24);
    return Math.max(r28.left, o30.left) <= Math.min(r28.right, o30.right) && Math.max(r28.top, o30.top) <= Math.min(r28.bottom, o30.bottom);
  }
  get hasVisibleItems() {
    return this.items.some((t32) => t32.visible);
  }
  async prepare() {
    await document.fonts.load(this._fontString()).catch(() => {
    });
  }
  renderCanvas(t32) {
    if (!this.items.some((t33) => t33.visible))
      return;
    const e24 = t32.getContext("2d");
    e24.save(), e24.font = this._fontString(), this.items.forEach((t33) => {
      e24.save(), t33.renderCanvas(e24), e24.restore();
    }), e24.restore();
  }
  _fontString() {
    return `10px ${getComputedStyle(this.surface).fontFamily}`;
  }
};
e2([y2({ readOnly: true })], a15.prototype, "surface", void 0), e2([y2({ readOnly: true })], a15.prototype, "items", void 0), e2([y2({ readOnly: true })], a15.prototype, "needsRender", null), e2([y2({ readOnly: true })], a15.prototype, "_watchUpdatingTracking", void 0), e2([y2({ readOnly: true })], a15.prototype, "updating", null), a15 = e2([a3("esri.views.overlay.ViewOverlay")], a15);
var c11 = a15;

// node_modules/@arcgis/core/core/unitFormatUtils.js
var U4 = ["B", "kB", "MB", "GB", "TB"];
function v8(n32, i37) {
  let o30 = 0 === i37 ? 0 : Math.floor(Math.log(i37) / Math.log(s8.KILOBYTES));
  o30 = a4(o30, 0, U4.length - 1);
  const u24 = m(i37 / s8.KILOBYTES ** o30, { maximumFractionDigits: 2 });
  return r2(n32.units.bytes[U4[o30]], { fileSize: u24 });
}

// node_modules/@arcgis/core/widgets/Feature/support/featureUtils.js
var p5 = "esri.widgets.Feature.support.featureUtils";
var m8 = s2.getLogger(p5);
var y3 = /href=(""|'')/gi;
var g5 = /(\{([^\{\r\n]+)\})/g;
var h5 = /\'/g;
var I2 = /^\s*expression\//i;
var b5 = /(\n)/gi;
var F2 = /[\u00A0-\u9999<>\&]/gim;
var w8 = /href\s*=\s*(?:\"([^\"]+)\"|\'([^\']+)\')/gi;
var N3 = /^(?:mailto:|tel:)/;
var E3 = "relationships/";
var T3 = S("short-date-short-time");
function j7(e24) {
  if (!t(e24))
    return e24.get("sourceLayer") || e24.get("layer");
}
async function x2(e24, t32) {
  return "function" == typeof e24 ? e24.call(null, t32) : e24;
}
function C2(e24 = "") {
  if (e24)
    return !N3.test(e24.trim().toLowerCase());
}
function M3(e24) {
  return !!e24 && I2.test(e24);
}
function q(e24, t32) {
  if (!M3(t32) || !e24)
    return null;
  const r28 = t32.replace(I2, "").toLowerCase();
  let n32 = null;
  return e24.some((e25) => e25.name.toLowerCase() === r28 && (n32 = e25, true)), n32;
}
function R4(e24, t32) {
  const r28 = q(t32, e24 == null ? void 0 : e24.fieldName);
  return r28 ? r28.title || null : e24 ? e24.label || e24.fieldName : null;
}
function v9(e24, t32) {
  const r28 = t32.get(e24.toLowerCase());
  return `{${r28 && r28.fieldName || e24}}`;
}
function D2(e24) {
  return e24.replace(y3, "");
}
function L4(e24, t32) {
  const r28 = A4(t32, e24);
  return r28 ? r28.name : e24;
}
function U5(e24, t32) {
  return e24 && e24.map((e25) => L4(e25, t32));
}
function A4(e24, t32) {
  return e24 && "function" == typeof e24.getField && t32 ? e24.getField(t32) ?? null : null;
}
function $(e24) {
  return `${e24}`.trim();
}
function S4({ attributes: e24, globalAttributes: t32, layer: r28, text: n32, expressionAttributes: i37, fieldInfoMap: o30 }) {
  return n32 ? G({ formattedAttributes: t32, template: z2(n32, { ...t32, ...i37, ...e24 }, r28), fieldInfoMap: o30 }) : "";
}
function G({ formattedAttributes: e24, template: t32, fieldInfoMap: r28 }) {
  return $(D2(r2(r2(t32, (e25) => v9(e25, r28)), e24)));
}
function k(e24, t32, r28 = false) {
  const n32 = t32[e24];
  if ("string" == typeof n32) {
    const i37 = "%27", o30 = (r28 ? encodeURIComponent(n32) : n32).replace(h5, i37);
    t32[e24] = o30;
  }
}
function O2(e24, t32 = false) {
  const r28 = { ...e24 };
  return Object.keys(r28).forEach((e25) => k(e25, r28, t32)), r28;
}
function P2(e24, t32, r28) {
  const i37 = (t32 = $(t32)) && "{" !== t32[0];
  return r2(e24, O2(r28, i37 || false));
}
function _3(e24, t32) {
  return e24.replace(g5, (e25, r28, n32) => {
    const i37 = A4(t32, n32);
    return i37 ? `{${i37.name}}` : r28;
  });
}
function z2(e24, t32, r28) {
  const n32 = _3(e24, r28);
  return n32 ? n32.replace(w8, (e25, r29, n33) => P2(e25, r29 || n33, t32)) : n32;
}
function H2(e24, t32) {
  if ("string" == typeof e24 && t32 && null == t32.dateFormat && (null != t32.places || null != t32.digitSeparator)) {
    const t33 = Number(e24);
    if (!isNaN(t33))
      return t33;
  }
  return e24;
}
function Q(e24) {
  return "feature" === (e24 == null ? void 0 : e24.type);
}
function Z2(e24) {
  return !!(e24 == null ? void 0 : e24.layer);
}
function V(e24) {
  return "map-image" === (e24 == null ? void 0 : e24.type);
}
function B(e24, t32) {
  var _a;
  const r28 = t32.fieldInfos, n32 = t32.fieldName, i37 = (_a = J3(r28, n32)) == null ? void 0 : _a.clone(), o30 = t32.preventPlacesFormatting, s29 = t32.layer, f19 = A4(s29, n32);
  if (i37 && "date" === (f19 == null ? void 0 : f19.type)) {
    const e25 = i37.format || new u3();
    e25.dateFormat = e25.dateFormat || "short-date-short-time", e25.dateTimeFormatOptions = !Z2(s29) && Q(s29) && s29.datesInUnknownTimezone || Z2(s29) && V(s29.layer) && s29.layer.datesInUnknownTimezone ? { timeZone: "UTC" } : null, i37.format = e25;
  }
  const d18 = i37 && i37.format;
  return "string" == typeof e24 && he(n32) && d18 ? d18.formatRasterPixelValue(e24) : "string" == typeof (e24 = H2(e24, d18)) || null == e24 || null == d18 ? re(e24) : o30 ? m(e24, { ...u2(d18), minimumFractionDigits: 0, maximumFractionDigits: 20 }) : d18.format(e24);
}
function J3(e24, t32) {
  if (!e24 || !e24.length || !t32)
    return;
  const r28 = t32.toLowerCase();
  let n32;
  return e24.some((e25) => !(!e25.fieldName || e25.fieldName.toLowerCase() !== r28) && (n32 = e25, true)), n32;
}
function K2({ fieldName: e24, graphic: t32, layer: r28 }) {
  if (ue(e24))
    return null;
  if (!r28 || "function" != typeof r28.getFeatureType)
    return null;
  const { typeIdField: n32 } = r28;
  if (!n32 || e24 !== n32)
    return null;
  const i37 = r28.getFeatureType(t32);
  return i37 ? i37.name : null;
}
function W2({ fieldName: e24, value: t32, graphic: r28, layer: n32 }) {
  if (ue(e24))
    return null;
  if (!n32 || "function" != typeof n32.getFieldDomain)
    return null;
  const i37 = r28 && n32.getFieldDomain(e24, { feature: r28 });
  return i37 && "coded-value" === i37.type ? i37.getName(t32) : null;
}
function X(e24, t32) {
  const { creatorField: r28, creationDateField: n32, editorField: o30, editDateField: a36 } = e24;
  if (!t32)
    return;
  const l27 = t32[a36];
  if ("number" == typeof l27) {
    const e25 = t32[o30];
    return { type: "edit", date: L2(l27, T3), user: e25 };
  }
  const u24 = t32[n32];
  if ("number" == typeof u24) {
    const e25 = t32[r28];
    return { type: "create", date: L2(u24, T3), user: e25 };
  }
  return null;
}
function Y2(e24, t32) {
  const r28 = /* @__PURE__ */ new Map();
  return e24 ? (e24.forEach((e25) => {
    const n32 = L4(e25.fieldName, t32);
    e25.fieldName = n32, r28.set(n32.toLowerCase(), e25);
  }), r28) : r28;
}
function ee(e24) {
  const t32 = [];
  if (!e24)
    return t32;
  const { fieldInfos: r28, content: n32 } = e24;
  return r28 && t32.push(...r28), n32 && Array.isArray(n32) ? (n32.forEach((e25) => {
    if ("fields" === e25.type) {
      const r29 = e25 && e25.fieldInfos;
      r29 && t32.push(...r29);
    }
  }), t32) : t32;
}
function te(e24) {
  return e24.replace(F2, (e25) => `&#${e25.charCodeAt(0)};`);
}
function re(e24) {
  return "string" == typeof e24 ? e24.replace(b5, '<br class="esri-text-new-line" />') : e24;
}
function ne(e24) {
  const { value: t32, fieldName: r28, fieldInfos: n32, fieldInfoMap: o30, layer: a36, graphic: l27 } = e24;
  if (null == t32)
    return "";
  const u24 = W2({ fieldName: r28, value: t32, graphic: l27, layer: a36 });
  if (u24)
    return u24;
  const s29 = K2({ fieldName: r28, graphic: l27, layer: a36 });
  if (s29)
    return s29;
  if (o30.get(r28.toLowerCase()))
    return B(t32, { fieldInfos: n32 || Array.from(o30.values()), fieldName: r28, layer: a36 });
  const f19 = a36 && a36.fieldsIndex;
  return f19 && f19.isDateField(r28) ? L2(t32, T3) : re(t32);
}
function ie2({ fieldInfos: e24, attributes: t32, layer: r28, graphic: n32, fieldInfoMap: i37, relatedInfos: o30 }) {
  const a36 = {};
  return o30 == null ? void 0 : o30.forEach((t33) => ce({ attributes: a36, relatedInfo: t33, fieldInfoMap: i37, fieldInfos: e24, layer: r28 })), t32 && Object.keys(t32).forEach((o31) => {
    const l27 = t32[o31];
    a36[o31] = ne({ fieldName: o31, fieldInfos: e24, fieldInfoMap: i37, layer: r28, value: l27, graphic: n32 });
  }), a36;
}
async function oe(e24, t32) {
  var _a, _b;
  const { layer: r28, graphic: n32, outFields: i37, objectIds: o30, returnGeometry: a36, spatialReference: l27 } = e24, u24 = o30[0];
  if ("number" != typeof u24 && "string" != typeof u24) {
    const e25 = "Could not query required fields for the specified feature. The feature's ID is invalid.", t33 = { layer: r28, graphic: n32, objectId: u24, requiredFields: i37 };
    return m8.warn(e25, t33), null;
  }
  if (!((_b = (_a = v6(r28)) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)) {
    const e25 = "The specified layer cannot be queried. The following fields will not be available.", t33 = { layer: r28, graphic: n32, requiredFields: i37, returnGeometry: a36 };
    return m8.warn(e25, t33), null;
  }
  const s29 = r28.createQuery();
  s29.objectIds = o30, s29.outFields = (i37 == null ? void 0 : i37.length) ? i37 : [r28.objectIdField], s29.returnGeometry = !!a36, s29.returnZ = !!a36, s29.returnM = !!a36, s29.outSpatialReference = l27;
  return (await r28.queryFeatures(s29, t32)).features[0];
}
async function ae(e24) {
  var _a;
  if (!((_a = e24.expressionInfos) == null ? void 0 : _a.length))
    return false;
  const t32 = await i12(), { arcadeUtils: { hasGeometryFunctions: r28 } } = t32;
  return r28(e24);
}
async function le({ graphic: e24, popupTemplate: t32, layer: r28, spatialReference: n32 }, i37) {
  if (!r28 || !t32)
    return;
  if ("function" == typeof r28.load && await r28.load(i37), !e24.attributes)
    return;
  const o30 = e24.attributes[r28.objectIdField];
  if (null == o30)
    return;
  const a36 = [o30], l27 = await t32.getRequiredFields(r28.fieldsIndex), u24 = xe(l27, e24), f19 = u24 ? [] : l27, c39 = t32.returnGeometry || await ae(t32);
  if (u24 && !c39)
    return;
  const d18 = await oe({ layer: r28, graphic: e24, outFields: f19, objectIds: a36, returnGeometry: c39, spatialReference: n32 }, i37);
  d18 && (d18.geometry && (e24.geometry = d18.geometry), d18.attributes && (e24.attributes = { ...e24.attributes, ...d18.attributes }));
}
function ue(e24 = "") {
  return !!e24 && e24.includes(E3);
}
function se(e24) {
  return e24 ? `${E3}${e24.layerId}/${e24.fieldName}` : "";
}
function fe({ attributes: e24, graphic: t32, relatedInfo: r28, fieldInfos: n32, fieldInfoMap: i37, layer: o30 }) {
  e24 && t32 && r28 && Object.keys(t32.attributes).forEach((a36) => {
    const l27 = se({ layerId: r28.relation.id.toString(), fieldName: a36 }), u24 = t32.attributes[a36];
    e24[l27] = ne({ fieldName: l27, fieldInfos: n32, fieldInfoMap: i37, layer: o30, value: u24, graphic: t32 });
  });
}
function ce({ attributes: e24, relatedInfo: t32, fieldInfoMap: r28, fieldInfos: n32, layer: i37 }) {
  e24 && t32 && (t32.relatedFeatures && t32.relatedFeatures && t32.relatedFeatures.forEach((o30) => fe({ attributes: e24, graphic: o30, relatedInfo: t32, fieldInfoMap: r28, fieldInfos: n32, layer: i37 })), t32.relatedStatsFeatures && t32.relatedStatsFeatures && t32.relatedStatsFeatures.forEach((o30) => fe({ attributes: e24, graphic: o30, relatedInfo: t32, fieldInfoMap: r28, fieldInfos: n32, layer: i37 })));
}
var de = (e24) => {
  if (!e24)
    return false;
  const t32 = e24.toUpperCase();
  return t32.includes("CURRENT_TIMESTAMP") || t32.includes("CURRENT_DATE") || t32.includes("CURRENT_TIME");
};
var pe = ({ layer: e24, method: t32, query: n32, definitionExpression: i37 }) => {
  var _a, _b;
  if (!((_b = (_a = e24.capabilities) == null ? void 0 : _a.query) == null ? void 0 : _b.supportsCacheHint) || "attachments" === t32)
    return;
  const o30 = r(n32.where) ? n32.where : null, a36 = r(n32.geometry) ? n32.geometry : null;
  de(i37) || de(o30) || "extent" === (a36 == null ? void 0 : a36.type) || "tile" === n32.resultType || (n32.cacheHint = true);
};
var me = ({ query: e24, layer: t32, method: r28 }) => {
  pe({ layer: t32, method: r28, query: e24, definitionExpression: `${t32.definitionExpression} ${t32.serviceDefinitionExpression}` });
};
var ye = ({ queryPayload: e24, layer: t32, method: r28 }) => {
  pe({ layer: t32, method: r28, query: e24, definitionExpression: `${t32.definitionExpression} ${t32.serviceDefinitionExpression}` });
};
function ge(e24, t32, r28) {
  return e24 && t32 && r28 ? he2(e24.allLayers, t32, r28) || he2(e24.allTables, t32, r28) : null;
}
function he2(e24, t32, r28) {
  return e24.find((e25) => e25 !== t32 && "feature" === e25.type && e25.url === t32.url && e25.layerId === r28.relatedTableId);
}

// node_modules/@arcgis/core/widgets/Attachments/AttachmentsViewModel.js
var f6 = { editing: false, operations: { add: true, update: true, delete: true } };
var u6 = j2.ofType(a11);
var y4 = class extends v3 {
  constructor(t32) {
    super(t32), this._getAttachmentsPromise = null, this._attachmentLayer = null, this.abilities = { ...f6 }, this.activeAttachmentInfo = null, this.activeFileInfo = null, this.attachmentInfos = new u6(), this.fileInfos = new j2(), this.graphic = null, this.mode = "view", this.filesEnabled = false, this.addHandles(l3(() => this.graphic, () => this._graphicChanged(), h));
  }
  destroy() {
    this._attachmentLayer = null, this.graphic = null;
  }
  castAbilities(t32) {
    return { ...f6, ...t32 };
  }
  get state() {
    return this._getAttachmentsPromise ? "loading" : this.graphic ? "ready" : "disabled";
  }
  get supportsResizeAttachments() {
    const { graphic: t32 } = this;
    if (!t32)
      return false;
    const e24 = t32.layer || t32.sourceLayer;
    return (e24 == null ? void 0 : e24.loaded) && "capabilities" in e24 && e24.capabilities && "operations" in e24.capabilities && "supportsResizeAttachments" in e24.capabilities.operations && e24.capabilities.operations.supportsResizeAttachments || false;
  }
  async getAttachments() {
    const { _attachmentLayer: t32, attachmentInfos: e24 } = this;
    if (!t32 || "function" != typeof t32.queryAttachments)
      throw new s3("invalid-layer", "getAttachments(): A valid layer is required.");
    const i37 = this._getObjectId(), a36 = new c4({ objectIds: [i37], returnMetadata: true }), r28 = [], s29 = t32.queryAttachments(a36).then((t33) => t33[i37] || r28).catch(() => r28);
    this._getAttachmentsPromise = s29, this.notifyChange("state");
    const o30 = await s29;
    return e24.removeAll(), o30.length && e24.addMany(o30), this._getAttachmentsPromise = null, this.notifyChange("state"), o30;
  }
  async addAttachment(t32, e24 = this.graphic) {
    var _a;
    const { _attachmentLayer: i37, attachmentInfos: a36, abilities: r28 } = this;
    if (!e24)
      throw new s3("invalid-graphic", "addAttachment(): A valid graphic is required.", { graphic: e24 });
    if (!t32)
      throw new s3("invalid-attachment", "addAttachment(): An attachment is required.", { attachment: t32 });
    if (!((_a = r28.operations) == null ? void 0 : _a.add))
      throw new s3("invalid-abilities", "addAttachment(): add abilities are required.");
    if (!i37 || "function" != typeof i37.addAttachment)
      throw new s3("invalid-layer", "addAttachment(): A valid layer is required.");
    const s29 = i37.addAttachment(e24, t32).then((t33) => this._queryAttachment(t33.objectId, e24)), o30 = await s29;
    return a36.add(o30), o30;
  }
  async deleteAttachment(t32) {
    var _a;
    const { _attachmentLayer: e24, attachmentInfos: i37, graphic: a36, abilities: r28 } = this;
    if (!t32)
      throw new s3("invalid-attachment-info", "deleteAttachment(): An attachmentInfo is required.", { attachmentInfo: t32 });
    if (!((_a = r28.operations) == null ? void 0 : _a.delete))
      throw new s3("invalid-abilities", "deleteAttachment(): delete abilities are required.");
    if (!e24 || "function" != typeof e24.deleteAttachments)
      throw new s3("invalid-layer", "deleteAttachment(): A valid layer is required.");
    if (!a36)
      throw new s3("invalid-graphic", "deleteAttachment(): A graphic is required.");
    const s29 = e24.deleteAttachments(a36, [t32.id]).then(() => t32), o30 = await s29;
    return i37.remove(o30), o30;
  }
  async updateAttachment(t32, e24 = this.activeAttachmentInfo) {
    var _a;
    const { _attachmentLayer: i37, attachmentInfos: a36, graphic: r28, abilities: s29 } = this;
    if (!t32)
      throw new s3("invalid-attachment", "updateAttachment(): An attachment is required.", { attachment: t32 });
    if (!e24)
      throw new s3("invalid-attachment-info", "updateAttachment(): An attachmentInfo is required.", { attachmentInfo: e24 });
    if (!((_a = s29.operations) == null ? void 0 : _a.update))
      throw new s3("invalid-abilities", "updateAttachment(): Update abilities are required.");
    const o30 = a36.findIndex((t33) => t33 === e24);
    if (!i37 || "function" != typeof i37.updateAttachment)
      throw new s3("invalid-layer", "updateAttachment(): A valid layer is required.");
    if (!r28)
      throw new s3("invalid-graphic", "updateAttachment(): A graphic is required.");
    const c39 = i37.updateAttachment(r28, e24.id, t32).then((t33) => this._queryAttachment(t33.objectId)), h23 = await c39;
    return a36.splice(o30, 1, h23), h23;
  }
  async commitFiles() {
    return await Promise.all(this.fileInfos.items.map((t32) => this.addAttachment(t32.form))), this.fileInfos.removeAll(), this.getAttachments();
  }
  addFile(t32, e24) {
    if (!t32 || !e24)
      return null;
    const i37 = { file: t32, form: e24 };
    return this.fileInfos.add(i37), i37;
  }
  updateFile(t32, e24, i37 = this.activeFileInfo) {
    if (!t32 || !e24 || !i37)
      return null;
    const a36 = this.fileInfos.findIndex((t33) => i37 === t33);
    return a36 > -1 && this.fileInfos.splice(a36, 1, { file: t32, form: e24 }), this.fileInfos.items[a36];
  }
  deleteFile(t32) {
    const e24 = this.fileInfos.find((e25) => e25.file === t32);
    return e24 ? (this.fileInfos.remove(e24), e24) : null;
  }
  async _queryAttachment(t32, e24) {
    const { _attachmentLayer: i37 } = this;
    if (!t32 || !(i37 == null ? void 0 : i37.queryAttachments))
      throw new s3("invalid-attachment-id", "Could not query attachment.");
    const a36 = this._getObjectId(e24), r28 = new c4({ objectIds: [a36], attachmentsWhere: `AttachmentId=${t32}`, returnMetadata: true });
    return i37.queryAttachments(r28).then((t33) => t33[a36][0]);
  }
  _getObjectId(t32 = this.graphic) {
    return (t32 == null ? void 0 : t32.getObjectId()) ?? null;
  }
  _graphicChanged() {
    this.graphic && (this._setAttachmentLayer(), this.getAttachments().catch(() => {
    }));
  }
  _setAttachmentLayer() {
    const { graphic: t32 } = this, e24 = j7(t32);
    this._attachmentLayer = e24 ? "scene" === e24.type && r(e24.associatedLayer) ? e24.associatedLayer : e24 : null;
  }
};
e2([y2()], y4.prototype, "abilities", void 0), e2([s4("abilities")], y4.prototype, "castAbilities", null), e2([y2()], y4.prototype, "activeAttachmentInfo", void 0), e2([y2()], y4.prototype, "activeFileInfo", void 0), e2([y2({ readOnly: true, type: u6 })], y4.prototype, "attachmentInfos", void 0), e2([y2()], y4.prototype, "fileInfos", void 0), e2([y2({ type: g3 })], y4.prototype, "graphic", void 0), e2([y2()], y4.prototype, "mode", void 0), e2([y2({ readOnly: true })], y4.prototype, "state", null), e2([y2()], y4.prototype, "filesEnabled", void 0), e2([y2({ readOnly: true })], y4.prototype, "supportsResizeAttachments", null), y4 = e2([a3("esri.widgets.Attachments.AttachmentsViewModel")], y4);
var A5 = y4;

// node_modules/@arcgis/core/widgets/Attachments/support/attachmentUtils.js
function e12(i37) {
  const e24 = i37.toLowerCase();
  return "image/bmp" === e24 || "image/emf" === e24 || "image/exif" === e24 || "image/gif" === e24 || "image/x-icon" === e24 || "image/jpeg" === e24 || "image/png" === e24 || "image/tiff" === e24 || "image/x-wmf" === e24;
}
function p6(e24) {
  const p33 = a7("esri/themes/base/images/files/");
  return e24 ? "text/plain" === e24 ? `${p33}text-32.svg` : "application/pdf" === e24 ? `${p33}pdf-32.svg` : "text/csv" === e24 ? `${p33}csv-32.svg` : "application/gpx+xml" === e24 ? `${p33}gpx-32.svg` : "application/x-dwf" === e24 ? `${p33}cad-32.svg` : "application/postscript" === e24 || "application/json" === e24 || "text/xml" === e24 || "model/vrml" === e24 ? `${p33}code-32.svg` : "application/x-zip-compressed" === e24 || "application/x-7z-compressed" === e24 || "application/x-gzip" === e24 || "application/x-tar" === e24 || "application/x-gtar" === e24 || "application/x-bzip2" === e24 || "application/gzip" === e24 || "application/x-compress" === e24 || "application/x-apple-diskimage" === e24 || "application/x-rar-compressed" === e24 || "application/zip" === e24 ? `${p33}zip-32.svg` : e24.includes("image/") ? `${p33}image-32.svg` : e24.includes("audio/") ? `${p33}sound-32.svg` : e24.includes("video/") ? `${p33}video-32.svg` : e24.includes("msexcel") || e24.includes("ms-excel") || e24.includes("spreadsheetml") ? `${p33}excel-32.svg` : e24.includes("msword") || e24.includes("ms-word") || e24.includes("wordprocessingml") ? `${p33}word-32.svg` : e24.includes("powerpoint") || e24.includes("presentationml") ? `${p33}report-32.svg` : `${p33}generic-32.svg` : `${p33}generic-32.svg`;
}

// node_modules/@arcgis/core/widgets/Attachments.js
var v10 = { addButton: true, addSubmitButton: true, cancelAddButton: true, cancelUpdateButton: true, deleteButton: true, errorMessage: true, progressBar: true, updateButton: true };
var y5 = "esri-attachments";
var w9 = "esri-button";
var A6 = { base: y5, loaderContainer: `${y5}__loader-container`, loader: `${y5}__loader`, fadeIn: `${y5}--fade-in`, container: `${y5}__container`, containerList: `${y5}__container--list`, containerPreview: `${y5}__container--preview`, actions: `${y5}__actions`, deleteButton: `${y5}__delete-button`, addAttachmentButton: `${y5}__add-attachment-button`, errorMessage: `${y5}__error-message`, items: `${y5}__items`, item: `${y5}__item`, itemButton: `${y5}__item-button`, itemMask: `${y5}__item-mask`, itemMaskIcon: `${y5}__item-mask--icon`, itemImage: `${y5}__image`, itemImageResizable: `${y5}__image--resizable`, itemLabel: `${y5}__label`, itemFilename: `${y5}__filename`, itemChevronIcon: `${y5}__item-chevron-icon`, itemLink: `${y5}__item-link`, itemLinkOverlay: `${y5}__item-link-overlay`, itemLinkOverlayIcon: `${y5}__item-link-overlay-icon`, itemEditIcon: `${y5}__item-edit-icon`, itemAddIcon: `${y5}__item-add-icon`, itemAddButton: `${y5}__item-add-button`, formNode: `${y5}__form-node`, fileFieldset: `${y5}__file-fieldset`, fileLabel: `${y5}__file-label`, fileName: `${y5}__file-name`, fileInput: `${y5}__file-input`, metadata: `${y5}__metadata`, metadataFieldset: `${y5}__metadata-fieldset`, progressBar: `${y5}__progress-bar`, esriWidget: "esri-widget", esriButton: w9, buttonDisabled: `${w9}--disabled`, esriButtonSecondary: `${w9}--secondary`, esriButtonTertiary: `${w9}--tertiary`, esriButtonThird: `${w9}--third`, esriButtonSmall: `${w9}--small`, esriButtonHalf: `${w9}--half`, empty: "esri-widget__content--empty", iconExternalLink: "esri-icon-link-external", iconEdit: "esri-icon-edit", iconRight: "esri-icon-right", iconLeft: "esri-icon-left", iconPlus: "esri-icon-plus" };
var F3 = window.CSS;
var k2 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this.displayType = "auto", this.messages = null, this.messagesUnits = null, this.selectedFile = null, this.submitting = false, this.viewModel = null, this.visibleElements = { ...v10 }, this._supportsImageOrientation = F3 && F3.supports && F3.supports("image-orientation", "from-image"), this._addAttachmentForm = null, this._updateAttachmentForm = null;
  }
  initialize() {
    this.viewModel || (this.viewModel = new A5()), this.addHandles([a6(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.attachmentInfos;
    }, "change", () => this.scheduleRender()), a6(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.fileInfos;
    }, "change", () => this.scheduleRender()), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.mode;
    }, () => this._modeChanged(), h)]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-icon-2ADQXYU4.js")]);
  }
  get abilities() {
    return this.viewModel.abilities;
  }
  set abilities(e24) {
    this.viewModel.abilities = e24;
  }
  get effectiveDisplayType() {
    const { displayType: e24 } = this;
    return e24 && "auto" !== e24 ? e24 : this.viewModel.supportsResizeAttachments ? "preview" : "list";
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e24) {
    this.viewModel.graphic = e24;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e24) {
    this._overrideIfSome("label", e24);
  }
  castVisibleElements(e24) {
    return { ...v10, ...e24 };
  }
  addAttachment() {
    const { _addAttachmentForm: e24, viewModel: s29 } = this;
    return this._set("submitting", true), this._set("error", null), s29.addAttachment(e24).then((e25) => (this._set("submitting", false), this._set("error", null), s29.mode = "view", e25)).catch((e25) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:add-attachment", this.messages.addErrorMessage, e25)), e25;
    });
  }
  deleteAttachment(e24) {
    const { viewModel: s29 } = this;
    return this._set("submitting", true), this._set("error", null), s29.deleteAttachment(e24).then((e25) => (this._set("submitting", false), this._set("error", null), s29.mode = "view", e25)).catch((e25) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:delete-attachment", this.messages.deleteErrorMessage, e25)), e25;
    });
  }
  updateAttachment() {
    const { viewModel: e24 } = this, { _updateAttachmentForm: s29 } = this;
    return this._set("submitting", true), this._set("error", null), e24.updateAttachment(s29).then((t32) => (this._set("submitting", false), this._set("error", null), e24.mode = "view", t32)).catch((e25) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:update-attachment", this.messages.updateErrorMessage, e25)), e25;
    });
  }
  addFile() {
    const e24 = this.viewModel.addFile(this.selectedFile, this._addAttachmentForm);
    return this.viewModel.mode = "view", e24;
  }
  updateFile() {
    const { viewModel: e24 } = this, t32 = e24.updateFile(this.selectedFile, this._updateAttachmentForm, e24.activeFileInfo);
    return e24.mode = "view", t32;
  }
  deleteFile(e24) {
    var _a;
    const t32 = this.viewModel.deleteFile(e24 || ((_a = this.viewModel.activeFileInfo) == null ? void 0 : _a.file));
    return this.viewModel.mode = "view", t32;
  }
  render() {
    const { submitting: e24, viewModel: t32 } = this, { state: s29 } = t32;
    return n5("div", { class: this.classes(A6.base, A6.esriWidget) }, e24 ? this.renderProgressBar() : null, "loading" === s29 ? this.renderLoading() : this.renderAttachments(), this.renderErrorMessage());
  }
  renderErrorMessage() {
    const { error: e24, visibleElements: t32 } = this;
    return e24 && t32.errorMessage ? n5("div", { key: "error-message", class: A6.errorMessage }, e24.message) : null;
  }
  renderAttachments() {
    const { activeFileInfo: e24, mode: t32, activeAttachmentInfo: s29 } = this.viewModel;
    return "add" === t32 ? this.renderAddForm() : "edit" === t32 ? this.renderDetailsForm(s29 || e24) : this.renderAttachmentContainer();
  }
  renderLoading() {
    return n5("div", { class: A6.loaderContainer, key: "loader" }, n5("div", { class: A6.loader }));
  }
  renderProgressBar() {
    return this.visibleElements.progressBar ? n5("div", { class: A6.progressBar, key: "progress-bar" }) : null;
  }
  renderAddForm() {
    const { submitting: e24, selectedFile: t32 } = this, s29 = e24 || !t32, i37 = this.visibleElements.cancelAddButton ? n5("button", { type: "button", bind: this, disabled: e24, onclick: this._cancelForm, class: this.classes(A6.esriButton, A6.esriButtonTertiary, A6.esriButtonSmall, A6.esriButtonHalf, e24 && A6.buttonDisabled) }, this.messages.cancel) : null, a36 = this.visibleElements.addSubmitButton ? n5("button", { type: "submit", disabled: s29, class: this.classes(A6.esriButton, A6.esriButtonSecondary, A6.esriButtonSmall, A6.esriButtonHalf, { [A6.buttonDisabled]: s29 }) }, this.messages.add) : null, n32 = t32 ? n5("span", { key: "file-name", class: A6.fileName }, t32.name) : null, r28 = n5("form", { bind: this, afterCreate: v5, afterRemoved: h2, "data-node-ref": "_addAttachmentForm", onsubmit: this._submitAddAttachment }, n5("fieldset", { class: A6.fileFieldset }, n32, n5("label", { class: this.classes(A6.fileLabel, A6.esriButton, A6.esriButtonSecondary) }, t32 ? this.messages.changeFile : this.messages.selectFile, n5("input", { class: A6.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))), a36, i37);
    return n5("div", { key: "add-form-container", class: A6.formNode }, r28);
  }
  renderDetailsForm(e24) {
    var _a, _b, _c;
    const { visibleElements: t32, viewModel: i37, selectedFile: a36, submitting: n32 } = this, { abilities: l27 } = i37, o30 = n32 || !a36;
    let d18, c39, m27, h23;
    a36 ? (d18 = a36.type, c39 = a36.name, m27 = a36.size) : e24 && "file" in e24 ? (d18 = e24.file.type, c39 = e24.file.name, m27 = e24.file.size) : e24 && "contentType" in e24 && (d18 = e24.contentType, c39 = e24.name, m27 = e24.size, h23 = e24.url);
    const u24 = l27.editing && ((_a = l27.operations) == null ? void 0 : _a.delete) && t32.deleteButton ? n5("button", { key: "delete-button", type: "button", disabled: n32, bind: this, onclick: (t33) => this._submitDeleteAttachment(t33, e24), class: this.classes(A6.esriButton, A6.esriButtonSmall, A6.esriButtonTertiary, A6.deleteButton, { [A6.buttonDisabled]: n32 }) }, this.messages.delete) : void 0, b18 = l27.editing && ((_b = l27.operations) == null ? void 0 : _b.update) && t32.updateButton ? n5("button", { disabled: o30, key: "update-button", type: "submit", class: this.classes(A6.esriButton, A6.esriButtonSmall, A6.esriButtonThird, { [A6.buttonDisabled]: o30 }) }, this.messages.update) : void 0, f19 = this.visibleElements.cancelUpdateButton ? n5("button", { disabled: n32, key: "cancel-button", type: "button", bind: this, onclick: this._cancelForm, class: this.classes(A6.esriButton, A6.esriButtonSmall, A6.esriButtonTertiary, A6.esriButtonThird, { [A6.buttonDisabled]: n32 }) }, this.messages.cancel) : void 0, v16 = l27.editing && ((_c = l27.operations) == null ? void 0 : _c.update) ? n5("fieldset", { key: "file", class: A6.fileFieldset }, n5("span", { key: "file-name", class: A6.fileName }, c39), n5("label", { class: this.classes(A6.fileLabel, A6.esriButton, A6.esriButtonSecondary) }, this.messages.changeFile, n5("input", { class: A6.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))) : void 0, y17 = n5("fieldset", { key: "size", class: A6.metadataFieldset }, n5("label", null, v8(this.messagesUnits, m27 ?? 0))), w18 = n5("fieldset", { key: "content-type", class: A6.metadataFieldset }, n5("label", null, d18)), F8 = r(h23) ? n5("a", { class: A6.itemLink, href: h23, rel: "noreferrer", target: "_blank" }, this.renderImageMask(e24, 400), n5("div", { class: A6.itemLinkOverlay }, n5("span", { class: A6.itemLinkOverlayIcon }, n5("calcite-icon", { icon: "launch" })))) : this.renderImageMask(e24, 400), k5 = n5("form", { bind: this, afterCreate: v5, afterRemoved: h2, "data-node-ref": "_updateAttachmentForm", onsubmit: (t33) => this._submitUpdateAttachment(t33, e24) }, n5("div", { class: A6.metadata }, y17, w18), v16, n5("div", { class: A6.actions }, u24, f19, b18));
    return n5("div", { key: "edit-form-container", class: A6.formNode }, F8, k5);
  }
  renderImageMask(e24, t32) {
    return e24 ? "file" in e24 ? this.renderGenericImageMask(e24.file.name, e24.file.type) : this.renderImageMaskForAttachment(e24, t32) : null;
  }
  renderGenericImageMask(e24, t32) {
    const { supportsResizeAttachments: s29 } = this.viewModel, i37 = p6(t32), a36 = { [A6.itemImageResizable]: s29 };
    return n5("div", { class: this.classes(A6.itemMaskIcon, A6.itemMask) }, n5("img", { title: e24, alt: e24, src: i37, class: this.classes(a36, A6.itemImage) }));
  }
  renderImageMaskForAttachment(e24, t32) {
    const { supportsResizeAttachments: s29 } = this.viewModel;
    if (!e24)
      return null;
    const { contentType: i37, name: a36, url: n32 } = e24;
    if (!s29 || !e12(i37))
      return this.renderGenericImageMask(a36, i37);
    const r28 = this._getCSSTransform(e24), l27 = r28 ? { transform: r28, "image-orientation": "none" } : {}, o30 = `${n32}${(n32 == null ? void 0 : n32.includes("?")) ? "&" : "?"}w=${t32}`, d18 = { [A6.itemImageResizable]: s29 };
    return n5("div", { class: this.classes(A6.itemMask) }, n5("img", { styles: l27, alt: a36, title: a36, src: o30, class: this.classes(d18, A6.itemImage) }));
  }
  renderFile(e24) {
    const { file: t32 } = e24;
    return n5("li", { class: A6.item, key: t32 }, n5("button", { key: "details-button", bind: this, class: A6.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, onclick: () => this._startEditFile(e24), type: "button" }, this.renderImageMask(e24), n5("label", { class: A6.itemLabel }, n5("span", { class: A6.itemFilename }, t32.name || this.messages.noTitle), n5("span", { "aria-hidden": "true", class: this.classes(A6.itemChevronIcon, f4(this.container) ? A6.iconLeft : A6.iconRight) }))));
  }
  renderAttachmentInfo({ attachmentInfo: e24, displayType: t32 }) {
    const { viewModel: s29, effectiveDisplayType: i37 } = this, { abilities: a36, supportsResizeAttachments: n32 } = s29, { contentType: r28, name: l27, url: o30 } = e24, d18 = this.renderImageMask(e24, "list" === t32 ? 48 : 400), c39 = a36.editing ? n5("span", { "aria-hidden": "true", class: this.classes(A6.itemChevronIcon, f4(this.container) ? A6.iconLeft : A6.iconRight) }) : null, m27 = [d18, "preview" === i37 && n32 && e12(r28) ? null : n5("label", { class: A6.itemLabel }, n5("span", { class: A6.itemFilename }, l27 || this.messages.noTitle), c39)], h23 = a36.editing ? n5("button", { key: "details-button", bind: this, class: A6.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, "data-attachment-info-id": e24.id, onclick: () => this._startEditAttachment(e24), type: "button" }, m27) : n5("a", { key: "details-link", class: A6.itemButton, href: o30 ?? void 0, target: "_blank" }, m27);
    return n5("li", { class: A6.item, key: e24 }, h23);
  }
  renderAttachmentContainer() {
    var _a;
    const { effectiveDisplayType: e24, viewModel: t32, visibleElements: s29 } = this, { attachmentInfos: i37, abilities: a36, fileInfos: n32 } = t32, r28 = !!(i37 == null ? void 0 : i37.length), l27 = !!(n32 == null ? void 0 : n32.length), o30 = { [A6.containerList]: "preview" !== e24, [A6.containerPreview]: "preview" === e24 }, d18 = a36.editing && ((_a = a36.operations) == null ? void 0 : _a.add) && s29.addButton ? n5("button", { bind: this, onclick: () => this._startAddAttachment(), class: this.classes(A6.esriButton, A6.esriButtonTertiary, A6.addAttachmentButton), type: "button" }, n5("span", { "aria-hidden": "true", class: this.classes(A6.itemAddIcon, A6.iconPlus) }), this.messages.add) : void 0, c39 = r28 ? n5("ul", { key: "attachments-list", class: A6.items }, i37.toArray().map((t33) => this.renderAttachmentInfo({ attachmentInfo: t33, displayType: e24 }))) : void 0, m27 = l27 ? n5("ul", { key: "file-list", class: A6.items }, n32.toArray().map((e25) => this.renderFile(e25))) : void 0, h23 = l27 || r28 ? void 0 : n5("div", { class: A6.empty }, this.messages.noAttachments);
    return n5("div", { key: "attachments-container", class: this.classes(A6.container, o30) }, c39, m27, h23, d18);
  }
  _modeChanged() {
    this._set("error", null), this._set("selectedFile", null);
  }
  _handleFileInputChange(e24) {
    const t32 = e24.target, s29 = t32 && t32.files && t32.files.item(0);
    this._set("selectedFile", s29);
  }
  _submitDeleteAttachment(e24, t32) {
    e24.preventDefault(), t32 && ("file" in t32 ? this.deleteFile(t32.file) : t32 && this.deleteAttachment(t32));
  }
  _submitAddAttachment(e24) {
    e24.preventDefault(), this.viewModel.filesEnabled ? this.addFile() : this.addAttachment();
  }
  _submitUpdateAttachment(e24, t32) {
    e24.preventDefault(), t32 && "file" in t32 ? this.updateFile() : this.updateAttachment();
  }
  _startEditAttachment(e24) {
    const { viewModel: t32 } = this;
    t32.activeFileInfo = null, t32.activeAttachmentInfo = e24, t32.mode = "edit";
  }
  _startEditFile(e24) {
    const { viewModel: t32 } = this;
    t32.activeAttachmentInfo = null, t32.activeFileInfo = e24, t32.mode = "edit";
  }
  _startAddAttachment() {
    this.viewModel.mode = "add";
  }
  _cancelForm(e24) {
    e24.preventDefault(), this.viewModel.mode = "view";
  }
  _getCSSTransform(e24) {
    const { orientationInfo: t32 } = e24;
    return !this._supportsImageOrientation && t32 ? [t32.rotation ? `rotate(${t32.rotation}deg)` : "", t32.mirrored ? "scaleX(-1)" : ""].join(" ") : "";
  }
};
e2([y2()], k2.prototype, "abilities", null), e2([y2()], k2.prototype, "displayType", void 0), e2([y2({ readOnly: true })], k2.prototype, "effectiveDisplayType", null), e2([y2()], k2.prototype, "graphic", null), e2([y2()], k2.prototype, "label", null), e2([y2(), e4("esri/widgets/Attachments/t9n/Attachments")], k2.prototype, "messages", void 0), e2([y2(), e4("esri/core/t9n/Units")], k2.prototype, "messagesUnits", void 0), e2([y2({ readOnly: true })], k2.prototype, "selectedFile", void 0), e2([y2({ readOnly: true })], k2.prototype, "submitting", void 0), e2([y2({ readOnly: true })], k2.prototype, "error", void 0), e2([y2({ type: A5 })], k2.prototype, "viewModel", void 0), e2([y2()], k2.prototype, "visibleElements", void 0), e2([s4("visibleElements")], k2.prototype, "castVisibleElements", null), k2 = e2([a3("esri.widgets.Attachments")], k2);
var B2 = k2;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments/FeatureAttachmentsViewModel.js
var o8 = class extends A5 {
  constructor(t32) {
    super(t32), this.description = null, this.title = null;
  }
};
e2([y2()], o8.prototype, "description", void 0), e2([y2()], o8.prototype, "title", void 0), o8 = e2([a3("esri.widgets.Feature.FeatureAttachments.FeatureAttachmentsViewModel")], o8);
var c12 = o8;

// node_modules/@arcgis/core/widgets/support/Heading.js
var i14 = { heading: "esri-widget__heading" };
function n10({ level: t32, class: n32, ...s29 }, a36) {
  const c39 = o9(t32);
  return n5(`h${c39}`, { ...s29, class: p3(i14.heading, n32), role: "heading", "aria-level": String(c39) }, a36);
}
function o9(r28) {
  return a4(Math.ceil(r28), 1, 6);
}

// node_modules/@arcgis/core/widgets/Feature/support/FeatureElementInfo.js
var p7 = "esri-feature-element-info";
var n11 = { base: p7, title: `${p7}__title`, description: `${p7}__description` };
var c13 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this.description = null, this.headingLevel = 2, this.title = null;
  }
  render() {
    return n5("div", { class: n11.base }, this.renderTitle(), this.renderDescription());
  }
  renderTitle() {
    const { title: e24 } = this;
    return e24 ? n5(n10, { level: this.headingLevel, class: n11.title }, e24) : null;
  }
  renderDescription() {
    const { description: e24 } = this;
    return e24 ? n5("div", { key: "description", class: n11.description }, e24) : null;
  }
};
e2([y2()], c13.prototype, "description", void 0), e2([y2()], c13.prototype, "headingLevel", void 0), e2([y2()], c13.prototype, "title", void 0), c13 = e2([a3("esri.widgets.Feature.support.FeatureElementInfo")], c13);
var l11 = c13;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments.js
var d5 = { base: "esri-feature-attachments" };
var c14 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this._featureElementInfo = null, this.attachmentsWidget = new B2(), this.headingLevel = 2, this.viewModel = new c12();
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles([l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title, this.headingLevel];
    }, () => this._setupFeatureElementInfo(), h), l3(() => this.viewModel, (e24) => this.attachmentsWidget.viewModel = e24, h)]);
  }
  destroy() {
    var _a;
    this.attachmentsWidget.destroy(), (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e24) {
    this.viewModel.description = e24;
  }
  get displayType() {
    return this.attachmentsWidget.displayType;
  }
  set displayType(e24) {
    this.attachmentsWidget.displayType = e24;
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e24) {
    this.viewModel.graphic = e24;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e24) {
    this.viewModel.title = e24;
  }
  render() {
    var _a;
    const { attachmentsWidget: e24 } = this;
    return n5("div", { class: d5.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), e24 == null ? void 0 : e24.render());
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e24, title: t32, headingLevel: i37 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e24, title: t32, headingLevel: i37 });
  }
};
e2([y2({ readOnly: true })], c14.prototype, "attachmentsWidget", void 0), e2([y2()], c14.prototype, "description", null), e2([y2()], c14.prototype, "displayType", null), e2([y2()], c14.prototype, "graphic", null), e2([y2()], c14.prototype, "headingLevel", void 0), e2([y2()], c14.prototype, "title", null), e2([y2({ type: c12 })], c14.prototype, "viewModel", void 0), c14 = e2([a3("esri.widgets.Feature.FeatureAttachments")], c14);
var h6 = c14;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent/FeatureContentViewModel.js
var p8 = class extends a9(v3) {
  constructor(t32) {
    super(t32), this._loadingPromise = null, this.created = null, this.creator = null, this.destroyer = null, this.graphic = null, this.handles.add(l3(() => this.creator, (t33) => {
      this._destroyContent(), this._createContent(t33);
    }, h));
  }
  destroy() {
    this._destroyContent();
  }
  get state() {
    return this._loadingPromise ? "loading" : "ready";
  }
  _destroyContent() {
    const { created: t32, graphic: e24, destroyer: r28 } = this;
    t32 && e24 && (x2(r28, { graphic: e24 }).catch(() => null), this._set("created", null));
  }
  async _createContent(t32) {
    const e24 = this.graphic;
    if (!e24 || !t32)
      return;
    const r28 = x2(t32, { graphic: e24 }).catch(() => null);
    this._loadingPromise = r28, this.notifyChange("state");
    const o30 = await r28;
    r28 === this._loadingPromise && (this._loadingPromise = null, this.notifyChange("state"), this._set("created", o30));
  }
};
e2([y2({ readOnly: true })], p8.prototype, "created", void 0), e2([y2()], p8.prototype, "creator", void 0), e2([y2()], p8.prototype, "destroyer", void 0), e2([y2({ type: g3 })], p8.prototype, "graphic", void 0), e2([y2({ readOnly: true })], p8.prototype, "state", null), p8 = e2([a3("esri.widgets.Feature.FeatureContent.FeatureContentViewModel")], p8);
var l12 = p8;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent.js
var n12 = "esri-feature-content";
var c15 = { base: n12, loaderContainer: `${n12}__loader-container`, loader: `${n12}__loader` };
var l13 = class extends W {
  constructor(e24, r28) {
    super(e24, r28), this.viewModel = null, this._addTargetToAnchors = (e25) => {
      Array.from(e25.querySelectorAll("a")).forEach((e26) => {
        C2(e26.href) && !e26.hasAttribute("target") && e26.setAttribute("target", "_blank");
      });
    };
  }
  get creator() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.creator;
  }
  set creator(e24) {
    this.viewModel && (this.viewModel.creator = e24);
  }
  get graphic() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.graphic;
  }
  set graphic(e24) {
    this.viewModel && (this.viewModel.graphic = e24);
  }
  renderLoading() {
    return n5("div", { class: c15.loaderContainer, key: "loader" }, n5("div", { class: c15.loader }));
  }
  renderCreated() {
    var _a;
    const e24 = (_a = this.viewModel) == null ? void 0 : _a.created;
    return e24 ? e24 instanceof HTMLElement ? n5("div", { key: e24, bind: e24, afterCreate: this._attachToNode }) : e6(e24) ? n5("div", { key: e24 }, !e24.destroyed && e24.render()) : n5("div", { key: e24, innerHTML: e24, afterCreate: this._addTargetToAnchors }) : null;
  }
  render() {
    var _a;
    const e24 = (_a = this.viewModel) == null ? void 0 : _a.state;
    return n5("div", { class: c15.base }, "loading" === e24 ? this.renderLoading() : this.renderCreated());
  }
  _attachToNode(e24) {
    const r28 = this;
    e24.appendChild(r28);
  }
};
e2([y2()], l13.prototype, "creator", null), e2([y2()], l13.prototype, "graphic", null), e2([y2({ type: l12 })], l13.prototype, "viewModel", void 0), l13 = e2([a3("esri.widgets.Feature.FeatureContent")], l13);
var p9 = l13;

// node_modules/@arcgis/core/widgets/Feature/FeatureFields/FeatureFieldsViewModel.js
var l14 = class extends v3 {
  constructor(o30) {
    super(o30), this.attributes = null, this.expressionInfos = null, this.description = null, this.fieldInfos = null, this.title = null;
  }
  get formattedFieldInfos() {
    const { expressionInfos: o30, fieldInfos: e24 } = this, s29 = [];
    return e24 == null ? void 0 : e24.forEach((e25) => {
      if (!(!e25.hasOwnProperty("visible") || e25.visible))
        return;
      const t32 = e25.clone();
      t32.label = R4(t32, o30), s29.push(t32);
    }), s29;
  }
};
e2([y2()], l14.prototype, "attributes", void 0), e2([y2({ type: [i11] })], l14.prototype, "expressionInfos", void 0), e2([y2()], l14.prototype, "description", void 0), e2([y2({ type: [c5] })], l14.prototype, "fieldInfos", void 0), e2([y2({ readOnly: true })], l14.prototype, "formattedFieldInfos", null), e2([y2()], l14.prototype, "title", void 0), l14 = e2([a3("esri.widgets.Feature.FeatureFields.FeatureFieldsViewModel")], l14);
var n13 = l14;

// node_modules/@arcgis/core/widgets/support/uriUtils.js
var s13 = [{ pattern: /^\s*(https?:\/\/([^\s]+))\s*$/i, target: "_blank", label: "{messages.view}" }, { pattern: /^\s*(tel:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(mailto:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(arcgis-appstudio-player:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "App Studio Player" }, { pattern: /^\s*(arcgis-collector:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Collector" }, { pattern: /^\s*(arcgis-explorer:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Explorer" }, { pattern: /^\s*(arcgis-navigator:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Navigator" }, { pattern: /^\s*(arcgis-survey123:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Survey123" }, { pattern: /^\s*(arcgis-trek2there:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Trek2There" }, { pattern: /^\s*(arcgis-workforce:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Workforce" }, { pattern: /^\s*(iform:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "iForm" }, { pattern: /^\s*(flow:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "FlowFinity" }, { pattern: /^\s*(lfmobile:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Laserfische" }, { pattern: /^\s*(mspbi:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Microsoft Power Bi" }];
function a16(e24) {
  let a36 = null;
  return s13.some((s29) => (s29.pattern.test(e24) && (a36 = s29), !!a36)), a36;
}
function p10(s29, p33) {
  if ("string" != typeof p33 || !p33)
    return p33;
  const r28 = a16(p33);
  if (!r28)
    return p33;
  const t32 = p33.match(r28.pattern), n32 = t32 && t32[2], l27 = r2(r2(r28.label, { messages: s29, hierPart: n32 }), { appName: r28.appName }), i37 = r28.target ? ` target="${r28.target}"` : "", o30 = "_blank" === r28.target ? ' rel="noreferrer"' : "";
  return p33.replace(r28.pattern, `<a${i37} href="$1"${o30}>${l27}</a>`);
}

// node_modules/@arcgis/core/widgets/Feature/FeatureFields.js
var f7 = "esri-feature-fields";
var u7 = { base: f7, fieldHeader: `${f7}__field-header`, fieldData: `${f7}__field-data`, fieldDataDate: `${f7}__field-data--date`, esriTable: "esri-widget__table" };
var m9 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this._featureElementInfo = null, this.viewModel = new n13(), this.messages = null, this.messagesURIUtils = null;
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles(l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h));
  }
  destroy() {
    var _a;
    (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e24) {
    this.viewModel.attributes = e24;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e24) {
    this.viewModel.description = e24;
  }
  get expressionInfos() {
    return this.viewModel.expressionInfos;
  }
  set expressionInfos(e24) {
    this.viewModel.expressionInfos = e24;
  }
  get fieldInfos() {
    return this.viewModel.fieldInfos;
  }
  set fieldInfos(e24) {
    this.viewModel.fieldInfos = e24;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e24) {
    this.viewModel.title = e24;
  }
  renderFieldInfo(e24, t32) {
    const { attributes: s29 } = this.viewModel, i37 = e24.fieldName, r28 = e24.label || i37, o30 = s29 ? null == s29[i37] ? "" : s29[i37] : "", l27 = !(!e24.format || !e24.format.dateFormat), n32 = "number" == typeof o30 && !l27 ? this._forceLTR(o30) : p10(this.messagesURIUtils, o30), a36 = { [u7.fieldDataDate]: l27 };
    return n5("tr", { key: `fields-element-info-row-${i37}-${t32}` }, n5("th", { key: `fields-element-info-row-header-${i37}-${t32}`, class: u7.fieldHeader, innerHTML: r28 }), n5("td", { key: `fields-element-info-row-data-${i37}-${t32}`, class: this.classes(u7.fieldData, a36), innerHTML: n32 }));
  }
  renderFields() {
    const { formattedFieldInfos: e24 } = this.viewModel;
    return (e24 == null ? void 0 : e24.length) ? n5("table", { class: u7.esriTable, summary: this.messages.fieldsSummary }, n5("tbody", null, e24.map((e25, t32) => this.renderFieldInfo(e25, t32)))) : null;
  }
  render() {
    var _a;
    return n5("div", { class: u7.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderFields());
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e24, title: t32 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e24, title: t32 });
  }
  _forceLTR(e24) {
    return `&lrm;${e24}`;
  }
};
e2([y2()], m9.prototype, "attributes", null), e2([y2()], m9.prototype, "description", null), e2([y2()], m9.prototype, "expressionInfos", null), e2([y2()], m9.prototype, "fieldInfos", null), e2([y2()], m9.prototype, "title", null), e2([y2({ type: n13, nonNullable: true })], m9.prototype, "viewModel", void 0), e2([y2(), e4("esri/widgets/Feature/t9n/Feature")], m9.prototype, "messages", void 0), e2([y2(), e4("esri/widgets/support/t9n/uriUtils")], m9.prototype, "messagesURIUtils", void 0), m9 = e2([a3("esri.widgets.Feature.FeatureFields")], m9);
var c16 = m9;

// node_modules/@arcgis/core/renderers/support/numberUtils.js
var s14 = { maximumFractionDigits: 20 };
function c17(n32) {
  return m(n32, s14);
}

// node_modules/@arcgis/core/widgets/Legend/support/utils.js
var s15 = "<";
var i15 = ">";
var r14 = S("short-date");
function o10(l27, a36, o30, n32) {
  let e24 = "";
  0 === a36 ? e24 = `${s15} ` : a36 === o30 && (e24 = `${i15} `);
  let u24 = null;
  return u24 = n32 ? L2(l27, r14) : c17(l27), e24 + u24;
}

// node_modules/@arcgis/core/widgets/Legend/support/colorRampUtils.js
var o11 = new l4([64, 64, 64]);
function n14(l27, o30) {
  const n32 = [], r28 = l27.length - 1;
  return 5 === l27.length ? n32.push(0, 2, 4) : n32.push(0, r28), l27.map((l28, t32) => n32.includes(t32) ? o10(l28, t32, r28, o30) : null);
}
async function r15(l27, e24, o30) {
  let r28 = false, a36 = [], u24 = [];
  if (l27.stops) {
    const e25 = l27.stops;
    a36 = e25.map((l28) => l28.value), r28 = e25.some((l28) => !!l28.label), r28 && (u24 = e25.map((l28) => l28.label));
  }
  const s29 = a36[0], i37 = a36[a36.length - 1];
  if (null == s29 && null == i37)
    return null;
  const c39 = r28 ? null : n14(a36, o30 ?? false);
  return (await Promise.all(a36.map(async (o31, n32) => ({ value: o31, color: "opacity" === l27.type ? await t12(o31, l27, e24) : (await import("./visualVariableUtils-RQPYOUB4.js")).getColor(l27, o31), label: r28 ? u24[n32] : (c39 == null ? void 0 : c39[n32]) ?? "" })))).reverse();
}
async function t12(e24, n32, r28 = o11) {
  const t32 = new l4(r28), a36 = (await import("./visualVariableUtils-RQPYOUB4.js")).getOpacity(n32, e24);
  return null != a36 && (t32.a = a36), t32;
}

// node_modules/@arcgis/core/widgets/Legend/support/heatmapRampUtils.js
function r16(r28) {
  if (!r28.colorStops)
    return [];
  const e24 = [...r28.colorStops].filter((o30) => {
    var _a;
    return ((_a = o30.color) == null ? void 0 : _a.a) > 0;
  });
  let t32 = e24.length - 1;
  if (e24 && e24[0]) {
    const r29 = e24[t32];
    r29 && 1 !== r29.ratio && (e24.push(new a10({ ratio: 1, color: r29.color })), t32++);
  }
  return e24.map((o30, e25) => {
    var _a, _b;
    let l27 = "";
    return 0 === e25 ? l27 = ((_a = r28.legendOptions) == null ? void 0 : _a.minLabel) || "low" : e25 === t32 && (l27 = ((_b = r28.legendOptions) == null ? void 0 : _b.maxLabel) || "high"), { color: o30.color, label: l27, ratio: o30.ratio };
  }).reverse();
}

// node_modules/@arcgis/core/renderers/support/utils.js
var m11 = s2.getLogger("esri.renderers.support.utils");
var g6 = S("short-date");
async function h7(e24, t32, i37) {
  r3(e24, t32, () => []).push(...i37);
}
async function b6(t32) {
  var _a, _b;
  const l27 = /* @__PURE__ */ new Map();
  if (!t32)
    return l27;
  if ("visualVariables" in t32 && t32.visualVariables) {
    const e24 = t32.visualVariables.filter((e25) => "color" === e25.type);
    for (const t33 of e24) {
      const e25 = (await r15(t33) ?? []).map((e26) => e26.color);
      await h7(l27, t33.field || t33.valueExpression, e25);
    }
  }
  if ("heatmap" === t32.type) {
    const e24 = r16(t32).map((e25) => e25.color);
    await h7(l27, t32.field || t32.valueExpression, e24);
  } else if ("pie-chart" === t32.type) {
    for (const e24 of t32.attributes)
      await h7(l27, e24.field || e24.valueExpression, [e24.color]);
    await h7(l27, "default", [(_a = t32 == null ? void 0 : t32.othersCategory) == null ? void 0 : _a.color, j6(t32.backgroundFillSymbol, null)]);
  } else if ("dot-density" === t32.type) {
    for (const e24 of t32.attributes)
      await h7(l27, e24.field || e24.valueExpression, [e24.color]);
    await h7(l27, "default", [t32.backgroundColor]);
  } else if ("unique-value" === t32.type)
    if ("predominance" === ((_b = t32.authoringInfo) == null ? void 0 : _b.type))
      for (const e24 of t32.uniqueValueInfos ?? [])
        await h7(l27, e24.value.toString(), [j6(e24.symbol, null)]);
    else {
      const e24 = (t32.uniqueValueInfos ?? []).map((e25) => j6(e25.symbol, null)), { field: i37, field2: o30, field3: n32, valueExpression: a36 } = t32;
      (i37 || a36) && await h7(l27, i37 || a36, e24), o30 && await h7(l27, o30, e24), n32 && await h7(l27, n32, e24);
    }
  else if ("class-breaks" === t32.type) {
    const e24 = t32.classBreakInfos.map((e25) => j6(e25.symbol, null)), { field: i37, valueExpression: o30 } = t32;
    await h7(l27, i37 ?? o30, e24);
  } else
    "simple" === t32.type && await h7(l27, "default", [j6(t32.symbol, null)]);
  return "defaultSymbol" in t32 && t32.defaultSymbol && await h7(l27, "default", [j6(t32.defaultSymbol, null)]), l27.forEach((t33, i37) => {
    const o30 = u(t33.filter(Boolean), (e24, t34) => JSON.stringify(e24) === JSON.stringify(t34));
    l27.set(i37, o30);
  }), l27;
}

// node_modules/@arcgis/core/widgets/Feature/support/relatedFeatureUtils.js
var c18 = "esri.widgets.Feature.support.relatedFeatureUtils";
var f8 = s2.getLogger(c18);
var d6 = /* @__PURE__ */ new Map();
function m12(e24) {
  if (!ue(e24))
    return null;
  const [t32, r28] = e24.split("/").slice(1);
  return { layerId: t32, fieldName: r28 };
}
function y6(e24, t32) {
  if (!t32.relationships)
    return null;
  let r28 = null;
  const { relationships: s29 } = t32;
  return s29.some((t33) => t33.id === parseInt(e24, 10) && (r28 = t33, true)), r28;
}
function j8({ originRelationship: e24, relationships: t32, layerId: r28 }) {
  let s29 = null;
  return t32 && t32.some((t33) => (`${t33.relatedTableId}` === r28 && t33.id === (e24 == null ? void 0 : e24.id) && (s29 = t33), !!s29)), s29;
}
function h8(e24, t32) {
  const r28 = t32.toLowerCase();
  for (const s29 in e24)
    if (s29.toLowerCase() === r28)
      return e24[s29];
  return null;
}
function g7(e24, t32) {
  const r28 = y6(e24, t32);
  if (!r28)
    return;
  return { url: `${t32.url}/${r28.relatedTableId}`, sourceSpatialReference: t32.spatialReference, relation: r28, relatedFields: [], outStatistics: [] };
}
function F4(e24, t32) {
  if (!t32)
    return;
  if (!e24)
    return;
  const { features: r28, statsFeatures: s29 } = e24, o30 = r28 && r28.value;
  t32.relatedFeatures = o30 ? o30.features : [];
  const i37 = s29 && s29.value;
  t32.relatedStatsFeatures = i37 ? i37.features : [];
}
function I3(e24, t32, r28, s29) {
  var _a;
  const o30 = new d3();
  return o30.outFields = ["*"], o30.relationshipId = "number" == typeof t32.id ? t32.id : parseInt(t32.id, 10), o30.objectIds = [e24.attributes[r28.objectIdField]], ((_a = r28.queryRelatedFeatures) == null ? void 0 : _a.call(r28, o30, s29)) ?? Promise.resolve({});
}
function S5(e24, t32, r28) {
  let s29 = 0;
  const o30 = [];
  for (; s29 < t32.length; )
    o30.push(`${e24} IN (${t32.slice(s29, r28 + s29)})`), s29 += r28;
  return o30.join(" OR ");
}
async function w10(e24, t32, r28, s29) {
  const l27 = r28.layerId.toString(), { layerInfo: u24, relation: p33, relatedFields: c39, outStatistics: f19, url: d18, sourceSpatialReference: m27 } = t32;
  if (!u24 || !p33)
    return null;
  const y17 = j8({ originRelationship: p33, relationships: u24.relationships, layerId: l27 });
  if ((y17 == null ? void 0 : y17.relationshipTableId) && y17.keyFieldInRelationshipTable) {
    const t33 = (await I3(e24, y17, r28, s29))[e24.attributes[r28.objectIdField]];
    if (!t33)
      return null;
    const i37 = t33.features.map((e25) => e25.attributes[u24.objectIdField]);
    if ((f19 == null ? void 0 : f19.length) && u24.supportsStatistics) {
      const e25 = new x();
      e25.where = S5(u24.objectIdField, i37, 1e3), e25.outFields = c39, e25.outStatistics = f19, e25.sourceSpatialReference = m27;
      const r29 = { features: Promise.resolve(t33), statsFeatures: s10(d18, e25) };
      return E(r29);
    }
  }
  const g18 = y17 == null ? void 0 : y17.keyField;
  if (g18) {
    const r29 = ie(T4(u24.fields, g18)), l28 = h8(e24.attributes, p33.keyField), c40 = r29 ? `${g18}=${l28}` : `${g18}='${l28}'`, f20 = s10(d18, new x({ where: c40, outFields: t32.relatedFields, sourceSpatialReference: m27 }), s29), y18 = t32.outStatistics && t32.outStatistics.length > 0 && u24.supportsStatistics ? s10(d18, new x({ where: c40, outFields: t32.relatedFields, outStatistics: t32.outStatistics, sourceSpatialReference: m27 }), s29) : null, j12 = { features: f20 };
    return y18 && (j12.statsFeatures = y18), E(j12);
  }
  return null;
}
function b7(t32, r28) {
  return U3(t32, { query: { f: "json" }, signal: r28 && r28.signal });
}
function R5({ relatedInfos: e24, layer: r28 }, i37) {
  const n32 = {};
  return e24.forEach((e25, s29) => {
    const { relation: o30 } = e25;
    if (!o30) {
      const e26 = new s3("relation-required", "A relation is required on a layer to retrieve related records.");
      throw f8.error(e26), e26;
    }
    const { relatedTableId: i38 } = o30;
    if ("number" != typeof i38) {
      const e26 = new s3("A related table ID is required on a layer to retrieve related records.");
      throw f8.error(e26), e26;
    }
    const a36 = `${r28.url}/${i38}`, l27 = d6.get(a36), u24 = l27 || b7(a36);
    l27 || d6.set(a36, u24), n32[s29] = u24;
  }), y(E(n32), i37);
}
function $2({ graphic: e24, relatedInfos: t32, layer: r28 }, s29) {
  const i37 = {};
  return t32.forEach((t33, o30) => {
    t33.layerInfo && (i37[o30] = w10(e24, t33, r28, s29));
  }), E(i37);
}
function U6({ relatedInfo: e24, fieldName: t32, fieldInfo: r28 }) {
  var _a, _b;
  if ((_a = e24.relatedFields) == null ? void 0 : _a.push(t32), r28.statisticType) {
    const s29 = new m4({ statisticType: r28.statisticType, onStatisticField: t32, outStatisticFieldName: t32 });
    (_b = e24.outStatistics) == null ? void 0 : _b.push(s29);
  }
}
function T4(e24, t32) {
  if (null != e24) {
    t32 = t32.toLowerCase();
    for (const r28 of e24)
      if (r28 && r28.name.toLowerCase() === t32)
        return r28;
  }
  return null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia/FeatureMediaViewModel.js
var I4 = { chartAnimation: true };
var v11 = class extends v3 {
  constructor(t32) {
    super(t32), this.abilities = { ...I4 }, this.activeMediaInfoIndex = 0, this.attributes = null, this.description = null, this.fieldInfoMap = null, this.formattedAttributes = null, this.expressionAttributes = null, this.isAggregate = false, this.layer = null, this.mediaInfos = null, this.popupTemplate = null, this.relatedInfos = null, this.title = null;
  }
  castAbilities(t32) {
    return { ...I4, ...t32 };
  }
  get activeMediaInfo() {
    return this.formattedMediaInfos[this.activeMediaInfoIndex] || null;
  }
  get formattedMediaInfos() {
    return this._formatMediaInfos() || [];
  }
  get formattedMediaInfoCount() {
    return this.formattedMediaInfos.length;
  }
  setActiveMedia(t32) {
    this._setContentElementMedia(t32);
  }
  next() {
    this._pageContentElementMedia(1);
  }
  previous() {
    this._pageContentElementMedia(-1);
  }
  _setContentElementMedia(t32) {
    const { formattedMediaInfoCount: e24 } = this, i37 = (t32 + e24) % e24;
    this.activeMediaInfoIndex = i37;
  }
  _pageContentElementMedia(t32) {
    const { activeMediaInfoIndex: e24 } = this, i37 = e24 + t32;
    this._setContentElementMedia(i37);
  }
  _formatMediaInfos() {
    const { mediaInfos: t32, layer: e24 } = this, o30 = this.attributes ?? {}, r28 = this.formattedAttributes ?? {}, a36 = this.expressionAttributes ?? {}, s29 = this.fieldInfoMap ?? /* @__PURE__ */ new Map();
    return (t32 == null ? void 0 : t32.map((t33) => {
      const i37 = t33 == null ? void 0 : t33.clone();
      if (!i37)
        return null;
      if (i37.title = S4({ attributes: o30, fieldInfoMap: s29, globalAttributes: r28, expressionAttributes: a36, layer: e24, text: i37.title }), i37.caption = S4({ attributes: o30, fieldInfoMap: s29, globalAttributes: r28, expressionAttributes: a36, layer: e24, text: i37.caption }), i37.altText = S4({ attributes: o30, fieldInfoMap: s29, globalAttributes: r28, expressionAttributes: a36, layer: e24, text: i37.altText }), "image" === i37.type) {
        const { value: t34 } = i37;
        return this._setImageValue({ value: t34, formattedAttributes: r28, layer: e24 }), i37.value.sourceURL ? i37 : void 0;
      }
      if ("pie-chart" === i37.type || "line-chart" === i37.type || "column-chart" === i37.type || "bar-chart" === i37.type) {
        const { value: t34 } = i37;
        return this._setChartValue({ value: t34, chartType: i37.type, attributes: o30, formattedAttributes: r28, layer: e24, expressionAttributes: a36 }), i37;
      }
      return null;
    }).filter(r)) ?? [];
  }
  _setImageValue(t32) {
    const e24 = this.fieldInfoMap ?? /* @__PURE__ */ new Map(), { value: i37, formattedAttributes: o30, layer: r28 } = t32, { linkURL: a36, sourceURL: s29 } = i37;
    if (s29) {
      const t33 = _3(s29, r28);
      i37.sourceURL = G({ formattedAttributes: o30, template: t33, fieldInfoMap: e24 });
    }
    if (a36) {
      const t33 = _3(a36, r28);
      i37.linkURL = G({ formattedAttributes: o30, template: t33, fieldInfoMap: e24 });
    }
  }
  _setChartValue(t32) {
    const { value: e24, attributes: i37, formattedAttributes: o30, chartType: r28, layer: a36, expressionAttributes: s29 } = t32, { popupTemplate: l27, relatedInfos: n32 } = this, { fields: p33, normalizeField: d18 } = e24, c39 = a36;
    e24.fields = U5(p33, c39), d18 && (e24.normalizeField = L4(d18, c39));
    if (!p33.some((t33) => !!(null != o30[t33] || ue(t33) && (n32 == null ? void 0 : n32.size))))
      return;
    const h23 = (l27 == null ? void 0 : l27.fieldInfos) ?? [];
    p33.forEach((t33) => {
      if (ue(t33))
        return void (e24.series = [...e24.series, ...this._getRelatedChartInfos({ fieldInfos: h23, fieldName: t33, formattedAttributes: o30, chartType: r28, value: e24 })]);
      const a37 = this._getChartOption({ value: e24, attributes: i37, chartType: r28, formattedAttributes: o30, expressionAttributes: s29, fieldName: t33, fieldInfos: h23 });
      e24.series.push(a37);
    });
  }
  _getRelatedChartInfos(t32) {
    var _a;
    const { fieldInfos: e24, fieldName: i37, formattedAttributes: o30, chartType: r28, value: a36 } = t32, s29 = [], l27 = m12(i37), n32 = l27 && ((_a = this.relatedInfos) == null ? void 0 : _a.get(l27.layerId.toString()));
    if (!n32)
      return s29;
    const { relatedFeatures: p33, relation: d18 } = n32;
    if (!d18 || !p33)
      return s29;
    const { cardinality: u24 } = d18;
    p33.forEach((t33) => {
      const { attributes: n33 } = t33;
      n33 && Object.keys(n33).forEach((t34) => {
        t34 === l27.fieldName && s29.push(this._getChartOption({ value: a36, attributes: n33, formattedAttributes: o30, fieldName: i37, chartType: r28, relatedFieldName: t34, hasMultipleRelatedFeatures: (p33 == null ? void 0 : p33.length) > 1, fieldInfos: e24 }));
      });
    });
    return "one-to-many" === u24 || "many-to-many" === u24 ? s29 : [s29[0]];
  }
  _getTooltip({ label: t32, value: e24, chartType: i37 }) {
    return "pie-chart" === i37 ? `${t32}` : `${t32}: ${e24}`;
  }
  _getChartOption(t32) {
    var _a;
    const { value: e24, attributes: i37, formattedAttributes: o30, expressionAttributes: r28, fieldName: a36, relatedFieldName: n32, fieldInfos: p33, chartType: d18, hasMultipleRelatedFeatures: u24 } = t32, I7 = this.layer, v16 = this.fieldInfoMap ?? /* @__PURE__ */ new Map(), { normalizeField: M8, tooltipField: A9 } = e24, g18 = M8 ? ue(M8) ? i37[m12(M8).fieldName] : i37[M8] : null, x4 = M3(a36) && r28 && void 0 !== r28[a36] ? r28[a36] : n32 && void 0 !== i37[n32] ? i37[n32] : void 0 !== i37[a36] ? i37[a36] : o30[a36], _10 = new i9({ fieldName: a36, value: void 0 === x4 ? null : x4 && g18 ? x4 / g18 : x4 });
    if (ue(a36)) {
      const t33 = v16.get(a36.toLowerCase()), e25 = A9 && v16.get(A9.toLowerCase()), r29 = (t33 == null ? void 0 : t33.fieldName) ?? a36, s29 = u24 && A9 ? m12(A9).fieldName : (e25 == null ? void 0 : e25.fieldName) ?? A9, l27 = u24 && s29 ? i37[s29] : o30[s29] ?? (t33 == null ? void 0 : t33.label) ?? (t33 == null ? void 0 : t33.fieldName) ?? n32, p34 = u24 && n32 ? i37[n32] : o30[r29];
      return _10.tooltip = this._getTooltip({ label: l27, value: p34, chartType: d18 }), _10;
    }
    const C10 = J3(p33, a36), T7 = L4(a36, I7), N5 = A9 && void 0 !== o30[A9] ? o30[A9] : R4(C10 || new c5({ fieldName: T7 }), (_a = this.popupTemplate) == null ? void 0 : _a.expressionInfos), F8 = o30[T7];
    return _10.tooltip = this._getTooltip({ label: N5, value: F8, chartType: d18 }), _10;
  }
};
e2([y2()], v11.prototype, "abilities", void 0), e2([s4("abilities")], v11.prototype, "castAbilities", null), e2([y2()], v11.prototype, "activeMediaInfoIndex", void 0), e2([y2({ readOnly: true })], v11.prototype, "activeMediaInfo", null), e2([y2()], v11.prototype, "attributes", void 0), e2([y2()], v11.prototype, "description", void 0), e2([y2()], v11.prototype, "fieldInfoMap", void 0), e2([y2()], v11.prototype, "formattedAttributes", void 0), e2([y2()], v11.prototype, "expressionAttributes", void 0), e2([y2({ readOnly: true })], v11.prototype, "formattedMediaInfos", null), e2([y2()], v11.prototype, "isAggregate", void 0), e2([y2()], v11.prototype, "layer", void 0), e2([y2({ readOnly: true })], v11.prototype, "formattedMediaInfoCount", null), e2([y2()], v11.prototype, "mediaInfos", void 0), e2([y2()], v11.prototype, "popupTemplate", void 0), e2([y2()], v11.prototype, "relatedInfos", void 0), e2([y2()], v11.prototype, "title", void 0), v11 = e2([a3("esri.widgets.Feature.FeatureMedia.FeatureMediaViewModel")], v11);
var M4 = v11;

// node_modules/@esri/calcite-colors/dist/colors.module.js
var f9 = ["#ffffff", "#858585", "#ffbebe", "#ffebbe", "#ffebaf", "#ffffbe", "#e9ffbe", "#d3ffbe", "#beffe8", "#bee8ff", "#bed2ff", "#e8beff", "#ffbee8", "#ebebeb", "#707070", "#ff7f7f", "#ffa77f", "#ffd37f", "#ffff73", "#d1ff73", "#a3ff73", "#73ffdf", "#73dfff", "#73b2ff", "#df73ff", "#ff73df", "#d6d6d6", "#5c5c5c", "#ff0000", "#ff5500", "#ffaa00", "#ffff00", "#aaff00", "#55ff00", "#00ffc5", "#00c5ff", "#0070ff", "#c500ff", "#ff00c5", "#c2c2c2", "#474747", "#e60000", "#e64c00", "#e69800", "#e6e600", "#98e600", "#4ce600", "#00e6a9", "#00a9e6", "#005ce6", "#a900e6", "#e600a9", "#adadad", "#242424", "#a80000", "#a83800", "#a87000", "#a8a800", "#70a800", "#38a800", "#00a884", "#0084a8", "#004da8", "#8400a8", "#a80084", "#999999", "#1a1a1a", "#730000", "#732600", "#734c00", "#737300", "#4c7300", "#267300", "#00734c", "#004c73", "#002673", "#4c0073", "#73004"];
var b8 = [].concat(f9.slice(30, 39), f9.slice(28, 30).reverse());
var e13 = [{ name: "default", colors: b8 }, { name: "cat-dark", colors: ["#ed5151", "#149ece", "#a7c636", "#9e559c", "#fc921f", "#ffde3e", "#f789d8", "#b7814a", "#3caf99", "#6b6bd6", "#b54779", "#7f7f7f"] }, { name: "tropical-bliss", colors: ["#fce138", "#ff9399", "#fcd27e", "#f1983c", "#a553b7", "#b1a9d0", "#6ecffc", "#4c81cd", "#fc6f84", "#fc3e5a", "#6af689", "#48885c"] }, { name: "desert-blooms", colors: ["#102432", "#144d59", "#ffc730", "#ed9310", "#a64f1b", "#661510", "#d9351a", "#b31515", "#4a0932", "#8c213f", "#18382e", "#2c6954"] }, { name: "under-the-sea", colors: ["#bf9727", "#607100", "#00734c", "#704489", "#01acca", "#024e76", "#f09100", "#ea311f", "#c6004b", "#7570b3", "#666666", "#333333"] }, { name: "vibrant-rainbow", colors: ["#fffb00", "#f5cb11", "#9fd40c", "#46e39c", "#32b8a6", "#7ff2fa", "#ac08cc", "#dd33ff", "#eb7200", "#e8a784", "#bf2e2e", "#6c7000"] }, { name: "ocean-bay", colors: ["#191921", "#11495c", "#78b1c2", "#454f4b", "#8f8f82", "#9be0c0", "#87b051", "#f7ec88", "#ebdcc1", "#dbb658", "#c43541", "#75351e"] }, { name: "prairie-summer", colors: ["#332424", "#751555", "#d47013", "#d68989", "#211173", "#82aad6", "#7bfaeb", "#6ec9a8", "#6b6408", "#eada40", "#ccc54a", "#1fc235"] }, { name: "pastel-chalk", colors: ["#fffd99", "#f5e6a4", "#c1d48c", "#b8e3d0", "#a0b8b5", "#cbf7fa", "#d791f2", "#dfc1eb", "#f2b983", "#e8c4b2", "#bf8e8e", "#94995c"] }, { name: "seq-yellow-orange-red-bright", colors: ["#910000", "#b1260b", "#c0370f", "#e05919", "#ef6a1d", "#ff7b22", "#ffa143", "#ffb454", "#ffda74", "#ffed85"] }, { name: "seq-reds-bright", colors: ["#57453b", "#7b4238", "#9f4036", "#c23d33", "#d7483c", "#ec5244", "#f3696c", "#f9816c", "#ffc4ae", "#fff0dc"] }, { name: "seq-purples-bright", colors: ["#4e465c", "#5a4a78", "#695291", "#775baa", "#8663c3", "#946bdc", "#aa89e8", "#c1a6f3", "#d7c4ff", "#e6e1ff"] }, { name: "seq-blues-bright", colors: ["#404d54", "#435c6c", "#48799d", "#4b88b6", "#4d96ce", "#50a5e7", "#74bbed", "#98d0f3", "#bce6f9", "#e6faff"] }, { name: "seq-greens-bright", colors: ["#39544c", "#386757", "#368165", "#359b73", "#33b581", "#4bc392", "#64d2a2", "#7ce0b3", "#cbf6d9", "#f4ffea"] }, { name: "seq-browns-bright", colors: ["#524834", "#715b38", "#8f6e3c", "#ae8140", "#cc9444", "#eba748", "#eeb664", "#f0c47f", "#f9e0b7", "#fff8eb"] }];

// node_modules/@arcgis/core/widgets/support/chartUtils.js
var n15 = "en-us";
var h9 = /* @__PURE__ */ new Map([["ar", () => import("./ar-BGFGEL7W.js").then((t32) => t32.a)], ["bg-bg", () => import("./bg_BG-62PLDPBL.js").then((t32) => t32.b)], ["bs-ba", () => import("./bs_BA-57U77JVZ.js").then((t32) => t32.b)], ["ca-es", () => import("./ca_ES-QSHMZC7N.js").then((t32) => t32.c)], ["cs-cz", () => import("./cs_CZ-T7IZ4SFV.js").then((t32) => t32.c)], ["da-dk", () => import("./da_DK-43KVNS6F.js").then((t32) => t32.d)], ["de-de", () => import("./de_DE-NS7J2Q2D.js").then((t32) => t32.d)], ["de-ch", () => import("./de_CH-Y47NMXNW.js").then((t32) => t32.d)], ["el-gr", () => import("./el_GR-4D4JRD35.js").then((t32) => t32.e)], ["en-us", () => import("./en_US-KUIOWP3J.js").then((t32) => t32.e)], ["en-ca", () => import("./en_CA-53OUJ7SA.js").then((t32) => t32.e)], ["es-es", () => import("./es_ES-5GH3JUXS.js").then((t32) => t32.e)], ["et-ee", () => import("./et_EE-4GJAPSEL.js").then((t32) => t32.e)], ["fi-fi", () => import("./fi_FI-MUJYVHYC.js").then((t32) => t32.f)], ["fr-fr", () => import("./fr_FR-4J4IQCPE.js").then((t32) => t32.f)], ["he-il", () => import("./he_IL-YGJELEB6.js").then((t32) => t32.h)], ["hr-hr", () => import("./hr_HR-6FICPG3C.js").then((t32) => t32.h)], ["hu-hu", () => import("./hu_HU-AYLFTFEO.js").then((t32) => t32.h)], ["id-id", () => import("./id_ID-BEOP3EFQ.js").then((t32) => t32.i)], ["it-it", () => import("./it_IT-YXV7KS3R.js").then((t32) => t32.i)], ["ja-jp", () => import("./ja_JP-RVF4F3JH.js").then((t32) => t32.j)], ["ko-kr", () => import("./ko_KR-D5ITH5PV.js").then((t32) => t32.k)], ["lt-lt", () => import("./lt_LT-IKCWCLCK.js").then((t32) => t32.l)], ["lv-lv", () => import("./lv_LV-SCUCJZJZ.js").then((t32) => t32.l)], ["nb-no", () => import("./nb_NO-TPJKQ6EK.js").then((t32) => t32.n)], ["nl-nl", () => import("./nl_NL-QNE5EKTS.js").then((t32) => t32.n)], ["pl-pl", () => import("./pl_PL-5S6ACOXU.js").then((t32) => t32.p)], ["pt-br", () => import("./pt_BR-C7FJ2JXO.js").then((t32) => t32.p)], ["pt-pt", () => import("./pt_PT-G4GRJCBK.js").then((t32) => t32.p)], ["ro-ro", () => import("./ro_RO-G5WSHCHP.js").then((t32) => t32.r)], ["ru-ru", () => import("./ru_RU-RL3HHICE.js").then((t32) => t32.r)], ["sk-sk", () => import("./sk_SK-OYJK5YLT.js").then((t32) => t32.s)], ["sl-sl", () => import("./sl_SL-N5W37FWI.js").then((t32) => t32.s)], ["sr-rs", () => import("./sr_RS-5H6GQ7SF.js").then((t32) => t32.s)], ["sv-se", () => import("./sv_SE-QDD6BBKI.js").then((t32) => t32.s)], ["th-th", () => import("./th_TH-JJF2RWQT.js").then((t32) => t32.t)], ["tr-tr", () => import("./tr_TR-KA2BJKMC.js").then((t32) => t32.t)], ["uk-ua", () => import("./uk_UA-RA22PS7C.js").then((t32) => t32.u)], ["vi-vn", () => import("./vi_VN-HQWNIF5Y.js").then((t32) => t32.v)], ["zh-cn", () => import("./zh_Hans-6MKRRR5T.js").then((t32) => t32.z)], ["zh-hk", () => import("./zh_Hant-CI6OIZ32.js").then((t32) => t32.z)], ["zh-tw", () => import("./zh_Hant-CI6OIZ32.js").then((t32) => t32.z)]]);
function e14(t32) {
  const s29 = t32.split("-")[0].toLowerCase();
  let n32 = null;
  for (const e24 of h9.keys())
    if (e24.startsWith(s29)) {
      n32 = e24;
      break;
    }
  return n32;
}
function r17(t32) {
  return t32 ? h9.has(t32.toLowerCase()) ? t32.toLowerCase() : e14(t32) || n15 : n15;
}
var o12 = null;
var i16 = null;
async function u9(t32 = l2()) {
  if (t32 = r17(t32), o12 && t32 === i16)
    return o12;
  o12 = import("./chunks-WJOHYVS6.js").then((t33) => t33.i), i16 = t32;
  try {
    const [s29, n32] = await Promise.all([o12, h9.get(i16)()]);
    i16 === t32 && (s29.am4core.options.defaultLocale = n32.default), s29.am4core.options.suppressWarnings = true, s29.am4core.options.autoDispose = true;
  } catch {
    return o12 = null, i16 = null, null;
  }
  return o12;
}
function c19(s29, n32 = "default") {
  const h23 = e13.find((t32) => t32.name === n32);
  return h23 ? h23.colors.map((t32) => s29.color(t32)) : null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia.js
var M5 = "esri-feature-media";
var I5 = { base: M5, mediaContainer: `${M5}__container`, mediaItemContainer: `${M5}__item-container`, mediaItem: `${M5}__item`, mediaItemTitle: `${M5}__item-title`, mediaItemCaption: `${M5}__item-caption`, mediaPrevious: `${M5}__previous`, mediaPreviousIconLTR: `${M5}__previous-icon`, mediaPreviousIconRTL: `${M5}__previous-icon--rtl`, mediaNext: `${M5}__next`, mediaNextIconLTR: `${M5}__next-icon`, mediaNextIconRTL: `${M5}__next-icon--rtl`, mediaChart: `${M5}__chart`, mediaButton: `${M5}__button`, mediaIcon: `${M5}__icon`, iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow" };
var _4 = 0.05;
var g8 = 0.95;
var w11 = 15;
var y7 = "color";
var T5 = "tooltip";
var b9 = "value";
var C3 = "default-line-value";
var x3 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this._refreshTimer = null, this._refreshIntervalInfo = null, this._featureElementInfo = null, this.viewModel = new M4(), this.messages = null, this._getChartDependencies = async (e25) => {
      const t33 = await u9(), { destroyed: i37, viewModel: r28 } = this;
      if (i37 || !r28 || !e25)
        return;
      const { activeMediaInfo: s29 } = r28, a36 = await this._getRendererColors(t33);
      this._renderChart({ chartDiv: e25, mediaInfo: s29, chartsModule: t33, colorMap: a36 });
    };
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles([l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.activeMediaInfo, (_b = this.viewModel) == null ? void 0 : _b.activeMediaInfoIndex];
    }, () => this._setupMediaRefreshTimer(), h), l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h)]);
  }
  destroy() {
    var _a;
    this._clearMediaRefreshTimer(), (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e24) {
    this.viewModel.attributes = e24;
  }
  get activeMediaInfoIndex() {
    return this.viewModel.activeMediaInfoIndex;
  }
  set activeMediaInfoIndex(e24) {
    this.viewModel.activeMediaInfoIndex = e24;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e24) {
    this.viewModel.description = e24;
  }
  get fieldInfoMap() {
    return this.viewModel.fieldInfoMap;
  }
  set fieldInfoMap(e24) {
    this.viewModel.fieldInfoMap = e24;
  }
  get layer() {
    return this.viewModel.layer;
  }
  set layer(e24) {
    this.viewModel.layer = e24;
  }
  get mediaInfos() {
    return this.viewModel.mediaInfos;
  }
  set mediaInfos(e24) {
    this.viewModel.mediaInfos = e24;
  }
  get popupTemplate() {
    return this.viewModel.popupTemplate;
  }
  set popupTemplate(e24) {
    this.viewModel.popupTemplate = e24;
  }
  get relatedInfos() {
    return this.viewModel.relatedInfos;
  }
  set relatedInfos(e24) {
    this.viewModel.relatedInfos = e24;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e24) {
    this.viewModel.title = e24;
  }
  render() {
    var _a;
    return n5("div", { bind: this, class: I5.base, onkeyup: this._handleMediaKeyup }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderMedia());
  }
  renderMedia() {
    const { formattedMediaInfoCount: e24 } = this.viewModel;
    return e24 ? n5("div", { key: "media-element-container", class: I5.mediaContainer }, this.renderMediaPageButton("previous"), this.renderMediaInfo(), this.renderMediaPageButton("next")) : null;
  }
  renderImageMediaInfo(e24) {
    const { _refreshIntervalInfo: t32 } = this, { activeMediaInfoIndex: i37, formattedMediaInfoCount: r28 } = this.viewModel, { value: s29, refreshInterval: a36, altText: o30, title: n32, type: l27 } = e24, { sourceURL: d18, linkURL: u24 } = s29, m27 = C2(u24 ?? void 0) ? "_blank" : "_self", h23 = "_blank" === m27 ? "noreferrer" : "", p33 = a36 ? t32 : null, v16 = p33 ? p33.timestamp : 0, M8 = p33 ? p33.sourceURL : d18, I7 = n5("img", { alt: o30 || n32, key: `media-${l27}-${i37}-${r28}-${v16}`, src: M8 ?? void 0 }), _10 = u24 ? n5("a", { title: n32, href: u24, rel: h23, target: m27 }, I7) : null;
    return _10 || I7;
  }
  renderChartMediaInfo(e24) {
    const { activeMediaInfoIndex: t32, formattedMediaInfoCount: i37 } = this.viewModel;
    return n5("div", { key: `media-${e24.type}-${t32}-${i37}`, bind: this, class: I5.mediaChart, afterCreate: this._getChartDependencies });
  }
  renderMediaInfoType() {
    const { activeMediaInfo: e24 } = this.viewModel;
    return e24 ? "image" === e24.type ? this.renderImageMediaInfo(e24) : e24.type.includes("chart") ? this.renderChartMediaInfo(e24) : null : null;
  }
  renderMediaInfo() {
    const { activeMediaInfo: e24 } = this.viewModel;
    if (!e24)
      return null;
    const t32 = e24.title ? n5("div", { key: "media-title", class: I5.mediaItemTitle, innerHTML: e24.title }) : null, i37 = e24.caption ? n5("div", { key: "media-caption", class: I5.mediaItemCaption, innerHTML: e24.caption }) : null;
    return n5("div", { key: "media-container", class: I5.mediaItemContainer }, n5("div", { key: "media-item-container", class: I5.mediaItem }, this.renderMediaInfoType()), t32, i37);
  }
  renderMediaPageButton(e24) {
    if (this.viewModel.formattedMediaInfoCount < 2)
      return null;
    const t32 = "previous" === e24, i37 = t32 ? this.messages.previous : this.messages.next, r28 = t32 ? this.classes(I5.mediaButton, I5.mediaPrevious) : this.classes(I5.mediaButton, I5.mediaNext), s29 = t32 ? this.classes(I5.mediaIcon, I5.mediaPreviousIconLTR, I5.iconLeftTriangleArrow) : this.classes(I5.mediaIcon, I5.mediaNextIconLTR, I5.iconRightTriangleArrow), a36 = t32 ? this.classes(I5.mediaIcon, I5.mediaPreviousIconRTL, I5.iconRightTriangleArrow) : this.classes(I5.mediaIcon, I5.mediaNextIconRTL, I5.iconLeftTriangleArrow), o30 = t32 ? "media-previous" : "media-next", n32 = t32 ? this._previous : this._next;
    return n5("button", { type: "button", key: o30, title: i37, "aria-label": i37, tabIndex: 0, class: r28, bind: this, onclick: n32 }, n5("span", { "aria-hidden": "true", class: s29 }), n5("span", { "aria-hidden": "true", class: a36 }));
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e24, title: t32 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e24, title: t32 });
  }
  _next() {
    this.viewModel.next();
  }
  _previous() {
    this.viewModel.previous();
  }
  _getRenderer() {
    const { isAggregate: e24, layer: t32 } = this.viewModel;
    return e24 && (t32 == null ? void 0 : t32.featureReduction) && "renderer" in t32.featureReduction ? t32.featureReduction.renderer : t32 == null ? void 0 : t32.renderer;
  }
  async _getRendererColors(e24) {
    const { am4core: t32 } = e24, i37 = /* @__PURE__ */ new Map(), r28 = this._getRenderer(), s29 = "default";
    if (!r28)
      return i37;
    const a36 = await b6(r28);
    a36.delete(s29);
    return Array.from(a36.values()).every((e25) => 1 === (e25 == null ? void 0 : e25.length)) ? (i37.set(C3, t32.color({ r: 50, g: 50, b: 50, a: 1 })), Array.from(a36.keys()).forEach((e25) => {
      var _a;
      e25 && i37.set(e25, t32.color((_a = a36.get(e25)) == null ? void 0 : _a[0].toCss(true)));
    }), i37) : i37;
  }
  _handleMediaKeyup(e24) {
    const i37 = i2(e24);
    "ArrowLeft" === i37 && (e24.stopPropagation(), this.viewModel.previous()), "ArrowRight" === i37 && (e24.stopPropagation(), this.viewModel.next());
  }
  _renderChart(e24) {
    const { abilities: t32 } = this.viewModel, { chartsModule: i37, chartDiv: r28, mediaInfo: s29, colorMap: a36 } = e24, { value: o30, type: n32 } = s29, { am4core: l27 } = i37, d18 = c19(l27);
    function c39(e25) {
      e25 instanceof l27.ColorSet && d18 && (e25.list = d18);
    }
    r7() && l27.useTheme(i37.am4themes_dark);
    const u24 = window.matchMedia("(prefers-reduced-motion: reduce)");
    t32.chartAnimation && !u24.matches ? l27.useTheme(i37.am4themes_animated) : l27.unuseTheme(i37.am4themes_animated), l27.useTheme(c39);
    const h23 = "pie-chart" === n32 ? this._createPieChart(e24) : this._createXYChart(e24);
    r28.setAttribute("aria-label", s29.altText || s29.title), h23.data = o30.series.map((e25) => ({ [T5]: e25.tooltip, [b9]: e25.value, [y7]: a36.get(e25.fieldName) })).filter((e25) => "pie-chart" !== n32 || null != e25.value && e25.value > 0);
  }
  _customizeChartTooltip(e24, t32) {
    e24 && (e24.label.wrap = true, e24.label.maxWidth = 200, e24.autoTextColor = false, e24.getFillFromObject = false, e24.label.fill = t32.color("#ffffff"), e24.background.fill = t32.color({ r: 0, g: 0, b: 0, a: 0.7 }));
  }
  _createPieChart(e24) {
    const { chartDiv: t32, chartsModule: i37 } = e24, { am4core: r28, am4charts: s29 } = i37, a36 = r28.create(t32, s29.PieChart);
    a36.rtl = f4(this.container);
    const o30 = a36.series.push(new s29.PieSeries());
    return o30.labels.template.disabled = true, o30.ticks.template.disabled = true, o30.dataFields.value = b9, o30.dataFields.category = T5, this._customizeChartTooltip(o30.tooltip, r28), o30.slices.template.propertyFields.fill = y7, o30.slices.template.propertyFields.stroke = y7, a36;
  }
  _getMinSeriesValue(e24) {
    let t32 = 0;
    return e24.forEach((e25) => t32 = Math.min(e25.value, t32)), t32;
  }
  _createColumnChart(e24, t32) {
    const { chartsModule: i37, mediaInfo: r28 } = t32, { value: s29 } = r28, { am4core: a36, am4charts: o30 } = i37, n32 = e24.xAxes.push(new o30.CategoryAxis());
    n32.dataFields.category = T5, n32.renderer.labels.template.disabled = true;
    const l27 = n32.tooltip;
    this._customizeChartTooltip(l27, a36), l27.events.on("sizechanged", () => {
      l27.dy = -l27.contentHeight;
    });
    const d18 = e24.yAxes.push(new o30.ValueAxis()), c39 = d18.renderer.labels.template;
    d18.renderer.minLabelPosition = _4, d18.renderer.maxLabelPosition = g8, d18.min = this._getMinSeriesValue(s29.series), this._customizeChartTooltip(d18.tooltip, a36), c39.wrap = true;
    const u24 = e24.series.push(new o30.ColumnSeries());
    u24.dataFields.valueY = b9, u24.dataFields.categoryX = T5, u24.columns.template.propertyFields.fill = y7, u24.columns.template.propertyFields.stroke = y7, e24.cursor = new o30.XYCursor(), s29.series.length > w11 && (e24.scrollbarX = new a36.Scrollbar());
  }
  _createBarChart(e24, t32) {
    const { chartsModule: i37, mediaInfo: r28 } = t32, { value: s29 } = r28, { am4core: a36, am4charts: o30 } = i37, n32 = e24.yAxes.push(new o30.CategoryAxis());
    n32.dataFields.category = T5, n32.renderer.inversed = true, n32.renderer.labels.template.disabled = true;
    const l27 = n32.tooltip;
    this._customizeChartTooltip(l27, a36), l27.events.on("sizechanged", () => {
      l27.dx = l27.contentWidth;
    });
    const d18 = e24.xAxes.push(new o30.ValueAxis()), c39 = d18.renderer.labels.template;
    d18.renderer.minLabelPosition = _4, d18.renderer.maxLabelPosition = g8, d18.min = this._getMinSeriesValue(s29.series), this._customizeChartTooltip(d18.tooltip, a36), c39.wrap = true;
    const u24 = e24.series.push(new o30.ColumnSeries());
    u24.dataFields.valueX = b9, u24.dataFields.categoryY = T5, u24.columns.template.propertyFields.fill = y7, u24.columns.template.propertyFields.stroke = y7, e24.cursor = new o30.XYCursor(), s29.series.length > w11 && (e24.scrollbarY = new a36.Scrollbar());
  }
  _createLineChart(e24, t32) {
    const { chartsModule: i37, mediaInfo: r28, colorMap: s29 } = t32, { value: a36 } = r28, { am4core: o30, am4charts: n32 } = i37, l27 = e24.xAxes.push(new n32.CategoryAxis());
    l27.dataFields.category = T5, l27.renderer.labels.template.disabled = true;
    const d18 = l27.tooltip;
    this._customizeChartTooltip(d18, o30), d18.events.on("sizechanged", () => {
      d18.dy = -d18.contentHeight;
    });
    const c39 = e24.yAxes.push(new n32.ValueAxis()), u24 = c39.renderer.labels.template;
    c39.renderer.minLabelPosition = _4, c39.renderer.maxLabelPosition = g8, c39.min = this._getMinSeriesValue(a36.series), this._customizeChartTooltip(c39.tooltip, o30), u24.wrap = true;
    const m27 = e24.series.push(new n32.LineSeries());
    m27.dataFields.categoryX = T5, m27.dataFields.valueY = b9, m27.strokeWidth = 1;
    const h23 = s29.get(C3);
    h23 && (m27.stroke = h23);
    const p33 = m27.bullets.push(new n32.CircleBullet());
    p33.propertyFields.fill = y7, p33.propertyFields.stroke = y7, e24.cursor = new n32.XYCursor(), a36.series.length > w11 && (e24.scrollbarX = new o30.Scrollbar());
  }
  _createXYChart(e24) {
    const { chartDiv: t32, chartsModule: i37, mediaInfo: r28 } = e24, { type: s29 } = r28, { am4core: a36, am4charts: o30 } = i37, n32 = a36.create(t32, o30.XYChart);
    return n32.rtl = f4(this.container), "column-chart" === s29 && this._createColumnChart(n32, e24), "bar-chart" === s29 && this._createBarChart(n32, e24), "line-chart" === s29 && this._createLineChart(n32, e24), n32;
  }
  _clearMediaRefreshTimer() {
    const { _refreshTimer: e24 } = this;
    e24 && (clearTimeout(e24), this._refreshTimer = null);
  }
  _updateMediaInfoTimestamp(e24) {
    const t32 = Date.now();
    this._refreshIntervalInfo = { timestamp: t32, sourceURL: e24 && this._getImageSource(e24, t32) }, this.scheduleRender();
  }
  _setupMediaRefreshTimer() {
    this._clearMediaRefreshTimer();
    const { activeMediaInfo: e24 } = this.viewModel;
    e24 && "image" === e24.type && e24.refreshInterval && this._setRefreshTimeout(e24);
  }
  _setRefreshTimeout(e24) {
    const { refreshInterval: t32, value: i37 } = e24;
    if (!t32)
      return;
    const r28 = 6e4 * t32;
    this._updateMediaInfoTimestamp(i37.sourceURL);
    const s29 = setInterval(() => {
      this._updateMediaInfoTimestamp(i37.sourceURL);
    }, r28);
    this._refreshTimer = s29;
  }
  _getImageSource(e24, t32) {
    const i37 = e24.includes("?") ? "&" : "?", [r28, s29 = ""] = e24.split("#");
    return `${r28}${i37}timestamp=${t32}${s29 ? "#" : ""}${s29}`;
  }
};
e2([y2()], x3.prototype, "attributes", null), e2([y2()], x3.prototype, "activeMediaInfoIndex", null), e2([y2()], x3.prototype, "description", null), e2([y2()], x3.prototype, "fieldInfoMap", null), e2([y2()], x3.prototype, "layer", null), e2([y2()], x3.prototype, "mediaInfos", null), e2([y2()], x3.prototype, "popupTemplate", null), e2([y2()], x3.prototype, "relatedInfos", null), e2([y2()], x3.prototype, "title", null), e2([y2({ type: M4 })], x3.prototype, "viewModel", void 0), e2([y2(), e4("esri/widgets/Feature/t9n/Feature")], x3.prototype, "messages", void 0), x3 = e2([a3("esri.widgets.Feature.FeatureMedia")], x3);
var R6 = x3;

// node_modules/@arcgis/core/widgets/Feature/support/arcadeFeatureUtils.js
var n16 = ["$datastore", "$map", "$layer", "$aggregatedfeatures"];
var s16 = "esri.widgets.Feature.support.arcadeFeatureUtils";
var o13 = s2.getLogger(s16);
function c20(e24) {
  return "string" == typeof e24 ? re(te(e24)) : Array.isArray(e24) ? p11(e24) : "esri.arcade.Dictionary" === (e24 == null ? void 0 : e24.declaredClass) ? l15(e24) : e24;
}
function p11(e24) {
  return `<ul class="esri-widget__list">${e24.map((e25) => `<li>${"string" == typeof e25 ? re(te(e25)) : e25}</li>`).join("")}</ul>`;
}
function l15(e24) {
  return `<table class="esri-widget__table">${e24.keys().map((r28) => {
    const t32 = e24.field(r28);
    return `<tr><th>${r28}</th><td>${"string" == typeof t32 ? re(te(t32)) : t32}</td></tr>`;
  }).join("")}</table>`;
}
function u10({ aggregatedFeatures: e24, arcadeUtils: r28, featureSetVars: a36, context: i37, viewInfo: n32, map: s29, graphic: o30, interceptor: c39 }) {
  a36.forEach((a37) => {
    const p33 = a37.toLowerCase(), l27 = n32.sr, u24 = { map: s29, spatialReference: l27, interceptor: c39 };
    if ("$map" === p33 && (i37.vars[p33] = r28.convertMapToFeatureSetCollection(u24)), "$layer" === p33 && (i37.vars[p33] = r28.convertFeatureLayerToFeatureSet({ layer: o30.sourceLayer, spatialReference: l27, interceptor: c39 })), "$datastore" === p33 && (i37.vars[p33] = r28.convertServiceUrlToWorkspace({ url: o30.sourceLayer.url, spatialReference: l27, interceptor: c39 })), "$aggregatedfeatures" === p33) {
      const a38 = o30.layer, { fields: n33, objectIdField: s30, geometryType: l28, spatialReference: u25, displayField: f19 } = a38, g18 = new He({ fields: n33, objectIdField: s30, geometryType: l28, spatialReference: u25, displayField: f19, ..."feature" === a38.type ? { templates: a38.templates, typeIdField: a38.typeIdField, types: a38.types } : null, source: e24 });
      i37.vars[p33] = r28.convertFeatureLayerToFeatureSet({ layer: g18, spatialReference: u25, interceptor: c39 });
    }
  });
}
function f10() {
  return import("./arcadeUtils-WZ44VHCI.js");
}
function g9(e24) {
  return "createQuery" in e24 && "queryFeatures" in e24;
}
async function y8({ graphic: e24, view: r28 }) {
  const { isAggregate: t32, layer: a36 } = e24;
  if (!t32 || !a36 || "2d" !== (r28 == null ? void 0 : r28.type))
    return [];
  const i37 = await r28.whenLayerView(a36);
  if (!g9(i37))
    return [];
  const n32 = i37.createQuery(), s29 = e24.getObjectId();
  n32.aggregateIds = null != s29 ? [s29] : [];
  const { features: o30 } = await i37.queryFeatures(n32);
  return o30;
}
async function d7({ expressionInfo: e24, arcadeUtils: r28, interceptor: t32, spatialReference: a36, map: i37, graphic: s29, view: c39 }) {
  if (!e24 || !e24.expression)
    return null;
  const p33 = r28.createSyntaxTree(e24.expression), l27 = n16.filter((e25) => r28.hasVariable(p33, e25)), [f19] = await Promise.all([y8({ graphic: s29, view: c39 }), r28.loadScriptDependencies(p33, true, l27)]), g18 = r28.getViewInfo({ spatialReference: a36 }), d18 = r28.createExecContext(s29, g18);
  d18.interceptor = t32, d18.useAsync = true, u10({ aggregatedFeatures: f19, arcadeUtils: r28, featureSetVars: l27, context: d18, viewInfo: g18, map: i37, graphic: s29, interceptor: t32 });
  const m27 = r28.createFunction(p33, d18);
  return r28.executeAsyncFunction(m27, d18).catch((r29) => o13.error("arcade-execution-error", { error: r29, graphic: s29, expressionInfo: e24 }));
}
async function m13({ expressionInfos: e24, spatialReference: t32, graphic: a36, interceptor: i37, map: n32, view: s29 }) {
  if (!e24 || !e24.length)
    return {};
  const o30 = await f10(), p33 = {};
  for (const r28 of e24)
    p33[`expression/${r28.name}`] = d7({ expressionInfo: r28, arcadeUtils: o30, interceptor: i37, spatialReference: t32, map: n32, graphic: a36, view: s29 });
  const l27 = await E(p33), u24 = {};
  for (const r28 in l27)
    u24[r28] = c20(l27[r28].value);
  return u24;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression/FeatureExpressionViewModel.js
var w12 = 1;
var j9 = class extends a9(v3) {
  constructor(t32) {
    super(t32), this._abortController = null, this.expressionInfo = null, this.graphic = null, this.contentElement = null, this.contentElementViewModel = null, this.interceptor = null, this.view = null, this._cancelQuery = () => {
      const { _abortController: t33 } = this;
      t33 && t33.abort(), this._abortController = null;
    }, this._createVM = () => {
      var _a, _b;
      const t33 = (_a = this.contentElement) == null ? void 0 : _a.type;
      (_b = this.contentElementViewModel) == null ? void 0 : _b.destroy();
      const e24 = "fields" === t33 ? new n13() : "media" === t33 ? new M4() : "text" === t33 ? new l12() : null;
      this._set("contentElementViewModel", e24);
    }, this._compile = async () => {
      this._cancelQuery();
      const t33 = new AbortController();
      this._abortController = t33, await this._compileExpression(), this._abortController === t33 && (this._abortController = null);
    }, this._compileThrottled = e9(this._compile, w12, this), this._compileExpression = async () => {
      const { expressionInfo: t33, graphic: e24, interceptor: o30, spatialReference: r28, map: n32, view: s29, _abortController: i37 } = this;
      if (!(t33 && e24 && r28 && n32))
        return void this._set("contentElement", null);
      const l27 = await f10();
      if (i37 !== this._abortController)
        return;
      const p33 = await d7({ arcadeUtils: l27, expressionInfo: t33, graphic: e24, interceptor: o30, map: n32, spatialReference: r28, view: s29 });
      if (!p33 || "esri.arcade.Dictionary" !== p33.declaredClass)
        return void this._set("contentElement", null);
      const h23 = await p33.castAsJsonAsync(i37 == null ? void 0 : i37.signal), u24 = h23 == null ? void 0 : h23.type, d18 = "media" === u24 ? I.fromJSON(h23) : "text" === u24 ? c7.fromJSON(h23) : "fields" === u24 ? c6.fromJSON(h23) : null;
      this._set("contentElement", d18);
    }, this.handles.add([l3(() => [this.expressionInfo, this.graphic, this.map, this.spatialReference, this.view], () => this._compileThrottled(), h), l3(() => [this.contentElement], () => this._createVM(), h)]);
  }
  destroy() {
    var _a;
    this._cancelQuery(), (_a = this.contentElementViewModel) == null ? void 0 : _a.destroy(), this._set("contentElementViewModel", null), this._set("contentElement", null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(t32) {
    this._override("spatialReference", t32);
  }
  get state() {
    const { _abortController: t32, contentElement: e24, contentElementViewModel: o30 } = this;
    return t32 ? "loading" : e24 || o30 ? "ready" : "disabled";
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) ?? null;
  }
  set map(t32) {
    this._override("map", t32);
  }
};
e2([y2()], j9.prototype, "_abortController", void 0), e2([y2({ type: i8 })], j9.prototype, "expressionInfo", void 0), e2([y2({ type: g3 })], j9.prototype, "graphic", void 0), e2([y2({ readOnly: true })], j9.prototype, "contentElement", void 0), e2([y2({ readOnly: true })], j9.prototype, "contentElementViewModel", void 0), e2([y2()], j9.prototype, "interceptor", void 0), e2([y2()], j9.prototype, "spatialReference", null), e2([y2({ readOnly: true })], j9.prototype, "state", null), e2([y2()], j9.prototype, "map", null), e2([y2()], j9.prototype, "view", void 0), j9 = e2([a3("esri.widgets.Feature.FeatureExpression.FeatureExpressionViewModel")], j9);
var C4 = j9;

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression.js
var c21 = { iconLoading: "esri-icon-loading-indicator esri-rotating", base: "esri-feature-expression", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };
var u11 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this._contentWidget = null, this.viewModel = new C4();
  }
  initialize() {
    this.addHandles(l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentElementViewModel;
    }, () => this._setupExpressionWidget(), h));
  }
  destroy() {
    this._destroyContentWidget();
  }
  renderLoading() {
    return n5("div", { key: "loading-container", class: c21.loadingSpinnerContainer }, n5("span", { class: this.classes(c21.iconLoading, c21.spinner) }));
  }
  render() {
    var _a;
    const { state: e24 } = this.viewModel;
    return n5("div", { class: c21.base }, "loading" === e24 ? this.renderLoading() : "disabled" === e24 ? null : (_a = this._contentWidget) == null ? void 0 : _a.render());
  }
  _destroyContentWidget() {
    const { _contentWidget: e24 } = this;
    e24 && (e24.viewModel = null, e24.destroy()), this._contentWidget = null;
  }
  _setupExpressionWidget() {
    const { contentElementViewModel: e24, contentElement: t32 } = this.viewModel, s29 = t32 == null ? void 0 : t32.type;
    this._destroyContentWidget();
    const i37 = e24 ? "fields" === s29 ? new c16({ viewModel: e24 }) : "media" === s29 ? new R6({ viewModel: e24 }) : "text" === s29 ? new p9({ viewModel: e24 }) : null : null;
    this._contentWidget = i37, this.scheduleRender();
  }
};
e2([y2({ type: C4 })], u11.prototype, "viewModel", void 0), u11 = e2([a3("esri.widgets.Feature.FeatureExpression")], u11);
var m14 = u11;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship/FeatureRelationshipViewModel.js
var b10 = 100;
var F5 = class extends i3(s9(a9(v3))) {
  constructor(e24) {
    super(e24), this._queryAbortController = null, this._queryPageAbortController = null, this._queryFeatureCountAbortController = null, this.featuresPerPage = 10, this.description = null, this.graphic = null, this.layer = null, this.map = null, this.orderByFields = null, this.featureCount = 0, this.relationshipId = null, this.showAllEnabled = false, this.title = null, this._cancelQuery = () => {
      const { _queryAbortController: e25 } = this;
      e25 && e25.abort(), this._queryAbortController = null;
    }, this._cancelQueryFeatureCount = () => {
      const { _queryFeatureCountAbortController: e25 } = this;
      e25 && e25.abort(), this._queryFeatureCountAbortController = null;
    }, this._cancelQueryPage = () => {
      const { _queryPageAbortController: e25 } = this;
      e25 && e25.abort(), this._queryPageAbortController = null;
    }, this._queryController = async () => {
      this._cancelQuery();
      const e25 = new AbortController();
      this._queryAbortController = e25, await g(this._query()), this._queryAbortController === e25 && (this._queryAbortController = null);
    }, this._queryFeatureCountController = async () => {
      this._cancelQueryFeatureCount();
      const e25 = new AbortController();
      this._queryFeatureCountAbortController = e25, await g(this._queryFeatureCount()), this._queryFeatureCountAbortController === e25 && (this._queryFeatureCountAbortController = null);
    }, this._queryPageController = async () => {
      const e25 = new AbortController();
      this._queryPageAbortController = e25, await g(this._queryPage()), this._queryPageAbortController === e25 && (this._queryPageAbortController = null);
    }, this._queryThrottled = e9(this._queryController, b10, this), this._queryFeatureCountThrottled = e9(this._queryFeatureCountController, b10, this), this._queryPageThrottled = e9(this._queryPageController, b10, this), this._query = async () => {
      const { _queryAbortController: e25, relatedFeatures: t32 } = this;
      this._destroyRelatedFeatureViewModels(), this.featurePage = 1, t32.removeAll(), t32.addMany(this._sliceFeatures(await this._queryRelatedFeatures({ signal: e25 == null ? void 0 : e25.signal })));
    }, this.handles.add([l3(() => [this.displayCount, this.graphic, this.layer, this.map, this.orderByFieldsFixedCasing, this.relationshipId, this.featuresPerPage, this.showAllEnabled, this.canQuery, this.featureCount], () => this._queryThrottled(), h), l3(() => [this.featurePage, this.showAllEnabled], () => this._queryPageThrottled()), l3(() => [this.layer, this.relationshipId, this.objectId, this.canQuery], () => this._queryFeatureCountThrottled())]);
  }
  destroy() {
    this._destroyRelatedFeatureViewModels(), this.relatedFeatures.removeAll(), this._cancelQuery(), this._cancelQueryFeatureCount(), this._cancelQueryPage();
  }
  set featurePage(e24) {
    const { featuresPerPage: t32, featureCount: r28 } = this, o30 = 1, l27 = Math.ceil(r28 / t32) || 1;
    this._set("featurePage", Math.min(Math.max(e24, o30), l27));
  }
  get featurePage() {
    return this._get("featurePage");
  }
  get orderByFieldsFixedCasing() {
    const { orderByFields: e24, relatedLayer: t32 } = this;
    return e24 && (t32 == null ? void 0 : t32.loaded) ? e24.map((e25) => {
      const r28 = e25.clone(), o30 = L4(e25.field, t32);
      return r28.field = o30, r28;
    }) : e24 ?? [];
  }
  get supportsCacheHint() {
    var _a, _b, _c;
    return !!((_c = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated) == null ? void 0 : _c.supportsCacheHint);
  }
  get canQuery() {
    var _a, _b;
    const e24 = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated;
    return !!(this.relatedLayer && this.relationship && "number" == typeof this.relationshipId && "number" == typeof this.objectId && (e24 == null ? void 0 : e24.supportsCount) && (e24 == null ? void 0 : e24.supportsPagination));
  }
  get itemDescriptionFieldName() {
    var _a, _b;
    return ((_b = (_a = this.orderByFieldsFixedCasing) == null ? void 0 : _a[0]) == null ? void 0 : _b.field) || null;
  }
  set displayCount(e24) {
    const t32 = 0, r28 = 10;
    this._set("displayCount", Math.min(Math.max(e24, t32), r28));
  }
  get displayCount() {
    return this._get("displayCount");
  }
  get objectId() {
    var _a, _b;
    return (this.objectIdField && ((_b = (_a = this.graphic) == null ? void 0 : _a.attributes) == null ? void 0 : _b[this.objectIdField])) ?? null;
  }
  get objectIdField() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.objectIdField) || null;
  }
  get relatedFeatures() {
    return this._get("relatedFeatures") || new j2();
  }
  get relatedLayer() {
    const { layer: e24, map: t32, relationship: r28 } = this;
    return (e24 == null ? void 0 : e24.loaded) && t32 && r28 ? ge(t32, e24, r28) ?? null : null;
  }
  get relationship() {
    var _a;
    const { relationshipId: e24, layer: t32 } = this;
    return "number" == typeof e24 ? ((_a = t32 == null ? void 0 : t32.relationships) == null ? void 0 : _a.find(({ id: t33 }) => t33 === e24)) ?? null : null;
  }
  get relatedFeatureViewModels() {
    return this._get("relatedFeatureViewModels") || new j2();
  }
  get state() {
    const { _queryAbortController: e24, _queryFeatureCountAbortController: t32, _queryPageAbortController: r28, canQuery: o30 } = this;
    return t32 ? "loading" : e24 || r28 ? "querying" : o30 ? "ready" : "disabled";
  }
  _destroyRelatedFeatureViewModels() {
    var _a;
    (_a = this.relatedFeatureViewModels) == null ? void 0 : _a.forEach((e24) => !e24.destroyed && e24.destroy()), this.relatedFeatureViewModels.removeAll();
  }
  async _queryFeatureCount() {
    const { layer: e24, relatedLayer: t32, relationshipId: r28, objectId: o30, _queryFeatureCountAbortController: l27, canQuery: s29, supportsCacheHint: a36 } = this;
    if (await (e24 == null ? void 0 : e24.load()), await (t32 == null ? void 0 : t32.load()), !s29 || !e24 || !t32)
      return void this._set("featureCount", 0);
    const n32 = t32.createQuery(), u24 = new d3({ cacheHint: a36, relationshipId: r28, returnGeometry: false, objectIds: [o30], where: s(n32.where, void 0) }), d18 = await e24.queryRelatedFeaturesCount(u24, { signal: l27 == null ? void 0 : l27.signal });
    this._set("featureCount", d18[o30] || 0);
  }
  _sliceFeatures(e24) {
    const { showAllEnabled: t32, displayCount: r28 } = this;
    return t32 ? e24 : r28 ? e24.slice(0, r28) : [];
  }
  async _queryPage() {
    const { relatedFeatures: e24, featurePage: t32, showAllEnabled: r28, _queryPageAbortController: o30 } = this;
    !r28 || t32 < 2 || e24.addMany(await this._queryRelatedFeatures({ signal: o30 == null ? void 0 : o30.signal }));
  }
  async _queryRelatedFeatures(e24) {
    var _a;
    const { orderByFieldsFixedCasing: t32, showAllEnabled: r28, featuresPerPage: o30, displayCount: l27, layer: s29, relationshipId: a36, featurePage: u24, featureCount: d18, relatedLayer: y17, supportsCacheHint: h23 } = this, { canQuery: p33, objectId: c39 } = this;
    if (!p33 || !s29 || !y17)
      return [];
    const _10 = r28 ? ((u24 - 1) * o30 + d18) % d18 : 0, g18 = r28 ? o30 : l27, b18 = y17.objectIdField, F8 = [...t32 == null ? void 0 : t32.map((e25) => e25.field), b18].filter(r), m27 = t32 == null ? void 0 : t32.map((e25) => `${e25.field} ${e25.order}`), f19 = y17.createQuery(), q3 = new d3({ orderByFields: m27, start: _10, num: g18, outFields: F8, cacheHint: h23, relationshipId: a36, returnGeometry: false, objectIds: [c39], where: s(f19.where, void 0) }), A9 = ((_a = (await s29.queryRelatedFeatures(q3, { signal: e24 == null ? void 0 : e24.signal }))[c39]) == null ? void 0 : _a.features) || [];
    return A9.forEach((e25) => {
      e25.sourceLayer = y17, e25.layer = y17;
    }), A9;
  }
};
e2([y2()], F5.prototype, "_queryAbortController", void 0), e2([y2()], F5.prototype, "_queryPageAbortController", void 0), e2([y2()], F5.prototype, "_queryFeatureCountAbortController", void 0), e2([y2({ value: 1 })], F5.prototype, "featurePage", null), e2([y2()], F5.prototype, "featuresPerPage", void 0), e2([y2({ readOnly: true })], F5.prototype, "orderByFieldsFixedCasing", null), e2([y2({ readOnly: true })], F5.prototype, "supportsCacheHint", null), e2([y2({ readOnly: true })], F5.prototype, "canQuery", null), e2([y2()], F5.prototype, "description", void 0), e2([y2({ readOnly: true })], F5.prototype, "itemDescriptionFieldName", null), e2([y2({ value: 3 })], F5.prototype, "displayCount", null), e2([y2({ type: g3 })], F5.prototype, "graphic", void 0), e2([y2()], F5.prototype, "layer", void 0), e2([y2()], F5.prototype, "map", void 0), e2([y2({ readOnly: true })], F5.prototype, "objectId", null), e2([y2({ readOnly: true })], F5.prototype, "objectIdField", null), e2([y2()], F5.prototype, "orderByFields", void 0), e2([y2({ readOnly: true })], F5.prototype, "relatedFeatures", null), e2([y2({ readOnly: true })], F5.prototype, "relatedLayer", null), e2([y2({ readOnly: true })], F5.prototype, "relationship", null), e2([y2()], F5.prototype, "featureCount", void 0), e2([y2({ readOnly: true })], F5.prototype, "relatedFeatureViewModels", null), e2([y2()], F5.prototype, "relationshipId", void 0), e2([y2()], F5.prototype, "showAllEnabled", void 0), e2([y2()], F5.prototype, "state", null), e2([y2()], F5.prototype, "title", void 0), F5 = e2([a3("esri.widgets.Feature.FeatureRelationship.FeatureRelationshipViewModel")], F5);
var m15 = F5;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship.js
var g10 = "esri-feature";
var w13 = `${g10}-relationship`;
var b11 = { base: w13, esriWidget: "esri-widget", listContainer: `${w13}__list`, listContainerQuerying: `${w13}__list--querying`, featureObserver: `${g10}__feature-observer`, stickySpinnerContainer: `${g10}__sticky-loading-container`, loadingSpinnerContainer: `${g10}__loading-container`, spinner: `${g10}__loading-spinner`, iconLoading: "esri-icon-loading-indicator esri-rotating" };
var f11 = { title: true, description: true };
var y9 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this._featureElementInfo = null, this._relatedFeatureIntersectionObserverNode = null, this._relatedFeatureIntersectionObserver = new IntersectionObserver(([e25]) => {
      (e25 == null ? void 0 : e25.isIntersecting) && this._increaseFeaturePage();
    }, { root: window.document }), this.headingLevel = 2, this.viewModel = new m15(), this.messages = null, this.messagesCommon = null, this.visibleElements = { ...f11 }, this._increaseFeaturePage = () => {
      const { state: e25, showAllEnabled: t33, relatedFeatures: s29, featuresPerPage: r28, featurePage: i37 } = this.viewModel;
      "ready" === e25 && t33 && s29.length >= r28 * i37 && this.viewModel.featurePage++;
    };
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles([l3(() => [this.viewModel.description, this.viewModel.title, this.headingLevel], () => this._setupFeatureElementInfo(), h), l3(() => [this.viewModel.state, this.viewModel.showAllEnabled, this._relatedFeatureIntersectionObserverNode], () => this._handleRelatedFeatureObserverChange()), a6(() => this.viewModel.relatedFeatureViewModels, "change", () => this._setupRelatedFeatureViewModels())]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-list-A73FA4UX.js"), import("./calcite-list-item-K67CRQ5P.js"), import("./calcite-icon-2ADQXYU4.js"), import("./calcite-notice-BLFQ7TSQ.js")]);
  }
  destroy() {
    this._unobserveRelatedFeatureObserver(), this._featureElementInfo = a(this._featureElementInfo);
  }
  get displayShowAllButton() {
    const { showAllEnabled: e24, featureCount: t32, displayCount: s29 } = this.viewModel;
    return !e24 && !!t32 && (t32 > s29 || 0 === s29);
  }
  get displayListItems() {
    return this.displayShowAllButton || this.viewModel.relatedFeatureViewModels.length > 0;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e24) {
    this.viewModel.description = e24;
  }
  get featureCountDescription() {
    const { messages: e24 } = this, { featureCount: t32 } = this.viewModel;
    return s6(1 === t32 ? e24 == null ? void 0 : e24.numberRecord : e24 == null ? void 0 : e24.numberRecords, { number: t32 });
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e24) {
    this.viewModel.title = e24;
  }
  castVisibleElements(e24) {
    return { ...f11, ...e24 };
  }
  renderStickyLoading() {
    return "querying" === this.viewModel.state ? n5("div", { key: "sticky-loader", class: b11.stickySpinnerContainer }, this.renderLoadingIcon()) : null;
  }
  renderLoadingIcon() {
    return n5("span", { class: this.classes(b11.iconLoading, b11.spinner) });
  }
  renderLoading() {
    return n5("div", { key: "loading-container", class: b11.loadingSpinnerContainer }, this.renderLoadingIcon());
  }
  renderShowAllIconNode() {
    return n5("calcite-icon", { scale: "s", icon: "list", slot: "content-end" });
  }
  renderChevronIconNode() {
    const e24 = f4(this.container) ? "chevron-left" : "chevron-right";
    return n5("calcite-icon", { scale: "s", icon: e24, slot: "content-end" });
  }
  renderRelatedFeature(e24) {
    var _a, _b;
    const { itemDescriptionFieldName: t32 } = this.viewModel, s29 = e24.title;
    e24.description = t32 && ((_a = e24.formattedAttributes) == null ? void 0 : _a.global[t32]);
    const r28 = "loading" === e24.state;
    return n5("calcite-list-item", { key: e24.uid, label: r28 ? `${(_b = this.messagesCommon) == null ? void 0 : _b.loading}…` : s29, description: r28 ? "…" : e24.description ?? "", onCalciteListItemSelect: () => this.emit("select-record", { featureViewModel: e24 }) }, this.renderChevronIconNode());
  }
  renderShowAllListItem() {
    var _a;
    return this.displayShowAllButton ? n5("calcite-list-item", { key: "show-all-item", label: (_a = this.messages) == null ? void 0 : _a.showAll, description: this.featureCountDescription, onCalciteListItemSelect: () => this.emit("show-all-records") }, this.renderShowAllIconNode()) : null;
  }
  renderNoRelatedFeaturesMessage() {
    var _a;
    return n5("calcite-notice", { key: "no-related-features-message", icon: "information", open: true, kind: "brand", scale: "s", width: "full" }, n5("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.noRelatedFeatures));
  }
  renderFeatureObserver() {
    return n5("div", { key: "feature-observer", class: b11.featureObserver, bind: this, afterCreate: this._relatedFeatureIntersectionObserverCreated });
  }
  renderList() {
    const { relatedFeatureViewModels: e24 } = this.viewModel;
    return n5("calcite-list", null, e24.toArray().map((e25) => this.renderRelatedFeature(e25)), this.renderShowAllListItem());
  }
  renderRelatedFeatures() {
    const { displayListItems: e24 } = this, { state: t32 } = this.viewModel;
    return n5("div", { key: "list-container", class: this.classes(b11.listContainer, { [b11.listContainerQuerying]: "querying" === t32 }) }, e24 ? this.renderList() : "ready" === t32 ? this.renderNoRelatedFeaturesMessage() : null, this.renderStickyLoading(), this.renderFeatureObserver());
  }
  renderRelationshipNotFound() {
    var _a;
    return n5("calcite-notice", { key: "relationship-not-found", icon: "exclamation-mark-triangle", open: true, kind: "danger", scale: "s", width: "full" }, n5("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.relationshipNotFound));
  }
  render() {
    var _a;
    const { state: e24 } = this.viewModel;
    return n5("div", { class: this.classes(b11.base, b11.esriWidget) }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), "loading" === e24 ? this.renderLoading() : "disabled" === e24 ? this.renderRelationshipNotFound() : this.renderRelatedFeatures());
  }
  _setupRelatedFeatureViewModels() {
    const { relatedFeatureViewModels: e24 } = this.viewModel, t32 = "related-feature-viewmodels";
    this.removeHandles(t32), e24 == null ? void 0 : e24.forEach((e25) => {
      this.addHandles(l3(() => [e25.title, e25.state], () => this.scheduleRender(), h), t32);
    }), this.scheduleRender();
  }
  _setupFeatureElementInfo() {
    var _a;
    const { headingLevel: e24, visibleElements: t32 } = this, s29 = t32.description && this.description, r28 = t32.title && this.title;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: s29, title: r28, headingLevel: e24 });
  }
  async _handleRelatedFeatureObserverChange() {
    this._unobserveRelatedFeatureObserver();
    const { state: e24, showAllEnabled: t32 } = this.viewModel;
    await U(0), this._relatedFeatureIntersectionObserverNode && "ready" === e24 && t32 && this._relatedFeatureIntersectionObserver.observe(this._relatedFeatureIntersectionObserverNode);
  }
  _relatedFeatureIntersectionObserverCreated(e24) {
    this._relatedFeatureIntersectionObserverNode = e24;
  }
  _unobserveRelatedFeatureObserver() {
    this._relatedFeatureIntersectionObserverNode && this._relatedFeatureIntersectionObserver.unobserve(this._relatedFeatureIntersectionObserverNode);
  }
};
e2([y2()], y9.prototype, "_relatedFeatureIntersectionObserverNode", void 0), e2([y2({ readOnly: true })], y9.prototype, "displayShowAllButton", null), e2([y2({ readOnly: true })], y9.prototype, "displayListItems", null), e2([y2()], y9.prototype, "description", null), e2([y2({ readOnly: true })], y9.prototype, "featureCountDescription", null), e2([y2()], y9.prototype, "headingLevel", void 0), e2([y2()], y9.prototype, "title", null), e2([y2({ type: m15 })], y9.prototype, "viewModel", void 0), e2([y2(), e4("esri/widgets/Feature/t9n/Feature")], y9.prototype, "messages", void 0), e2([y2(), e4("esri/t9n/common")], y9.prototype, "messagesCommon", void 0), e2([y2()], y9.prototype, "visibleElements", void 0), e2([s4("visibleElements")], y9.prototype, "castVisibleElements", null), y9 = e2([a3("esri.widgets.Feature.FeatureRelationship")], y9);
var F6 = y9;

// node_modules/@arcgis/core/arcade/featureset/support/FeatureSetQueryInterceptor.js
var e15 = class {
  constructor(e24, a36) {
    this.preLayerQueryCallback = e24, this.preRequestCallback = a36, this.preLayerQueryCallback || (this.preLayerQueryCallback = (e25) => {
    }), this.preRequestCallback || (this.preLayerQueryCallback = (e25) => {
    });
  }
};

// node_modules/@arcgis/core/widgets/Feature/FeatureViewModel.js
var G2;
var H3 = 1;
var z3 = "content-view-models";
var J4 = "relationship-view-models";
var K3 = { attachmentsContent: true, chartAnimation: true, customContent: true, expressionContent: true, fieldsContent: true, mediaContent: true, textContent: true, relationshipContent: true };
var W3 = G2 = class extends s9(v3) {
  constructor(e24) {
    super(e24), this._handles = new t3(), this._error = null, this._featureAbortController = null, this._graphicChangedThrottled = e9(this._graphicChanged, H3, this), this._expressionAttributes = null, this._graphicExpressionAttributes = null, this.abilities = { ...K3 }, this.content = null, this.contentViewModels = [], this.description = null, this.defaultPopupTemplateEnabled = false, this.formattedAttributes = null, this.lastEditInfo = null, this.relatedInfos = /* @__PURE__ */ new Map(), this.title = "", this.view = null, this._isAllowedContentType = (e25) => {
      const { abilities: t32 } = this;
      return "attachments" === e25.type && !!t32.attachmentsContent || "custom" === e25.type && !!t32.customContent || "fields" === e25.type && !!t32.fieldsContent || "media" === e25.type && !!t32.mediaContent || "text" === e25.type && !!t32.textContent || "expression" === e25.type && !!t32.expressionContent || "relationship" === e25.type && !!t32.relationshipContent;
    }, this._handles.add(l3(() => [this.graphic, this._effectivePopupTemplate, this.abilities], () => this._graphicChangedThrottled(), h));
  }
  destroy() {
    this._clear(), this._cancelFeatureQuery(), this._error = null, this._handles.destroy(), this.graphic = null, this._destroyContentViewModels(), this.relatedInfos.clear();
  }
  get _effectivePopupTemplate() {
    return r(this.graphic) ? this.graphic.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled) : null;
  }
  get _fieldInfoMap() {
    return Y2(ee(this._effectivePopupTemplate), this._sourceLayer);
  }
  get _sourceLayer() {
    return j7(this.graphic);
  }
  castAbilities(e24) {
    return { ...K3, ...e24 };
  }
  get isTable() {
    var _a;
    return ((_a = this._sourceLayer) == null ? void 0 : _a.isTable) || false;
  }
  get state() {
    return this.graphic ? this._error ? "error" : this.waitingForContent ? "loading" : "ready" : "disabled";
  }
  set graphic(e24) {
    this._set("graphic", e24 ? e24.clone() : null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(e24) {
    this._override("spatialReference", e24);
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) || null;
  }
  set map(e24) {
    this._override("map", e24);
  }
  get waitingForContent() {
    return !!this._featureAbortController;
  }
  setActiveMedia(e24, t32) {
    const r28 = this.contentViewModels[e24];
    r28 instanceof M4 && r28.setActiveMedia(t32);
  }
  nextMedia(e24) {
    const t32 = this.contentViewModels[e24];
    t32 instanceof M4 && t32.next();
  }
  previousMedia(e24) {
    const t32 = this.contentViewModels[e24];
    t32 instanceof M4 && t32.previous();
  }
  async updateGeometry() {
    var _a, _b;
    const { graphic: e24, spatialReference: t32, _sourceLayer: r28 } = this;
    await (r28 == null ? void 0 : r28.load());
    const i37 = r28 == null ? void 0 : r28.objectIdField;
    if (!i37 || !e24 || !r28)
      return;
    const s29 = (_a = e24 == null ? void 0 : e24.attributes) == null ? void 0 : _a[i37];
    if (null == s29)
      return;
    const o30 = [s29];
    if (!e24.geometry) {
      const i38 = (_b = await oe({ layer: r28, graphic: e24, outFields: [], objectIds: o30, returnGeometry: true, spatialReference: t32 })) == null ? void 0 : _b.geometry;
      i38 && (e24.geometry = i38);
    }
  }
  _clear() {
    this._set("title", ""), this._set("content", null), this._set("formattedAttributes", null);
  }
  async _graphicChanged() {
    this._cancelFeatureQuery(), this._error = null, this._clear();
    const { graphic: e24 } = this;
    if (!e24)
      return;
    const t32 = new AbortController();
    this._featureAbortController = t32;
    try {
      await this._queryFeature({ signal: t32.signal });
    } catch (r28) {
      j(r28) || (this._error = r28, s2.getLogger(this.declaredClass).error("error", "The popupTemplate could not be displayed for this feature.", { error: r28, graphic: e24, popupTemplate: this._effectivePopupTemplate }));
    }
    this._featureAbortController === t32 && (this._featureAbortController = null);
  }
  _cancelFeatureQuery() {
    const { _featureAbortController: e24 } = this;
    e24 && e24.abort(), this._featureAbortController = null;
  }
  _compileContentElement(e24, t32) {
    return "attachments" === e24.type ? this._compileAttachments(e24, t32) : "custom" === e24.type ? this._compileCustom(e24, t32) : "fields" === e24.type ? this._compileFields(e24, t32) : "media" === e24.type ? this._compileMedia(e24, t32) : "text" === e24.type ? this._compileText(e24, t32) : "expression" === e24.type ? this._compileExpression(e24, t32) : "relationship" === e24.type ? this._compileRelationship(e24, t32) : void 0;
  }
  _compileContent(e24) {
    if (this._destroyContentViewModels(), this.graphic)
      return Array.isArray(e24) ? e24.filter(this._isAllowedContentType).map((e25, t32) => this._compileContentElement(e25, t32)).filter(r) : "string" == typeof e24 ? this._compileText(new c7({ text: e24 }), 0).text : e24;
  }
  _destroyContentViewModels() {
    var _a, _b;
    (_a = this._handles) == null ? void 0 : _a.remove(J4), (_b = this._handles) == null ? void 0 : _b.remove(z3), this.contentViewModels.forEach((e24) => e24 && !e24.destroyed && e24.destroy()), this._set("contentViewModels", []);
  }
  _matchesFeature(e24, t32) {
    var _a;
    const r28 = (_a = e24 == null ? void 0 : e24.graphic) == null ? void 0 : _a.getObjectId(), i37 = t32 == null ? void 0 : t32.getObjectId();
    return r(r28) && r(i37) && r28 === i37;
  }
  _setRelatedFeaturesViewModels({ relatedFeatureViewModels: e24, relatedFeatures: t32, map: r28 }) {
    const { view: i37, spatialReference: s29 } = this;
    t32 == null ? void 0 : t32.filter(Boolean).forEach((t33) => {
      e24.find((e25) => this._matchesFeature(e25, t33)) || e24.add(new G2({ abilities: { relationshipContent: false }, map: r28, view: i37, spatialReference: s29, graphic: t33 }));
    }), e24.forEach((r29) => {
      const i38 = t32 == null ? void 0 : t32.find((e25) => this._matchesFeature(r29, e25));
      i38 || e24.remove(r29);
    });
  }
  _setExpressionContentVM(e24, t32) {
    const r28 = this.formattedAttributes, { contentElement: i37, contentElementViewModel: s29 } = e24, o30 = i37 == null ? void 0 : i37.type;
    s29 && o30 && ("fields" === o30 && (this._createFieldsFormattedAttributes({ contentElement: i37, contentElementIndex: t32, formattedAttributes: r28 }), s29.set(this._createFieldsVMParams(i37, t32))), "media" === o30 && (this._createMediaFormattedAttributes({ contentElement: i37, contentElementIndex: t32, formattedAttributes: r28 }), s29.set(this._createMediaVMParams(i37, t32))), "text" === o30 && s29.set(this._createTextVMParams(i37)));
  }
  _compileRelationship(e24, t32) {
    const { displayCount: r28, orderByFields: i37, relationshipId: s29, title: o30, description: n32 } = e24, { _sourceLayer: a36, graphic: l27, map: p33 } = this, c39 = new m15({ displayCount: r28, graphic: l27, orderByFields: i37, relationshipId: s29, layer: a36, map: p33, ...this._compileTitleAndDesc({ title: o30, description: n32 }) });
    return this.contentViewModels[t32] = c39, this._handles.add(a6(() => c39.relatedFeatures, "change", () => this._setRelatedFeaturesViewModels(c39)), J4), e24;
  }
  _compileExpression(e24, t32) {
    const { expressionInfo: r28 } = e24, { graphic: i37, map: s29, spatialReference: o30, view: n32 } = this, a36 = new C4({ expressionInfo: r28, graphic: i37, interceptor: G2.interceptor, map: s29, spatialReference: o30, view: n32 });
    return this.contentViewModels[t32] = a36, this._handles.add(l3(() => a36.contentElementViewModel, () => this._setExpressionContentVM(a36, t32), h), z3), e24;
  }
  _compileAttachments(e24, t32) {
    const { graphic: r28 } = this, { description: i37, title: s29 } = e24;
    return this.contentViewModels[t32] = new c12({ graphic: r28, ...this._compileTitleAndDesc({ title: s29, description: i37 }) }), e24;
  }
  _compileCustom(e24, t32) {
    const { graphic: r28 } = this, { creator: i37, destroyer: s29 } = e24;
    return this.contentViewModels[t32] = new l12({ graphic: r28, creator: i37, destroyer: s29 }), e24;
  }
  _compileTitleAndDesc({ title: e24, description: t32 }) {
    const { _fieldInfoMap: r28, _sourceLayer: i37, graphic: s29, formattedAttributes: o30 } = this, n32 = s29 == null ? void 0 : s29.attributes, a36 = this._expressionAttributes, l27 = o30.global;
    return { title: S4({ attributes: n32, fieldInfoMap: r28, globalAttributes: l27, expressionAttributes: a36, layer: i37, text: e24 }), description: S4({ attributes: n32, fieldInfoMap: r28, globalAttributes: l27, expressionAttributes: a36, layer: i37, text: t32 }) };
  }
  _createFieldsVMParams(e24, t32) {
    var _a;
    const r28 = this._effectivePopupTemplate, i37 = this.formattedAttributes, s29 = { ...i37 == null ? void 0 : i37.global, ...i37 == null ? void 0 : i37.content[t32] }, o30 = (_a = (e24 == null ? void 0 : e24.fieldInfos) || (r28 == null ? void 0 : r28.fieldInfos)) == null ? void 0 : _a.filter(({ fieldName: e25 }) => M3(e25) || ue(e25) || s29.hasOwnProperty(e25)), n32 = r28 == null ? void 0 : r28.expressionInfos, { description: a36, title: l27 } = e24;
    return { attributes: s29, expressionInfos: n32, fieldInfos: o30, ...this._compileTitleAndDesc({ title: l27, description: a36 }) };
  }
  _compileFields(e24, t32) {
    const r28 = e24.clone(), i37 = new n13(this._createFieldsVMParams(e24, t32));
    return this.contentViewModels[t32] = i37, r28.fieldInfos = i37.formattedFieldInfos.slice(0), r28;
  }
  _createMediaVMParams(e24, t32) {
    const { abilities: r28, graphic: i37, _fieldInfoMap: s29, _effectivePopupTemplate: o30, relatedInfos: n32, _sourceLayer: a36, _expressionAttributes: l27 } = this, p33 = this.formattedAttributes, c39 = (i37 == null ? void 0 : i37.attributes) ?? {}, { description: d18, mediaInfos: u24, title: h23 } = e24;
    return { abilities: { chartAnimation: r28.chartAnimation }, activeMediaInfoIndex: e24.activeMediaInfoIndex || 0, attributes: c39, isAggregate: i37 == null ? void 0 : i37.isAggregate, layer: a36, fieldInfoMap: s29, formattedAttributes: { ...p33 == null ? void 0 : p33.global, ...p33 == null ? void 0 : p33.content[t32] }, expressionAttributes: l27, mediaInfos: u24, popupTemplate: o30, relatedInfos: n32, ...this._compileTitleAndDesc({ title: h23, description: d18 }) };
  }
  _compileMedia(e24, t32) {
    const r28 = e24.clone(), i37 = new M4(this._createMediaVMParams(e24, t32));
    return r28.mediaInfos = i37.formattedMediaInfos.slice(0), this.contentViewModels[t32] = i37, r28;
  }
  _createTextVMParams(e24) {
    var _a;
    const { graphic: t32, _fieldInfoMap: r28, _sourceLayer: i37, _expressionAttributes: s29 } = this;
    if (e24 && e24.text) {
      const o30 = (t32 == null ? void 0 : t32.attributes) ?? {}, n32 = ((_a = this.formattedAttributes) == null ? void 0 : _a.global) ?? {};
      e24.text = S4({ attributes: o30, fieldInfoMap: r28, globalAttributes: n32, expressionAttributes: s29, layer: i37, text: e24.text });
    }
    return { graphic: t32, creator: e24.text };
  }
  _compileText(e24, t32) {
    const r28 = e24.clone();
    return this.contentViewModels[t32] = new l12(this._createTextVMParams(r28)), r28;
  }
  _compileLastEditInfo() {
    const { _effectivePopupTemplate: e24, _sourceLayer: t32, graphic: r28 } = this;
    if (!e24)
      return;
    const { lastEditInfoEnabled: i37 } = e24, s29 = t32 == null ? void 0 : t32.editFieldsInfo;
    return i37 && s29 ? X(s29, r28 == null ? void 0 : r28.attributes) : void 0;
  }
  _compileTitle(e24) {
    var _a;
    const { _fieldInfoMap: t32, _sourceLayer: r28, graphic: i37, _expressionAttributes: s29 } = this, o30 = (i37 == null ? void 0 : i37.attributes) ?? {}, n32 = ((_a = this.formattedAttributes) == null ? void 0 : _a.global) ?? {};
    return S4({ attributes: o30, fieldInfoMap: t32, globalAttributes: n32, expressionAttributes: s29, layer: r28, text: e24 });
  }
  async _getTitle() {
    const { _effectivePopupTemplate: e24, graphic: t32 } = this;
    if (!t32)
      return null;
    const r28 = e24 == null ? void 0 : e24.title;
    return x2(r28, { graphic: t32 });
  }
  async _getContent() {
    const { _effectivePopupTemplate: e24, graphic: t32 } = this;
    if (!t32)
      return null;
    const r28 = e24 == null ? void 0 : e24.content;
    return x2(r28, { graphic: t32 });
  }
  async _queryFeature(e24) {
    const { _featureAbortController: t32, _sourceLayer: r28, graphic: i37, _effectivePopupTemplate: s29 } = this, o30 = this.map, n32 = this.view, a36 = this.spatialReference;
    if (t32 !== this._featureAbortController || !i37)
      return;
    await le({ graphic: i37, popupTemplate: s29, layer: r28, spatialReference: a36 }, e24);
    const { content: { value: l27 }, title: { value: c39 } } = await E({ content: this._getContent(), title: this._getTitle() }), { expressionAttributes: { value: d18 } } = await E({ checkForRelatedFeatures: this._checkForRelatedFeatures(e24), expressionAttributes: m13({ expressionInfos: s29 == null ? void 0 : s29.expressionInfos, spatialReference: a36, graphic: i37, map: o30, interceptor: G2.interceptor, view: n32 }) });
    t32 === this._featureAbortController && i37 && (this._expressionAttributes = d18, this._graphicExpressionAttributes = { ...i37.attributes, ...d18 }, this._set("formattedAttributes", this._createFormattedAttributes(l27)), this._set("title", this._compileTitle(c39)), this._set("lastEditInfo", this._compileLastEditInfo() || null), this._set("content", this._compileContent(l27) || null));
  }
  _createMediaFormattedAttributes({ contentElement: e24, contentElementIndex: t32, formattedAttributes: r28 }) {
    const { _effectivePopupTemplate: i37, graphic: s29, relatedInfos: o30, _sourceLayer: n32, _fieldInfoMap: a36, _graphicExpressionAttributes: l27 } = this;
    r28.content[t32] = ie2({ fieldInfos: i37 == null ? void 0 : i37.fieldInfos, graphic: s29, attributes: { ...l27, ...e24.attributes }, layer: n32, fieldInfoMap: a36, relatedInfos: o30 });
  }
  _createFieldsFormattedAttributes({ contentElement: e24, contentElementIndex: t32, formattedAttributes: r28 }) {
    if (e24.fieldInfos) {
      const { graphic: i37, relatedInfos: s29, _sourceLayer: o30, _fieldInfoMap: n32, _graphicExpressionAttributes: a36 } = this;
      r28.content[t32] = ie2({ fieldInfos: e24.fieldInfos, graphic: i37, attributes: { ...a36, ...e24.attributes }, layer: o30, fieldInfoMap: n32, relatedInfos: s29 });
    }
  }
  _createFormattedAttributes(e24) {
    const { _effectivePopupTemplate: t32, graphic: r28, relatedInfos: i37, _sourceLayer: s29, _fieldInfoMap: o30, _graphicExpressionAttributes: n32 } = this, a36 = t32 == null ? void 0 : t32.fieldInfos, l27 = { global: ie2({ fieldInfos: a36, graphic: r28, attributes: n32, layer: s29, fieldInfoMap: o30, relatedInfos: i37 }), content: [] };
    return Array.isArray(e24) && e24.forEach((e25, t33) => {
      "fields" === e25.type && this._createFieldsFormattedAttributes({ contentElement: e25, contentElementIndex: t33, formattedAttributes: l27 }), "media" === e25.type && this._createMediaFormattedAttributes({ contentElement: e25, contentElementIndex: t33, formattedAttributes: l27 });
    }), l27;
  }
  _checkForRelatedFeatures(e24) {
    const { graphic: t32, _effectivePopupTemplate: r28 } = this;
    return this._queryRelatedInfos(t32, ee(r28), e24);
  }
  async _queryRelatedInfos(e24, t32, r28) {
    const { relatedInfos: i37, _sourceLayer: s29 } = this;
    i37.clear();
    const o30 = r(s29 == null ? void 0 : s29.associatedLayer) ? await (s29 == null ? void 0 : s29.associatedLayer.load(r28)) : s29;
    if (!o30 || !e24)
      return;
    const n32 = t32.filter((e25) => e25 && ue(e25.fieldName));
    if (!n32 || !n32.length)
      return;
    t32.forEach((e25) => this._configureRelatedInfo(e25, o30));
    const l27 = await R5({ relatedInfos: i37, layer: o30 }, r28);
    Object.keys(l27).forEach((e25) => {
      var _a;
      const t33 = i37.get(e25.toString()), r29 = (_a = l27[e25]) == null ? void 0 : _a.value;
      t33 && r29 && (t33.layerInfo = r29.data);
    });
    const p33 = await $2({ graphic: e24, relatedInfos: i37, layer: o30 }, r28);
    Object.keys(p33).forEach((e25) => {
      var _a;
      F4((_a = p33[e25]) == null ? void 0 : _a.value, i37.get(e25.toString()));
    });
  }
  _configureRelatedInfo(e24, t32) {
    const { relatedInfos: r28 } = this, i37 = m12(e24.fieldName);
    if (!i37)
      return;
    const { layerId: s29, fieldName: o30 } = i37;
    if (!s29)
      return;
    const n32 = r28.get(s29.toString()) || g7(s29, t32);
    n32 && (U6({ relatedInfo: n32, fieldName: o30, fieldInfo: e24 }), this.relatedInfos.set(s29, n32));
  }
};
W3.interceptor = new e15(me, ye), e2([y2()], W3.prototype, "_error", void 0), e2([y2()], W3.prototype, "_featureAbortController", void 0), e2([y2({ readOnly: true })], W3.prototype, "_effectivePopupTemplate", null), e2([y2({ readOnly: true })], W3.prototype, "_fieldInfoMap", null), e2([y2({ readOnly: true })], W3.prototype, "_sourceLayer", null), e2([y2()], W3.prototype, "abilities", void 0), e2([s4("abilities")], W3.prototype, "castAbilities", null), e2([y2({ readOnly: true })], W3.prototype, "content", void 0), e2([y2({ readOnly: true })], W3.prototype, "contentViewModels", void 0), e2([y2()], W3.prototype, "description", void 0), e2([y2({ type: Boolean })], W3.prototype, "defaultPopupTemplateEnabled", void 0), e2([y2({ readOnly: true })], W3.prototype, "isTable", null), e2([y2({ readOnly: true })], W3.prototype, "state", null), e2([y2({ readOnly: true })], W3.prototype, "formattedAttributes", void 0), e2([y2({ type: g3, value: null })], W3.prototype, "graphic", null), e2([y2({ readOnly: true })], W3.prototype, "lastEditInfo", void 0), e2([y2({ readOnly: true })], W3.prototype, "relatedInfos", void 0), e2([y2()], W3.prototype, "spatialReference", null), e2([y2({ readOnly: true })], W3.prototype, "title", void 0), e2([y2()], W3.prototype, "map", null), e2([y2({ readOnly: true })], W3.prototype, "waitingForContent", null), e2([y2()], W3.prototype, "view", void 0), W3 = G2 = e2([a3("esri.widgets.FeatureViewModel")], W3);
var X2 = W3;

// node_modules/@arcgis/core/widgets/Feature/resources.js
var e16 = "esri-feature";
var t13 = { iconText: "esri-icon-font-fallback-text", iconLoading: "esri-icon-loading-indicator esri-rotating", esriTable: "esri-widget__table", esriWidget: "esri-widget", base: e16, container: `${e16}__size-container`, title: `${e16}__title`, main: `${e16}__main-container`, btn: `${e16}__button`, icon: `${e16}__icon`, content: `${e16}__content`, contentNode: `${e16}__content-node`, contentElement: `${e16}__content-element`, text: `${e16}__text`, lastEditedInfo: `${e16}__last-edited-info`, fields: `${e16}__fields`, fieldHeader: `${e16}__field-header`, fieldData: `${e16}__field-data`, fieldDataDate: `${e16}__field-data--date`, loadingSpinnerContainer: `${e16}__loading-container`, spinner: `${e16}__loading-spinner` };

// node_modules/@arcgis/core/widgets/Feature/support/FeatureContentMixin.js
var i17 = (i37) => {
  let n32 = class extends i37 {
    constructor() {
      super(...arguments), this.renderNodeContent = (e24) => e6(e24) && !e24.destroyed ? n5("div", { class: t13.contentNode, key: e24 }, e24.render()) : e24 instanceof HTMLElement ? n5("div", { class: t13.contentNode, key: e24, bind: e24, afterCreate: this._attachToNode }) : t9(e24) ? n5("div", { class: t13.contentNode, key: e24, bind: e24.domNode, afterCreate: this._attachToNode }) : null;
    }
    _attachToNode(e24) {
      const o30 = this;
      e24.appendChild(o30);
    }
  };
  return n32 = e2([a3("esri.widgets.Feature.ContentMixin")], n32), n32;
};

// node_modules/@arcgis/core/widgets/Feature.js
var E4;
var b12 = { title: true, content: true, lastEditedInfo: true };
var _5 = "relationship-handles";
var W4 = E4 = class extends i17(W) {
  constructor(e24, t32) {
    super(e24, t32), this._contentWidgets = [], this.flowItems = null, this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.messagesURIUtils = null, this.visibleElements = { ...b12 }, this.viewModel = new X2();
  }
  initialize() {
    this.addHandles(l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentViewModels;
    }, () => this._setupContentWidgets(), h));
  }
  loadDependencies() {
    return import("./calcite-notice-BLFQ7TSQ.js");
  }
  destroy() {
    this._destroyContentWidgets();
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e24) {
    this.viewModel.graphic = e24;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e24) {
    this.viewModel.defaultPopupTemplateEnabled = e24;
  }
  get isTable() {
    return this.viewModel.isTable;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e24) {
    this._overrideIfSome("label", e24);
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e24) {
    this.viewModel.spatialReference = e24;
  }
  get title() {
    return this.viewModel.title;
  }
  castVisibleElements(e24) {
    return { ...b12, ...e24 };
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e24) {
    this.viewModel.map = e24;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e24) {
    this.viewModel.view = e24;
  }
  render() {
    const { state: e24 } = this.viewModel, t32 = n5("div", { class: t13.container, key: "container" }, this.renderTitle(), "error" === e24 ? this.renderError() : "loading" === e24 ? this.renderLoading() : this.renderContentContainer());
    return n5("div", { class: this.classes(t13.base, t13.esriWidget) }, t32);
  }
  setActiveMedia(e24, t32) {
    return this.viewModel.setActiveMedia(e24, t32);
  }
  nextMedia(e24) {
    return this.viewModel.nextMedia(e24);
  }
  previousMedia(e24) {
    return this.viewModel.previousMedia(e24);
  }
  renderError() {
    const { messagesCommon: e24, messages: t32, visibleElements: s29 } = this;
    return n5("calcite-notice", { open: true, kind: "danger", icon: "exclamation-mark-circle", scale: "s" }, s29.title ? n5("div", { key: "error-title", slot: "title" }, e24.errorMessage) : null, n5("div", { key: "error-message", slot: "message" }, t32.loadingError));
  }
  renderLoading() {
    return n5("div", { key: "loading-container", class: t13.loadingSpinnerContainer }, n5("span", { class: this.classes(t13.iconLoading, t13.spinner) }));
  }
  renderContentContainer() {
    const { visibleElements: e24 } = this;
    return e24.content ? n5("div", { class: t13.main }, [this.renderContent(), this.renderLastEditInfo()]) : null;
  }
  renderTitle() {
    const { visibleElements: e24, title: t32 } = this;
    return e24.title ? n5(n10, { level: this.headingLevel, class: t13.title, innerHTML: t32 }) : null;
  }
  renderContent() {
    const e24 = this.viewModel.content, t32 = "content";
    if (!e24)
      return null;
    if (Array.isArray(e24))
      return e24.length ? n5("div", { class: t13.contentNode, key: `${t32}-content-elements` }, e24.map(this.renderContentElement, this)) : null;
    if ("string" == typeof e24) {
      const e25 = this._contentWidgets[0];
      return !e25 || e25.destroyed ? null : n5("div", { class: t13.contentNode, key: `${t32}-content` }, e25.render());
    }
    return this.renderNodeContent(e24);
  }
  renderContentElement(e24, t32) {
    var _a;
    const { visibleElements: s29 } = this;
    if ("boolean" != typeof s29.content && !((_a = s29.content) == null ? void 0 : _a[e24.type]))
      return null;
    switch (e24.type) {
      case "attachments":
        return this.renderAttachments(t32);
      case "custom":
        return this.renderCustom(e24, t32);
      case "fields":
        return this.renderFields(t32);
      case "media":
        return this.renderMedia(t32);
      case "text":
        return this.renderText(e24, t32);
      case "expression":
        return this.renderExpression(t32);
      case "relationship":
        return this.renderRelationship(t32);
      default:
        return null;
    }
  }
  renderAttachments(e24) {
    const t32 = this._contentWidgets[e24];
    if (!t32 || t32.destroyed)
      return null;
    const { state: s29, attachmentInfos: i37 } = t32.viewModel;
    return "loading" === s29 || i37.length > 0 ? n5("div", { key: this._buildKey("attachments-element", e24), class: this.classes(t13.contentElement) }, t32.render()) : null;
  }
  renderRelationship(e24) {
    const t32 = this._contentWidgets[e24];
    return t32 && !t32.destroyed && this.flowItems ? n5("div", { key: this._buildKey("relationship-element", e24), class: t13.contentElement }, t32.render()) : null;
  }
  renderExpression(e24) {
    const t32 = this._contentWidgets[e24];
    return !t32 || t32.destroyed ? null : n5("div", { key: this._buildKey("expression-element", e24), class: t13.contentElement }, t32.render());
  }
  renderCustom(e24, t32) {
    const { creator: s29 } = e24, i37 = this._contentWidgets[t32];
    return !i37 || i37.destroyed ? null : s29 ? n5("div", { key: this._buildKey("custom-element", t32), class: t13.contentElement }, i37.render()) : null;
  }
  renderFields(e24) {
    const t32 = this._contentWidgets[e24];
    return !t32 || t32.destroyed ? null : n5("div", { key: this._buildKey("fields-element", e24), class: t13.contentElement }, t32.render());
  }
  renderMedia(e24) {
    const t32 = this._contentWidgets[e24];
    return !t32 || t32.destroyed ? null : n5("div", { key: this._buildKey("media-element", e24), class: t13.contentElement }, t32.render());
  }
  renderLastEditInfo() {
    const { visibleElements: e24, messages: t32 } = this, { lastEditInfo: s29 } = this.viewModel;
    if (!s29 || !e24.lastEditedInfo)
      return null;
    const { date: i37, user: n32 } = s29, r28 = "edit" === s29.type ? n32 ? t32.lastEditedByUser : t32.lastEdited : n32 ? t32.lastCreatedByUser : t32.lastCreated, o30 = s6(r28, { date: i37, user: n32 });
    return n5("div", { key: "edit-info-element", class: this.classes(t13.lastEditedInfo, t13.contentElement) }, o30);
  }
  renderText(e24, t32) {
    const s29 = e24.text, i37 = this._contentWidgets[t32];
    return !i37 || i37.destroyed ? null : s29 ? n5("div", { key: this._buildKey("text-element", t32), class: this.classes(t13.contentElement, t13.text) }, i37.render()) : null;
  }
  _buildKey(e24, ...t32) {
    return `${e24}__${this.get("viewModel.graphic.uid") || "0"}-${t32.join("-")}`;
  }
  _destroyContentWidget(e24) {
    e24 && (e24.viewModel = null, !e24.destroyed && e24.destroy());
  }
  _destroyContentWidgets() {
    this.removeHandles(_5), this._contentWidgets.forEach((e24) => this._destroyContentWidget(e24)), this._contentWidgets = [];
  }
  _addFeatureRelationshipHandles(e24) {
    const { flowItems: t32, visibleElements: i37 } = this;
    this.addHandles([a6(() => e24, "select-record", ({ featureViewModel: e25 }) => {
      t32 && (e25.abilities = { relationshipContent: true }, t32.push(new E4({ flowItems: t32, viewModel: e25, visibleElements: i37 })));
    }), a6(() => e24, "show-all-records", () => {
      if (!t32)
        return;
      const { viewModel: s29 } = e24;
      s29.showAllEnabled = true;
      const i38 = new F6({ visibleElements: { title: false, description: false }, viewModel: s29 });
      this._addFeatureRelationshipHandles(i38), t32.push(i38);
    })], _5);
  }
  _setupContentWidgets() {
    this._destroyContentWidgets();
    const { headingLevel: e24, visibleElements: t32 } = this, s29 = this.get("viewModel.content"), { contentViewModels: i37 } = this.viewModel;
    if (Array.isArray(s29))
      s29.forEach((s30, n32) => {
        if ("attachments" === s30.type && (this._contentWidgets[n32] = new h6({ displayType: s30.displayType, headingLevel: t32.title ? e24 + 1 : e24, viewModel: i37[n32] })), "fields" === s30.type && (this._contentWidgets[n32] = new c16({ viewModel: i37[n32] })), "media" === s30.type && (this._contentWidgets[n32] = new R6({ viewModel: i37[n32] })), "text" === s30.type && (this._contentWidgets[n32] = new p9({ viewModel: i37[n32] })), "custom" === s30.type && (this._contentWidgets[n32] = new p9({ viewModel: i37[n32] })), "expression" === s30.type && (this._contentWidgets[n32] = new m14({ viewModel: i37[n32] })), "relationship" === s30.type) {
          const e25 = new F6({ viewModel: i37[n32] });
          this._addFeatureRelationshipHandles(e25), this._contentWidgets[n32] = e25;
        }
      }, this);
    else {
      const e25 = i37[0];
      e25 && !e25.destroyed && (this._contentWidgets[0] = new p9({ viewModel: e25 }));
    }
    this.scheduleRender();
  }
};
e2([y2()], W4.prototype, "graphic", null), e2([y2()], W4.prototype, "defaultPopupTemplateEnabled", null), e2([y2()], W4.prototype, "flowItems", void 0), e2([y2()], W4.prototype, "headingLevel", void 0), e2([y2({ readOnly: true })], W4.prototype, "isTable", null), e2([y2()], W4.prototype, "label", null), e2([y2(), e4("esri/widgets/Feature/t9n/Feature")], W4.prototype, "messages", void 0), e2([y2(), e4("esri/t9n/common")], W4.prototype, "messagesCommon", void 0), e2([y2(), e4("esri/widgets/support/t9n/uriUtils")], W4.prototype, "messagesURIUtils", void 0), e2([y2()], W4.prototype, "spatialReference", null), e2([y2({ readOnly: true })], W4.prototype, "title", null), e2([y2()], W4.prototype, "visibleElements", void 0), e2([s4("visibleElements")], W4.prototype, "castVisibleElements", null), e2([y2()], W4.prototype, "map", null), e2([y2()], W4.prototype, "view", null), e2([y2({ type: X2 })], W4.prototype, "viewModel", void 0), W4 = E4 = e2([a3("esri.widgets.Feature")], W4);
var C5 = W4;

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var l16;
var d8 = Symbol("anchorHandles");
var m16 = class extends n4.EventedAccessor {
  constructor(e24) {
    super(e24), this[l16] = new t3(), this.location = null, this.screenLocationEnabled = false, this.view = null, this[d8].add([f3(() => o(this.screenLocationEnabled ? this.view : null, (e25) => [e25.size, "3d" === e25.type ? e25.camera : e25.viewpoint]), () => this.notifyChange("screenLocation")), l3(() => this.screenLocation, (e25, o30) => {
      r(e25) && r(o30) && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null, this[d8] = a(this[d8]);
  }
  get screenLocation() {
    var _a;
    const { location: e24, view: o30, screenLocationEnabled: t32 } = this;
    return t32 && r(e24) && r(o30) && o30.ready ? (_a = o30.toScreen) == null ? void 0 : _a.call(o30, e24) : null;
  }
};
l16 = d8, e2([y2()], m16.prototype, "location", void 0), e2([y2()], m16.prototype, "screenLocation", null), e2([y2()], m16.prototype, "screenLocationEnabled", void 0), e2([y2()], m16.prototype, "view", void 0), m16 = e2([a3("esri.widgets.support.AnchorElementViewModel")], m16);
var h10 = m16;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t14 = "esri.widgets.CompassViewModel";
var p12 = class extends h10 {
  constructor(s29) {
    super(s29), this.visible = false;
  }
};
e2([y2()], p12.prototype, "visible", void 0), p12 = e2([a3(t14)], p12);
var c22 = p12;

// node_modules/@arcgis/core/widgets/Spinner.js
var c23 = "esri-spinner";
var p13 = { base: c23, spinnerStart: `${c23}--start`, spinnerFinish: `${c23}--finish` };
var h11 = class extends W {
  constructor(i37, e24) {
    super(i37, e24), this._animationDelay = 500, this._animationPromise = null, this.viewModel = new c22();
  }
  initialize() {
    this.addHandles(l3(() => this.visible, (i37) => this._visibleChange(i37)));
  }
  destroy() {
    this._animationPromise = null;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(i37) {
    this.viewModel.location = i37;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(i37) {
    this.viewModel.view = i37;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(i37) {
    this.viewModel.visible = i37;
  }
  show(i37) {
    const { location: e24, promise: t32 } = i37 ?? {};
    e24 && (this.viewModel.location = e24), this.visible = true;
    const s29 = () => this.hide();
    t32 && t32.catch(() => {
    }).then(s29);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i37 } = this, { screenLocation: e24 } = this.viewModel, t32 = !!e24, s29 = i37 && t32, o30 = !i37 && t32, r28 = { [p13.spinnerStart]: s29, [p13.spinnerFinish]: o30 }, n32 = this._getPositionStyles();
    return n5("div", { class: this.classes(p13.base, r28), styles: n32 });
  }
  _visibleChange(i37) {
    if (i37)
      return void (this.viewModel.screenLocationEnabled = true);
    const e24 = U(this._animationDelay);
    this._animationPromise = e24, e24.catch(() => {
    }).then(() => {
      this._animationPromise === e24 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i37, view: t32 } = this.viewModel;
    if (t(t32) || t(i37))
      return {};
    const { padding: s29 } = t32;
    return { left: i37.x - s29.left + "px", top: i37.y - s29.top + "px" };
  }
};
e2([y2()], h11.prototype, "location", null), e2([y2()], h11.prototype, "view", null), e2([y2({ type: c22 })], h11.prototype, "viewModel", void 0), e2([y2()], h11.prototype, "visible", null), h11 = e2([a3("esri.widgets.Spinner")], h11);
var m17 = h11;

// node_modules/@arcgis/core/widgets/Popup/actions.js
var s17 = { iconZoom: "esri-icon-zoom-in-magnifying-glass", iconTrash: "esri-icon-trash", iconBrowseClusteredFeatures: "esri-icon-table" };
var o14 = new a13({ id: "zoom-to-feature", title: "{messages.zoom}", className: s17.iconZoom });
var t15 = new a13({ id: "remove-selected-feature", title: "{messages.remove}", className: s17.iconTrash });
var r18 = new a13({ id: "zoom-to-clustered-features", title: "{messages.zoom}", className: s17.iconZoom });
var i18 = new a13({ id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: s17.iconBrowseClusteredFeatures });

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var u12 = "esri.widgets.Popup.PopupViewModel";
var l17 = s2.getLogger(u12);
var d9 = (t32) => {
  const { event: r28, view: o30 } = t32, { action: u24 } = r28, l27 = o30 && o30.popup;
  if (!u24)
    return Promise.reject(new s3("trigger-action:missing-arguments", "Event has no action"));
  if (!l27)
    return Promise.reject(new s3("trigger-action:missing-arguments", "view.popup is missing"));
  const { disabled: d18, id: g18 } = u24;
  if (!g18)
    return Promise.reject(new s3("trigger-action:invalid-action", "action.id is missing"));
  if (d18)
    return Promise.reject(new s3("trigger-action:invalid-action", "Action is disabled"));
  if (g18 === o14.id)
    return p14(l27.viewModel).catch(b);
  if (g18 === r18.id)
    return m18(l27.viewModel);
  if (g18 === i18.id)
    return l27.featureMenuOpen = !l27.featureMenuOpen, l27.viewModel.browseClusterEnabled = !l27.viewModel.browseClusterEnabled, Promise.resolve();
  if (l27.viewModel.browseClusterEnabled = false, g18 === t15.id) {
    l27.close();
    const { selectedFeature: t33 } = l27;
    if (!t33)
      return Promise.reject(new s3(`trigger-action:${t15.id}`, "selectedFeature is required", { selectedFeature: t33 }));
    const { sourceLayer: r29 } = t33;
    return r29 ? r29.remove(t33) : o30.graphics.remove(t33), Promise.resolve();
  }
  return Promise.resolve();
};
function g11(e24) {
  const { selectedFeature: t32, location: r28, view: o30 } = e24;
  if (!o30)
    return null;
  if ("3d" === o30.type)
    return t32 ?? r28 ?? null;
  return e24.get("selectedFeature.geometry") || r28;
}
function w14(e24) {
  var _a, _b;
  return !!e24 && e24.isAggregate && "cluster" === ((_b = (_a = e24.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
async function f12(e24, t32) {
  if ("3d" !== (t32 == null ? void 0 : t32.type) || !e24 || "esri.Graphic" !== e24.declaredClass)
    return true;
  const r28 = t32.getViewForGraphic(e24);
  if (r28 && "whenGraphicBounds" in r28) {
    let t33;
    try {
      t33 = await r28.whenGraphicBounds(e24, { useViewElevation: true });
    } catch (o30) {
    }
    return !t33 || !t33.boundingBox || t33.boundingBox[0] === t33.boundingBox[3] && t33.boundingBox[1] === t33.boundingBox[4] && t33.boundingBox[2] === t33.boundingBox[5];
  }
  return true;
}
async function p14(t32) {
  var _a;
  const { location: o30, selectedFeature: i37, view: a36, zoomFactor: s29 } = t32, c39 = g11(t32);
  if (!a36 || !c39) {
    const t33 = new s3("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: c39, view: a36 });
    throw l17.error(t33), t33;
  }
  const u24 = a36.scale / s29, d18 = (_a = t32.selectedFeature) == null ? void 0 : _a.geometry, w18 = d18 ?? o30, p33 = r(w18) && "point" === w18.type && await f12(i37, a36);
  o14.active = true, o14.disabled = true;
  try {
    await t32.zoomTo({ target: { target: c39, scale: p33 ? u24 : void 0 } });
  } catch (m27) {
    const t33 = new s3("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: i37 });
    l17.error(t33);
  } finally {
    o14.active = false, o14.disabled = false, t32.zoomToLocation = null, p33 && (t32.location = w18);
  }
}
async function m18(t32) {
  const { selectedFeature: r28, view: o30 } = t32;
  if ("2d" !== (o30 == null ? void 0 : o30.type)) {
    const t33 = new s3("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: o30 });
    throw l17.error(t33), t33;
  }
  if (!r28 || !w14(r28)) {
    const t33 = new s3("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r28 });
    throw l17.error(t33), t33;
  }
  const [i37, n32] = await h12(o30, r28);
  r18.active = true, r18.disabled = true;
  const { extent: s29 } = await i37.queryExtent(n32);
  await t32.zoomTo({ target: s29 }), r18.active = false, r18.disabled = false;
}
async function v12(e24) {
  const { view: t32, selectedFeature: r28 } = e24;
  if (!t32 || !r28)
    return;
  const [o30, i37] = await h12(t32, r28), { extent: n32 } = await o30.queryExtent(i37);
  e24.selectedClusterBoundaryFeature.geometry = n32, t32.graphics.add(e24.selectedClusterBoundaryFeature);
}
async function y10(e24) {
  var _a;
  const { selectedFeature: t32, view: r28 } = e24;
  if (!r28 || !t32)
    return;
  const [o30, i37] = await h12(r28, t32);
  i18.active = true, i18.disabled = true;
  const { features: n32 } = await o30.queryFeatures(i37);
  i18.active = false, i18.disabled = false, (_a = r28.popup) == null ? void 0 : _a.open({ features: [t32].concat(n32), featureMenuOpen: true });
}
async function h12(e24, t32) {
  const r28 = await e24.whenLayerView(t32.sourceLayer), o30 = r28.createQuery(), i37 = t32.getObjectId();
  return o30.aggregateIds = null != i37 ? [i37] : [], [r28, o30];
}
function b13(e24) {
  const t32 = e24.features.filter((e25) => w14(e25));
  t32.length && (e24.features = t32);
}
function F7(e24) {
  var _a;
  if (t(e24))
    return null;
  switch (e24.type) {
    case "point":
      return e24;
    case "extent":
      return e24.center;
    case "polygon":
      return e24.centroid;
    case "multipoint":
    case "polyline":
      return (_a = e24.extent) == null ? void 0 : _a.center;
    default:
      return null;
  }
}

// node_modules/@arcgis/core/widgets/Popup/css.js
var e17 = "esri-popup";
var t16 = `${e17}__header`;
var o15 = `${e17}--is-docked`;
var n17 = { calciteThemeLight: "calcite-mode-light", calciteThemeDark: "calcite-mode-dark", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow", iconDockToTop: "esri-icon-maximize", iconDockToBottom: "esri-icon-dock-bottom", iconDockToLeft: "esri-icon-dock-left", iconDockToRight: "esri-icon-dock-right", iconClose: "esri-icon-close", iconUndock: "esri-icon-minimize", iconCheckMark: "esri-icon-check-mark", iconLoading: "esri-icon-loading-indicator", iconDefaultAction: "esri-icon-default-action", iconActionsMenu: "esri-icon-handle-horizontal", rotating: "esri-rotating", base: e17, widget: "esri-widget", main: `${e17}__main-container`, loadingContainer: `${e17}__loading-container`, isCollapsible: `${e17}--is-collapsible`, isCollapsed: `${e17}--is-collapsed`, shadow: `${e17}--shadow`, isDocked: o15, isDockedTopLeft: `${o15}-top-left`, isDockedTopCenter: `${o15}-top-center`, isDockedTopRight: `${o15}-top-right`, isDockedBottomLeft: `${o15}-bottom-left`, isDockedBottomCenter: `${o15}-bottom-center`, isDockedBottomRight: `${o15}-bottom-right`, alignTopCenter: `${e17}--aligned-top-center`, alignBottomCenter: `${e17}--aligned-bottom-center`, alignTopLeft: `${e17}--aligned-top-left`, alignBottomLeft: `${e17}--aligned-bottom-left`, alignTopRight: `${e17}--aligned-top-right`, alignBottomRight: `${e17}--aligned-bottom-right`, isFeatureMenuOpen: `${e17}--feature-menu-open`, isActionsMenuOpen: `${e17}--actions-menu-open`, hasFeatureUpdated: `${e17}--feature-updated`, header: t16, headerButtons: `${t16}-buttons`, headerContainer: `${t16}-container`, headerContainerButton: `${t16}-container--button`, headerTitle: `${t16}-title`, content: `${e17}__content`, contentHasFlows: "esri-content--has-flows", contentFlowItem: "esri-content__flow-item", footer: `${e17}__footer`, footerHasPagination: `${e17}__footer--has-pagination`, footerHasActions: `${e17}__footer--has-actions`, footerHasActionsMenu: `${e17}__footer--has-actions-menu`, button: `${e17}__button`, buttonDisabled: `${e17}__button--disabled`, buttonDock: `${e17}__button--dock`, icon: `${e17}__icon`, iconDock: `${e17}__icon--dock-icon`, inlineActionsContainer: `${e17}__inline-actions-container`, actionsMenuButton: `${e17}__actions-menu-button`, actions: `${e17}__actions`, action: `${e17}__action`, actionImage: `${e17}__action-image`, actionText: `${e17}__action-text`, actionToggle: `${e17}__action-toggle`, actionToggleOn: `${e17}__action-toggle--on`, actionExit: `${e17}__action--exit`, actionSelectFeature: `${e17}__action--select-feature`, pointer: `${e17}__pointer`, pointerDirection: `${e17}__pointer-direction`, navigation: `${e17}__navigation`, paginationPrevious: `${e17}__pagination-previous`, paginationNext: `${e17}__pagination-next`, paginationPreviousIconLTR: `${e17}__pagination-previous-icon`, paginationPreviousIconRTL: `${e17}__pagination-previous-icon--rtl`, paginationNextIconLTR: `${e17}__pagination-next-icon`, paginationNextIconRTL: `${e17}__pagination-next-icon--rtl`, featureMenu: `${e17}__feature-menu`, featureMenuList: `${e17}__feature-menu-list`, featureMenuItem: `${e17}__feature-menu-item`, featureMenuViewport: `${e17}__feature-menu-viewport`, featureMenuHeader: `${e17}__feature-menu-header`, featureMenuNote: `${e17}__feature-menu-note`, featureMenuSelected: `${e17}__feature-menu-item--selected`, featureMenuButton: `${e17}__feature-menu-button`, featureMenuTitle: `${e17}__feature-menu-title`, featureMenuObserver: `${e17}__feature-menu-observer`, featureMenuLoader: `${e17}__feature-menu-loader`, collapseButton: `${e17}__collapse-button`, collapseIcon: `${e17}__collapse-icon` };

// node_modules/@arcgis/core/layers/LayerConstants.js
var o16 = "OBJECTID";

// node_modules/@arcgis/core/widgets/Legend/styles/support/relationshipUtils.js
var b14 = "esri-relationship-ramp";
var u13 = `${b14}--diamond`;
var c24 = `${b14}--square`;
var p15 = { diamondContainer: `${u13}__container`, diamondLeftCol: `${u13}__left-column`, diamondRightCol: `${u13}__right-column`, diamondMidCol: `${u13}__middle-column`, diamondMidColLabel: `${u13}__middle-column--label`, diamondMidColRamp: `${u13}__middle-column--ramp`, squareTable: `${c24}__table`, squareTableRow: `${c24}__table-row`, squareTableCell: `${c24}__table-cell`, squareTableLabel: `${c24}__table-label`, squareTableLabelLeftBottom: `${c24}__table-label--left-bottom`, squareTableLabelRightBottom: `${c24}__table-label--right-bottom`, squareTableLabelLeftTop: `${c24}__table-label--left-top`, squareTableLabelRightTop: `${c24}__table-label--right-top` };

// node_modules/@arcgis/core/symbols/support/symbolUtils.js
function j10(e24) {
  return e24 && "opacity" in e24 ? e24.opacity * j10(e24.parent) : 1;
}
async function R7(i37, s29) {
  if (!i37)
    return;
  const o30 = i37.sourceLayer, n32 = (r(s29) && s29.useSourceLayer ? o30 : i37.layer) ?? o30, a36 = j10(n32);
  if (r(i37.symbol) && (!r(s29) || true !== s29.ignoreGraphicSymbol)) {
    const t32 = "web-style" === i37.symbol.type ? await F(i37.symbol, { ...s29, cache: r(s29) ? s29.webStyleCache : null }) : i37.symbol.clone();
    return S3(t32, null, a36), t32;
  }
  const h23 = (r(s29) ? s29.renderer : null) ?? (n32 && "renderer" in n32 ? n32.renderer : null);
  let y17 = h23 && "getSymbolAsync" in h23 ? await h23.getSymbolAsync(i37, s29) : null;
  if (!y17)
    return;
  if (y17 = "web-style" === y17.type ? await y17.fetchSymbol({ ...s29, cache: r(s29) ? s29.webStyleCache : null }) : y17.clone(), !(h23 && "visualVariables" in h23 && h23.visualVariables && h23.visualVariables.length))
    return S3(y17, null, a36), y17;
  if ("arcadeRequiredForVisualVariables" in h23 && h23.arcadeRequiredForVisualVariables && (t(s29) || t(s29.arcade))) {
    const e24 = { ...e(s29) };
    e24.arcade = await i12(), s29 = e24;
  }
  const d18 = await import("./visualVariableUtils-RQPYOUB4.js"), m27 = [], g18 = [], b18 = [], w18 = [];
  for (const e24 of h23.visualVariables)
    switch (e24.type) {
      case "color":
        m27.push(e24);
        break;
      case "opacity":
        g18.push(e24);
        break;
      case "rotation":
        w18.push(e24);
        break;
      case "size":
        e24.target || b18.push(e24);
    }
  const S8 = !!m27.length && m27[m27.length - 1], v16 = S8 ? d18.getColor(S8, i37, s29) : null, V5 = !!g18.length && g18[g18.length - 1];
  let x4 = V5 ? d18.getOpacity(V5, i37, s29) : null;
  if (null != a36 && (x4 = null != x4 ? x4 * a36 : a36), S3(y17, v16, x4), b18.length) {
    const e24 = d18.getAllSizes(b18, i37, s29);
    await J(y17, e24);
  }
  for (const e24 of w18)
    N(y17, d18.getRotationAngle(e24, i37, s29), e24.axis);
  return y17;
}

// node_modules/@arcgis/core/views/support/layerViewUtils.js
function t18(n32) {
  return n32 && "function" == typeof n32.highlight;
}

// node_modules/@arcgis/core/widgets/support/GoTo.js
var t19 = (t32) => {
  let i37 = class extends t32 {
    constructor(...o30) {
      super(...o30), this.goToOverride = null, this.view = null;
    }
    callGoTo(o30) {
      const { view: e24 } = this;
      return i(e24), this.goToOverride ? this.goToOverride(e24, o30) : e24.goTo(o30.target, o30.options);
    }
  };
  return e2([y2()], i37.prototype, "goToOverride", void 0), e2([y2()], i37.prototype, "view", void 0), i37 = e2([a3("esri.widgets.support.GoTo")], i37), i37;
};

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var B3 = j2.ofType({ key: "type", defaultKeyValue: "button", base: c9, typeMap: { button: a13, toggle: a14 } });
var R8 = () => [o14.clone()];
var G3 = () => [r18.clone(), i18.clone()];
var z4 = class extends t19(h10) {
  get isLoadingFeature() {
    return this.featureViewModels.some((e24) => e24.waitingForContent);
  }
  constructor(e24) {
    super(e24), this._handles = new t3(), this._pendingPromises = /* @__PURE__ */ new Set(), this._fetchFeaturesController = null, this._highlightSelectedFeaturePromise = null, this._highlightActiveFeaturePromise = null, this._selectedClusterFeature = null, this.featurePage = null, this.actions = new B3(), this.activeFeature = null, this.defaultPopupTemplateEnabled = false, this.autoCloseEnabled = false, this.autoOpenEnabled = true, this.browseClusterEnabled = false, this.content = null, this.featuresPerPage = 20, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.selectedClusterBoundaryFeature = new g3({ symbol: new S2({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null;
  }
  initialize() {
    this._handles.add([l3(() => [this.autoOpenEnabled, this.view], () => this._autoOpenEnabledChange()), this.on("view-change", () => this._autoClose()), l3(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), l3(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e24) => this._animationStateChange(e24)), l3(() => this.location, (e24) => this._locationChange(e24)), l3(() => this.selectedFeature, (e24) => this._selectedFeatureChange(e24)), l3(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), l3(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), l3(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e24) => d9({ event: e24, view: this.view })), f3(() => !this.waitingForResult, () => this._waitingForResultChange(), U2), l3(() => {
      var _a, _b;
      return [this.features, (_a = this.view) == null ? void 0 : _a.map, (_b = this.view) == null ? void 0 : _b.spatialReference];
    }, () => this._updateFeatureVMs()), l3(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), f3(() => !this.visible, () => this.browseClusterEnabled = false), l3(() => this.browseClusterEnabled, (e24) => e24 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._handles.destroy(), this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e24 = this._get("allActions") || new B3();
    e24.removeAll();
    const { actions: t32, defaultActions: s29, defaultPopupTemplateEnabled: i37, includeDefaultActions: r28, selectedFeature: o30 } = this, a36 = r28 ? s29.concat(t32) : t32, n32 = o30 && ("function" == typeof o30.getEffectivePopupTemplate && o30.getEffectivePopupTemplate(i37) || o30.popupTemplate), l27 = n32 && n32.actions, h23 = n32 && n32.overwriteActions ? l27 : l27 ? l27.concat(a36) : a36;
    return h23 && h23.filter(Boolean).forEach((t33) => e24.add(t33)), e24;
  }
  get defaultActions() {
    const e24 = this._get("defaultActions") || new B3();
    return e24.removeAll(), e24.addMany(w14(this.selectedFeature) ? G3() : R8()), e24;
  }
  get featureCount() {
    return this.features.length;
  }
  get features() {
    return this._get("features") || [];
  }
  set features(e24) {
    const t32 = e24 || [];
    this._set("features", t32);
    const { pendingPromisesCount: s29, promiseCount: i37, selectedFeatureIndex: r28 } = this, o30 = i37 && t32.length;
    o30 && s29 && -1 === r28 ? this.selectedFeatureIndex = 0 : o30 && -1 !== r28 || (this.selectedFeatureIndex = t32.length ? 0 : -1);
  }
  get location() {
    return this._get("location") || null;
  }
  set location(e24) {
    var _a, _b, _c;
    let t32 = e24;
    const s29 = (_b = (_a = this.view) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.isWebMercator;
    e24 && ((_c = e24 == null ? void 0 : e24.spatialReference) == null ? void 0 : _c.isWGS84) && s29 && (t32 = R(e24)), this._set("location", t32);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e24) {
    if (this._pendingPromises.clear(), this.features = [], !Array.isArray(e24) || !e24.length)
      return this._set("promises", []), void this.notifyChange("pendingPromisesCount");
    this._set("promises", e24), (e24 = e24.slice(0)).forEach((e25) => {
      this._pendingPromises.add(e25);
      const t32 = (t33) => {
        this._pendingPromises.has(e25) && this._updateFeatures(t33), this._updatePendingPromises(e25);
      }, s29 = () => this._updatePendingPromises(e25);
      e25.then(t32, s29);
    }), this.notifyChange("pendingPromisesCount");
  }
  get selectedFeature() {
    const { features: e24, selectedFeatureIndex: t32 } = this;
    if (-1 === t32)
      return null;
    return e24[t32] || null;
  }
  get selectedFeatureIndex() {
    const e24 = this._get("selectedFeatureIndex");
    return "number" == typeof e24 ? e24 : -1;
  }
  set selectedFeatureIndex(e24) {
    const { featureCount: t32 } = this;
    e24 = isNaN(e24) || e24 < -1 || !t32 ? -1 : (e24 + t32) % t32, this.activeFeature = null, this._set("selectedFeatureIndex", e24);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get state() {
    return this.get("view.ready") ? "ready" : "disabled";
  }
  centerAtLocation() {
    const { view: e24 } = this, t32 = g11(this);
    return t32 && e24 ? this.callGoTo({ target: { target: t32, scale: e24.scale } }) : Promise.reject(new s3("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t32, view: e24 }));
  }
  zoomTo(e24) {
    return this.callGoTo(e24);
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e24, t32) {
    const { view: s29 } = this;
    if (!s29 || !e24)
      throw new s3("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e24, view: s29 });
    return s29.fetchPopupFeatures(e24, { event: t32 && t32.event, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t32 && t32.signal });
  }
  open(e24) {
    const t32 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e24, visible: true }, { fetchFeatures: s29 } = t32;
    delete t32.fetchFeatures, s29 && this._setFetchFeaturesPromises(t32.location);
    const i37 = ["actionsMenuOpen", "collapsed", "featureMenuOpen"];
    for (const r28 of i37)
      delete t32[r28];
    this.set(t32);
  }
  triggerAction(e24) {
    const t32 = this.allActions.getItemAt(e24);
    t32 && !t32.disabled && this.emit("trigger-action", { action: t32 });
  }
  next() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex + 1, this;
  }
  previous() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex - 1, this;
  }
  disableClusterBrowsing() {
    b13(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e24, selectedFeature: t32 } = this;
    "2d" === (e24 == null ? void 0 : e24.type) ? w14(t32) ? (await v12(this), await y10(this)) : s2.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t32) : s2.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t32);
  }
  _animationStateChange(e24) {
    this.zoomToLocation || (o14.disabled = "waiting-for-target" === e24);
  }
  _clearBrowsedClusterGraphics() {
    var _a;
    const e24 = (_a = this.view) == null ? void 0 : _a.graphics;
    e24 && (e24.remove(this.selectedClusterBoundaryFeature), this._selectedClusterFeature && e24.remove(this._selectedClusterFeature)), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (w14(this.selectedFeature))
      return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = this.selectedFeature ? [this.selectedFeature] : []);
  }
  _locationChange(e24) {
    const { selectedFeature: t32, updateLocationEnabled: s29 } = this;
    s29 && e24 && (!t32 || t32.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 1 ? Math.floor(this.selectedFeatureIndex / this.featuresPerPage) + 1 : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 1 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e24, featureCount: t32, featurePage: s29, featuresPerPage: i37, featureViewModels: r28 } = this;
    if (null === s29)
      return;
    const o30 = ((s29 - 1) * i37 + t32) % t32, a36 = o30 + i37;
    r28.slice(o30, a36).forEach((t33, s30) => {
      t33 && !t33.graphic && (t33.graphic = e24[o30 + s30]);
    });
  }
  async _selectedFeatureChange(e24) {
    const { location: t32, updateLocationEnabled: s29, view: i37 } = this;
    if (e24 && i37) {
      if (this.browseClusterEnabled) {
        if (this._selectedClusterFeature && (i37.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), w14(e24))
          return;
        return e24.symbol = await R7(e24), this._selectedClusterFeature = e24, void i37.graphics.add(this._selectedClusterFeature);
      }
      !s29 && t32 || !e24.geometry ? s29 && !e24.geometry && this.centerAtLocation().then(() => {
        var _a;
        const e25 = (_a = i37.center) == null ? void 0 : _a.clone();
        e25 && (this.location = e25);
      }) : this.location = e(F7(e24.geometry));
    }
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  _setFetchFeaturesPromises(e24) {
    return this._fetchFeaturesWithController(this._getScreenPoint(e24 || this.location)).then((e25) => {
      const { clientOnlyGraphics: t32, promisesPerLayerView: s29 } = e25, i37 = Promise.resolve(t32), r28 = s29.map((e26) => e26.promise);
      this.promises = [i37, ...r28];
    });
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e24) => e24 && !e24.destroyed && e24.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e24, features: t32, featureViewModels: s29 } = this;
    if (w14(e24) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !t32 || !t32.length)
      return;
    const i37 = s29.slice(0), r28 = [];
    t32.forEach((t33, s30) => {
      var _a, _b;
      if (!t33)
        return;
      let o30 = null;
      if (i37.some((e25, s31) => (e25 && e25.graphic === t33 && (o30 = e25, i37.splice(s31, 1)), !!o30)), o30)
        r28[s30] = o30;
      else {
        const i38 = new X2({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference, graphic: t33 === e24 ? t33 : null, map: (_b = this.view) == null ? void 0 : _b.map, view: this.view });
        r28[s30] = i38;
      }
    }), i37.forEach((e25) => e25 && !e25.destroyed && e25.destroy()), this._set("featureViewModels", r28);
  }
  _getScreenPoint(e24) {
    const { view: t32 } = this;
    return t32 && e24 && "function" == typeof t32.toScreen ? t32.toScreen(e24) : null;
  }
  _autoOpenEnabledChange() {
    const e24 = "auto-fetch-features", { _handles: t32, autoOpenEnabled: s29 } = this;
    if (t32.remove(e24), s29 && this.view) {
      const s30 = this.view.on("click", (e25) => {
        "mouse" === e25.pointerType && 0 !== e25.button || this._fetchFeaturesAndOpen(e25);
      }, P.WIDGET);
      t32.add(s30, e24);
    }
  }
  _cancelFetchingFeatures() {
    const e24 = this._fetchFeaturesController;
    e24 && e24.abort(), this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
  }
  _fetchFeaturesWithController(e24, t32) {
    this._cancelFetchingFeatures();
    const s29 = new AbortController(), { signal: i37 } = s29;
    this._fetchFeaturesController = s29, this.notifyChange("waitingForResult");
    const r28 = this.fetchFeatures(e24, { signal: i37, event: t32 });
    return r28.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
    }), r28;
  }
  _fetchFeaturesAndOpen(e24) {
    const { screenPoint: t32, mapPoint: s29 } = e24, { view: i37 } = this;
    this._fetchFeaturesWithController(t32, e24).then((e25) => {
      var _a;
      const { clientOnlyGraphics: t33, promisesPerLayerView: r28, location: o30 } = e25, a36 = [Promise.resolve(t33), ...r28.map((e26) => e26.promise)];
      return (_a = i37 == null ? void 0 : i37.popup) == null ? void 0 : _a.open({ location: o30 || s29, promises: a36 }), e25;
    });
  }
  _updatePendingPromises(e24) {
    e24 && this._pendingPromises.has(e24) && (this._pendingPromises.delete(e24), this.notifyChange("pendingPromisesCount"));
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  async _getLayerView(e24, t32) {
    return await e24.when(), e24.whenLayerView(t32);
  }
  _getHighlightLayer(e24) {
    const { layer: t32, sourceLayer: s29 } = e24;
    return s29 && "layer" in s29 && s29.layer ? s29.layer : "map-notes" === (s29 == null ? void 0 : s29.type) || "subtype-group" === (s29 == null ? void 0 : s29.type) ? s29 : t32;
  }
  _getHighlightTarget(e24, t32) {
    const s29 = "imagery" === t32.type ? void 0 : "objectIdField" in t32 ? t32.objectIdField || o16 : null, i37 = e24.attributes;
    return i37 && s29 && i37[s29] || e24;
  }
  async _highlightActiveFeature() {
    const e24 = "highlight-active-feature";
    this._handles.remove(e24);
    const { highlightEnabled: t32, view: s29, activeFeature: i37, visible: r28 } = this;
    if (!(i37 && s29 && t32 && r28))
      return;
    const o30 = this._getHighlightLayer(i37);
    if (!(o30 && o30 instanceof b4))
      return;
    const a36 = this._getLayerView(s29, o30);
    this._highlightActiveFeaturePromise = a36;
    const n32 = await a36;
    if (!(n32 && t18(n32) && this._highlightActiveFeaturePromise === a36 && this.activeFeature && this.highlightEnabled))
      return;
    const l27 = n32.highlight(this._getHighlightTarget(i37, o30));
    this._handles.add(l27, e24);
  }
  async _highlightSelectedFeature() {
    const e24 = "highlight-selected-feature";
    this._handles.remove(e24);
    const { selectedFeature: t32, highlightEnabled: s29, view: i37, visible: r28 } = this;
    if (!(t32 && i37 && s29 && r28))
      return;
    const o30 = this._getHighlightLayer(t32);
    if (!(o30 && o30 instanceof b4))
      return;
    const a36 = this._getLayerView(i37, o30);
    this._highlightSelectedFeaturePromise = a36;
    const n32 = await a36;
    if (!(n32 && t18(n32) && this._highlightSelectedFeaturePromise === a36 && this.selectedFeature && this.highlightEnabled && this.visible))
      return;
    const l27 = n32.highlight(this._getHighlightTarget(t32, o30));
    this._handles.add(l27, e24);
  }
  _updateFeatures(e24) {
    const { features: t32 } = this;
    if (!e24 || !e24.length)
      return;
    if (!t32.length)
      return void (this.features = e24);
    const s29 = e24.filter((e25) => !t32.includes(e25));
    this.features = t32.concat(s29);
  }
};
e2([y2()], z4.prototype, "featurePage", void 0), e2([y2()], z4.prototype, "isLoadingFeature", null), e2([y2({ type: B3 })], z4.prototype, "actions", void 0), e2([y2({ readOnly: true })], z4.prototype, "active", null), e2([y2()], z4.prototype, "activeFeature", void 0), e2([y2({ readOnly: true })], z4.prototype, "allActions", null), e2([y2({ type: Boolean })], z4.prototype, "defaultPopupTemplateEnabled", void 0), e2([y2()], z4.prototype, "autoCloseEnabled", void 0), e2([y2()], z4.prototype, "autoOpenEnabled", void 0), e2([y2()], z4.prototype, "browseClusterEnabled", void 0), e2([y2()], z4.prototype, "content", void 0), e2([y2({ type: B3, readOnly: true })], z4.prototype, "defaultActions", null), e2([y2({ readOnly: true })], z4.prototype, "featureCount", null), e2([y2()], z4.prototype, "features", null), e2([y2()], z4.prototype, "featuresPerPage", void 0), e2([y2()], z4.prototype, "featureViewModelAbilities", void 0), e2([y2({ readOnly: true })], z4.prototype, "featureViewModels", void 0), e2([y2()], z4.prototype, "highlightEnabled", void 0), e2([y2()], z4.prototype, "includeDefaultActions", void 0), e2([y2({ type: w2 })], z4.prototype, "location", null), e2([y2({ readOnly: true })], z4.prototype, "pendingPromisesCount", null), e2([y2({ readOnly: true })], z4.prototype, "selectedClusterBoundaryFeature", void 0), e2([y2({ readOnly: true })], z4.prototype, "waitingForResult", null), e2([y2({ readOnly: true })], z4.prototype, "promiseCount", null), e2([y2()], z4.prototype, "promises", null), e2([y2({ value: null, readOnly: true })], z4.prototype, "selectedFeature", null), e2([y2({ value: -1 })], z4.prototype, "selectedFeatureIndex", null), e2([y2({ readOnly: true })], z4.prototype, "selectedFeatureViewModel", null), e2([y2({ readOnly: true })], z4.prototype, "state", null), e2([y2()], z4.prototype, "title", void 0), e2([y2()], z4.prototype, "updateLocationEnabled", void 0), e2([y2()], z4.prototype, "view", void 0), e2([y2()], z4.prototype, "visible", void 0), e2([y2()], z4.prototype, "zoomFactor", void 0), e2([y2()], z4.prototype, "zoomToLocation", void 0), e2([y2()], z4.prototype, "centerAtLocation", null), z4 = e2([a3("esri.widgets.Popup.PopupViewModel")], z4);
var H4 = z4;

// node_modules/@arcgis/core/widgets/Popup.js
var B4 = "selected-index";
var D3 = 0;
var L5 = "popup-spinner";
var S7 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var R9 = "esri-popup";
function V3(e24, t32) {
  return void 0 === t32 ? `${R9}__${e24}` : `${R9}__${e24}-${t32}`;
}
var U7 = { closeButton: true, featureNavigation: true };
var W5 = class extends i17(W) {
  constructor(e24, i37) {
    super(e24, i37), this._blurClose = false, this._blurContainer = false, this._containerNode = null, this._mainContainerNode = null, this._featureMenuNode = null, this._actionsMenuNode = null, this._focusClose = false, this._focusContainer = false, this._focusDockButton = false, this._focusFeatureMenuButton = false, this._focusActionsMenuButton = false, this._focusFirstFeature = false, this._focusFirstAction = false, this._handles = new t3(), this._pointerOffsetInPx = 16, this._spinner = null, this._feature = null, this._featureMenuIntersectionObserverNode = null, this._featureMenuViewportNode = null, this._rootFlowItemNode = null, this._featureMenuIntersectionObserverCallback = ([e25]) => {
      (e25 == null ? void 0 : e25.isIntersecting) && null != this.viewModel.featurePage && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._displaySpinnerThrottled = e9(() => this._displaySpinner(), D3), this._exitRelatedRecordsActions = /* @__PURE__ */ new WeakMap(), this._featureSelectionActions = /* @__PURE__ */ new WeakMap(), this._flowItems = new j2(), this.alignment = "auto", this.collapsed = false, this.collapseEnabled = true, this.dockEnabled = false, this.featureMenuOpen = false, this.headingLevel = 2, this.maxInlineActions = 3, this.messages = null, this.messagesCommon = null, this.spinnerEnabled = true, this.viewModel = new H4(), this.visibleElements = { ...U7 }, this._handleOpenRelatedFeature = (e25) => {
      this._openRelatedFeature(e25);
    }, this._addSelectedFeatureIndexHandle(), this.addHandles([l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), l3(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, (e25, t32) => {
      !!e25 != !!t32 && this.reposition();
    }), l3(() => {
      var _a, _b, _c, _d, _e2, _f;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding, (_d = (_c = this.viewModel) == null ? void 0 : _c.view) == null ? void 0 : _d.size, (_e2 = this.viewModel) == null ? void 0 : _e2.active, (_f = this.viewModel) == null ? void 0 : _f.location, this.alignment];
    }, () => this.reposition()), l3(() => this.spinnerEnabled, (e25) => this._spinnerEnabledChange(e25)), l3(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e25, t32) => this._updateDockEnabledForViewSize(e25, t32)), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e25, t32) => this._viewChange(e25, t32)), l3(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e25, t32) => this._viewReadyChange(e25 ?? false, t32 ?? false)), l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), l3(() => this.selectedFeatureWidget, () => this._destroyFlowItemWidgets()), l3(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.title, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setTitleFromFeatureWidget()), l3(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.content, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setContentFromFeatureWidget()), f3(() => !this.collapsed, () => {
      var _a, _b;
      "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && this.viewModel.active && this.collapseEnabled && this.viewModel.centerAtLocation();
    }), a6(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, "change", () => this._watchActions()), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, () => this._watchActions(), h), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop()), a6(() => this._flowItems, "change", () => {
      this.notifyChange("_activeFlowItemWidget"), this.scheduleRender();
    }), l3(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this._activeFlowItemWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.state, (_d = (_c = this._activeFlowItemWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.title];
    }, () => this.scheduleRender())]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-flow-4HF4WE45.js"), import("./calcite-flow-item-NQ2RJL6L.js"), import("./calcite-action-WOYWHAZI.js"), import("./calcite-tooltip-427RHRDE.js"), import("./calcite-icon-2ADQXYU4.js")]);
  }
  destroy() {
    var _a, _b;
    this._destroyFlowItemWidgets(), this._destroySelectedFeatureWidget(), this._destroySpinner(), (_a = this._handles) == null ? void 0 : _a.destroy(), this._unobserveFeatureMenuObserver(), (_b = this._featureMenuIntersectionObserver) == null ? void 0 : _b.disconnect();
  }
  get actionsMenuId() {
    return `${this.id}-actions-menu`;
  }
  get actionsMenuButtonId() {
    return `${this.id}-actions-menu-button`;
  }
  get featureMenuId() {
    return `${this.id}-feature-menu`;
  }
  get titleId() {
    return `${this.id}-popup-title`;
  }
  get contentId() {
    return `${this.id}-popup-content`;
  }
  get hasContent() {
    const { selectedFeatureWidget: e24, viewModel: t32 } = this;
    if (!e24)
      return !!(t32 == null ? void 0 : t32.content);
    const i37 = e24.viewModel;
    if ((i37 == null ? void 0 : i37.waitingForContent) || "error" === (i37 == null ? void 0 : i37.state))
      return true;
    const o30 = i37 == null ? void 0 : i37.content;
    return Array.isArray(o30) ? !!o30.length : !!o30;
  }
  get featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && null != this.visibleElements.featureNavigation;
  }
  get collapsible() {
    return !!(this.collapseEnabled && this.viewModel.title && this.hasContent);
  }
  get featureMenuVisible() {
    return this.featureNavigationVisible && this.featureMenuOpen;
  }
  get contentCollapsed() {
    return this.collapsible && !this.featureMenuVisible && this.collapsed;
  }
  get dividedActions() {
    return this._divideActions();
  }
  get _activeFlowItemWidget() {
    const { _flowItems: e24 } = this;
    return e24.getItemAt(e24.length - 1) || null;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e24) {
    this.viewModel.actions = e24;
  }
  set actionsMenuOpen(e24) {
    this._set("actionsMenuOpen", !!e24);
  }
  get actionsMenuOpen() {
    return !!this.viewModel.active && this._get("actionsMenuOpen");
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e24) {
    this.viewModel.autoCloseEnabled = e24;
  }
  get autoOpenEnabled() {
    return this.viewModel.autoOpenEnabled;
  }
  set autoOpenEnabled(e24) {
    this.viewModel.autoOpenEnabled = e24;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e24) {
    this.viewModel.defaultPopupTemplateEnabled = e24;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e24) {
    this.viewModel.content = e24;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || S7;
  }
  set dockOptions(e24) {
    var _a, _b;
    const t32 = { ...S7 }, i37 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.breakpoints, o30 = {};
    i37 && (o30.width = i37.xsmall, o30.height = i37.xsmall);
    const n32 = { ...t32, ...e24 }, s29 = { ...t32.breakpoint, ...o30 }, { breakpoint: r28 } = n32;
    "object" == typeof r28 ? n32.breakpoint = { ...s29, ...r28 } : r28 && (n32.breakpoint = s29), this._set("dockOptions", n32), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e24) {
    this.viewModel.features = e24;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e24) {
    this.viewModel.goToOverride = e24;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e24) {
    this.viewModel.highlightEnabled = e24;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e24) {
    this.viewModel.location = e24;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e24) {
    this._overrideIfSome("label", e24);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e24) {
    this.viewModel.promises = e24;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e24) {
    this.viewModel.selectedFeatureIndex = e24;
  }
  get selectedFeatureWidget() {
    const { _feature: e24, visibleElements: t32, headingLevel: i37, _flowItems: o30 } = this, { selectedFeatureViewModel: n32 } = this.viewModel, s29 = { ...t32, title: false };
    return n32 ? (e24 ? (e24.viewModel = n32, e24.visibleElements = s29) : this._feature = new C5({ flowItems: o30, headingLevel: i37 + 1, viewModel: n32, visibleElements: s29 }), this._feature) : null;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e24) {
    this.viewModel.title = e24;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e24) {
    this.viewModel.updateLocationEnabled = e24;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e24) {
    this.viewModel.view = e24;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e24) {
    this.viewModel.visible = e24;
  }
  castVisibleElements(e24) {
    return { ...U7, ...e24 };
  }
  blur() {
    const { active: e24 } = this.viewModel;
    e24 || s2.getLogger(this.declaredClass).warn("Popup can only be blurred when currently active."), this.visibleElements.closeButton ? this._blurClose = true : this._blurContainer = true, this.scheduleRender();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e24, t32) {
    return this.viewModel.fetchFeatures(e24, t32);
  }
  focus() {
    const { active: e24 } = this.viewModel;
    e24 || s2.getLogger(this.declaredClass).warn("Popup can only be focused when currently active."), this.visibleElements.closeButton ? this._focusClose = true : this._focusContainer = true, this.scheduleRender();
  }
  next() {
    return this.viewModel.next();
  }
  open(e24) {
    var _a, _b;
    this._handles.remove(B4);
    const t32 = !!e24 && !!e24.featureMenuOpen, i37 = !!e24 && !!e24.actionsMenuOpen, o30 = { collapsed: !!e24 && !!e24.collapsed, actionsMenuOpen: i37, featureMenuOpen: t32 };
    "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && (o30.collapsed = true), this.set(o30), this.viewModel.open(e24), this._shouldFocus(e24), this._addSelectedFeatureIndexHandle();
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e24) {
    return this.viewModel.triggerAction(e24);
  }
  render() {
    var _a, _b, _c, _d;
    const { actionsMenuOpen: e24, dockEnabled: t32, featureMenuVisible: i37, dividedActions: o30, currentAlignment: n32, currentDockPosition: s29 } = this, { active: r28 } = this.viewModel, { menuActions: l27 } = o30, a36 = r28 && l27.length > 1 && e24, c39 = r28 && t32, d18 = r28 && !t32, u24 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, h23 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, p33 = { [n17.alignTopCenter]: "top-center" === n32, [n17.alignBottomCenter]: "bottom-center" === n32, [n17.alignTopLeft]: "top-left" === n32, [n17.alignBottomLeft]: "bottom-left" === n32, [n17.alignTopRight]: "top-right" === n32, [n17.alignBottomRight]: "bottom-right" === n32, [n17.isDocked]: c39, [n17.shadow]: d18, [n17.isDockedTopLeft]: "top-left" === s29, [n17.isDockedTopCenter]: "top-center" === s29, [n17.isDockedTopRight]: "top-right" === s29, [n17.isDockedBottomLeft]: "bottom-left" === s29, [n17.isDockedBottomCenter]: "bottom-center" === s29, [n17.isDockedBottomRight]: "bottom-right" === s29, [n17.isFeatureMenuOpen]: i37, [n17.isActionsMenuOpen]: a36 };
    return n5("div", { class: this.classes(n17.base, p33), role: "presentation", "data-layer-title": u24, "data-layer-id": h23, bind: this, afterCreate: this._positionContainer, afterUpdate: this._positionContainer }, r28 ? [this.renderMainContainer(), this.renderPointer()] : null);
  }
  renderLoadingIcon() {
    return n5("span", { "aria-hidden": "true", class: this.classes(n17.icon, n17.iconLoading, n17.rotating) });
  }
  renderNavigationLoading() {
    const { messagesCommon: e24 } = this;
    return this.viewModel.pendingPromisesCount ? n5("div", { key: V3("loading-container"), role: "presentation", class: n17.loadingContainer, "aria-label": e24.loading, title: e24.loading }, this.renderLoadingIcon()) : null;
  }
  renderPreviousIcon() {
    const e24 = f4(this.container), t32 = { [n17.iconRightTriangleArrow]: e24, [n17.paginationPreviousIconRTL]: e24, [n17.iconLeftTriangleArrow]: !e24, [n17.paginationPreviousIconLTR]: !e24 };
    return n5("span", { "aria-hidden": "true", class: this.classes(n17.icon, t32) });
  }
  renderPreviousButton() {
    const { messages: e24 } = this;
    return n5("div", { role: "button", tabIndex: 0, bind: this, onclick: this._previous, onkeydown: this._previous, class: this.classes(n17.button, n17.paginationPrevious), "aria-label": e24.previous, title: e24.previous }, this.renderPreviousIcon());
  }
  renderNextIcon() {
    const e24 = f4(this.container), t32 = { [n17.iconLeftTriangleArrow]: e24, [n17.paginationNextIconRTL]: e24, [n17.iconRightTriangleArrow]: !e24, [n17.paginationNextIconLTR]: !e24 };
    return n5("span", { "aria-hidden": "true", class: this.classes(n17.icon, t32) });
  }
  renderNextButton() {
    const { messages: e24 } = this;
    return n5("div", { role: "button", tabIndex: 0, bind: this, onclick: this._next, onkeydown: this._next, class: this.classes(n17.button, n17.paginationNext), "aria-label": e24.next, title: e24.next }, this.renderNextIcon());
  }
  renderFeatureMenuButton() {
    const { featureMenuOpen: e24, featureMenuId: t32, messagesCommon: i37 } = this, { featureCount: o30, selectedFeatureIndex: n32 } = this.viewModel;
    return n5("div", { role: "button", tabIndex: 0, bind: this, onclick: this._toggleFeatureMenu, onkeydown: this._toggleFeatureMenu, afterCreate: this._focusFeatureMenuButtonNode, afterUpdate: this._focusFeatureMenuButtonNode, class: this.classes(n17.button, n17.featureMenuButton), "aria-haspopup": "true", "aria-controls": t32, "aria-expanded": e24.toString(), "aria-label": i37.menu, title: i37.menu }, this._getPageText(o30, n32));
  }
  renderNavigationButtons() {
    return this.featureNavigationVisible ? [this.renderPreviousButton(), this.renderNavigationLoading() || this.renderFeatureMenuButton(), this.renderNextButton()] : [];
  }
  renderDockIcon() {
    const { dockEnabled: e24 } = this, t32 = this._wouldDockTo(), i37 = { [n17.iconUndock]: e24, [n17.iconDock]: !e24, [n17.iconDockToRight]: !e24 && ("top-right" === t32 || "bottom-right" === t32), [n17.iconDockToLeft]: !e24 && ("top-left" === t32 || "bottom-left" === t32), [n17.iconDockToTop]: !e24 && "top-center" === t32, [n17.iconDockToBottom]: !e24 && "bottom-center" === t32 };
    return n5("span", { "aria-hidden": "true", class: this.classes(i37, n17.icon) });
  }
  renderDockButton() {
    var _a, _b, _c;
    const { dockEnabled: e24, messages: t32 } = this, i37 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, o30 = e24 ? t32.undock : t32.dock;
    return "xsmall" !== i37 && ((_c = this.dockOptions) == null ? void 0 : _c.buttonEnabled) ? n5("div", { role: "button", "aria-label": o30, title: o30, tabIndex: 0, bind: this, onclick: this._toggleDockEnabled, onkeydown: this._toggleDockEnabled, afterCreate: this._focusDockButtonNode, afterUpdate: this._focusDockButtonNode, class: this.classes(n17.button, n17.buttonDock) }, this.renderDockIcon()) : null;
  }
  renderTitle() {
    const { title: e24 } = this.viewModel, { titleId: t32, collapsible: i37, contentCollapsed: o30, messagesCommon: n32 } = this, s29 = { [n17.headerContainerButton]: i37 }, r28 = n5(n10, { level: this.headingLevel, class: n17.headerTitle, innerHTML: e24 ?? "" }), l27 = i37 ? n5("button", { key: `${e24}--collapsible`, id: t32, title: o30 ? n32.expand : n32.collapse, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(n17.headerContainer, s29), "aria-expanded": o30 ? "false" : "true", onclick: this._toggleCollapsed, type: "button" }, r28, n5("calcite-icon", { class: n17.collapseIcon, key: "collapse-icon", icon: o30 ? "chevron-down" : "chevron-up", scale: "m" })) : n5("div", { key: e24 ?? "title", id: t32, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(n17.headerContainer, s29) }, r28);
    return e24 ? l27 : null;
  }
  renderCloseIcon() {
    return n5("span", { "aria-hidden": "true", class: this.classes(n17.icon, n17.iconClose) });
  }
  renderCloseButton() {
    const { visibleElements: e24, messagesCommon: t32 } = this;
    return e24.closeButton ? n5("div", { role: "button", tabIndex: 0, bind: this, onclick: this._close, onkeydown: this._close, class: n17.button, "aria-label": t32.close, title: t32.close, afterCreate: this._closeButtonNodeUpdated, afterUpdate: this._closeButtonNodeUpdated }, this.renderCloseIcon()) : null;
  }
  renderHeader() {
    return n5("header", { class: n17.header }, this.renderTitle(), n5("div", { class: n17.headerButtons }, this.renderDockButton(), this.renderCloseButton()));
  }
  renderContentContainer() {
    const { contentId: e24, hasContent: t32, contentCollapsed: i37, _flowItems: o30 } = this, { content: n32 } = this.viewModel, s29 = o30.toArray(), r28 = { [n17.contentHasFlows]: !!s29.length };
    return t32 && !i37 ? n5("div", { key: n32 ?? "content", enterAnimation: this._createFeatureUpdatedAnimation(), id: e24, class: this.classes(n17.content, r28) }, n5("calcite-flow", { bind: this }, n5("calcite-flow-item", { bind: this, "data-node-ref": "_rootFlowItemNode", afterCreate: v5, key: "root-flow-item", onCalciteFlowItemBack: this._handleBackClick }, this.renderContent()), s29.map((e25) => this.renderFlowItem(e25))), s29.map((e25) => this.renderFlowItemTooltips(e25))) : null;
  }
  renderFlowItem(e24) {
    const { messages: t32 } = this, i37 = r7(), o30 = "graphic" in e24 && !e24.isTable;
    return n5("calcite-flow-item", { bind: this, class: this.classes({ [n17.calciteThemeDark]: !i37, [n17.calciteThemeLight]: i37 }), heading: e24.title ?? "", description: this._getFlowItemDescription(e24), onCalciteFlowItemBack: this._handleBackClick, key: `flow-item-${e24.viewModel.uid}` }, n5("calcite-action", { class: n17.actionExit, icon: "move-up", label: t32 == null ? void 0 : t32.exitRelatedRecords, text: t32 == null ? void 0 : t32.exitRelatedRecords, slot: "header-actions-start", bind: this, afterCreate: (t33) => this._storeExitRelatedRecordsAction(e24, t33), onclick: this._destroyFlowItemWidgets }), o30 ? n5("calcite-action", { class: n17.actionSelectFeature, icon: "zoom-to-object", label: t32 == null ? void 0 : t32.selectFeature, text: t32 == null ? void 0 : t32.selectFeature, slot: "header-actions-end", bind: this, afterCreate: (t33) => this._storeFeatureSelectionAction(e24, t33), onclick: () => this._handleOpenRelatedFeature(e24) }) : null, n5("div", { class: this.classes(n17.contentFlowItem, { [n17.calciteThemeDark]: i37, [n17.calciteThemeLight]: !i37 }) }, e24.render()));
  }
  renderFlowItemTooltips(e24) {
    const { messages: t32, _exitRelatedRecordsActions: i37, _featureSelectionActions: o30 } = this, n32 = r7(), s29 = o30.get(e24);
    return [n5("calcite-tooltip", { class: this.classes({ [n17.calciteThemeDark]: !n32, [n17.calciteThemeLight]: n32 }), key: `exit-related-records-tooltip-${e24.viewModel.uid}`, label: t32 == null ? void 0 : t32.exitRelatedRecords, overlayPositioning: "fixed", referenceElement: i37.get(e24), placement: "top" }, t32 == null ? void 0 : t32.exitRelatedRecords), s29 ? n5("calcite-tooltip", { class: this.classes({ [n17.calciteThemeDark]: !n32, [n17.calciteThemeLight]: n32 }), key: `select-related-record-tooltip-${e24.viewModel.uid}`, label: t32 == null ? void 0 : t32.selectFeature, overlayPositioning: "fixed", referenceElement: s29, placement: "top" }, t32 == null ? void 0 : t32.selectFeature) : null];
  }
  renderActionsMenuButton() {
    const { actionsMenuId: e24, actionsMenuButtonId: t32, actionsMenuOpen: i37, dividedActions: o30, messagesCommon: n32 } = this, s29 = i37 ? n32.close : n32.open, { menuActions: r28 } = o30;
    return r28.length ? n5("div", { key: V3("actions-menu-button"), class: this.classes(n17.button, n17.actionsMenuButton), role: "button", id: t32, "aria-haspopup": "true", "aria-controls": i37 ? e24 : null, tabIndex: 0, bind: this, onclick: this._toggleActionsMenu, onkeydown: this._toggleActionsMenu, afterCreate: this._focusActionsMenuButtonNode, afterUpdate: this._focusActionsMenuButtonNode, "aria-label": s29, title: s29 }, n5("span", { "aria-hidden": "true", class: n17.iconActionsMenu })) : null;
  }
  renderMenuActions() {
    const { actionsMenuId: e24, actionsMenuButtonId: t32, actionsMenuOpen: i37, dividedActions: o30 } = this, { menuActions: n32 } = o30;
    return n32.length && i37 ? n5("ul", { id: e24, role: "menu", "aria-labelledby": t32, key: V3("actions"), class: n17.actions, bind: this, onkeyup: this._handleActionMenuKeyup, afterCreate: this._actionsMenuNodeUpdated, afterUpdate: this._actionsMenuNodeUpdated }, n32.toArray().map((e25) => this.renderAction({ action: e25, type: "menu-item" }))) : null;
  }
  renderInlineActions() {
    const { inlineActions: e24 } = this.dividedActions;
    return e24.length ? e24.toArray().map((e25) => this.renderAction({ action: e25, type: "inline" })) : [];
  }
  renderInlineActionsContainer() {
    const { inlineActions: e24, menuActions: t32 } = this.dividedActions, i37 = !!e24.length, o30 = !!t32.length;
    return i37 || o30 ? n5("div", { key: "inline-actions-container", "data-inline-actions": i37.toString(), "data-menu-actions": o30.toString(), class: n17.inlineActionsContainer }, this.renderInlineActions(), this.renderActionsMenuButton(), this.renderMenuActions()) : null;
  }
  renderNavigation() {
    return this.featureNavigationVisible ? n5("section", { key: V3("navigation"), class: this.classes(n17.navigation) }, this.renderNavigationButtons()) : null;
  }
  renderFooter() {
    const { featureNavigationVisible: e24, dividedActions: t32 } = this, { inlineActions: i37, menuActions: o30 } = t32, n32 = !!i37.length, s29 = !!o30.length, r28 = { [n17.footerHasPagination]: e24, [n17.footerHasActions]: n32, [n17.footerHasActionsMenu]: s29 };
    return e24 || n32 ? n5("div", { key: V3("feature-buttons"), class: this.classes(n17.footer, r28) }, this.renderInlineActionsContainer(), this.renderNavigation()) : null;
  }
  renderFeatureMenuContainer() {
    const { messages: e24 } = this, { featureViewModels: t32, isLoadingFeature: i37 } = this.viewModel, o30 = s6(e24.selectedFeatures, { total: t32.length });
    return n5("section", { key: V3("menu"), class: n17.featureMenu }, n5("strong", { class: n17.featureMenuHeader }, o30), n5("nav", { bind: this, class: n17.featureMenuViewport, "data-node-ref": "_featureMenuViewportNode", afterCreate: v5 }, this.renderFeatureMenu(), n5("div", { class: n17.featureMenuObserver, bind: this, afterCreate: this._featureMenuIntersectionObserverCreated }), i37 ? n5("div", { class: n17.featureMenuLoader }, this.renderLoadingIcon()) : null));
  }
  renderPointer() {
    return this.dockEnabled ? null : n5("div", { key: V3("pointer"), class: n17.pointer, role: "presentation" }, n5("div", { class: this.classes(n17.pointerDirection, n17.shadow) }));
  }
  renderMainContainer() {
    const { dockEnabled: e24, currentAlignment: t32, currentDockPosition: i37, titleId: o30, contentId: n32, collapsible: s29, hasContent: r28, contentCollapsed: l27, visibleElements: a36 } = this, { title: c39 } = this.viewModel, d18 = "bottom-left" === t32 || "bottom-center" === t32 || "bottom-right" === t32 || "top-left" === i37 || "top-center" === i37 || "top-right" === i37, u24 = "top-left" === t32 || "top-center" === t32 || "top-right" === t32 || "bottom-left" === i37 || "bottom-center" === i37 || "bottom-right" === i37, h23 = { [n17.shadow]: e24, [n17.isCollapsible]: s29, [n17.isCollapsed]: l27 };
    return n5("div", { class: this.classes(n17.main, n17.widget, h23), tabIndex: a36.closeButton ? void 0 : -1, role: "dialog", "aria-labelledby": c39 ? o30 : "", "aria-describedby": r28 && !l27 ? n32 : "", bind: this, onkeyup: this._handleMainKeyup, afterCreate: this._mainContainerNodeUpdated, afterUpdate: this._mainContainerNodeUpdated }, d18 ? this.renderFooter() : null, d18 ? this.renderFeatureMenuContainer() : null, this.renderHeader(), this.renderContentContainer(), u24 ? this.renderFooter() : null, u24 ? this.renderFeatureMenuContainer() : null);
  }
  renderContent() {
    var _a;
    const e24 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e24 ? "string" == typeof e24 ? n5("div", { class: t13.contentNode, key: e24, innerHTML: e24 }) : this.renderNodeContent(e24) : null;
  }
  renderActionText(e24) {
    return n5("span", { key: "text", class: n17.actionText }, e24);
  }
  renderActionIcon(e24) {
    const t32 = this._getActionClass(e24), i37 = this._getActionImage(e24), o30 = { [n17.iconLoading]: e24.active, [n17.rotating]: e24.active, [n17.icon]: !!t32, [n17.actionImage]: !e24.active && !!i37 };
    return t32 && (o30[t32] = !e24.active), n5("span", { key: "icon", "aria-hidden": "true", class: this.classes(n17.icon, o30), styles: this._getIconStyles(i37) });
  }
  renderAction(e24) {
    const { action: t32, type: i37 } = e24, o30 = this._getActionTitle(t32), n32 = { [n17.action]: "toggle" !== t32.type, [n17.actionToggle]: "toggle" === t32.type, [n17.actionToggleOn]: "toggle" === t32.type && t32.value, [n17.buttonDisabled]: t32.disabled }, s29 = [this.renderActionIcon(t32), this.renderActionText(o30)], r28 = "menu-item" === i37 ? n5("li", { key: t32.uid, role: "menuitem", tabIndex: 0, title: o30, "aria-label": o30, class: this.classes(n17.button, n32), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t32.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s29) : n5("div", { key: t32.uid, role: "button", tabIndex: 0, title: o30, "aria-label": o30, class: this.classes(n17.button, n32), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t32.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s29);
    return t32.visible ? r28 : null;
  }
  renderFeatureMenuItem(e24, t32) {
    const { messages: i37, messagesCommon: o30 } = this, { selectedFeatureIndex: n32, selectedFeatureViewModel: s29 } = this.viewModel, r28 = e24 === s29, l27 = { [n17.featureMenuSelected]: r28 }, a36 = r28 ? n5("span", { key: V3(`feature-menu-selected-feature-${n32}`), title: i37.selectedFeature, "aria-label": i37.selectedFeature, class: n17.iconCheckMark }) : null, c39 = n5("span", { innerHTML: e24.title || o30.untitled });
    return n5("li", { role: "menuitem", tabIndex: -1, key: V3(`feature-menu-feature-${n32}`), class: this.classes(l27, n17.featureMenuItem), bind: this, "data-feature-index": t32, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onkeyup: this._handleFeatureMenuItemKeyup, onclick: this._selectFeature, onkeydown: this._selectFeature, onmouseover: this._setActiveFeature, onmouseleave: this._removeActiveFeature }, n5("span", { class: n17.featureMenuTitle }, c39, a36));
  }
  renderFeatureMenu() {
    const { featureMenuId: e24 } = this, { featureViewModels: t32 } = this.viewModel;
    return t32.length > 1 ? n5("ol", { class: n17.featureMenuList, id: e24, bind: this, afterCreate: this._featureMenuNodeUpdated, afterUpdate: this._featureMenuNodeUpdated, onkeyup: this._handleFeatureMenuKeyup, role: "menu" }, t32.filter((e25) => !!e25.graphic).map((e25, t33) => this.renderFeatureMenuItem(e25, t33))) : null;
  }
  _storeFeatureSelectionAction(e24, t32) {
    this._featureSelectionActions.set(e24, t32), this.scheduleRender();
  }
  _storeExitRelatedRecordsAction(e24, t32) {
    this._exitRelatedRecordsActions.set(e24, t32), this.scheduleRender();
  }
  _getFlowItemDescription(e24) {
    return "featureCountDescription" in e24 ? e24.featureCountDescription : e24.viewModel.description ?? "";
  }
  async _openRelatedFeature(e24) {
    await e24.viewModel.updateGeometry();
    const t32 = e24.graphic, i37 = t32 == null ? void 0 : t32.geometry;
    if (t(i37) || t(t32))
      return;
    this._destroyFlowItemWidgets(), await this.viewModel.zoomTo({ target: i37 });
    const o30 = F7(i37);
    this.open({ features: [t32], location: r(o30) ? o30 : void 0 });
  }
  _destroyFlowItemWidgets() {
    this._flowItems.removeAll().forEach((e24) => {
      "showAllEnabled" in e24.viewModel && (e24.viewModel.showAllEnabled = false), e24.viewModel = null, e24.destroy();
    });
  }
  _handleBackClick() {
    const e24 = this._flowItems.pop();
    e24 && (this._exitRelatedRecordsActions.delete(e24), this._featureSelectionActions.delete(e24), "showAllEnabled" in e24.viewModel && (e24.viewModel.showAllEnabled = false), e24 && (e24.viewModel = null, e24.destroy()));
  }
  _getActionTitle(e24) {
    const { messages: t32, selectedFeature: i37, messagesCommon: o30 } = this, { id: n32 } = e24, s29 = i37 == null ? void 0 : i37.attributes, r28 = e24.title ?? "", l27 = "zoom-to-feature" === n32 ? s6(r28, { messages: t32 }) : "remove-selected-feature" === n32 ? s6(r28, { messages: o30 }) : "zoom-to-clustered-features" === n32 || "browse-clustered-features" === n32 ? s6(r28, { messages: t32 }) : e24.title;
    return l27 && s29 ? s6(l27, s29) : l27 ?? "";
  }
  _getActionClass(e24) {
    const { selectedFeature: t32 } = this, i37 = t32 == null ? void 0 : t32.attributes, { className: o30, image: n32 } = e24, s29 = n32 || o30 ? o30 : n17.iconDefaultAction;
    return s29 && i37 ? s6(s29, i37) : s29 ?? "";
  }
  _getActionImage(e24) {
    const { selectedFeature: t32 } = this, i37 = t32 == null ? void 0 : t32.attributes, { image: o30 } = e24;
    return o30 && i37 ? s6(o30, i37) : o30 ?? "";
  }
  _createFeatureUpdatedAnimation() {
    return w5("enter", n17.hasFeatureUpdated);
  }
  _getInlineActionCount() {
    const { maxInlineActions: e24, featureNavigationVisible: t32 } = this;
    if ("number" != typeof e24)
      return null;
    const i37 = Math.round(e24);
    return Math.max(t32 ? i37 - 1 : i37, 0);
  }
  _watchActions() {
    const { allActions: e24 } = this.viewModel;
    this.notifyChange("dividedActions");
    const t32 = "actions";
    this._handles.remove(t32), e24 && e24.forEach((e25) => {
      this._handles.add(l3(() => [e25.uid, e25.active, e25.className, e25.disabled, e25.id, e25.title, e25.image, e25.visible], () => this.scheduleRender()), t32);
    });
  }
  _divideActions() {
    const { allActions: e24 } = this.viewModel, i37 = e24.filter((e25) => e25.visible), o30 = this._getInlineActionCount(), n32 = null === o30, s29 = 0 === o30;
    return { inlineActions: n32 ? i37.slice(0) : s29 ? new j2() : i37.slice(0, o30), menuActions: n32 ? new j2() : s29 ? i37.slice(0) : i37.slice(o30) };
  }
  _featureMenuOpenChanged(e24) {
    e24 ? this._focusFirstFeature = true : this._focusFeatureMenuButton = true;
  }
  _actionsMenuOpenChanged(e24) {
    e24 ? this._focusFirstAction = true : this._focusActionsMenuButton = true;
  }
  _setTitleFromFeatureWidget() {
    var _a, _b;
    const { selectedFeatureWidget: e24, messagesCommon: t32 } = this;
    e24 && (this.viewModel.title = "error" === ((_a = e24.viewModel) == null ? void 0 : _a.state) ? t32.errorMessage : ((_b = e24.viewModel) == null ? void 0 : _b.title) || "");
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e24 } = this;
    e24 && (this.viewModel.content = e24);
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e24) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e24), this._featureMenuIntersectionObserverNode = e24;
  }
  _handleFeatureMenuKeyup(e24) {
    "Escape" === i2(e24) && (e24.stopPropagation(), this._focusFeatureMenuButton = true, this.featureMenuOpen = false, this.scheduleRender());
  }
  _handleActionMenuKeyup(e24) {
    "Escape" === i2(e24) && (e24.stopPropagation(), this._focusActionsMenuButton = true, this.actionsMenuOpen = false, this.scheduleRender());
  }
  _setActiveFeature(e24) {
    const { viewModel: t32 } = this, i37 = e24.currentTarget["data-feature-index"];
    t32.activeFeature = t32.features[i37] || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _handleFeatureMenuItemKeyup(e24) {
    const t32 = i2(e24), { _featureMenuNode: o30 } = this, n32 = e24.currentTarget["data-feature-index"];
    if (!o30)
      return;
    const s29 = o30.querySelectorAll("li"), r28 = s29.length;
    if ("ArrowUp" !== t32)
      if ("ArrowDown" !== t32)
        if ("Home" !== t32)
          if ("End" !== t32)
            ;
          else {
            e24.stopPropagation();
            s29[s29.length - 1].focus();
          }
        else {
          e24.stopPropagation();
          s29[0].focus();
        }
      else {
        e24.stopPropagation();
        s29[(n32 + 1 + r28) % r28].focus();
      }
    else {
      e24.stopPropagation();
      s29[(n32 - 1 + r28) % r28].focus();
    }
  }
  _handleActionMenuItemKeyup(e24) {
    const t32 = i2(e24), { _actionsMenuNode: o30 } = this, n32 = e24.currentTarget.dataset.actionUid, { menuActions: s29 } = this.dividedActions, r28 = s29.findIndex((e25) => e25.uid === n32);
    if (!o30)
      return;
    const l27 = o30.querySelectorAll("li"), a36 = l27.length;
    if ("ArrowUp" !== t32)
      if ("ArrowDown" !== t32)
        if ("Home" !== t32)
          if ("End" !== t32)
            ;
          else {
            e24.stopPropagation();
            l27[l27.length - 1].focus();
          }
        else {
          e24.stopPropagation();
          l27[0].focus();
        }
      else {
        e24.stopPropagation();
        l27[(r28 + 1 + a36) % a36].focus();
      }
    else {
      e24.stopPropagation();
      l27[(r28 - 1 + a36) % a36].focus();
    }
  }
  _handleMainKeyup(e24) {
    const t32 = i2(e24);
    "ArrowLeft" === t32 && (e24.stopPropagation(), this.previous()), "ArrowRight" === t32 && (e24.stopPropagation(), this.next());
  }
  _spinnerEnabledChange(e24) {
    if (this._destroySpinner(), !e24)
      return;
    const t32 = this.get("viewModel.view");
    this._createSpinner(t32);
  }
  _hideSpinner() {
    const { _spinner: e24 } = this;
    e24 && (e24.location = null, e24.hide());
  }
  _displaySpinner() {
    const { _spinner: e24 } = this;
    if (!e24)
      return;
    const { location: t32, waitingForResult: i37 } = this.viewModel;
    i37 && t32 ? e24.show({ location: t32 }) : e24.hide();
  }
  _getIconStyles(e24) {
    return { "background-image": e24 ? `url(${e24})` : "" };
  }
  async _shouldFocus(e24) {
    (e24 == null ? void 0 : e24.shouldFocus) && (await j3(() => {
      var _a;
      return true === ((_a = this.viewModel) == null ? void 0 : _a.active);
    }), this.focus());
  }
  _addSelectedFeatureIndexHandle() {
    const e24 = l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e25, t32) => this._selectedFeatureIndexUpdated(e25, t32));
    this._handles.add(e24, B4);
  }
  _selectedFeatureIndexUpdated(e24, t32) {
    const { featureCount: i37 } = this;
    i37 && e24 !== t32 && -1 !== e24 && (this._destroyFlowItemWidgets(), this.actionsMenuOpen = false, this.featureMenuOpen = false, this._mainContainerNode && (this._mainContainerNode.scrollTop = 0), this._rootFlowItemNode && this._rootFlowItemNode.scrollContentTo({ top: 0 }));
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e24 } = this;
    e24 && (e24.viewModel = null, e24 && !e24.destroyed && e24.destroy()), this._feature = null;
  }
  _isScreenLocationWithinView(e24, t32) {
    return e24.x > -1 && e24.y > -1 && e24.x <= t32.width && e24.y <= t32.height;
  }
  _isOutsideView(e24) {
    const { popupHeight: t32, popupWidth: i37, screenLocation: o30, side: n32, view: s29 } = e24;
    if (isNaN(i37) || isNaN(t32) || !s29 || !o30)
      return false;
    const r28 = s29.padding;
    return "right" === n32 && o30.x + i37 / 2 > s29.width - r28.right || ("left" === n32 && o30.x - i37 / 2 < r28.left || ("top" === n32 && o30.y - t32 < r28.top || "bottom" === n32 && o30.y + t32 > s29.height - r28.bottom));
  }
  _calculateAutoAlignment(e24) {
    if ("auto" !== e24)
      return e24;
    const { _pointerOffsetInPx: t32, _containerNode: i37, _mainContainerNode: o30, viewModel: n32 } = this, { screenLocation: r28, view: l27 } = n32;
    if (t(r28) || !l27 || !i37)
      return "top-center";
    if (!this._isScreenLocationWithinView(r28, l27))
      return this._get("currentAlignment") || "top-center";
    function a36(e25) {
      return parseInt(e25.replace(/[^-\d\.]/g, ""), 10);
    }
    const c39 = o30 ? window.getComputedStyle(o30, null) : null, d18 = c39 ? a36(c39.getPropertyValue("max-height")) : 0, u24 = c39 ? a36(c39.getPropertyValue("height")) : 0, { height: h23, width: p33 } = i37.getBoundingClientRect(), g18 = p33 + t32, m27 = Math.max(h23, d18, u24) + t32, v16 = this._isOutsideView({ popupHeight: m27, popupWidth: g18, screenLocation: r28, side: "right", view: l27 }), f19 = this._isOutsideView({ popupHeight: m27, popupWidth: g18, screenLocation: r28, side: "left", view: l27 }), _10 = this._isOutsideView({ popupHeight: m27, popupWidth: g18, screenLocation: r28, side: "top", view: l27 }), w18 = this._isOutsideView({ popupHeight: m27, popupWidth: g18, screenLocation: r28, side: "bottom", view: l27 });
    return f19 ? _10 ? "bottom-right" : "top-right" : v16 ? _10 ? "bottom-left" : "top-left" : _10 ? w18 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e24) {
    return "function" == typeof e24 ? e24.call(this) : e24;
  }
  _getCurrentAlignment() {
    const { alignment: e24, dockEnabled: t32 } = this;
    return t32 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e24)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e24) {
    const t32 = ["left", "right"];
    return f4(this.container) && t32.reverse(), e24.replace(/leading/gi, t32[0]).replace(/trailing/gi, t32[1]);
  }
  _callDockPosition(e24) {
    return "function" == typeof e24 ? e24.call(this) : e24;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _wouldDockTo() {
    return this.dockEnabled ? null : this._getDockPosition();
  }
  _calculateAutoDockPosition(e24) {
    var _a;
    if ("auto" !== e24)
      return e24;
    const t32 = (_a = this.viewModel) == null ? void 0 : _a.view, i37 = f4(this.container) ? "top-left" : "top-right";
    if (!t32)
      return i37;
    const o30 = t32.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n32 = t32.width - o30.left - o30.right, { breakpoints: s29 } = t32;
    return s29 && n32 <= s29.xsmall ? "bottom-center" : i37;
  }
  _positionContainer(e24 = this._containerNode) {
    if (e24 && (this._containerNode = e24), !this._containerNode)
      return;
    const { screenLocation: t32 } = this.viewModel, { width: i37 } = this._containerNode.getBoundingClientRect(), o30 = this._calculatePositionStyle(t32, i37);
    o30 && Object.assign(this._containerNode.style, o30);
  }
  _calculateFullWidth(e24) {
    const { currentAlignment: t32, _pointerOffsetInPx: i37 } = this;
    return "top-left" === t32 || "bottom-left" === t32 || "top-right" === t32 || "bottom-right" === t32 ? e24 + i37 : e24;
  }
  _calculateAlignmentPosition(e24, t32, i37, o30) {
    const { currentAlignment: n32, _pointerOffsetInPx: s29 } = this;
    if (!i37)
      return;
    const { padding: r28 } = i37, l27 = o30 / 2, a36 = i37.height - t32, c39 = i37.width - e24;
    return "bottom-center" === n32 ? { top: t32 + s29 - r28.top, left: e24 - l27 - r28.left } : "top-left" === n32 ? { bottom: a36 + s29 - r28.bottom, right: c39 + s29 - r28.right } : "bottom-left" === n32 ? { top: t32 + s29 - r28.top, right: c39 + s29 - r28.right } : "top-right" === n32 ? { bottom: a36 + s29 - r28.bottom, left: e24 + s29 - r28.left } : "bottom-right" === n32 ? { top: t32 + s29 - r28.top, left: e24 + s29 - r28.left } : "top-center" === n32 ? { bottom: a36 + s29 - r28.bottom, left: e24 - l27 - r28.left } : void 0;
  }
  _calculatePositionStyle(e24, t32) {
    const { dockEnabled: i37, view: o30 } = this;
    if (!o30)
      return;
    if (i37)
      return { left: "", top: "", right: "", bottom: "" };
    if (t(e24) || !t32)
      return;
    const n32 = this._calculateFullWidth(t32), r28 = this._calculateAlignmentPosition(e24.x, e24.y, o30, n32);
    return r28 ? { top: void 0 !== r28.top ? `${r28.top}px` : "auto", left: void 0 !== r28.left ? `${r28.left}px` : "auto", bottom: void 0 !== r28.bottom ? `${r28.bottom}px` : "auto", right: void 0 !== r28.right ? `${r28.right}px` : "auto" } : void 0;
  }
  _viewChange(e24, t32) {
    e24 && t32 && (this.close(), this.clear());
  }
  _viewReadyChange(e24, t32) {
    if (e24) {
      const e25 = this.get("viewModel.view");
      this._wireUpView(e25);
    } else
      t32 && (this.close(), this.clear());
  }
  _wireUpView(e24) {
    if (this._destroySpinner(), !e24)
      return;
    const { spinnerEnabled: t32 } = this;
    t32 && this._createSpinner(e24), this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e24, t32, i37) {
    const [o30, n32] = e24, [s29, r28] = t32, { width: l27 = 0, height: a36 = 0 } = i37 ?? {};
    return o30 <= l27 && s29 > l27 || o30 > l27 && s29 <= l27 || n32 <= a36 && r28 > a36 || n32 > a36 && r28 <= a36;
  }
  _updateDockEnabledForViewSize(e24, t32) {
    if (!e24 || !t32)
      return;
    const i37 = this.get("viewModel.view.padding") || { left: 0, right: 0, top: 0, bottom: 0 }, o30 = i37.left + i37.right, n32 = i37.top + i37.bottom, s29 = [], r28 = [];
    s29[0] = e24[0] - o30, s29[1] = e24[1] - n32, r28[0] = t32[0] - o30, r28[1] = t32[1] - n32;
    const { dockOptions: l27 } = this, a36 = l27.breakpoint;
    this._dockingThresholdCrossed(s29, r28, a36) && this._setDockEnabledForViewSize(l27), this._setCurrentDockPosition();
  }
  _focusDockButtonNode(e24) {
    this._focusDockButton && (this._focusDockButton = false, e24.focus());
  }
  _closeButtonNodeUpdated(e24) {
    return this._focusClose ? (this._focusClose = false, void e24.focus()) : this._blurClose ? (this._blurClose = false, void e24.blur()) : void 0;
  }
  _mainContainerNodeUpdated(e24) {
    return this._mainContainerNode = e24, this._focusContainer ? (this._focusContainer = false, void e24.focus()) : this._blurContainer ? (this._blurContainer = false, void e24.blur()) : void 0;
  }
  _featureMenuNodeUpdated(e24) {
    if (this._featureMenuNode = e24, !e24 || !this._focusFirstFeature)
      return;
    this._focusFirstFeature = false;
    const t32 = e24.querySelectorAll("li");
    if (t32.length) {
      t32[0].focus();
    }
  }
  _actionsMenuNodeUpdated(e24) {
    if (this._actionsMenuNode = e24, !e24 || !this._focusFirstAction)
      return;
    this._focusFirstAction = false;
    const t32 = e24.querySelectorAll("li");
    if (t32.length) {
      t32[0].focus();
    }
  }
  _focusFeatureMenuButtonNode(e24) {
    this._focusFeatureMenuButton && (this._focusFeatureMenuButton = false, e24.focus());
  }
  _focusActionsMenuButtonNode(e24) {
    this._focusActionsMenuButton && (this._focusActionsMenuButton = false, e24.focus());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && (this._featureMenuViewportNode.scrollTop = 0);
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e24, viewModel: t32 } = this;
    if (!t32)
      return;
    const i37 = t32.active && !e24;
    t32.screenLocationEnabled = i37;
  }
  _shouldDockAtCurrentViewSize(e24) {
    var _a, _b;
    const t32 = e24.breakpoint, i37 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i37)
      return false;
    const { width: o30, height: n32 } = i37;
    if (isNaN(o30) || isNaN(n32))
      return false;
    if (!t32)
      return false;
    const s29 = t32.hasOwnProperty("width") && o30 <= (t32.width ?? 0), r28 = t32.hasOwnProperty("height") && n32 <= (t32.height ?? 0);
    return s29 || r28;
  }
  _setDockEnabledForViewSize(e24) {
    e24.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e24));
  }
  _getPageText(e24, t32) {
    return this.featureNavigationVisible ? s6(this.messages.pageText, { index: t32 + 1, total: e24 }) : null;
  }
  _destroySpinner() {
    const { _spinner: e24, view: t32 } = this;
    e24 && (t32 && t32.ui && t32.ui.remove(e24, L5), e24.destroy(), this._spinner = null);
  }
  _createSpinner(e24) {
    e24 && (this._spinner = new m17({ view: e24 }), e24.ui.add(this._spinner, { key: L5, position: "manual" }));
  }
  _toggleCollapsed() {
    this.collapsed = !this.collapsed;
  }
  _close() {
    this.close(), this.view && this.view.focus();
  }
  _toggleDockEnabled() {
    this.dockEnabled = !this.dockEnabled, this._focusDockButton = true, this.scheduleRender();
  }
  _toggleFeatureMenu() {
    const e24 = !this.featureMenuOpen;
    this._featureMenuOpenChanged(e24), this.actionsMenuOpen = false, this.featureMenuOpen = e24;
  }
  _toggleActionsMenu() {
    const e24 = !this.actionsMenuOpen;
    this._actionsMenuOpenChanged(e24), this.featureMenuOpen = false, this.actionsMenuOpen = e24;
  }
  _triggerAction(e24) {
    const t32 = e24.currentTarget.dataset.actionUid, { allActions: i37 } = this.viewModel, o30 = i37.findIndex((e25) => e25.uid === t32), n32 = i37.getItemAt(o30);
    n32 && "toggle" === n32.type && (n32.value = !n32.value), this.actionsMenuOpen = false, this.viewModel.triggerAction(o30);
  }
  _selectFeature(e24) {
    const t32 = e24.currentTarget["data-feature-index"];
    isNaN(t32) || (this.viewModel.selectedFeatureIndex = t32), this.featureMenuOpen = false, this._focusFeatureMenuButton = true, this.scheduleRender();
  }
  _next() {
    this.next();
  }
  _previous() {
    this.previous();
  }
};
e2([y2({ readOnly: true })], W5.prototype, "actionsMenuId", null), e2([y2({ readOnly: true })], W5.prototype, "actionsMenuButtonId", null), e2([y2({ readOnly: true })], W5.prototype, "featureMenuId", null), e2([y2({ readOnly: true })], W5.prototype, "titleId", null), e2([y2({ readOnly: true })], W5.prototype, "contentId", null), e2([y2({ readOnly: true })], W5.prototype, "hasContent", null), e2([y2({ readOnly: true })], W5.prototype, "featureNavigationVisible", null), e2([y2({ readOnly: true })], W5.prototype, "collapsible", null), e2([y2({ readOnly: true })], W5.prototype, "featureMenuVisible", null), e2([y2({ readOnly: true })], W5.prototype, "contentCollapsed", null), e2([y2({ readOnly: true })], W5.prototype, "dividedActions", null), e2([y2({ readOnly: true, dependsOn: ["_flowItems.length"] })], W5.prototype, "_activeFlowItemWidget", null), e2([y2()], W5.prototype, "actions", null), e2([y2()], W5.prototype, "actionsMenuOpen", null), e2([y2()], W5.prototype, "alignment", void 0), e2([y2()], W5.prototype, "autoCloseEnabled", null), e2([y2()], W5.prototype, "autoOpenEnabled", null), e2([y2()], W5.prototype, "defaultPopupTemplateEnabled", null), e2([y2()], W5.prototype, "content", null), e2([y2()], W5.prototype, "collapsed", void 0), e2([y2()], W5.prototype, "collapseEnabled", void 0), e2([y2({ readOnly: true })], W5.prototype, "currentAlignment", null), e2([y2({ readOnly: true })], W5.prototype, "currentDockPosition", null), e2([y2()], W5.prototype, "dockOptions", null), e2([y2()], W5.prototype, "dockEnabled", void 0), e2([y2({ readOnly: true })], W5.prototype, "featureCount", null), e2([y2()], W5.prototype, "featureMenuOpen", void 0), e2([y2()], W5.prototype, "features", null), e2([y2()], W5.prototype, "goToOverride", null), e2([y2()], W5.prototype, "headingLevel", void 0), e2([y2()], W5.prototype, "highlightEnabled", null), e2([y2()], W5.prototype, "location", null), e2([y2()], W5.prototype, "label", null), e2([y2()], W5.prototype, "maxInlineActions", void 0), e2([y2(), e4("esri/widgets/Popup/t9n/Popup")], W5.prototype, "messages", void 0), e2([y2(), e4("esri/t9n/common")], W5.prototype, "messagesCommon", void 0), e2([y2()], W5.prototype, "promises", null), e2([y2({ readOnly: true })], W5.prototype, "selectedFeature", null), e2([y2()], W5.prototype, "selectedFeatureIndex", null), e2([y2({ readOnly: true })], W5.prototype, "selectedFeatureWidget", null), e2([y2()], W5.prototype, "spinnerEnabled", void 0), e2([y2()], W5.prototype, "title", null), e2([y2()], W5.prototype, "updateLocationEnabled", null), e2([y2()], W5.prototype, "view", null), e2([y2({ type: H4 }), e5(["triggerAction", "trigger-action"])], W5.prototype, "viewModel", void 0), e2([y2()], W5.prototype, "visible", null), e2([y2()], W5.prototype, "visibleElements", void 0), e2([s4("visibleElements")], W5.prototype, "castVisibleElements", null), e2([t8()], W5.prototype, "_close", null), e2([t8()], W5.prototype, "_toggleDockEnabled", null), e2([t8()], W5.prototype, "_toggleFeatureMenu", null), e2([t8()], W5.prototype, "_toggleActionsMenu", null), e2([t8()], W5.prototype, "_triggerAction", null), e2([t8()], W5.prototype, "_selectFeature", null), e2([t8()], W5.prototype, "_next", null), e2([t8()], W5.prototype, "_previous", null), W5 = e2([a3("esri.widgets.Popup")], W5);
var j11 = W5;

// node_modules/@arcgis/core/views/DOMContainer.js
var m19 = [0, 0];
function f14(e24) {
  const t32 = (e24.ownerDocument || window.document).defaultView, s29 = e24.getBoundingClientRect();
  return m19[0] = s29.left + ((t32 == null ? void 0 : t32.pageXOffset) ?? 0), m19[1] = s29.top + ((t32 == null ? void 0 : t32.pageYOffset) ?? 0), m19;
}
function y12(e24) {
  e24 && (t7(e24), e24.parentNode && e24.parentNode.removeChild(e24));
}
function v13(e24) {
  const t32 = document.createElement("div");
  return e24.appendChild(t32), t32;
}
var _6 = 16;
var g12 = 750;
var w15 = 512;
var C7 = 2;
var z5 = (i37) => {
  let m27 = class extends i37 {
    constructor(...e24) {
      var _a;
      super(...e24), this._freqInfo = { freq: _6, time: g12 }, this._overlayRenderTaskHandle = null, this.height = 0, this.overlay = null, this.position = null, this.resizing = false, this.root = null, this.surface = null, this.suspended = true, this.ui = null, this.userContent = null, this.width = 0, this.widthBreakpoint = null, 0 !== e24.length && void 0 !== ((_a = e24[0]) == null ? void 0 : _a.popup) || (this.popup = new j11({ view: this })), this.handles.add([l3(() => this.cursor, (e25) => {
        const { surface: t32 } = this;
        t32 && t32.setAttribute("data-cursor", e25);
      }), l3(() => this.interacting, (e25) => {
        const { surface: t32 } = this;
        t32 && t32.setAttribute("data-interacting", e25.toString());
      })]);
    }
    initialize() {
      this.handles.add(l3(() => this.ui, (e24, t32) => this._handleUIChange(e24, t32))), this._wireUI(this.ui), this.handles.add([this.on("focus", () => this.notifyChange("focused")), this.on("blur", () => this.notifyChange("focused"))]);
    }
    destroy() {
      this.destroyed || (this.ui = a(this.ui), this.popup && !this.popup.destroyed && this.popup.destroy(), this.container = null);
    }
    get container() {
      return this._get("container") ?? null;
    }
    set container(e24) {
      const i38 = this._get("container"), r28 = e3(e24);
      if (r28 || "string" != typeof e24 || s2.getLogger(this.declaredClass).error("#container", `element with id '${e24}' not found`), i38 === r28)
        return;
      const l27 = "dom-size";
      if (this.handles.remove(l27), this._stopMeasuring(), i38 && (i38.classList.remove("esri-view"), this._overlayRenderTaskHandle && (this._overlayRenderTaskHandle.remove(), this._overlayRenderTaskHandle = null), this.overlay && (this.overlay.destroy(), this._set("overlay", null)), this.root && (y12(this.root), this._set("root", null)), this.userContent && (r6(this.userContent, i38), y12(this.userContent), this._set("userContent", null))), !r28)
        return this._set("width", 0), this._set("height", 0), this._set("position", null), this._set("suspended", true), this._set("surface", null), void this._set("container", null);
      r28.classList.add("esri-view");
      const u24 = document.createElement("div");
      u24.className = "esri-view-user-storage", r6(r28, u24), r28.appendChild(u24), this._set("userContent", u24);
      const c39 = document.createElement("div");
      c39.className = "esri-view-root", r28.insertBefore(c39, r28.firstChild), this._set("root", c39);
      const m28 = document.createElement("div");
      m28.className = "esri-view-surface", m28.setAttribute("role", "application"), m28.tabIndex = 0, c39.appendChild(m28), this._set("surface", m28);
      const f19 = new c11();
      c39.appendChild(f19.surface), this._set("overlay", f19), l3(() => f19.needsRender, (e25) => {
        e25 && !this._overlayRenderTaskHandle ? this._overlayRenderTaskHandle = A2({ render: () => {
          var _a;
          return (_a = this.overlay) == null ? void 0 : _a.render();
        } }) : this._overlayRenderTaskHandle = p(this._overlayRenderTaskHandle);
      }), this.forceDOMReadyCycle(), this.handles.add(l3(() => this.size, (e25) => {
        const [t32, s29] = e25, i39 = "esri-view-surface--inset-outline";
        t32 >= document.body.clientWidth || s29 >= document.body.clientHeight ? m28.classList.add(i39) : m28.classList.remove(i39);
      }, h), l27), this._set("container", r28), this._startMeasuring();
    }
    get focused() {
      const e24 = document.activeElement === this.surface;
      return document.hasFocus() && e24;
    }
    set popup(e24) {
      const t32 = this._get("popup");
      t32 && t32 !== e24 && t32.destroy(), this._set("popup", e24);
    }
    get size() {
      return [this.width, this.height];
    }
    blur() {
      this.surface && this.surface.blur();
    }
    focus() {
      this.surface && this.surface.focus();
    }
    pageToContainer(e24, t32, s29) {
      const i38 = this.position;
      return e24 -= i38 ? i38[0] : 0, t32 -= i38 ? i38[1] : 0, s29 ? (s29[0] = e24, s29[1] = t32) : s29 = [e24, t32], s29;
    }
    containerToPage(e24, t32, s29) {
      const i38 = this.position;
      return e24 += i38 ? i38[0] : 0, t32 += i38 ? i38[1] : 0, s29 ? (s29[0] = e24, s29[1] = t32) : s29 = [e24, t32], s29;
    }
    _handleUIChange(e24, t32) {
      t32 && (this.handles.remove("ui"), t32.destroy()), e24 && this._wireUI(e24), this._set("ui", e24);
    }
    _wireUI(e24) {
      this.handles.remove("ui"), e24 && (e24.view = this, this.handles.add([l3(() => this.root, (t32) => {
        e24.container = t32 ? v13(t32) : null;
      }, h), l3(() => this.popup, (t32, s29) => {
        const i38 = "popup", o30 = "manual";
        s29 && e24.remove(s29, i38), t32 && (t32.view = e24.view, e24.add(t32, { key: i38, position: o30 }));
      }, h)], "ui"));
    }
    _stopMeasuring() {
      this.handles.remove("measuring"), this._get("resizing") && this._set("resizing", false);
    }
    _startMeasuring() {
      const e24 = this._freqInfo;
      e24.freq = _6, e24.time = g12, this.handles.add([(() => {
        const t32 = () => {
          e24.freq = _6, e24.time = g12;
        };
        return window.addEventListener("resize", t32), { remove() {
          window.removeEventListener("resize", t32);
        } };
      })(), A2({ prepare: (e25) => {
        const t32 = this._measure(), s29 = this._freqInfo;
        if (s29.time += e25.deltaTime, t32 && (s29.freq = _6, this._get("resizing") || this._set("resizing", true)), s29.time < s29.freq)
          return;
        s29.time = 0;
        const i38 = this._position();
        s29.freq = i38 || t32 ? _6 : Math.min(g12, s29.freq * C7), !t32 && s29.freq >= w15 && this._get("resizing") && this._set("resizing", false);
      } })], "measuring"), this._measure(), this._position();
    }
    _measure() {
      const e24 = this.container, t32 = e24 ? e24.clientWidth : 0, s29 = e24 ? e24.clientHeight : 0;
      if (0 === t32 || 0 === s29)
        return this.suspended || this._set("suspended", true), false;
      const i38 = this.width, o30 = this.height;
      return t32 === i38 && s29 === o30 ? (this.suspended && this._set("suspended", false), false) : (this._set("width", t32), this._set("height", s29), this.suspended && this._set("suspended", false), this.emit("resize", { oldWidth: i38, oldHeight: o30, width: t32, height: s29 }), true);
    }
    _position() {
      const e24 = this.container, t32 = this.position, s29 = e24 && f14(e24);
      return !!s29 && ((!t32 || s29[0] !== t32[0] || s29[1] !== t32[1]) && (this._set("position", [s29[0], s29[1]]), true));
    }
    forceDOMReadyCycle() {
    }
  };
  return e2([y2()], m27.prototype, "container", null), e2([y2({ readOnly: true })], m27.prototype, "focused", null), e2([y2({ readOnly: true })], m27.prototype, "height", void 0), e2([y2({ type: j11 })], m27.prototype, "popup", null), e2([y2({ type: c11 })], m27.prototype, "overlay", void 0), e2([y2({ readOnly: true })], m27.prototype, "position", void 0), e2([y2({ readOnly: true })], m27.prototype, "resizing", void 0), e2([y2({ readOnly: true })], m27.prototype, "root", void 0), e2([y2({ value: null, readOnly: true })], m27.prototype, "size", null), e2([y2({ readOnly: true })], m27.prototype, "surface", void 0), e2([y2({ readOnly: true })], m27.prototype, "suspended", void 0), e2([y2()], m27.prototype, "ui", void 0), e2([y2({ readOnly: true })], m27.prototype, "userContent", void 0), e2([y2({ readOnly: true })], m27.prototype, "width", void 0), e2([y2()], m27.prototype, "widthBreakpoint", void 0), m27 = e2([a3("esri.views.DOMContainer")], m27), m27;
};

// node_modules/@arcgis/core/views/PopupView.js
var a18 = (a36) => {
  let p33 = class extends a36 {
    async fetchPopupFeatures(e24, r28) {
      await this.when();
      const { location: i37, queryArea: a37, layerViewsAndGraphics: p34, clientOnlyGraphics: t32 } = await this._prepareFetchPopupFeatures(e24, r28), o30 = Promise.resolve(t32), c39 = this._queryLayerPopupFeatures(a37, p34, r28), n32 = c39.map((e25) => e25.promise);
      return { location: i37, clientOnlyGraphics: t32, allGraphicsPromise: L([o30, ...n32]).then((e25) => Array.from(new Set(e25.flat()))), promisesPerLayerView: c39 };
    }
    _queryLayerPopupFeatures(e24, s29, i37) {
      return s29.map(({ layerView: s30, graphics: a37 }) => {
        const p34 = { clientGraphics: a37, event: r(i37) ? i37.event : void 0, signal: r(i37) ? i37.signal : void 0, defaultPopupTemplateEnabled: !!r(i37) && !!i37.defaultPopupTemplateEnabled }, t32 = s30.fetchPopupFeatures(e24, p34);
        return { layerView: s30, promise: t32 };
      });
    }
    _isValidPopupGraphic(e24, s29) {
      return e24 && !!e24.getEffectivePopupTemplate(r(s29) && s29.defaultPopupTemplateEnabled);
    }
    async _prepareFetchPopupFeatures(e24, r28) {
      const { clientGraphics: s29, queryArea: i37, location: a37 } = await this._popupHitTestGraphics(e24, r28), p34 = this._getFetchPopupLayerViews(), { layerViewsAndGraphics: t32, clientOnlyGraphics: o30 } = this._graphicsPerFetchPopupLayerView(s29, p34);
      return { clientOnlyGraphics: o30, layerViewsAndGraphics: t32, queryArea: i37, location: a37 };
    }
    async _popupHitTestGraphics(e24, r28) {
      const s29 = await this.popupHitTest(e24), i37 = s29.results, a37 = s29.mapPoint, p34 = i37.filter((e25) => "graphic" === e25.type && this._isValidPopupGraphic(e25.graphic, r28)), t32 = p34.length ? p34[0].mapPoint : null;
      return { clientGraphics: p34.map((e25) => e25.graphic), queryArea: a37, location: a37 || t32 };
    }
    _getFetchPopupLayerViews() {
      const e24 = [];
      return this.allLayerViews.forEach((r28) => {
        this._isValidPopupLayerView(r28) && e24.push(r28);
      }), r(this.graphicsView) && this._isValidPopupLayerView(this.graphicsView) && e24.push(this.graphicsView), e24.reverse();
    }
    _isValidPopupLayerView(e24) {
      return r(e24) && (!("layer" in e24) || !e24.suspended) && "fetchPopupFeatures" in e24;
    }
    _graphicsPerFetchPopupLayerView(e24, r28) {
      const s29 = [], i37 = /* @__PURE__ */ new Map(), a37 = r28.map((e25) => {
        const r29 = [];
        return "layer" in e25 ? i37.set(e25.layer, r29) : i37.set(e25.graphics, r29), { layerView: e25, graphics: r29 };
      });
      for (const p34 of e24) {
        const e25 = i37.get(p34.layer) || i37.get(p34.sourceLayer) || null;
        e25 ? e25.push(p34) : s29.push(p34);
      }
      return { layerViewsAndGraphics: a37, clientOnlyGraphics: s29 };
    }
  };
  return p33 = e2([a3("esri.views.PopupView")], p33), p33;
};

// node_modules/@arcgis/core/support/AnalysesCollection.js
var i20 = class extends l7 {
  constructor(e24) {
    super(e24), this.handles.add(this.on("before-add", (e25) => {
      t(e25.item) || e25.item.parent === this.owner && (s2.getLogger(this.declaredClass).warn("Analysis inside the collection must be unique. Not adding this element again."), e25.preventDefault());
    }));
  }
  _own(e24) {
    e24.parent = this.owner;
  }
  _release(e24) {
    e24.parent = null;
  }
};
i20 = e2([a3("esri.support.AnalysesCollection")], i20);

// node_modules/@arcgis/core/views/BasemapView.js
var p17 = class extends v3 {
  constructor(e24) {
    super(e24), this.view = null, this.baseLayerViews = new j2(), this.referenceLayerViews = new j2(), this._loadingHandle = l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    }, (e25) => {
      e25 && e25.load().catch(() => {
      });
    }, h);
  }
  destroy() {
    this._set("view", null), this._loadingHandle && (this._loadingHandle.remove(), this._loadingHandle = null);
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  get updating() {
    var _a, _b;
    if (this.view && this.view.suspended)
      return false;
    const e24 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    return !!e24 && (!!e24.loaded && (this.baseLayerViews.some((e25) => e25.updating) || this.referenceLayerViews.some((e25) => e25.updating)));
  }
};
e2([y2({ constructOnly: true })], p17.prototype, "view", void 0), e2([y2({ readOnly: true })], p17.prototype, "baseLayerViews", void 0), e2([y2({ readOnly: true })], p17.prototype, "referenceLayerViews", void 0), e2([y2({ readOnly: true })], p17.prototype, "suspended", null), e2([y2({ type: Boolean, readOnly: true })], p17.prototype, "updating", null), p17 = e2([a3("esri.views.BasemapView")], p17);

// node_modules/@arcgis/core/views/LayerViewManager.js
function v14(e24) {
  return "tryRecycleWith" in e24;
}
var V4 = class {
  constructor(e24, r28, t32) {
    this.layer = e24, this.view = r28, this.layerViewImporter = t32, this._controller = new AbortController(), this._deferred = A(), this._started = false, this.done = false, this.promise = this._deferred.promise, v(this._controller.signal, () => {
      const r29 = new s3("cancelled:layerview-create", "layerview creation cancelled", { layer: e24 });
      this._deferred.reject(r29);
    });
  }
  tryRecycle(e24) {
    if (!this.done || !this.layerView || !v14(this.layerView))
      return null;
    const r28 = this.layer.type, i37 = this._controller.signal;
    for (let t32 = 0; t32 < e24.length; t32++) {
      const s29 = e24[t32];
      if (s29.type !== r28)
        continue;
      const a36 = this.layerView.tryRecycleWith(s29, { signal: i37 });
      if (a36) {
        e24.splice(t32, 1), this.layer = s29;
        const r29 = this.layerView, i38 = r29.view;
        return this.promise = Promise.race([a36.then(() => (f(this._controller.signal), s29.emit("layerview-destroy", { view: i38, layerView: r29 }), i38.emit("layerview-destroy", { view: i38, layerView: r29 }), s29.emit("layerview-create", { view: i38, layerView: r29 }), i38.emit("layerview-create", { view: i38, layerView: r29 }), r29)), new Promise((e25, r30) => v(this._controller.signal, () => r30(a2())))]), this.promise;
      }
    }
    return null;
  }
  destroy() {
    this._controller.abort();
    const { layerView: e24 } = this;
    if (!e24)
      return;
    const { layer: r28, view: i37 } = this;
    r28.emit("layerview-destroy", { view: i37, layerView: e24 }), i37.emit("layerview-destroy", { layer: r28, layerView: e24 }), this.done = true, this.layer = null, this.layerView = null, this.view = null, this.layerViewImporter = null;
  }
  async start() {
    var _a, _b, _c;
    if (this._started)
      return;
    this._started = true;
    const { _controller: { signal: e24 }, layer: r28, view: t32 } = this;
    this._map = t32.map;
    try {
      let a36, o30;
      if (await r28.load({ signal: e24 }), "prefetchResources" in r28 && await ((_a = r28.prefetchResources) == null ? void 0 : _a.call(r28, { signal: e24 })), I6(r28))
        a36 = await r28.createLayerView(t32, { signal: e24 });
      else {
        if (!this.layerViewImporter.hasLayerViewModule(r28))
          throw new s3("layer:view-not-supported", "No layerview implementation was found");
        const s29 = await this.layerViewImporter.importLayerView(r28);
        f(e24), a36 = "default" in s29 ? new s29.default({ layer: r28, view: t32 }) : new s29({ layer: r28, view: t32 });
      }
      const n32 = () => {
        o30 = p(o30), a36.destroyed || a36.destroy(), a36.layer = null, a36.parent = null, a36.view = null, this.done = true;
      };
      o30 = v(e24, n32), f(e24);
      try {
        await a36.when();
      } catch (s29) {
        throw n32(), s29;
      }
      const y17 = (_c = (_b = this._map) == null ? void 0 : _b.allLayers) == null ? void 0 : _c.includes(r28);
      if (!y17)
        return n32(), void this._deferred.reject(new s3("view:no-layerview-for-layer", "The layer has been removed from the map", { layer: r28 }));
      this.layerView = a36, r28.emit("layerview-create", { view: t32, layerView: a36 }), t32.emit("layerview-create", { layer: r28, layerView: a36 }), this.done = true, this._deferred.resolve(a36);
    } catch (s29) {
      r28.emit("layerview-create-error", { view: t32, error: s29 }), t32.emit("layerview-create-error", { layer: r28, error: s29 }), this.done = true, this._deferred.reject(new s3("layerview:create-error", "layerview creation failed", { layer: r28, error: s29 }));
    }
  }
};
var L6 = class extends v3 {
  constructor(e24) {
    super(e24), this._layerLayerViewInfoMap = /* @__PURE__ */ new Map(), this._recyclingInfoMap = /* @__PURE__ */ new Map(), this._watchUpdatingTracking = new c3(), this.supportsGround = true, this._preloadLayerViewModules = () => {
      var _a;
      const e25 = (_a = this.view.map) == null ? void 0 : _a.allLayers;
      if (e25)
        for (const r28 of e25)
          this.layerViewImporter.hasLayerViewModule(r28) && this.layerViewImporter.importLayerView(r28);
    }, this._reschedule = () => (t(this._workPromise) && (this._workPromise = A(), this._workPromise.promise.catch(() => {
    })), this.removeHandles("reschedule"), this.addHandles(v2(this._doWork), "reschedule"), this._workPromise.promise), this._doWork = () => {
      var _a, _b, _c;
      const e25 = this.view.map;
      if (this._map !== e25 && (this.clear(), this._map = e25), t(this._workPromise))
        return void this.notifyChange("updating");
      this.removeHandles("reschedule"), this.removeHandles("collection-change");
      const r28 = /* @__PURE__ */ new Set(), i37 = [], t32 = this.view.ready, s29 = (e26) => {
        if (!t(e26)) {
          for (const a36 of e26)
            if (a36) {
              r28.add(a36);
              const e27 = this._layerLayerViewInfoMap.get(a36);
              e27 && t32 ? e27.start() : e27 || this._recyclingInfoMap.has(a36) || i37.push(a36), "layers" in a36 && a36.layers && s29(a36.layers);
            }
        }
      };
      for (const a36 of this._rootCollectionNames)
        s29(this.get(a36));
      for (const [a36, l27] of this._layerLayerViewInfoMap)
        if (!r28.has(a36)) {
          this._layerLayerViewInfoMap.delete(l27.layer);
          const e26 = l27.tryRecycle(i37);
          e26 ? (this._recyclingInfoMap.set(l27.layer, l27), e26.then(() => {
            this._recyclingInfoMap.delete(l27.layer), this._layerLayerViewInfoMap.set(l27.layer, l27), this._reschedule();
          }).catch(() => {
            this._recyclingInfoMap.delete(l27.layer), l27.destroy(), this._reschedule();
          })) : l27.destroy();
        }
      for (const [a36, l27] of this._recyclingInfoMap)
        r28.has(a36) || (this._recyclingInfoMap.delete(l27.layer), l27.destroy());
      for (const a36 of i37)
        this._createLayerView(a36);
      this._refreshCollections();
      const o30 = [(_a = e25 == null ? void 0 : e25.ground) == null ? void 0 : _a.layers, (_b = e25 == null ? void 0 : e25.basemap) == null ? void 0 : _b.baseLayers, (_c = e25 == null ? void 0 : e25.basemap) == null ? void 0 : _c.referenceLayers, e25 == null ? void 0 : e25.layers].filter((e26) => !!e26);
      r28.forEach((e26) => "layers" in e26 && o30.push(e26.layers)), this.addHandles(o30.map((e26) => this._watchUpdatingTracking.addOnCollectionChange(() => e26, this._reschedule)), "collection-change"), this._workPromise.resolve(), this._workPromise = null;
    };
  }
  initialize() {
    this.own([a6(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, "change", this._preloadLayerViewModules, { onListenerAdd: this._preloadLayerViewModules }), l3(() => {
      const e24 = this.view, r28 = e24 == null ? void 0 : e24.map;
      return [r28 == null ? void 0 : r28.basemap, r28 == null ? void 0 : r28.ground, r28 == null ? void 0 : r28.layers, e24 == null ? void 0 : e24.ready];
    }, () => this._reschedule(), w4)]), this._preloadLayerViewModules(), this._reschedule();
  }
  destroy() {
    this.clear(), this._watchUpdatingTracking.destroy(), this._map = null, r(this._workPromise) && (this._workPromise.reject(a2()), this._workPromise = null);
  }
  get _layersToLayerViews() {
    const e24 = [["view.map.basemap.baseLayers", "view.basemapView.baseLayerViews"], ["view.map.layers", "view.layerViews"], ["view.map.basemap.referenceLayers", "view.basemapView.referenceLayerViews"]];
    return this.supportsGround && e24.push(["view.map.ground.layers", "view.groundView.layerViews"]), new Map(e24);
  }
  get _rootCollectionNames() {
    return Array.from(this._layersToLayerViews.keys());
  }
  get updating() {
    return r(this._workPromise) || this._watchUpdatingTracking.updating || n3(this._layerLayerViewInfoMap, (e24) => !e24.done);
  }
  get updatingRemaining() {
    let e24 = 0;
    for (const r28 of this._layerLayerViewInfoMap.values())
      r28.done || ++e24;
    return e24;
  }
  clear() {
    if (!this.destroyed) {
      for (const e24 of this._layerLayerViewInfoMap.values())
        e24.destroy();
      this._layerLayerViewInfoMap.clear(), this._refreshCollections();
    }
  }
  async whenLayerView(e24) {
    if (await this._reschedule(), !this._layerLayerViewInfoMap.has(e24)) {
      if (this._recyclingInfoMap.has(e24))
        return this._recyclingInfoMap.get(e24).promise;
      throw new s3("view:no-layerview-for-layer", "No layerview has been found for the layer", { layer: e24 });
    }
    return this._layerLayerViewInfoMap.get(e24).promise;
  }
  _refreshCollections() {
    for (const [e24, r28] of this._layersToLayerViews)
      this._populateLayerViewsOwners(this.get(e24), this.get(r28), this.view);
    this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
  _populateLayerViewsOwners(e24, r28, i37) {
    if (!e24 || !r28)
      return void (r28 && r28.removeAll());
    let t32 = 0;
    for (const s29 of e24) {
      const e25 = this._layerLayerViewInfoMap.get(s29);
      if (!e25 || !e25.layerView)
        continue;
      const a36 = e25.layerView;
      a36.layer = s29, a36.parent = i37, r28.getItemAt(t32) !== a36 && r28.splice(t32, 0, a36), s29.layers && this._populateLayerViewsOwners(s29.layers, a36.layerViews, a36), t32 += 1;
    }
    t32 < r28.length && r28.splice(t32, r28.length);
  }
  _createLayerView(e24) {
    e24.load().catch(() => {
    }), this.layerViewImporter.hasLayerViewModule(e24) && this.layerViewImporter.importLayerView(e24);
    const r28 = new V4(e24, this.view, this.layerViewImporter);
    r28.promise.then(() => this._refreshCollections(), (r29) => {
      r29 && (j(r29) || "cancelled:layerview-create" === r29.name) || s2.getLogger(this.declaredClass).error(`Failed to create layerview for layer title:'${e24.title ?? "no title"}', id:'${e24.id ?? "no id"}' of type '${e24.type}'.`, { layer: e24, error: r29 }), this._refreshCollections();
    }), this._layerLayerViewInfoMap.set(e24, r28), this.view.ready && r28.start(), this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
};
e2([y2()], L6.prototype, "_workPromise", void 0), e2([y2({ readOnly: true })], L6.prototype, "_watchUpdatingTracking", void 0), e2([y2({ readOnly: true })], L6.prototype, "_layersToLayerViews", null), e2([y2({ readOnly: true })], L6.prototype, "_rootCollectionNames", null), e2([y2()], L6.prototype, "layerViewImporter", void 0), e2([y2()], L6.prototype, "supportsGround", void 0), e2([y2({ readOnly: true })], L6.prototype, "updating", null), e2([y2({ readOnly: true })], L6.prototype, "updatingRemaining", null), e2([y2({ constructOnly: true })], L6.prototype, "view", void 0), L6 = e2([a3("esri.views.LayerViewManager")], L6);
var M7 = L6;
function I6(e24) {
  return "createLayerView" in e24 && null != e24.createLayerView;
}

// node_modules/@arcgis/core/views/Magnifier.js
var i21 = class extends v3 {
  constructor(o30) {
    super(o30), this.factor = 1.5, this.offset = c2(0, 0), this.position = null, this.size = 120, this.maskUrl = null, this.maskEnabled = true, this.overlayUrl = null, this.overlayEnabled = true, this.visible = true;
  }
  get version() {
    return this.commitProperty("factor"), this.commitProperty("offset"), this.commitProperty("position"), this.commitProperty("visible"), this.commitProperty("size"), this.commitProperty("maskUrl"), this.commitProperty("maskEnabled"), this.commitProperty("overlayUrl"), this.commitProperty("overlayEnabled"), (this._get("version") || 0) + 1;
  }
};
e2([y2({ type: Number })], i21.prototype, "factor", void 0), e2([y2({ nonNullable: true })], i21.prototype, "offset", void 0), e2([y2()], i21.prototype, "position", void 0), e2([y2({ type: Number, range: { min: 0 } })], i21.prototype, "size", void 0), e2([y2()], i21.prototype, "maskUrl", void 0), e2([y2()], i21.prototype, "maskEnabled", void 0), e2([y2()], i21.prototype, "overlayUrl", void 0), e2([y2()], i21.prototype, "overlayEnabled", void 0), e2([y2({ readOnly: true })], i21.prototype, "version", null), e2([y2({ type: Boolean })], i21.prototype, "visible", void 0), i21 = e2([a3("esri.views.Magnifier")], i21);
var p18 = i21;

// node_modules/@arcgis/core/views/3d/support/TextureCollection.js
var n18 = class extends v3 {
  constructor(e24, t32) {
    super({}), this._stage = e24, this._textureRequests = /* @__PURE__ */ new Map(), this._frameTask = (t32 == null ? void 0 : t32.registerTask(R2.TEXTURE_UNLOAD)) ?? D;
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    super.destroy(), this._frameTask.remove(), this._textureRequests.forEach((e24) => this._releaseTextureRequest(e24)), this._textureRequests.clear();
  }
  get updating() {
    return this._frameTask.updating;
  }
  fromData(e24, t32, r28) {
    const s29 = this.makeUid(e24);
    let o30 = this._textureRequests.get(s29);
    if (!o30) {
      const e25 = t32();
      o30 = { referenceCount: 0, texture: e25, textureAsync: null, abortController: null, onRemove: r28 }, this._stage && (this._stage.add(e25), this._stage.loadImmediate(e25)), this._textureRequests.set(s29, o30);
    }
    return o30.referenceCount++, { uid: s29, texture: o30.texture, release: () => this._release(s29) };
  }
  _release(e24) {
    const t32 = this._textureRequests.get(e24);
    t32 ? (t32.referenceCount < 1 && console.warn("TextureCollection: reference count is < 1 for " + e24), t32.referenceCount--, t32.referenceCount < 1 && this._frameTask.schedule(() => this._releaseNow(e24))) : console.warn(`TextureCollection: texture doesn't exist: '${e24}'`);
  }
  get test() {
    return { textureRequests: this._textureRequests };
  }
  _releaseNow(e24) {
    if (!this._textureRequests)
      return;
    const t32 = this._textureRequests.get(e24);
    !t32 || t32.referenceCount > 0 || (this._releaseTextureRequest(t32), this._textureRequests.delete(e24));
  }
  _releaseTextureRequest(e24) {
    var _a;
    e24.onRemove && e24.onRemove(), e24.texture ? (_a = this._stage) == null ? void 0 : _a.remove(e24.texture) : e24.abortController && (e24.abortController.abort(), e24.abortController = null);
  }
  makeUid(e24, t32 = null) {
    return r(t32) ? `${e24}.${t32}px` : e24;
  }
};
e2([y2()], n18.prototype, "_frameTask", void 0), e2([y2()], n18.prototype, "updating", null), n18 = e2([a3("esri.views.3d.support.TextureCollection")], n18);

// node_modules/@arcgis/core/views/input/IViewEvents.js
var t20;
!function(t32) {
  t32[t32.Left = 0] = "Left", t32[t32.Middle = 1] = "Middle", t32[t32.Right = 2] = "Right";
}(t20 || (t20 = {}));

// node_modules/@arcgis/core/views/input/ViewEvents.js
var r19 = ["click", "double-click", "immediate-click", "immediate-double-click", "hold", "drag", "key-down", "key-up", "pointer-down", "pointer-move", "pointer-up", "pointer-drag", "mouse-wheel", "pointer-enter", "pointer-leave", "gamepad", "focus", "blur"];
var i22 = {};
function o17(t32) {
  return !!i22[t32];
}
function s18(t32) {
  for (const e24 of t32)
    if (!o17(e24))
      return false;
  return true;
}
r19.forEach((t32) => {
  i22[t32] = true;
});
var p19 = class {
  constructor(t32) {
    this._handlers = /* @__PURE__ */ new Map(), this._counter = 0, this._handlerCounts = /* @__PURE__ */ new Map(), this.view = t32, this.inputManager = null;
  }
  connect(t32) {
    t32 && this.disconnect(), this.inputManager = t32, this._handlers.forEach(({ handler: t33, priority: e24 }, a36) => {
      var _a;
      return (_a = this.inputManager) == null ? void 0 : _a.installHandlers(a36, [t33], e24);
    });
  }
  disconnect() {
    this.inputManager && this._handlers.forEach((t32, e24) => {
      var _a;
      return (_a = this.inputManager) == null ? void 0 : _a.uninstallHandlers(e24);
    }), this.inputManager = null;
  }
  destroy() {
    this.disconnect(), this._handlers.clear(), this.view = null;
  }
  on(t32, e24, a36, r28) {
    const i37 = Array.isArray(t32) ? t32 : t32.split(",");
    if (!s18(i37))
      return i37.some(o17) && console.error("Error: registering input events and other events on the view at the same time is not supported."), null;
    let p33, l27;
    Array.isArray(e24) ? l27 = e24 : (p33 = e24, l27 = []), "function" == typeof a36 ? p33 = a36 : r28 = a36, r28 = null != r28 ? r28 : P.DEFAULT;
    const u24 = this._createUniqueGroupName(), m27 = new c25(this.view, i37, l27, p33);
    this._handlers.set(u24, { handler: m27, priority: r28 });
    for (const n32 of i37) {
      const t33 = this._handlerCounts.get(n32) || 0;
      this._handlerCounts.set(n32, t33 + 1);
    }
    return this.inputManager && this.inputManager.installHandlers(u24, [m27], r28), { remove: () => this._removeHandler(u24, i37) };
  }
  hasHandler(t32) {
    return !!this._handlerCounts.get(t32);
  }
  _removeHandler(t32, e24) {
    if (this._handlers.has(t32)) {
      this._handlers.delete(t32);
      for (const t33 of e24) {
        const e25 = this._handlerCounts.get(t33);
        void 0 === e25 ? console.error("Trying to remove handler for event that has no handlers registered: ", t33) : 1 === e25 ? this._handlerCounts.delete(t33) : this._handlerCounts.set(t33, e25 - 1);
      }
    }
    this.inputManager && this.inputManager.uninstallHandlers(t32);
  }
  _createUniqueGroupName() {
    return this._counter += 1, `viewEvents_${this._counter}`;
  }
};
var c25 = class extends i13 {
  constructor(t32, e24, a36, n32) {
    super(true), this._latestDragStart = void 0, this.view = t32;
    for (const r28 of e24)
      switch (r28) {
        case "click":
          this.registerIncoming("click", a36, (t33) => n32(this._wrapClick(t33)));
          break;
        case "double-click":
          this.registerIncoming("double-click", a36, (t33) => n32(this._wrapDoubleClick(t33)));
          break;
        case "immediate-click":
          this.registerIncoming("immediate-click", a36, (t33) => n32(this._wrapImmediateClick(t33)));
          break;
        case "immediate-double-click":
          this.registerIncoming("immediate-double-click", a36, (t33) => n32(this._wrapImmediateDoubleClick(t33)));
          break;
        case "hold":
          this.registerIncoming("hold", a36, (t33) => n32(this._wrapHold(t33)));
          break;
        case "drag":
          this.registerIncoming("drag", a36, (t33) => {
            const e25 = this._wrapDrag(t33);
            e25 && n32(e25);
          });
          break;
        case "key-down":
          this.registerIncoming("key-down", a36, (t33) => n32(this._wrapKeyDown(t33)));
          break;
        case "key-up":
          this.registerIncoming("key-up", a36, (t33) => n32(this._wrapKeyUp(t33)));
          break;
        case "pointer-down":
          this.registerIncoming("pointer-down", a36, (t33) => n32(this._wrapPointer(t33, "pointer-down")));
          break;
        case "pointer-move":
          this.registerIncoming("pointer-move", a36, (t33) => n32(this._wrapPointer(t33, "pointer-move")));
          break;
        case "pointer-up":
          this.registerIncoming("pointer-up", a36, (t33) => n32(this._wrapPointer(t33, "pointer-up")));
          break;
        case "pointer-drag":
          this.registerIncoming("pointer-drag", a36, (t33) => n32(this._wrapPointerDrag(t33)));
          break;
        case "mouse-wheel":
          this.registerIncoming("mouse-wheel", a36, (t33) => n32(this._wrapMouseWheel(t33)));
          break;
        case "pointer-enter":
          this.registerIncoming("pointer-enter", a36, (t33) => n32(this._wrapPointer(t33, "pointer-enter")));
          break;
        case "pointer-leave":
          this.registerIncoming("pointer-leave", a36, (t33) => n32(this._wrapPointer(t33, "pointer-leave")));
          break;
        case "gamepad":
          this.registerIncoming("gamepad", a36, (t33) => {
            n32(this._wrapGamepad(t33));
          });
          break;
        case "focus":
          this.registerIncoming("focus", a36, (t33) => {
            n32(this._wrapFocus(t33));
          });
          break;
        case "blur":
          this.registerIncoming("blur", a36, (t33) => {
            n32(this._wrapBlur(t33));
          });
      }
  }
  _wrapFocus(t32) {
    return { type: "focus", timestamp: t32.timestamp, native: t32.data.native, cancelable: t32.cancelable, stopPropagation: () => t32.stopPropagation(), async: (e24) => t32.async(e24), preventDefault: () => t32.preventDefault() };
  }
  _wrapBlur(t32) {
    return { type: "blur", timestamp: t32.timestamp, native: t32.data.native, cancelable: t32.cancelable, stopPropagation: () => t32.stopPropagation(), async: (e24) => t32.async(e24), preventDefault: () => t32.preventDefault() };
  }
  _wrapClick(t32) {
    const { pointerType: a36, button: n32, buttons: r28, x: i37, y: o30, native: s29, eventId: p33 } = t32.data, { cancelable: c39, timestamp: l27 } = t32;
    return { type: "click", pointerType: a36, button: n32, buttons: r28, x: i37, y: o30, native: s29, timestamp: l27, screenPoint: c2(i37, o30), mapPoint: this._getMapPoint(i37, o30), eventId: p33, cancelable: c39, stopPropagation: () => t32.stopPropagation(), async: (e24) => t32.async(e24), preventDefault: () => t32.preventDefault() };
  }
  _wrapDoubleClick(t32) {
    const { pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, eventId: s29 } = t32.data, { cancelable: p33, timestamp: c39 } = t32;
    return { type: "double-click", pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, timestamp: c39, mapPoint: this._getMapPoint(r28, i37), eventId: s29, cancelable: p33, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapImmediateClick(t32) {
    const { pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, eventId: s29 } = t32.data, p33 = o30.pointerId, { cancelable: c39, timestamp: l27 } = t32;
    return { type: "immediate-click", pointerId: p33, pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, timestamp: l27, mapPoint: this._getMapPoint(r28, i37), eventId: s29, cancelable: c39, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapImmediateDoubleClick(t32) {
    const { pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, eventId: s29 } = t32.data, p33 = o30.pointerId, { cancelable: c39, timestamp: l27 } = t32;
    return { type: "immediate-double-click", pointerId: p33, pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, timestamp: l27, mapPoint: this._getMapPoint(r28, i37), eventId: s29, cancelable: c39, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapHold(t32) {
    const { pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30 } = t32.data, { cancelable: s29, timestamp: p33 } = t32;
    return { type: "hold", pointerType: e24, button: a36, buttons: n32, x: r28, y: i37, native: o30, timestamp: p33, mapPoint: this._getMapPoint(r28, i37), cancelable: s29, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _getMapPoint(t32, a36) {
    return this.view.toMap(c2(t32, a36), { exclude: [] });
  }
  _wrapDrag(e24) {
    const a36 = e24.data, { x: n32, y: r28 } = a36.center, { action: i37, pointerType: o30, button: s29 } = a36;
    if ("start" === i37 && (this._latestDragStart = a36), !this._latestDragStart)
      return;
    const p33 = a36.pointer.native, c39 = a36.buttons, { cancelable: l27, timestamp: u24 } = e24, m27 = { x: this._latestDragStart.center.x, y: this._latestDragStart.center.y };
    return "end" === i37 && (this._latestDragStart = void 0), { type: "drag", action: i37, x: n32, y: r28, origin: m27, pointerType: o30, button: s29, buttons: c39, radius: a36.radius, angle: b2(a36.angle), native: p33, timestamp: u24, cancelable: l27, stopPropagation: () => e24.stopPropagation(), async: (t32) => e24.async(t32), preventDefault: () => e24.preventDefault() };
  }
  _wrapKeyDown(t32) {
    const { key: e24, repeat: a36, native: n32 } = t32.data, { cancelable: r28, timestamp: i37 } = t32;
    return { type: "key-down", key: e24, repeat: a36, native: n32, timestamp: i37, cancelable: r28, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapKeyUp(t32) {
    const { key: e24, native: a36 } = t32.data, { cancelable: n32, timestamp: r28 } = t32;
    return { type: "key-up", key: e24, native: a36, timestamp: r28, cancelable: n32, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapPointer(t32, e24) {
    const { x: a36, y: n32, button: r28, buttons: i37, native: o30, eventId: s29 } = t32.data, p33 = o30.pointerId, c39 = o30.pointerType, { cancelable: l27, timestamp: u24 } = t32;
    return { type: e24, x: a36, y: n32, pointerId: p33, pointerType: c39, button: r28, buttons: i37, native: o30, timestamp: u24, eventId: s29, cancelable: l27, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapPointerDrag(t32) {
    const { x: e24, y: a36, buttons: n32, native: r28, eventId: i37 } = t32.data.currentEvent, { button: o30 } = t32.data.startEvent, s29 = t32.data.startEvent.native.pointerId, p33 = t32.data.startEvent.native.pointerType, c39 = t32.data.action, l27 = { x: t32.data.startEvent.x, y: t32.data.startEvent.y }, { cancelable: u24, timestamp: m27 } = t32;
    return { type: "pointer-drag", x: e24, y: a36, pointerId: s29, pointerType: p33, button: o30, buttons: n32, action: c39, origin: l27, native: r28, timestamp: m27, eventId: i37, cancelable: u24, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapMouseWheel(t32) {
    const { cancelable: e24, data: a36, timestamp: n32 } = t32, { x: r28, y: i37, deltaY: o30, native: s29 } = a36;
    return { type: "mouse-wheel", x: r28, y: i37, deltaY: o30, native: s29, timestamp: n32, cancelable: e24, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
  _wrapGamepad(t32) {
    const { action: e24, state: a36, device: n32 } = t32.data, { cancelable: r28, timestamp: i37 } = t32, { buttons: o30, axes: s29 } = a36;
    return { type: "gamepad", device: n32, timestamp: i37, action: e24, buttons: o30, axes: s29, cancelable: r28, stopPropagation: () => t32.stopPropagation(), async: (e25) => t32.async(e25), preventDefault: () => t32.preventDefault() };
  }
};

// node_modules/@arcgis/core/views/interactive/interfaces.js
var o18;
var t21;
var u14;
!function(o30) {
  o30[o30.USER = 0] = "USER", o30[o30.MANAGER = 1] = "MANAGER";
}(o18 || (o18 = {})), function(o30) {
  o30[o30.None = 0] = "None", o30[o30.Unfocused = 1] = "Unfocused", o30[o30.Focused = 2] = "Focused", o30[o30.Unselected = 4] = "Unselected", o30[o30.Selected = 8] = "Selected", o30[o30.All = 15] = "All";
}(t21 || (t21 = {})), function(o30) {
  o30[o30.None = 0] = "None", o30[o30.Custom1 = 16] = "Custom1", o30[o30.Custom2 = 32] = "Custom2", o30[o30.Custom3 = 64] = "Custom3", o30[o30.Custom4 = 128] = "Custom4", o30[o30.Custom5 = 256] = "Custom5", o30[o30.Custom6 = 512] = "Custom6", o30[o30.Custom7 = 1024] = "Custom7", o30[o30.Custom8 = 2048] = "Custom8", o30[o30.Custom9 = 4096] = "Custom9", o30[o30.Custom10 = 8192] = "Custom10", o30[o30.Custom11 = 16384] = "Custom11", o30[o30.Custom12 = 32768] = "Custom12", o30[o30.All = 65520] = "All";
}(u14 || (u14 = {}));

// node_modules/@arcgis/core/views/interactive/interactiveToolUtils.js
function o19(t32) {
  return [t32.on("before-add", (o30) => {
    const i37 = o30.item;
    if (null == i37 || t32.includes(i37))
      return s2.getLogger("esri.views.interactive.interactiveToolUtils").warn("Tool is either already in the list of tools or tool is `null`. Not adding tool."), void o30.preventDefault();
    i37.onAdd();
  }), t32.on("after-remove", (e24) => {
    const t33 = e24.item;
    t33.active && (t33.view.activeTool = null), t33.destroy();
  })];
}
function i23(e24) {
  return e24.visible && null != e24.getEditableFlag && e24.getEditableFlag(o18.USER) && e24.getEditableFlag(o18.MANAGER);
}

// node_modules/@arcgis/core/views/support/screenUtils.js
function n19(t32) {
  return c2(t32.x, t32.y);
}
function i25(t32, n32) {
  var _a;
  const c39 = (_a = t32 instanceof HTMLElement ? t32 : t32.surface) == null ? void 0 : _a.getBoundingClientRect();
  return c39 ? c2(n32.clientX - c39.left, n32.clientY - c39.top) : c2(0, 0);
}
function r20(e24, t32) {
  return t32 instanceof Event ? i25(e24, t32) : n19(t32);
}
function o20(e24) {
  if (e24 instanceof Event)
    return true;
  if ("object" == typeof e24 && "type" in e24) {
    switch (e24.type) {
      case "click":
      case "double-click":
      case "pointer-down":
      case "pointer-drag":
      case "pointer-enter":
      case "pointer-leave":
      case "pointer-up":
      case "pointer-move":
      case "immediate-click":
      case "immediate-double-click":
      case "hold":
      case "drag":
      case "mouse-wheel":
        return true;
      default:
        return false;
    }
  }
  return false;
}

// node_modules/@arcgis/core/views/interactive/ToolViewManagerManipulatorState.js
var c26 = class {
  constructor() {
    this._pointerLocations = /* @__PURE__ */ new Map(), this._hoveredManipulators = /* @__PURE__ */ new Map(), this._grabbedManipulators = /* @__PURE__ */ new Map(), this._draggedManipulators = /* @__PURE__ */ new Map(), this._stopDrag = false, this._revertToNullActiveTool = false, this._cursor = null;
  }
  get cursor() {
    return this._cursor;
  }
  handleInputEvent(t32, e24) {
    const s29 = () => t32.stopPropagation();
    switch (t32.type) {
      case "pointer-move":
        u15(t32.pointerType) && this._pointerLocations.set(t32.pointerId, { x: t32.x, y: t32.y, pointerType: t32.pointerType });
        break;
      case "drag":
        this._grabbedManipulators.size > 0 && (this._stopDrag = true), this._stopDrag && (s29(), "end" === t32.action && (this._stopDrag = false));
        break;
      case "pointer-down": {
        if (!h15(t32))
          break;
        const o30 = n19(t32), a36 = this._intersect(o30, t32.pointerType, e24.forEachTool);
        if (t(a36))
          break;
        const n32 = a36.manipulator, p33 = a36.tool;
        !(r(n32) && r(p33) && n32.interactive) || n32.grabbable && n32.grabbableForEvent(t32) || !n32.grabbing || n32.dragging || this._ungrabManipulatorBeforeDragging(n32, t32, e24), r(n32) && r(p33) && n32.interactive && n32.grabbable && n32.grabbableForEvent(t32) && !n32.grabbing && (this._grabbedManipulators.set(t32.pointerId, { manipulator: n32, tool: p33, start: o30, pointerType: t32.pointerType }), 1 === this._grabbedManipulators.size && t(e24.activeTool) && (this._revertToNullActiveTool = true, e24.setActiveTool(a36.tool)), n32.grabbing = true, n32.events.emit("grab-changed", { action: "start", pointerType: t32.pointerType, screenPoint: o30 }), s29());
        break;
      }
      case "pointer-up":
        this._draggedManipulators.has(t32.pointerId) || this._handlePointerEnd(t32, e24);
        break;
      case "pointer-drag": {
        if (!h15(t32))
          break;
        const r28 = this._grabbedManipulators.get(t32.pointerId), p33 = o(r28, ({ manipulator: t33 }) => t33), c39 = o(r28, ({ tool: t33 }) => t33);
        if (t(p33) || t(c39))
          break;
        const u24 = n19(t32);
        u24.x = a4(u24.x, 0, e24.view.width), u24.y = a4(u24.y, 0, e24.view.height);
        const d18 = e(r28).start, g18 = this._draggedManipulators.get(t32.pointerId);
        switch (t32.action) {
          case "start":
          case "update":
            "update" !== t32.action && 1 !== this._grabbedManipulators.size || (p33.dragging = true, g18 ? p33.events.emit("drag", { action: "update", start: d18, screenPoint: u24 }) : p33.events.emit("drag", { action: "start", start: d18, screenPoint: u24, pointerType: t32.pointerType }), this._draggedManipulators.set(t32.pointerId, { tool: c39, manipulator: p33, start: d18 }));
            break;
          case "end":
            p33.dragging = false, g18 && p33.events.emit("drag", { action: "end", start: d18, screenPoint: u24 }), this._draggedManipulators.delete(t32.pointerId), this._handlePointerEnd(t32, e24);
        }
        s29();
        break;
      }
      case "immediate-click": {
        const o30 = n19(t32), a36 = this._intersect(o30, t32.pointerType, e24.forEachTool);
        if (d10(t32) || e24.forEachTool((t33) => {
          if ((!r(a36) || a36.tool !== t33 || t33.automaticManipulatorSelection) && t33.manipulators) {
            let e25 = false;
            t33.manipulators.forEach(({ manipulator: t34 }) => {
              t34.selected && (t34.selected = false, e25 = true);
            }), e25 && t33.onManipulatorSelectionChanged && t33.onManipulatorSelectionChanged();
          }
        }), t(a36))
          break;
        const { manipulator: n32, tool: p33 } = a36;
        if (!n32.interactive)
          break;
        n32.selectable && p33.automaticManipulatorSelection && (n32.selected = !n32.selected, p33.onManipulatorSelectionChanged && p33.onManipulatorSelectionChanged());
        const c39 = t32.native.shiftKey;
        n32.events.emit("immediate-click", { screenPoint: o30, button: t32.button, pointerType: t32.pointerType, shiftKey: c39, stopPropagation: s29 });
        break;
      }
      case "click": {
        const o30 = n19(t32), a36 = this._intersect(o30, t32.pointerType, e24.forEachTool), n32 = r(a36) ? a36.manipulator : null;
        if (t(n32) || !n32.interactive)
          break;
        const p33 = t32.native.shiftKey;
        n32.events.emit(t32.type, { screenPoint: o30, button: t32.button, pointerType: t32.pointerType, shiftKey: p33 }), s29();
        break;
      }
      case "double-click": {
        const o30 = n19(t32), a36 = this._intersect(o30, t32.pointerType, e24.forEachTool), n32 = r(a36) ? a36.manipulator : null;
        if (t(n32) || !n32.interactive)
          break;
        const p33 = t32.native.shiftKey;
        n32.events.emit("double-click", { screenPoint: o30, button: t32.button, pointerType: t32.pointerType, shiftKey: p33, stopPropagation: s29 });
        break;
      }
      case "immediate-double-click": {
        const o30 = n19(t32), a36 = this._intersect(o30, t32.pointerType, e24.forEachTool), n32 = r(a36) ? a36.manipulator : null;
        if (t(n32) || !n32.interactive)
          break;
        const p33 = t32.native.shiftKey;
        n32.events.emit("immediate-double-click", { screenPoint: o30, button: t32.button, pointerType: t32.pointerType, shiftKey: p33, stopPropagation: s29 });
        break;
      }
    }
    this._onFocusChange(e24.forEachTool);
  }
  _ungrabManipulatorBeforeDragging(t32, e24, o30) {
    t32.grabbing = false, t32.events.emit("grab-changed", { action: "end", pointerType: e24.pointerType, screenPoint: n19(e24) }), this._grabbedManipulators.forEach(({ manipulator: e25 }, o31) => {
      e25 === t32 && this._grabbedManipulators.delete(o31);
    }), this._afterManipulatorUngrab(o30.setActiveTool);
  }
  _handlePointerEnd(t32, e24) {
    const o30 = o(this._grabbedManipulators.get(t32.pointerId), ({ manipulator: t33 }) => t33);
    t(o30) || o30.grabbing && (o30.grabbing = false, o30.events.emit("grab-changed", { action: "end", pointerType: t32.pointerType, screenPoint: n19(t32) }), this._grabbedManipulators.delete(t32.pointerId), this._afterManipulatorUngrab(e24.setActiveTool));
  }
  _cursorFromMap(t32) {
    let o30 = null;
    return n3(t32, ({ manipulator: t33 }) => !(t(t33) || !t33.interactive) && (t33.grabbing && t33.grabCursor ? (o30 = t33.grabCursor, true) : !!t33.cursor && (o30 = t33.cursor, true))), o30;
  }
  _onFocusChange(t32) {
    this._updateCursor(), this._updateFocusedManipulatorTools(t32);
  }
  _updateCursor() {
    this._grabbedManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._grabbedManipulators) || "grabbing" : this._hoveredManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._hoveredManipulators) || "pointer" : this._cursor = null;
  }
  _updateFocusedManipulatorTools(e24) {
    const o30 = /* @__PURE__ */ new Set(), i37 = /* @__PURE__ */ new Set();
    this._grabbedManipulators.forEach(({ tool: t32 }) => {
      o30.add(t32);
    }), this._hoveredManipulators.forEach(({ tool: t32 }) => {
      i37.add(t32);
    }), e24((e25) => {
      e25.hasGrabbedManipulators = o30.has(e25), e25.hasHoveredManipulators = i37.has(e25);
      const a36 = this._grabbedManipulators.values(), n32 = o2(a36, ({ tool: t32 }) => t32 === e25);
      e25.firstGrabbedManipulator = r(n32) ? n32.manipulator : null;
    });
  }
  clearPointers(t32, { forEachTool: e24, setActiveTool: o30 }, r28 = true, a36) {
    const n32 = (e25, o31) => e25 === t32 && (t(a36) || a36 === o31);
    this._grabbedManipulators.forEach(({ tool: t33, manipulator: e25, pointerType: o31 }, r29) => {
      n32(t33, e25) && (this._grabbedManipulators.delete(r29), e25.grabbing = false, e25.events.emit("grab-changed", { action: "end", screenPoint: null, pointerType: o31 }));
    }), this._draggedManipulators.forEach(({ tool: t33, manipulator: e25 }, o31) => {
      n32(t33, e25) && (this._draggedManipulators.delete(o31), e25.dragging = false, e25.events.emit("drag", { action: "cancel" }));
    }), r28 && this._hoveredManipulators.forEach(({ tool: t33, manipulator: e25 }, o31) => {
      n32(t33, e25) && (this._hoveredManipulators.delete(o31), e25.hovering = false);
    }), this._afterManipulatorUngrab(o30), this._onFocusChange(e24);
  }
  _intersect(t32, e24, o30) {
    let r28 = null;
    return o30((o31) => {
      if (null == o31.manipulators || !i23(o31))
        return false;
      const a36 = o31.manipulators.intersect(t32, e24);
      return !t(a36) && (r28 = { tool: o31, manipulator: a36 }, true);
    }), r28;
  }
  updateHoveredStateFromKnownPointers(t32) {
    this._pointerLocations.forEach((e24, o30) => {
      this._updateHoveredStateForPointerAtScreenPosition(c2(e24.x, e24.y), o30, e24.pointerType, t32);
    });
  }
  handleHoverEvent(t32, e24) {
    "pointer-up" !== t32.type && "immediate-click" !== t32.type && "pointer-move" !== t32.type || !u15(t32.pointerType) || this._updateHoveredStateForPointerAtScreenPosition(n19(t32), t32.pointerId, t32.pointerType, e24);
  }
  _updateHoveredStateForPointerAtScreenPosition(t32, e24, o30, i37) {
    let n32 = this._intersect(t32, o30, i37);
    const s29 = o(this._hoveredManipulators.get(e24), ({ manipulator: t33 }) => t33);
    r(n32) && !n32.manipulator.interactive && (n32 = null), r(n32) && s29 === n32.manipulator || (r(s29) && (s29.hovering = false), r(n32) ? (n32.manipulator.hovering = true, this._hoveredManipulators.set(e24, n32)) : this._hoveredManipulators.delete(e24), this._onFocusChange(i37));
  }
  _afterManipulatorUngrab(t32) {
    0 === this._grabbedManipulators.size && this._revertToNullActiveTool && (t32(null), this._revertToNullActiveTool = false);
  }
};
function u15(t32) {
  return "mouse" === t32;
}
function h15(t32) {
  return "mouse" !== t32.pointerType || 0 === t32.button;
}
function d10(t32) {
  return !!t32.native.shiftKey;
}

// node_modules/@arcgis/core/views/ToolViewManager.js
var E6 = "attached";
var g13 = "tools";
var w16 = class extends d {
  constructor(t32) {
    super(t32), this._manipulatorState = new c26(), this.tools = new j2(), this.cursor = null, this._forEachTool = (t33) => {
      for (const o30 of this.tools.items)
        if (t33(o30))
          return;
    };
  }
  initialize() {
    this.handles.add([this.view.on(r19, (t32) => {
      this._handleInputEvent(t32);
    }, P.TOOL), ...o19(this.tools), this.tools.on("before-add", ({ item: t32 }) => {
      this._updateToolEditableFlag(t32);
    }), this.tools.on("before-remove", ({ item: t32 }) => {
      this._manipulatorState.clearPointers(t32, this._manipulatorStateEventArgs), this._updateCursor();
    }), this.tools.on("change", () => {
      this._refreshToolWatchers();
    })]);
  }
  destroy() {
    this.detach(), this.handles.removeAll();
  }
  get _manipulatorStateEventArgs() {
    return { forEachTool: this._forEachTool, activeTool: this.activeTool, setActiveTool: (t32) => {
      this.activeTool = t32;
    }, view: this.view };
  }
  set activeTool(t32) {
    if (r(t32) && !this.view.ready)
      return void s2.getLogger(this.declaredClass).error("Cannot set active tool while view is not ready.");
    if (t32 === this.activeTool)
      return;
    const o30 = this.activeTool;
    this._set("activeTool", t32), r(o30) && o30.deactivate(), r(t32) && t32.activate(), this._removeIncompleteTools(t32);
    for (const e24 of this.tools) {
      this._updateToolEditableFlag(e24);
      const t33 = i23(e24);
      !t(this.activeTool) && t33 || this._manipulatorState.clearPointers(e24, this._manipulatorStateEventArgs, !t33);
    }
    this._updateCursor();
  }
  get updating() {
    var _a;
    return this.updatingHandles.updating || this.tools.some((t32) => t32.updating) || (((_a = this.textures) == null ? void 0 : _a.updating) ?? false);
  }
  attach() {
    var _a;
    "3d" === this.view.type ? (this._set("textures", new n18(this.view._stage, this.view.resourceController.scheduler)), this.handles.add([l3(() => {
      const { state: t32 } = this.view;
      return "camera" in t32 && t32.camera;
    }, () => this._forEachManipulator((t32) => t32.onViewChange())), (_a = this.view.elevationProvider) == null ? void 0 : _a.on("elevation-change", (t32) => this._forEachManipulator((o30) => o30.onElevationChange(t32))), n(() => this._set("textures", a(this.textures)))], E6)) : this.handles.add(l3(() => this.view.extent, () => this._forEachManipulator((t32) => t32.onViewChange())));
  }
  detach() {
    r(this.activeTool) && (this.activeTool = null), this.tools.removeAll(), this.handles.remove(E6);
  }
  _forEachManipulator(t32) {
    this._forEachTool((o30) => {
      o30.manipulators && o30.manipulators.forEach(({ manipulator: e24 }) => t32(e24, o30));
    });
  }
  _handleInputEvent(t32) {
    let o30 = false;
    const e24 = { ...t32, stopPropagation: () => {
      o30 = true, t32.stopPropagation();
    } };
    r(this.activeTool) ? this.activeTool.handleInputEvent && this.activeTool.handleInputEvent(e24) : this._forEachTool((t33) => {
      !o30 && t33.visible && t33.handleInputEvent(e24);
    }), !o30 && "key-down" === t32.type && "Escape" === t32.key && this.activeTool && (t32.stopPropagation(), this.activeTool = null), this._manipulatorState.handleInputEvent(e24, this._manipulatorStateEventArgs), !o30 && r(this.activeTool) && this.activeTool.handleInputEventAfter(e24), this._manipulatorState.handleHoverEvent(e24, this._forEachTool), this._updateCursor();
  }
  _refreshToolWatchers() {
    this.handles.remove(g13), this._forEachTool((t32) => {
      if (t32 instanceof v3) {
        const o30 = l3(() => [t32.cursor, t32.visible, t32.editable], () => {
          i23(t32) || this._manipulatorState.clearPointers(t32, this._manipulatorStateEventArgs), this._updateCursor();
        });
        this.handles.add(o30, g13);
      }
      t32.manipulators && this.handles.add([t32.manipulators.on("after-remove", (o30) => {
        this._manipulatorState.clearPointers(t32, this._manipulatorStateEventArgs, true, o30.item.manipulator);
      }), t32.manipulators.on("change", () => {
        this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
      })], g13);
    }), this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
  }
  _updateToolEditableFlag(t32) {
    var _a;
    (_a = t32.setEditableFlag) == null ? void 0 : _a.call(t32, o18.MANAGER, t(this.activeTool) || t32 === this.activeTool);
  }
  _updateCursor() {
    let t32 = this._manipulatorState.cursor;
    t(t32) && this._forEachTool((o30) => !(!r(o30.cursor) || !o30.visible) && (t32 = o30.cursor, true)), this._get("cursor") !== t32 && this._set("cursor", t32);
  }
  _removeIncompleteTools(t32) {
    this.tools.filter((o30) => (t(t32) || o30 !== t32) && !o30.created && o30.removeIncompleteOnCancel).forEach((t33) => {
      this.tools.remove(t33);
    });
  }
};
e2([y2({ constructOnly: true, nonNullable: true })], w16.prototype, "view", void 0), e2([y2({ readOnly: true, nonNullable: true })], w16.prototype, "textures", void 0), e2([y2({ value: null })], w16.prototype, "activeTool", null), e2([y2({ readOnly: true, type: j2 })], w16.prototype, "tools", void 0), e2([y2({ readOnly: true })], w16.prototype, "cursor", void 0), e2([y2({ readOnly: true })], w16.prototype, "updating", null), w16 = e2([a3("esri.views.ToolViewManager")], w16);
var y13 = w16;

// node_modules/@arcgis/core/views/input/gamepad/GamepadInputDevice.js
var n20 = class extends v3 {
  constructor(e24) {
    super(), this.nativeIndex = null, this._detectedDeviceType = "unknown", "standard" === e24.mapping ? this._detectedDeviceType = "standard" : o21.test(e24.id) ? this._detectedDeviceType = "spacemouse" : this._detectedDeviceType = "unknown", this.nativeIndex = e24.index;
  }
  get native() {
    const e24 = navigator.getGamepads ? navigator.getGamepads() : [];
    return null != this.nativeIndex && this.nativeIndex < e24.length ? e24[this.nativeIndex] : null;
  }
  get deviceType() {
    return this._detectedDeviceType;
  }
  get axisThreshold() {
    return i26[this.deviceType];
  }
};
e2([y2({ nonNullable: true, readOnly: true })], n20.prototype, "nativeIndex", void 0), e2([y2({ type: String, readOnly: true })], n20.prototype, "deviceType", null), e2([y2({ type: Number, readOnly: true })], n20.prototype, "axisThreshold", null), n20 = e2([a3("esri.views.input.gamepad.GamepadInputDevice")], n20);
var o21 = new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))", "i");
var i26 = { standard: 0.15, spacemouse: 0.025, unknown: 0 };
var a19 = n20;

// node_modules/@arcgis/core/views/input/gamepad/GamepadSettings.js
var c27 = class extends v3 {
  constructor(...e24) {
    super(...e24), this.devices = new j2(), this.enabledFocusMode = "document";
  }
};
e2([y2({ type: j2.ofType(a19), readOnly: true })], c27.prototype, "devices", void 0), e2([y2({ type: ["document", "view", "none"] })], c27.prototype, "enabledFocusMode", void 0), c27 = e2([a3("esri.views.input.gamepad.GamepadSettings")], c27);
var i27 = c27;

// node_modules/@arcgis/core/views/input/Input.js
var p20 = class extends v3 {
  constructor() {
    super(...arguments), this.gamepad = new i27();
  }
};
e2([y2({ readOnly: true })], p20.prototype, "gamepad", void 0), p20 = e2([a3("esri.views.input.Input")], p20);
var a20 = p20;

// node_modules/@arcgis/core/views/navigation/gamepad/GamepadSettings.js
var s19 = class extends v3 {
  constructor(o30) {
    super(o30), this.enabled = true, this.device = null, this.mode = "pan", this.tiltDirection = "forward-down", this.velocityFactor = 1;
  }
};
e2([y2({ type: Boolean, nonNullable: true })], s19.prototype, "enabled", void 0), e2([y2({ type: a19 })], s19.prototype, "device", void 0), e2([y2({ type: ["pan", "zoom"], nonNullable: true })], s19.prototype, "mode", void 0), e2([y2({ type: ["forward-down", "forward-up"], nonNullable: true })], s19.prototype, "tiltDirection", void 0), e2([y2({ type: Number, nonNullable: true })], s19.prototype, "velocityFactor", void 0), s19 = e2([a3("esri.views.navigation.gamepad.GamepadSettings")], s19);
var a21 = s19;

// node_modules/@arcgis/core/views/navigation/Navigation.js
var a22 = class extends v3 {
  constructor(o30) {
    super(o30), this.browserTouchPanEnabled = true, this.gamepad = new a21(), this.momentumEnabled = true, this.mouseWheelZoomEnabled = true;
  }
};
e2([y2({ type: Boolean })], a22.prototype, "browserTouchPanEnabled", void 0), e2([y2({ type: a21, nonNullable: true })], a22.prototype, "gamepad", void 0), e2([y2({ type: Boolean })], a22.prototype, "momentumEnabled", void 0), e2([y2({ type: Boolean })], a22.prototype, "mouseWheelZoomEnabled", void 0), a22 = e2([a3("esri.views.navigation.Navigation")], a22);
var p21 = a22;

// node_modules/@arcgis/core/geometry/support/heightModelInfoUtils.js
var s20;
function h16(e24) {
  var _a;
  const r28 = e24.url ? d2(e24.url) : void 0, o30 = (_a = e24.spatialReference) == null ? void 0 : _a.vcsWkid;
  return !(null == o30 && r(r28) && "ImageServer" === r28.serverType) && u16(e24) && e24.heightModelInfo ? e24.heightModelInfo : g14(e24) ? v7.deriveUnitFromSR(p22, e24.spatialReference) : null;
}
function u16(e24) {
  return "heightModelInfo" in e24;
}
function d11(e24) {
  if ("unknown" === e24.type || !("capabilities" in e24))
    return false;
  switch (e24.type) {
    case "csv":
    case "feature":
    case "geojson":
    case "subtype-group":
    case "ogc-feature":
    case "oriented-imagery":
    case "wfs":
    case "knowledge-graph-sublayer":
      return true;
    default:
      return false;
  }
}
function g14(e24) {
  return d11(e24) ? !!(e24.capabilities && e24.capabilities.data && e24.capabilities.data.supportsZ) : m20(e24);
}
function f15(e24) {
  return null != e24.layers || m20(e24) || d11(e24) || u16(e24);
}
function m20(e24) {
  switch (e24.type) {
    case "building-scene":
    case "elevation":
    case "integrated-mesh":
    case "point-cloud":
    case "scene":
    case "voxel":
      return true;
    case "base-dynamic":
    case "base-elevation":
    case "base-tile":
    case "bing-maps":
    case "csv":
    case "dimension":
    case "geojson":
    case "feature":
    case "subtype-group":
    case "geo-rss":
    case "graphics":
    case "group":
    case "imagery":
    case "imagery-tile":
    case "kml":
    case "knowledge-graph":
    case "link-chart":
    case "knowledge-graph-sublayer":
    case "line-of-sight":
    case "map-image":
    case "map-notes":
    case "media":
    case "ogc-feature":
    case "open-street-map":
    case "oriented-imagery":
    case "route":
    case "stream":
    case "tile":
    case "unknown":
    case "unsupported":
    case "vector-tile":
    case "wcs":
    case "web-tile":
    case "wfs":
    case "wms":
    case "wmts":
    case null:
      return false;
  }
  return false;
}
!function(e24) {
  e24[e24.Ok = 0] = "Ok", e24[e24.Units = 1] = "Units", e24[e24.HeightModel = 2] = "HeightModel", e24[e24.CRS = 3] = "CRS", e24[e24.Unsupported = 4] = "Unsupported";
}(s20 || (s20 = {}));
var p22 = new v7({ heightModel: "gravity-related-height" });

// node_modules/@arcgis/core/views/support/projectionUtils.js
var n21;
var s21 = null;
async function c28(r28) {
  s21 || (s21 = import("./geometryServiceUtils-O4ZLTBWZ.js").then((e24) => n21 = e24)), await s21, f(r28);
}
async function p23(e24, s29, a36, m27) {
  if (!e24)
    return null;
  const l27 = e24.spatialReference;
  return en() || An(l27, s29) ? rn(e24, s29) : n21 ? n21.projectGeometry(e24, s29, a36, m27) : (await Promise.race([c28(m27), tn(m27)]), p23(e24, s29, a36, m27));
}

// node_modules/@arcgis/core/views/support/DefaultsFromMap.js
var h17 = class extends v3 {
  constructor(e24) {
    super(e24), this.required = { tileInfo: false, heightModelInfo: false, extent: false }, this.defaultSpatialReference = null, this.userSpatialReference = null, this.sourcePreloadCount = 10, this.priorityCollection = null, this.requiresExtentInSpatialReference = true, this.suspended = false, this._projectExtentTask = { task: null, input: null, output: null, spatialReference: null };
  }
  destroy() {
    this._projectExtentTask.task && (this._projectExtentTask.task = w(this._projectExtentTask.task)), this._set("map", null);
  }
  get ready() {
    return !this._spatialReferenceTask.updating && !this._tileInfoTask.updating && !this._extentTask.updating;
  }
  get heightModelInfoReady() {
    return !this._heightModelInfoTask.updating;
  }
  get spatialReference() {
    return r(this.userSpatialReference) ? this.userSpatialReference : e(this._spatialReferenceTask.spatialReference);
  }
  get extent() {
    return e(this._extentTask.extent);
  }
  get heightModelInfo() {
    return e(this._heightModelInfoTask.heightModelInfo);
  }
  get vcsWkid() {
    return e(this._heightModelInfoTask.vcsWkid);
  }
  get latestVcsWkid() {
    return e(this._heightModelInfoTask.latestVcsWkid);
  }
  get viewingMode() {
    return t(this.userSpatialReference) || this.userSpatialReference.equals(e(this._spatialReferenceTask.spatialReference)) ? e(this._spatialReferenceTask.viewingMode) : null;
  }
  get tileInfo() {
    return e(this._tileInfoTask.tileInfo);
  }
  get mapCollections() {
    var _a, _b, _c, _d;
    const e24 = (_a = this.map) == null ? void 0 : _a.call(this), t32 = [];
    return r(this.priorityCollection) && t32.push(this.priorityCollection), t32.push({ parent: e24 == null ? void 0 : e24.basemap, layers: (_b = e24 == null ? void 0 : e24.basemap) == null ? void 0 : _b.baseLayers }, { layers: e24 == null ? void 0 : e24.layers }, { parent: e24 == null ? void 0 : e24.ground, layers: (_c = e24 == null ? void 0 : e24.ground) == null ? void 0 : _c.layers }, { parent: e24 == null ? void 0 : e24.basemap, layers: (_d = e24 == null ? void 0 : e24.basemap) == null ? void 0 : _d.referenceLayers }), t32;
  }
  get _allLayers() {
    return this._collectLayers(this.mapCollections);
  }
  get _spatialReferenceTask() {
    if (this.suspended)
      return this._get("_spatialReferenceTask") ?? { updating: false };
    const { layers: e24, updating: t32 } = this._allLayers;
    let a36 = null;
    for (const i37 of e24) {
      const e25 = this._getSupportedSpatialReferences(i37);
      if (e25.length > 0) {
        const t33 = this._narrowDownSpatialReferenceCandidates(a36, e25);
        r(t33) && (a36 = t33);
      }
      if (r(a36) && 1 === a36.length)
        break;
    }
    if (t32 && (t(a36) || 1 !== a36.length))
      return { updating: true };
    const n32 = this._pickSpatialReferenceCandidate(a36);
    return { spatialReference: r(n32) ? n32.spatialReference : null, viewingMode: r(n32) ? n32.viewingMode : null, updating: false };
  }
  get _tileInfoTask() {
    var _a, _b, _c, _d, _e2, _f, _g;
    if (!this.required.tileInfo)
      return this._get("_tileInfoTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const { layers: e24, updating: t32 } = this._collectLayers([{ parent: (_b = (_a = this.map) == null ? void 0 : _a.call(this)) == null ? void 0 : _b.basemap, layers: (_e2 = (_d = (_c = this.map) == null ? void 0 : _c.call(this)) == null ? void 0 : _d.basemap) == null ? void 0 : _e2.baseLayers }, { layers: (_g = (_f = this.map) == null ? void 0 : _f.call(this)) == null ? void 0 : _g.layers }]);
    if (e24 && e24.length > 0 && "tileInfo" in e24[0]) {
      const t33 = e24[0].tileInfo;
      return { tileInfo: t33 && t33.spatialReference.equals(this.spatialReference) ? t33 : null, updating: false };
    }
    return { updating: t32 };
  }
  get _heightModelInfoTask() {
    var _a, _b, _c;
    if (!this.required.heightModelInfo || this.suspended && ((_a = this._get("_heightModelInfoTask")) == null ? void 0 : _a.heightModelInfo))
      return this._get("_heightModelInfoTask") ?? { updating: false };
    const { layers: e24, updating: t32 } = this._allLayers;
    for (const a36 of e24)
      if (f15(a36)) {
        const e25 = h16(a36);
        if (e25)
          return { heightModelInfo: e25, vcsWkid: (_b = a36.spatialReference) == null ? void 0 : _b.vcsWkid, latestVcsWkid: (_c = a36.spatialReference) == null ? void 0 : _c.latestVcsWkid, updating: false };
      }
    return { updating: t32 };
  }
  get _extentCandidatesTask() {
    if (this.suspended || !this.required.extent)
      return this._get("_extentCandidatesTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const e24 = this._allLayers, t32 = e24.updating, a36 = [];
    for (const n32 of e24.layers) {
      const e25 = "fullExtents" in n32 && n32.fullExtents || (r(n32.fullExtent) ? [n32.fullExtent] : []), t33 = this.requiresExtentInSpatialReference ? null : e25[0], i37 = e25.find((e26) => e26.spatialReference.equals(this.spatialReference)) ?? t33;
      if (i37)
        return { candidates: [{ extent: i37, layer: n32 }], updating: false };
      if (this._getSupportedSpatialReferences(n32).length > 0)
        for (const s29 of e25)
          a36.push({ extent: s29, layer: n32 });
    }
    return { candidates: a36, updating: t32 };
  }
  get _extentTask() {
    const { candidates: e24, updating: t32 } = this._extentCandidatesTask;
    if (t32)
      return { updating: t32 };
    if (t(e24) || 0 === e24.length)
      return { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const i37 = this._pickExtentCandidate(e24), o30 = this.spatialReference;
    return i37.extent.equals(this._projectExtentTask.input) && o30.equals(this._projectExtentTask.spatialReference) ? { extent: this._projectExtentTask.output, updating: r(this._projectExtentTask.task) && !this._projectExtentTask.task.finished } : (r(this._projectExtentTask.task) && (this._projectExtentTask.task = w(this._projectExtentTask.task)), this._projectExtentTask = { input: i37.extent.clone(), output: null, spatialReference: o30.clone(), task: j4(async (e25) => {
      try {
        const t33 = await p23(i37.extent, o30, i37.layer.portalItem, e25);
        this._projectExtentTask = { ...this._projectExtentTask, task: null, output: t33 };
      } catch (t33) {
        if (p2(e25))
          return;
        this._projectExtentTask = { ...this._projectExtentTask, task: null };
      }
    }) }, { updating: true });
  }
  _narrowDownSpatialReferenceCandidates(e24, t32) {
    if (t(e24))
      return t32;
    const a36 = [], n32 = (e25, t33) => r(e25) ? r(t33) ? e25 === t33 && e25 : e25 : t33;
    for (const s29 of e24)
      for (const e25 of t32) {
        if (!s29.spatialReference.equals(e25.spatialReference))
          continue;
        const t33 = n32(s29.viewingMode, e25.viewingMode);
        if (false !== t33) {
          a36.push({ spatialReference: s29.spatialReference, viewingMode: t33 });
          break;
        }
      }
    return a36.length > 0 ? a36 : null;
  }
  _pickSpatialReferenceCandidate(e24) {
    const t32 = this.defaultSpatialReference;
    return t(e24) || e24.length < 1 ? r(t32) ? { spatialReference: t32, viewingMode: null } : null : (r(t32) && e24.length > 1 && e24.some(({ spatialReference: e25 }) => e25.equals(t32)) && (e24 = e24.filter(({ spatialReference: e25 }) => e25.equals(t32))), e24.length > 1 && e24.some(({ viewingMode: e25 }) => e25 !== l6.Local) && (e24 = e24.filter(({ viewingMode: e25 }) => e25 !== l6.Local)), e24[0]);
  }
  _getSupportedSpatialReferences(e24) {
    const t32 = "supportedSpatialReferences" in e24 && e24.supportedSpatialReferences || (e24.spatialReference ? [e24.spatialReference] : []);
    if (0 === t32.length)
      return [];
    const a36 = [];
    for (const n32 of t32) {
      const t33 = this.getSpatialReferenceSupport({ spatialReference: n32, layer: e24 });
      if (r(t33)) {
        const e25 = r(t33.constraints) ? t33.constraints : [{ spatialReference: n32, viewingMode: null }];
        for (const { spatialReference: t34, viewingMode: n33 } of e25)
          (!this.requiresExtentInSpatialReference || t(this.userSpatialReference) || t34.equals(this.userSpatialReference)) && a36.push({ spatialReference: t34, viewingMode: n33 });
      }
    }
    return a36;
  }
  _pickExtentCandidate(e24) {
    const t32 = this.spatialReference;
    return e24.find(({ extent: e25 }) => t32.equals(e25.spatialReference)) || e24[0];
  }
  _collectLayers(e24) {
    var _a;
    if ("loaded" !== this._loadMaybe((_a = this.map) == null ? void 0 : _a.call(this)))
      return { layers: [], updating: true };
    const t32 = { layers: [], preloading: -1, updating: false };
    for (const a36 of e24)
      if (this._collectCollection(a36, t32), t32.preloading === this.sourcePreloadCount)
        break;
    return { layers: t32.layers, updating: t32.updating };
  }
  _collectCollection(e24, t32) {
    if (e24.layers) {
      switch (this._loadMaybe(e24.parent)) {
        case "loading":
          return t32.updating = true, void ++t32.preloading;
        case "failed":
          return;
      }
      for (const a36 of e24.layers) {
        switch (this._loadMaybe(a36)) {
          case "failed":
            continue;
          case "loading":
            t32.updating = true, ++t32.preloading;
            break;
          case "loaded":
            t32.updating || t32.layers.push(a36), "layers" in a36 && this._collectCollection({ layers: a36.layers }, t32);
        }
        if (t32.preloading === this.sourcePreloadCount)
          break;
      }
    }
  }
  _loadMaybe(e24) {
    return e24 && "loadStatus" in e24 && null != e24.loadStatus ? "not-loaded" === e24.loadStatus ? (e24.load().catch(() => {
    }), "loading") : e24.loadStatus : "loaded";
  }
};
e2([y2()], h17.prototype, "required", void 0), e2([y2({ constructOnly: true })], h17.prototype, "map", void 0), e2([y2({ constructOnly: true })], h17.prototype, "getSpatialReferenceSupport", void 0), e2([y2()], h17.prototype, "defaultSpatialReference", void 0), e2([y2()], h17.prototype, "userSpatialReference", void 0), e2([y2()], h17.prototype, "sourcePreloadCount", void 0), e2([y2()], h17.prototype, "priorityCollection", void 0), e2([y2()], h17.prototype, "requiresExtentInSpatialReference", void 0), e2([y2()], h17.prototype, "suspended", void 0), e2([y2({ readOnly: true })], h17.prototype, "ready", null), e2([y2({ readOnly: true })], h17.prototype, "heightModelInfoReady", null), e2([y2({ readOnly: true })], h17.prototype, "spatialReference", null), e2([y2({ readOnly: true })], h17.prototype, "extent", null), e2([y2({ readOnly: true })], h17.prototype, "heightModelInfo", null), e2([y2({ readOnly: true })], h17.prototype, "vcsWkid", null), e2([y2({ readOnly: true })], h17.prototype, "latestVcsWkid", null), e2([y2({ readOnly: true })], h17.prototype, "viewingMode", null), e2([y2({ readOnly: true })], h17.prototype, "tileInfo", null), e2([y2({ readOnly: true })], h17.prototype, "mapCollections", null), e2([y2({ readOnly: true })], h17.prototype, "_allLayers", null), e2([y2({ readOnly: true })], h17.prototype, "_spatialReferenceTask", null), e2([y2({ readOnly: true })], h17.prototype, "_tileInfoTask", null), e2([y2({ readOnly: true })], h17.prototype, "_heightModelInfoTask", null), e2([y2({ readOnly: true })], h17.prototype, "_extentCandidatesTask", null), e2([y2()], h17.prototype, "_extentTask", null), e2([y2()], h17.prototype, "_projectExtentTask", void 0), h17 = e2([a3("esri.views.support.DefaultsFromMap")], h17);

// node_modules/@arcgis/core/views/View.js
var W6;
var z6 = W6 = class extends a9(n4.EventedMixin(m2(v3))) {
  constructor(e24) {
    super(e24), this._userSpatialReference = null, this._cursor = null, this.allLayerViews = new l5({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, (_b = this.groundView) == null ? void 0 : _b.layerViews, this.layerViews, (_c = this.basemapView) == null ? void 0 : _c.referenceLayerViews];
    }, getChildrenFunction: (e25) => e25.layerViews }), this.groundView = null, this.basemapView = null, this.fatalError = null, this.graphics = new i10(), this.analyses = new i20(), this.typeSpecificPreconditionsReady = true, this.layerViews = new j2(), this.magnifier = new p18(), this.padding = { left: 0, top: 0, right: 0, bottom: 0 }, this.ready = false, this.spatialReferenceWarningDelay = 1e3, this.supportsGround = true, this.timeExtent = null, this.timeReference = new a5(), this.type = null, this.scale = null, this.updating = false, this.initialExtentRequired = true, this.input = new a20(), this.navigation = new p21(), this.layerViewManager = null, this.analysisViewManager = null, this.isHeightModelInfoRequired = false, this.width = null, this.height = null, this.resizing = false, this.suspended = false, this.viewEvents = new p19(this), this.persistableViewModels = new j2(), this._isValid = false, this._readyCycleForced = false, this._currentSpatialReference = null, this.handles.add(l3(() => this.preconditionsReady, (e25) => {
      var _a, _b;
      e25 ? (this._currentSpatialReference = this.spatialReference, W6.views.add(this)) : (this._currentSpatialReference = null, W6.views.remove(this)), this.notifyChange("spatialReference"), !e25 && this.ready ? ((_a = this.toolViewManager) == null ? void 0 : _a.detach(), r(this.analysisViewManager) && this.analysisViewManager.detach(), (_b = this.layerViewManager) == null ? void 0 : _b.clear(), this._teardown()) : e25 && !this.ready && (this._startup(), r(this.analysisViewManager) && this.analysisViewManager.attach(), this.toolViewManager.attach());
    }, U2));
  }
  initialize() {
    this.addResolvingPromise(this.validate().then(() => (this._isValid = true, j3(() => this.ready)))), this.basemapView = new p17({ view: this }), this.layerViewManager = new M7({ view: this, layerViewImporter: { importLayerView: (e24) => this.importLayerView(e24), hasLayerViewModule: (e24) => this.hasLayerViewModule(e24) }, supportsGround: this.supportsGround }), this.toolViewManager = new y13({ view: this }), this._setupSpatialReferenceLogger(), this.handles.add([l3(() => this.initialExtentRequired, (e24) => this.defaultsFromMap.required = { ...this.defaultsFromMap.required, extent: e24 }, { sync: true, initial: true }), l3(() => this.ready, (e24) => {
      this.defaultsFromMap && (this.defaultsFromMap.suspended = e24, this.defaultsFromMap.userSpatialReference = e24 ? this.spatialReference : this._userSpatialReference);
    }, { sync: true }), l3(() => this._userSpatialReference, (e24) => {
      this.defaultsFromMap && (this.defaultsFromMap.userSpatialReference = e24);
    }, { sync: true, initial: true })]);
  }
  _setupSpatialReferenceLogger() {
    let e24 = null;
    this.handles.add([l3(() => {
      var _a;
      return (_a = this.defaultsFromMap) == null ? void 0 : _a.ready;
    }, (t32) => {
      var _a;
      const i37 = ((_a = this.map) == null ? void 0 : _a.allLayers.length) > 0;
      if (t32 && !this.spatialReference && i37) {
        if (r(e24))
          return;
        const t33 = n(() => e24 = w(e24));
        e24 = j4(async (t34) => {
          try {
            await U(this.spatialReferenceWarningDelay, null, t34);
          } catch {
            return;
          } finally {
            e24 = null;
          }
          s2.getLogger(this.declaredClass).warn("#spatialReference", "no spatial reference could be derived from the currently added map layers");
        }), this.handles.add(t33, "spatial-reference-logger-task");
      } else
        this.handles.remove("spatial-reference-logger-task");
    }, { sync: true })]);
  }
  destroy() {
    if (this.destroyed)
      return;
    this.viewEvents.destroy(), this.allLayerViews.destroy(), this.navigation && (this.navigation.destroy(), this._set("navigation", null)), this.graphics = a(this.graphics), this.analyses = a(this.analyses), this.handles.remove("defaultsFromMap"), this.defaultsFromMap.destroy(), this._set("defaultsFromMap", null), a(this.analysisViewManager), this.toolViewManager = a(this.toolViewManager), this.layerViewManager = a(this.layerViewManager), this.basemapView = a(this.basemapView), this.invalidate(), this._emitter.clear(), this.handles.removeAll();
    const e24 = this.map;
    this.map = null, e24 == null ? void 0 : e24.destroy();
  }
  _startup() {
    this._set("ready", true);
  }
  _teardown() {
    this._set("ready", false);
  }
  whenReady() {
    return Promise.resolve(this);
  }
  toMap() {
    return s2.getLogger(this.declaredClass).error("#toMap()", "Not implemented on this instance of View"), null;
  }
  get activeTool() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.activeTool;
  }
  set activeTool(e24) {
    this.toolViewManager && (this.toolViewManager.activeTool = e24);
  }
  get animation() {
    return this._get("animation");
  }
  set animation(e24) {
    this._set("animation", e24);
  }
  get center() {
    return null;
  }
  get _defaultsFromMapSettings() {
    return {};
  }
  get defaultsFromMap() {
    return new h17({ required: { tileInfo: false, heightModelInfo: false, extent: false }, map: () => this.map, getSpatialReferenceSupport: (e24) => this.getSpatialReferenceSupport(e24), ...this._defaultsFromMapSettings });
  }
  get extent() {
    return this._get("extent");
  }
  set extent(e24) {
    this._set("extent", e24);
  }
  get heightModelInfo() {
    return this.getDefaultHeightModelInfo();
  }
  get interacting() {
    return this.navigating;
  }
  get navigating() {
    return false;
  }
  get preconditionsReady() {
    var _a;
    return !(this.fatalError || !this._isValid || this._readyCycleForced || !this.map || m5.isLoadable(this.map) && !this.map.loaded || 0 === this.width || 0 === this.height || !this.spatialReference || !this._validateSpatialReference(this.spatialReference) || !this._currentSpatialReference && !((_a = this.defaultsFromMap) == null ? void 0 : _a.ready) || !this.typeSpecificPreconditionsReady);
  }
  get resolution() {
    return 0;
  }
  set map(e24) {
    e24 !== this._get("map") && ((e24 == null ? void 0 : e24.destroyed) && (s2.getLogger(this.declaredClass).warn("#map", "The provided map is already destroyed", { map: e24 }), e24 = null), m5.isLoadable(e24) && e24.load().catch(() => {
    }), this.constructed && (this.forceReadyCycle(), this._currentSpatialReference = null), this._set("map", e24));
  }
  get spatialReference() {
    var _a, _b;
    let e24 = this._userSpatialReference || this._currentSpatialReference || this.getDefaultSpatialReference() || null;
    return e24 && ((_b = (_a = this.defaultsFromMap) == null ? void 0 : _a.required) == null ? void 0 : _b.heightModelInfo) && (e24 = e24.clone(), e24.vcsWkid = this.defaultsFromMap.vcsWkid, e24.latestVcsWkid = this.defaultsFromMap.latestVcsWkid), e24;
  }
  set spatialReference(e24) {
    const t32 = !E2(e24, this._get("spatialReference"));
    this._set("_userSpatialReference", e24), t32 && (this._set("spatialReference", e24), this._spatialReferenceChanged(e24));
  }
  _spatialReferenceChanged(e24) {
  }
  get stationary() {
    return !this.animation && !this.navigating && !this.resizing;
  }
  get tools() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.tools;
  }
  get initialExtent() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.extent;
  }
  get cursor() {
    const e24 = this.toolViewManager ? this.toolViewManager.cursor : null;
    return r(e24) ? e24 : this._cursor || "default";
  }
  set cursor(e24) {
    this._cursor = e24, this.notifyChange("cursor");
  }
  get size() {
    return [this.width, this.height];
  }
  whenLayerView(e24) {
    return this.layerViewManager.whenLayerView(e24);
  }
  getDefaultSpatialReference() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.spatialReference;
  }
  getDefaultHeightModelInfo() {
    var _a;
    return (this.map && "heightModelInfo" in this.map ? this.map.heightModelInfo : void 0) ?? ((_a = this.defaultsFromMap) == null ? void 0 : _a.heightModelInfo) ?? null;
  }
  importLayerView(e24) {
    throw new s3("importLayerView() not implemented");
  }
  hasLayerViewModule(e24) {
    return false;
  }
  async validate() {
  }
  invalidate() {
    this._isValid = false;
  }
  getSpatialReferenceSupport() {
    return { constraints: null };
  }
  _validateSpatialReference(e24) {
    return r(this.getSpatialReferenceSupport({ spatialReference: e24 }));
  }
  when(e24, t32) {
    return this.isResolved() && !this.ready && s2.getLogger(this.declaredClass).warn("#when()", "Calling view.when() while the view is no longer ready but was already resolved once will resolve immediately. Use reactiveUtils.whenOnce(() => view.ready).then(...) instead."), super.when(e24, t32);
  }
  forceReadyCycle() {
    this.ready && (f3(() => false === this.preconditionsReady, () => this._readyCycleForced = false, { once: true }), this._readyCycleForced = true);
  }
  addAndActivateTool(e24) {
    this.toolViewManager.tools.add(e24), this.activeTool = e24;
  }
  tryFatalErrorRecovery() {
    this.fatalError = null;
  }
};
z6.views = new j2(), e2([y2()], z6.prototype, "_userSpatialReference", void 0), e2([y2()], z6.prototype, "activeTool", null), e2([y2({ readOnly: true })], z6.prototype, "allLayerViews", void 0), e2([y2()], z6.prototype, "groundView", void 0), e2([y2()], z6.prototype, "animation", null), e2([y2()], z6.prototype, "basemapView", void 0), e2([y2()], z6.prototype, "center", null), e2([y2({ readOnly: true })], z6.prototype, "_defaultsFromMapSettings", null), e2([y2()], z6.prototype, "defaultsFromMap", null), e2([y2()], z6.prototype, "fatalError", void 0), e2([y2({ type: w3 })], z6.prototype, "extent", null), e2([y2(a12(i10, "graphics"))], z6.prototype, "graphics", void 0), e2([y2(a12(i20, "analyses"))], z6.prototype, "analyses", void 0), e2([y2({ readOnly: true, type: v7 })], z6.prototype, "heightModelInfo", null), e2([y2({ readOnly: true })], z6.prototype, "interacting", null), e2([y2({ readOnly: true })], z6.prototype, "navigating", null), e2([y2({ readOnly: true, dependsOn: ["fatalError", "_isValid", "_readyCycleForced", "map", "map.loaded?", "width", "height", "spatialReference", "_currentSpatialReference", "defaultsFromMap.ready", "typeSpecificPreconditionsReady"] })], z6.prototype, "preconditionsReady", null), e2([y2({ readOnly: true })], z6.prototype, "typeSpecificPreconditionsReady", void 0), e2([y2({ type: j2, readOnly: true })], z6.prototype, "layerViews", void 0), e2([y2()], z6.prototype, "resolution", null), e2([y2({ type: p18 })], z6.prototype, "magnifier", void 0), e2([y2({ value: null, type: L3 })], z6.prototype, "map", null), e2([y2()], z6.prototype, "padding", void 0), e2([y2({ readOnly: true })], z6.prototype, "ready", void 0), e2([y2({ type: f2 })], z6.prototype, "spatialReference", null), e2([y2()], z6.prototype, "spatialReferenceWarningDelay", void 0), e2([y2()], z6.prototype, "stationary", null), e2([y2({ readOnly: true })], z6.prototype, "supportsGround", void 0), e2([y2({ type: T })], z6.prototype, "timeExtent", void 0), e2([y2({ type: a5, nonNullable: true })], z6.prototype, "timeReference", void 0), e2([y2()], z6.prototype, "tools", null), e2([y2()], z6.prototype, "toolViewManager", void 0), e2([y2({ readOnly: true })], z6.prototype, "type", void 0), e2([y2({ type: Number })], z6.prototype, "scale", void 0), e2([y2({ readOnly: true })], z6.prototype, "updating", void 0), e2([y2({ readOnly: true })], z6.prototype, "initialExtentRequired", void 0), e2([y2({ readOnly: true })], z6.prototype, "initialExtent", null), e2([y2()], z6.prototype, "cursor", null), e2([y2({ readOnly: true })], z6.prototype, "input", void 0), e2([y2({ type: p21, nonNullable: true })], z6.prototype, "navigation", void 0), e2([y2()], z6.prototype, "layerViewManager", void 0), e2([y2()], z6.prototype, "analysisViewManager", void 0), e2([y2()], z6.prototype, "width", void 0), e2([y2()], z6.prototype, "height", void 0), e2([y2({ readOnly: true })], z6.prototype, "resizing", void 0), e2([y2({ value: null, readOnly: true })], z6.prototype, "size", null), e2([y2({ readOnly: true })], z6.prototype, "suspended", void 0), e2([y2({ readOnly: true })], z6.prototype, "viewEvents", void 0), e2([y2({ readOnly: true })], z6.prototype, "persistableViewModels", void 0), e2([y2()], z6.prototype, "_isValid", void 0), e2([y2()], z6.prototype, "_readyCycleForced", void 0), e2([y2()], z6.prototype, "_currentSpatialReference", void 0), z6 = W6 = e2([a3("esri.views.View")], z6);
var A8 = z6;

// node_modules/@arcgis/core/views/ViewAnimation.js
var n22 = class extends _ {
  constructor(t32) {
    super(t32), this.state = "running", this.target = null, this._dfd = null;
  }
  initialize() {
    this.addResolvingPromise(new Promise((t32, s29) => this._dfd = { resolve: t32, reject: s29 }));
  }
  get done() {
    return "finished" === this.state || "stopped" === this.state;
  }
  stop() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "stopped"), (_a = this._dfd) == null ? void 0 : _a.reject(new s3("ViewAnimation stopped")));
  }
  finish() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "finished"), (_a = this._dfd) == null ? void 0 : _a.resolve());
  }
  update(t32, s29) {
    s29 || (s29 = C(t32) ? "waiting-for-target" : "running"), this._set("target", t32), this._set("state", s29);
  }
};
e2([y2({ readOnly: true })], n22.prototype, "done", null), e2([y2({ readOnly: true, type: String })], n22.prototype, "state", void 0), e2([y2()], n22.prototype, "target", void 0), n22 = e2([a3("esri.views.ViewAnimation")], n22), function(t32) {
  t32.State = { RUNNING: "running", STOPPED: "stopped", FINISHED: "finished", WAITING_FOR_TARGET: "waiting-for-target" };
}(n22 || (n22 = {}));
var p24 = n22;

// node_modules/@arcgis/core/views/2d/AnimationManager.js
var u17 = class {
  constructor(t32, i37, s29, e24) {
    const o30 = t32.targetGeometry, n32 = i37.targetGeometry;
    e24 ? "string" == typeof e24 && (e24 = r12(e24) || t11.ease) : e24 = t11.ease, this.easing = e24, this.duration = s29, this.sCenterX = o30.x, this.sCenterY = o30.y, this.sScale = t32.scale, this.sRotation = t32.rotation, this.tCenterX = n32.x, this.tCenterY = n32.y, this.tScale = i37.scale, this.tRotation = i37.rotation, this.dCenterX = this.tCenterX - this.sCenterX, this.dCenterY = this.tCenterY - this.sCenterY, this.dScale = this.tScale - this.sScale, this.dRotation = this.tRotation - this.sRotation, this.dRotation > 180 ? this.dRotation -= 360 : this.dRotation < -180 && (this.dRotation += 360);
  }
  applyRatio(t32, i37) {
    const s29 = this.easing(i37);
    let e24, o30, n32, a36;
    i37 >= 1 ? (e24 = this.tCenterX, o30 = this.tCenterY, n32 = this.tRotation, a36 = this.tScale) : (e24 = this.sCenterX + s29 * this.dCenterX, o30 = this.sCenterY + s29 * this.dCenterY, n32 = this.sRotation + s29 * this.dRotation, a36 = this.sScale + s29 * this.dScale), t32.targetGeometry.x = e24, t32.targetGeometry.y = o30, t32.scale = a36, t32.rotation = n32;
  }
};
var d12 = class extends v3 {
  constructor(t32) {
    super(t32), this.updateFunction = null, this.animation = null, this.duration = 200, this.transition = null, this.easing = t11.ease, this.view = null, this.viewpoint = new u4({ targetGeometry: new w2(), scale: 0, rotation: 0 }), this._updateTask = A2({ postRender: this._postRender.bind(this) }), this._updateTask.pause();
  }
  destroy() {
    this._updateTask = p(this._updateTask);
  }
  animate(t32, i37, s29) {
    this.stop();
    const e24 = this.viewpoint;
    Z(e24, i37), this.transition = new u17(this.viewpoint, t32.target, s29 && s29.duration || this.duration, s29 && s29.easing || this.easing);
    const o30 = () => {
      var _a, _b;
      this.animation === t32 && this._updateTask && ("finished" === t32.state && ((_a = this.transition) == null ? void 0 : _a.applyRatio(this.viewpoint, 1), ((_b = this.view) == null ? void 0 : _b.state) && (this.view.state.viewpoint = this.viewpoint.clone())), this.animation = null, this.updateFunction = null);
    };
    return t32.when(o30, o30), this._startTime = performance.now(), this._updateTask.resume(), this.animation = t32, t32;
  }
  animateContinous(t32, i37) {
    this.stop(), this.updateFunction = i37, this.viewpoint = t32;
    const s29 = new p24({ target: t32.clone() }), e24 = () => {
      this.animation === s29 && this._updateTask && (this.animation = null, this.updateFunction = null);
    };
    return s29.when(e24, e24), this._startTime = performance.now(), this._updateTask.resume(), this.animation = s29, s29;
  }
  stop() {
    this.animation && (this.animation.stop(), this.animation = null, this.updateFunction = null);
  }
  _postRender(t32) {
    var _a, _b;
    const i37 = this.animation;
    if (i37 && i37.state !== p24.State.STOPPED) {
      if (this.updateFunction)
        this.updateFunction(this.viewpoint, t32.deltaTime);
      else {
        const t33 = this.transition, i38 = (performance.now() - this._startTime) / t33.duration, s29 = i38 >= 1;
        t33.applyRatio(this.viewpoint, i38), s29 && ((_a = this.animation) == null ? void 0 : _a.finish());
      }
      ((_b = this.view) == null ? void 0 : _b.state) && (this.view.state.viewpoint = this.viewpoint.clone());
    } else
      this._updateTask.pause();
  }
};
e2([y2()], d12.prototype, "animation", void 0), e2([y2()], d12.prototype, "duration", void 0), e2([y2()], d12.prototype, "transition", void 0), e2([y2()], d12.prototype, "easing", void 0), e2([y2()], d12.prototype, "view", void 0), e2([y2()], d12.prototype, "viewpoint", void 0), d12 = e2([a3("esri.views.2d.AnimationManager")], d12);
var l19 = d12;

// node_modules/@arcgis/core/views/2d/FrameTask.js
var s22 = class {
  constructor(t32) {
    this.view = t32, this._stationaryHandle = null, this._frameTaskHandle = null, this._updateParameters = null, this._updateRequested = false, this.stationary = true, this.animationInProgress = false, this.prepare = () => {
      this._updateParameters && (this._updateParameters.state = this.view.state, this._updateParameters.stationary = this.view.stationary, this._updateParameters.pixelRatio = window.devicePixelRatio, this._updateParameters.renderingOptions = this.view.renderingOptions);
    }, this.update = () => {
      var _a;
      this._updateRequested = false;
      const { basemapView: t33, graphicsView: a36, labelManager: s29, layerViews: i37, state: { id: r28 } } = this.view;
      t33 == null ? void 0 : t33.baseLayerViews.forEach(this._updateLayerView, this), i37.forEach(this._updateLayerView, this), t33 == null ? void 0 : t33.referenceLayerViews.forEach(this._updateLayerView, this), r(s29) && (s29.lastUpdateId !== r28 && (s29.viewChange(), s29.lastUpdateId = r28), s29.updateRequested && s29.processUpdate(this._updateParameters)), r(a36) && (a36.lastUpdateId !== r28 && (a36.viewChange(), a36.lastUpdateId = r28), a36.updateRequested && a36.processUpdate(this._updateParameters)), this.view.graphicsTileStore.setViewState(this._updateParameters.state), this.animationInProgress || this._updateRequested || ((_a = this._frameTaskHandle) == null ? void 0 : _a.pause());
    };
  }
  destroy() {
    this.stop();
  }
  start() {
    if (this._frameTaskHandle)
      return;
    const e24 = this.view;
    this.stationary = e24.stationary, this._updateParameters = { state: e24.state, pixelRatio: window.devicePixelRatio, stationary: this.stationary, renderingOptions: e24.renderingOptions }, this._stationaryHandle = l3(() => e24.stationary, (e25) => {
      this.stationary = e25, this.requestFrame();
    }), this._frameTaskHandle = A2(this), this.requestUpdate();
  }
  stop() {
    var _a;
    this._frameTaskHandle && (this._updateRequested = false, (_a = this._stationaryHandle) == null ? void 0 : _a.remove(), this._frameTaskHandle.remove(), this._updateParameters = this._stationaryHandle = this._frameTaskHandle = null, this.stationary = true, this.animationInProgress = false);
  }
  requestUpdate() {
    this._updateRequested || (this._updateRequested = true, this.requestFrame());
  }
  requestFrame() {
    this._frameTaskHandle && this._frameTaskHandle.resume();
  }
  _updateLayerView(e24) {
    if (!e24.attached)
      return void this.requestUpdate();
    const t32 = this.view.state, a36 = e24.lastUpdateId;
    null != a36 && (this.stationary || e24.moving) || (e24.moving = true, e24.moveStart()), a36 !== t32.id && e24.viewChange(), this.stationary && e24.moving && (e24.moving = false, e24.moveEnd()), e24.lastUpdateId = t32.id, e24.updateRequested && e24.processUpdate(this._updateParameters), "layerViews" in e24 && e24.layerViews.forEach(this._updateLayerView, this);
  }
};

// node_modules/@arcgis/core/views/2d/layerViewModuleImportUtils.js
function t22() {
  return Promise.all([import("./webglDeps-XBP6C3TD.js"), import("./mapViewDeps-2X6DPBHL.js")]);
}
var s23 = () => t22().then(() => import("./TileLayerView2D-LWQSOCD7.js"));
var i28 = () => t22().then(() => import("./FeatureLayerView2D-UPKIBD3D.js"));
var l20 = { "base-dynamic": () => t22().then(() => import("./BaseDynamicLayerView2D-2JPN5KCN.js")), "base-tile": s23, "bing-maps": s23, csv: i28, "geo-rss": () => t22().then(() => import("./GeoRSSLayerView2D-RESWJFZ6.js")), feature: i28, geojson: i28, graphics: () => t22().then(() => import("./GraphicsLayerView2D-735BPTNZ.js")), group: () => t22().then(() => import("./GroupLayerView2D-ATBQ5KAC.js")), imagery: () => t22().then(() => import("./ImageryLayerView2D-VGR4GBBR.js")), "imagery-tile": () => t22().then(() => import("./ImageryTileLayerView2D-BS5SVNEF.js")), kml: () => t22().then(() => import("./KMLLayerView2D-ZMFFTAB2.js")), "knowledge-graph": () => t22().then(() => import("./KnowledgeGraphLayerView2D-GRJWA4HT.js")), "link-chart": () => t22().then(() => import("./KnowledgeGraphLayerView2D-GRJWA4HT.js")), "knowledge-graph-sublayer": i28, "map-image": () => t22().then(() => import("./MapImageLayerView2D-L74Q56ST.js")), "map-notes": () => t22().then(() => import("./MapNotesLayerView2D-34TYS3Y6.js")), media: () => t22().then(() => import("./MediaLayerView2D-XOWTZJJH.js")), "ogc-feature": () => t22().then(() => import("./OGCFeatureLayerView2D-CGY5QSZP.js")), "open-street-map": s23, "oriented-imagery": i28, route: () => t22().then(() => import("./RouteLayerView2D-YLBZ7XWN.js")), stream: () => t22().then(() => import("./StreamLayerView2D-TTV7SVNV.js")), "subtype-group": () => t22().then(() => import("./SubtypeGroupLayerView2D-UTSPJ4ZT.js")), tile: s23, "vector-tile": () => t22().then(() => import("./VectorTileLayerView2D-4MEHYUNK.js")), wcs: () => t22().then(() => import("./ImageryTileLayerView2D-BS5SVNEF.js")), "web-tile": s23, wfs: i28, wms: () => t22().then(() => import("./WMSLayerView2D-4PM2JEEZ.js")), wmts: () => t22().then(() => import("./WMTSLayerView2D-L6A2MZOK.js")), "line-of-sight": null, "base-elevation": null, "building-scene": null, dimension: null, elevation: null, "integrated-mesh": null, "point-cloud": null, voxel: null, scene: null, unknown: null, unsupported: null };
function o22(r28) {
  const a36 = r28.declaredClass ? r28.declaredClass.slice(r28.declaredClass.lastIndexOf(".") + 1) : "Unknown", t32 = a36.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  return new s3(`${t32}:view-not-supported`, `${a36} is not supported in 2D`);
}
var n23 = { hasLayerViewModule: (e24) => r(l20[e24.type]), importLayerView: (e24) => {
  const r28 = l20[e24.type];
  if (t(r28))
    throw o22(e24);
  return r28(e24);
} };

// node_modules/@arcgis/core/geometry/support/near.js
function o23(o30, m27) {
  const { spatialReference: r28 } = m27, i37 = [m27.x, m27.y];
  let s29 = Number.POSITIVE_INFINITY, x4 = 0, c39 = 0;
  const a36 = [0, 0], f19 = "extent" === o30.type ? [[[o30.xmin, o30.ymin], [o30.xmin, o30.ymax], [o30.xmax, o30.ymax], [o30.xmax, o30.ymin], [o30.xmin, o30.ymin]]] : o30.rings;
  for (const n32 of f19)
    for (let o31 = 0; o31 < n32.length - 1; o31++) {
      o3(a36, i37, n32, o31);
      const m28 = m3(i37, a36);
      m28 < s29 && (s29 = m28, x4 = a36[0], c39 = a36[1]);
    }
  return { coordinate: new w2({ x: x4, y: c39, spatialReference: r28 }), distance: s29 };
}

// node_modules/@arcgis/core/views/2d/constraints/GeometryConstraint.js
var l21;
var y14 = l21 = class extends i7(v3) {
  constructor(e24) {
    super(e24), this.geometry = null, this.spatialReference = null;
  }
  get normalizedGeometry() {
    if (t(this.geometry) || !this.spatialReference)
      return null;
    if (!this.spatialReference.equals(this.geometry.spatialReference))
      try {
        return rn(this.geometry, this.spatialReference);
      } catch (e24) {
        return s2.getLogger(this.declaredClass).error("#constraints.geometry", "could not project the geometry to the view's spatial reference", { geometry: this.geometry, spatialReference: this.spatialReference, error: e24 }), null;
      }
    return this.geometry;
  }
  constrain(e24, r28) {
    if (t(this.normalizedGeometry))
      return e24;
    const t32 = e24.targetGeometry;
    if ("extent" === this.normalizedGeometry.type ? r4(this.normalizedGeometry, t32) : c(this.normalizedGeometry, t32))
      return e24;
    const { coordinate: o30 } = o23(this.normalizedGeometry, t32);
    return o30 ? (e24.targetGeometry = o30, e24) : e24;
  }
  clone() {
    var _a, _b;
    return new l21({ geometry: (_a = this.geometry) == null ? void 0 : _a.clone(), spatialReference: (_b = this.spatialReference) == null ? void 0 : _b.clone() });
  }
};
e2([y2({ constructOnly: true })], y14.prototype, "geometry", void 0), e2([y2({ readOnly: true })], y14.prototype, "normalizedGeometry", null), e2([y2({ constructOnly: true })], y14.prototype, "spatialReference", void 0), y14 = l21 = e2([a3("esri.views.2d.constraints.GeometryConstraint")], y14);

// node_modules/@arcgis/core/views/2d/constraints/RotationConstraint.js
var a23;
var n24 = a23 = class extends i7(v3) {
  constructor() {
    super(...arguments), this.enabled = true, this.rotationEnabled = true;
  }
  constrain(o30, r28) {
    return this.enabled && r28 ? (this.rotationEnabled || (o30.rotation = r28.rotation), o30) : o30;
  }
  clone() {
    return new a23({ enabled: this.enabled, rotationEnabled: this.rotationEnabled });
  }
};
e2([y2()], n24.prototype, "enabled", void 0), e2([y2()], n24.prototype, "rotationEnabled", void 0), n24 = a23 = e2([a3("esri.views.2d.constraints.RotationConstraint")], n24);
var i29 = n24;

// node_modules/@arcgis/core/views/2d/constraints/ZoomConstraint.js
var a24;
var c29 = a24 = class extends i7(v3) {
  constructor(e24) {
    super(e24), this._lodByScale = {}, this._scales = [], this.effectiveLODs = null, this.effectiveMinZoom = -1, this.effectiveMaxZoom = -1, this.effectiveMinScale = 0, this.effectiveMaxScale = 0, this.lods = null, this.minZoom = -1, this.maxZoom = -1, this.minScale = 0, this.maxScale = 0, this.snapToZoom = true;
  }
  initialize() {
    let e24, { lods: t32, minScale: o30, maxScale: s29, minZoom: i37, maxZoom: a36 } = this, c39 = -1, r28 = -1, l27 = false, n32 = false;
    if (0 !== o30 && 0 !== s29 && o30 < s29 && ([o30, s29] = [s29, o30]), !t32 || !t32.length)
      return this._set("effectiveMinScale", o30), void this._set("effectiveMaxScale", s29);
    t32 = t32.map((e25) => e25.clone()), t32.sort((e25, t33) => t33.scale - e25.scale), t32.forEach((e25, t33) => e25.level = t33);
    for (const f19 of t32)
      !l27 && o30 > 0 && o30 >= f19.scale && (c39 = f19.level, l27 = true), !n32 && s29 > 0 && s29 >= f19.scale && (r28 = e24 ? e24.level : -1, n32 = true), e24 = f19;
    -1 === i37 && (i37 = 0 === o30 ? 0 : c39), -1 === a36 && (a36 = 0 === s29 ? t32.length - 1 : r28), i37 = Math.max(i37, 0), i37 = Math.min(i37, t32.length - 1), a36 = Math.max(a36, 0), a36 = Math.min(a36, t32.length - 1), i37 > a36 && ([i37, a36] = [a36, i37]), o30 = t32[i37].scale, s29 = t32[a36].scale, t32.splice(0, i37), t32.splice(a36 - i37 + 1, t32.length), t32.forEach((e25, t33) => {
      this._lodByScale[e25.scale] = e25, this._scales[t33] = e25.scale;
    }), this._set("effectiveLODs", t32), this._set("effectiveMinZoom", i37), this._set("effectiveMaxZoom", a36), this._set("effectiveMinScale", o30), this._set("effectiveMaxScale", s29);
  }
  constrain(e24, t32) {
    if (t32 && e24.scale === t32.scale)
      return e24;
    const o30 = this.effectiveMinScale, s29 = this.effectiveMaxScale, i37 = e24.targetGeometry, a36 = t32 && t32.targetGeometry, c39 = 0 !== s29 && e24.scale < s29, r28 = 0 !== o30 && e24.scale > o30;
    if (c39 || r28) {
      const c40 = r28 ? o30 : s29;
      if (t32 && a36) {
        const o31 = (c40 - t32.scale) / (e24.scale - t32.scale);
        i37.x = a36.x + (i37.x - a36.x) * o31, i37.y = a36.y + (i37.y - a36.y) * o31;
      }
      e24.scale = c40;
    }
    return this.snapToZoom && this.effectiveLODs && (e24.scale = this._getClosestScale(e24.scale)), e24;
  }
  fit(e24) {
    if (!this.effectiveLODs || !this.snapToZoom)
      return this.constrain(e24, null);
    const t32 = this.scaleToZoom(e24.scale), o30 = Math.abs(t32 - Math.floor(t32));
    return e24.scale = this.zoomToScale(o30 > 0.99 ? Math.round(t32) : Math.floor(t32)), e24;
  }
  zoomToScale(e24) {
    if (!this.effectiveLODs)
      return 0;
    e24 -= this.effectiveMinZoom, e24 = Math.max(0, e24);
    const t32 = this._scales;
    if (e24 <= 0)
      return t32[0];
    if (e24 >= t32.length)
      return t32[t32.length - 1];
    const o30 = Math.round(e24 - 0.5), s29 = Math.round(e24);
    return t32[s29] + (s29 - e24) * (t32[o30] - t32[s29]);
  }
  scaleToZoom(e24) {
    if (!this.effectiveLODs)
      return -1;
    const t32 = this._scales;
    let o30, s29;
    if (e24 >= t32[0])
      return this.effectiveMinZoom;
    if (e24 <= t32[t32.length - 1])
      return this.effectiveMaxZoom;
    for (let i37 = 0; i37 < t32.length - 1; i37++) {
      if (o30 = t32[i37], s29 = t32[i37 + 1], s29 === e24) {
        return i37 + this.effectiveMinZoom + 1;
      }
      if (o30 > e24 && s29 < e24) {
        return i37 + this.effectiveMinZoom + 1 - (e24 - s29) / (o30 - s29);
      }
    }
    return -1;
  }
  snapToClosestScale(e24) {
    if (!this.effectiveLODs)
      return e24;
    const t32 = this.scaleToZoom(e24);
    return this.zoomToScale(Math.round(t32));
  }
  snapToNextScale(e24, t32 = 0.5) {
    if (!this.effectiveLODs)
      return e24 * t32;
    const o30 = Math.round(this.scaleToZoom(e24));
    return this.zoomToScale(o30 + 1);
  }
  snapToPreviousScale(e24, t32 = 2) {
    if (!this.effectiveLODs)
      return e24 * t32;
    const o30 = Math.round(this.scaleToZoom(e24));
    return this.zoomToScale(o30 - 1);
  }
  clone() {
    return new a24({ lods: this.lods, minZoom: this.minZoom, maxZoom: this.maxZoom, minScale: this.minScale, maxScale: this.maxScale });
  }
  _getClosestScale(e24) {
    return this._lodByScale[e24] || (e24 = this._scales.reduce((t32, o30) => Math.abs(o30 - e24) <= Math.abs(t32 - e24) ? o30 : t32, this._scales[0])), this._lodByScale[e24].scale;
  }
};
e2([y2({ readOnly: true })], c29.prototype, "effectiveLODs", void 0), e2([y2({ readOnly: true })], c29.prototype, "effectiveMinZoom", void 0), e2([y2({ readOnly: true })], c29.prototype, "effectiveMaxZoom", void 0), e2([y2({ readOnly: true })], c29.prototype, "effectiveMinScale", void 0), e2([y2({ readOnly: true })], c29.prototype, "effectiveMaxScale", void 0), e2([y2()], c29.prototype, "lods", void 0), e2([y2()], c29.prototype, "minZoom", void 0), e2([y2()], c29.prototype, "maxZoom", void 0), e2([y2()], c29.prototype, "minScale", void 0), e2([y2()], c29.prototype, "maxScale", void 0), e2([y2()], c29.prototype, "snapToZoom", void 0), c29 = a24 = e2([a3("esri.views.2d.constraints.ZoomConstraint")], c29);
var r21 = c29;

// node_modules/@arcgis/core/views/2d/MapViewConstraints.js
var p25 = { base: null, key: "type", typeMap: { extent: w3, polygon: v4 } };
var c30 = class extends v3 {
  constructor(o30) {
    super(o30), this.lods = null, this.minScale = 0, this.maxScale = 0, this.minZoom = -1, this.maxZoom = -1, this.rotationEnabled = true, this.snapToZoom = true;
  }
  destroy() {
    this.view = null;
  }
  get effectiveLODs() {
    return this._zoom.effectiveLODs;
  }
  get effectiveMinScale() {
    return this._zoom.effectiveMinScale;
  }
  get effectiveMaxScale() {
    return this._zoom.effectiveMaxScale;
  }
  get effectiveMinZoom() {
    return this._zoom.effectiveMinZoom;
  }
  get effectiveMaxZoom() {
    return this._zoom.effectiveMaxZoom;
  }
  set geometry(o30) {
    o30 ? this._set("geometry", o30) : this._set("geometry", null);
  }
  get version() {
    var _a, _b, _c;
    return `${(_a = this._zoom) == null ? void 0 : _a.uid}/${(_b = this._rotation) == null ? void 0 : _b.uid}/${(_c = this._geometry) == null ? void 0 : _c.uid}`;
  }
  get _defaultLODs() {
    var _a, _b, _c;
    const o30 = (_b = (_a = this.view) == null ? void 0 : _a.defaultsFromMap) == null ? void 0 : _b.tileInfo, e24 = (_c = this.view) == null ? void 0 : _c.spatialReference;
    return o30 && e24 && o30.spatialReference.equals(e24) ? o30.lods : null;
  }
  get _geometry() {
    var _a;
    return new y14({ geometry: this.geometry, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference });
  }
  get _rotation() {
    return new i29({ rotationEnabled: this.rotationEnabled });
  }
  get _zoom() {
    const o30 = this._get("_zoom"), e24 = this.lods || this._defaultLODs, t32 = this.minZoom, r28 = this.maxZoom, s29 = this.minScale, i37 = this.maxScale, n32 = this.snapToZoom;
    return o30 && o30.lods === e24 && o30.minZoom === t32 && o30.maxZoom === r28 && o30.minScale === s29 && o30.maxScale === i37 && o30.snapToZoom === n32 ? o30 : new r21({ lods: e24, minZoom: t32, maxZoom: r28, minScale: s29, maxScale: i37, snapToZoom: n32 });
  }
  canZoomInTo(o30) {
    const e24 = this.effectiveMaxScale;
    return 0 === e24 || o30 >= e24;
  }
  canZoomOutTo(o30) {
    const e24 = this.effectiveMinScale;
    return 0 === e24 || o30 <= e24;
  }
  constrain(o30, e24) {
    return this._zoom.constrain(o30, e24), this._rotation.constrain(o30, e24), this._geometry.constrain(o30, e24), o30;
  }
  constrainByGeometry(o30) {
    return this._geometry.constrain(o30);
  }
  fit(o30) {
    return this._zoom.fit(o30);
  }
  zoomToScale(o30) {
    return this._zoom.zoomToScale(o30);
  }
  scaleToZoom(o30) {
    return this._zoom.scaleToZoom(o30);
  }
  snapScale(o30) {
    return this._zoom.snapToClosestScale(o30);
  }
  snapToNextScale(o30) {
    return this._zoom.snapToNextScale(o30);
  }
  snapToPreviousScale(o30) {
    return this._zoom.snapToPreviousScale(o30);
  }
};
e2([y2({ readOnly: true })], c30.prototype, "effectiveLODs", null), e2([y2({ readOnly: true })], c30.prototype, "effectiveMinScale", null), e2([y2({ readOnly: true })], c30.prototype, "effectiveMaxScale", null), e2([y2({ readOnly: true })], c30.prototype, "effectiveMinZoom", null), e2([y2({ readOnly: true })], c30.prototype, "effectiveMaxZoom", null), e2([y2({ types: p25, value: null })], c30.prototype, "geometry", null), e2([y2({ type: [p4] })], c30.prototype, "lods", void 0), e2([y2()], c30.prototype, "minScale", void 0), e2([y2()], c30.prototype, "maxScale", void 0), e2([y2()], c30.prototype, "minZoom", void 0), e2([y2()], c30.prototype, "maxZoom", void 0), e2([y2()], c30.prototype, "rotationEnabled", void 0), e2([y2()], c30.prototype, "snapToZoom", void 0), e2([y2()], c30.prototype, "view", void 0), e2([y2({ readOnly: true })], c30.prototype, "version", null), e2([y2()], c30.prototype, "_defaultLODs", null), e2([y2({ type: y14 })], c30.prototype, "_geometry", null), e2([y2({ type: i29 })], c30.prototype, "_rotation", null), e2([y2({ readOnly: true, type: r21 })], c30.prototype, "_zoom", null), c30 = e2([a3("esri.views.2d.MapViewConstraints")], c30);
var u18 = c30;

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec2.js
function n25(n32) {
  return n32 instanceof Float32Array && n32.length >= 2;
}
function r22(n32) {
  return Array.isArray(n32) && n32.length >= 2;
}
function t23(t32) {
  return n25(t32) || r22(t32);
}

// node_modules/@arcgis/core/views/2d/ViewState.js
var b15;
var G4 = [0, 0];
var O3 = b15 = class extends l {
  constructor(t32) {
    super(t32), this._viewpoint2D = { center: n8(), rotation: 0, scale: 0, spatialReference: void 0 }, this.center = [0, 0], this.extent = new w3(), this.id = 0, this.inverseTransform = e10(), this.resolution = 0, this.rotation = 0, this.scale = 0, this.transform = e10(), this.transformNoRotation = e10(), this.displayMat3 = e8(), this.displayViewMat3 = e8(), this.viewMat3 = e8(), this.viewMat2d = n7(), this.worldScreenWidth = 0, this.size = [0, 0];
  }
  set pixelRatio(t32) {
    this._set("pixelRatio", t32), this._update();
  }
  set size(t32) {
    this._set("size", t32), this._update();
  }
  set viewpoint(t32) {
    if (t32) {
      const s29 = this._viewpoint2D, i37 = t32.targetGeometry;
      s29.center[0] = i37.x, s29.center[1] = i37.y, s29.rotation = t32.rotation, s29.scale = t32.scale, s29.spatialReference = i37.spatialReference;
    }
    this._update();
  }
  copy(t32) {
    const s29 = this.size, i37 = this.viewpoint;
    return i37 && s29 ? (this.viewpoint = Z(i37, t32.viewpoint), this._set("size", a8(s29, t32.size))) : (this.viewpoint = t32.viewpoint.clone(), this._set("size", [t32.size[0], t32.size[1]])), this._set("pixelRatio", t32.pixelRatio), this;
  }
  clone() {
    return new b15({ size: this.size, viewpoint: this.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
  toMap(t32, s29, i37) {
    return t23(s29) ? z(t32, s29, this.inverseTransform) : (G4[0] = s29, G4[1] = i37, z(t32, G4, this.inverseTransform));
  }
  toScreen(t32, s29, i37) {
    return t23(s29) ? z(t32, s29, this.transform) : (G4[0] = s29, G4[1] = i37, z(t32, G4, this.transform));
  }
  toScreenNoRotation(t32, s29, i37) {
    return t23(s29) ? z(t32, s29, this.transformNoRotation) : (G4[0] = s29, G4[1] = i37, z(t32, G4, this.transformNoRotation));
  }
  getScreenTransform(t32, s29) {
    const { center: i37 } = this._viewpoint2D, e24 = this._get("pixelRatio") || 1, o30 = this._get("size");
    return ut(t32, i37, o30, s29, 0, e24), t32;
  }
  _update() {
    const { center: t32, spatialReference: i37, scale: e24, rotation: o30 } = this._viewpoint2D, c39 = this._get("pixelRatio") || 1, m27 = this._get("size"), d18 = new u4({ targetGeometry: new w2(t32[0], t32[1], i37), scale: e24, rotation: o30 });
    if (this._set("viewpoint", d18), !m27 || !i37 || !e24)
      return;
    this.resolution = ot(d18), this.rotation = o30, this.scale = e24, this.spatialReference = i37, a8(this.center, t32);
    const y17 = 0 !== m27[0] ? 2 / m27[0] : 0, _10 = 0 !== m27[1] ? -2 / m27[1] : 0;
    s7(this.displayMat3, y17, 0, 0, 0, _10, 0, -1, 1, 1);
    const x4 = r9(this.viewMat3), z8 = t10(m27[0] / 2, m27[1] / 2), g18 = t10(-m27[0] / 2, -m27[1] / 2), D4 = r5(o30);
    M2(x4, x4, z8), h3(x4, x4, D4), M2(x4, x4, g18), i5(this.displayViewMat3, this.displayMat3, x4);
    const b18 = f5(this.viewMat2d, z8);
    return e7(b18, b18, D4), i6(b18, b18, g18), _2(this.extent, d18, m27), ft(this.transform, d18, m27, c39), r10(this.inverseTransform, this.transform), lt(this.transformNoRotation, d18, m27, c39), this.worldScreenWidth = yt(this.spatialReference, this.resolution), this._set("id", this.id + 1), this;
  }
};
e2([y2({ readOnly: true })], O3.prototype, "id", void 0), e2([y2({ value: 1, json: { write: true } })], O3.prototype, "pixelRatio", null), e2([y2({ json: { write: true } })], O3.prototype, "size", null), e2([y2()], O3.prototype, "spatialReference", void 0), e2([y2({ type: u4, json: { write: true } })], O3.prototype, "viewpoint", null), O3 = b15 = e2([a3("esri.views.2d.ViewState")], O3);
var U8 = O3;

// node_modules/@arcgis/core/views/2d/PaddedViewState.js
var l22;
var m21;
var w17 = l22 = class extends v3 {
  constructor() {
    super(...arguments), this.left = 0, this.top = 0, this.right = 0, this.bottom = 0;
  }
  clone() {
    return new l22({ left: this.left, top: this.top, right: this.right, bottom: this.bottom });
  }
};
e2([y2()], w17.prototype, "left", void 0), e2([y2()], w17.prototype, "top", void 0), e2([y2()], w17.prototype, "right", void 0), e2([y2()], w17.prototype, "bottom", void 0), w17 = l22 = e2([a3("esri.views.2d.PaddedViewState.Padding")], w17);
var u19 = m21 = class extends U8 {
  constructor(...t32) {
    super(...t32), this.paddedViewState = new U8(), this._updateContent = (() => {
      const t33 = n8();
      return () => {
        const e24 = this._get("size"), i37 = this._get("padding");
        if (!e24 || !i37)
          return;
        const o30 = this.paddedViewState;
        r8(t33, i37.left + i37.right, i37.top + i37.bottom), o5(t33, e24, t33), a8(o30.size, t33);
        const s29 = o30.viewpoint;
        s29 && (this.viewpoint = s29);
      };
    })(), this.addHandles(l3(() => [this.size, this.padding], () => this._updateContent(), U2)), this.padding = new w17(), this.size = [0, 0];
  }
  set padding(t32) {
    this._set("padding", t32 || new w17());
  }
  set viewpoint(t32) {
    if (t32) {
      const e24 = t32.clone();
      this.paddedViewState.viewpoint = t32, gt(e24, t32, this._get("size"), this._get("padding"));
      const i37 = this._viewpoint2D, o30 = e24.targetGeometry;
      i37.center[0] = o30.x, i37.center[1] = o30.y, i37.rotation = e24.rotation, i37.scale = e24.scale, i37.spatialReference = o30.spatialReference, this._update();
    }
  }
  clone() {
    return new m21({ padding: this.padding.clone(), size: this.size.slice(), viewpoint: this.paddedViewState.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
};
e2([y2()], u19.prototype, "paddedViewState", void 0), e2([y2({ type: w17 })], u19.prototype, "padding", null), e2([y2()], u19.prototype, "viewpoint", null), u19 = m21 = e2([a3("esri.views.2d.PaddedViewState")], u19);
var f16 = u19;

// node_modules/@arcgis/core/views/input/handlers/support.js
function t24(t32, r28) {
  switch (r28) {
    case "primary":
      return "touch" === t32.pointerType || 0 === t32.button;
    case "secondary":
      return "touch" !== t32.pointerType && 2 === t32.button;
    case "tertiary":
      return "touch" !== t32.pointerType && 1 === t32.button;
  }
}

// node_modules/@arcgis/core/views/2d/input/handlers/DoubleClickZoom.js
var a25 = class extends i13 {
  constructor(t32, i37) {
    super(true), this._view = t32, this.registerIncoming("double-click", i37, (t33) => this._handleDoubleClick(t33, i37));
  }
  _handleDoubleClick(t32, a36) {
    t24(t32.data, "primary") && (t32.stopPropagation(), a36 ? this._view.mapViewNavigation.zoomOut([t32.data.x, t32.data.y]) : this._view.mapViewNavigation.zoomIn([t32.data.x, t32.data.y]));
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DoubleTapDragZoom.js
var e18 = class extends i13 {
  constructor(t32, e24, a36) {
    super(true), this.view = t32, this.pointerType = e24, this.registerIncoming("double-tap-drag", a36, (t33) => this._handleDoubleTapDrag(t33));
  }
  _handleDoubleTapDrag(t32) {
    const { data: e24 } = t32, { pointerType: a36 } = e24;
    if (a36 !== this.pointerType)
      return;
    t32.stopPropagation();
    const { action: s29, delta: i37 } = e24, { view: r28 } = this, { mapViewNavigation: n32 } = r28;
    switch (s29) {
      case "begin": {
        const { scale: t33 } = r28;
        this._startScale = t33, this._currentScale = t33, this._previousDelta = i37, n32.begin();
        break;
      }
      case "update": {
        if (this._previousDelta.y === i37.y)
          return;
        this._previousDelta = i37;
        const t33 = 1.015 ** i37.y, e25 = this._startScale * t33, a37 = e25 / this._currentScale;
        n32.setViewpointImmediate(a37), this._currentScale = e25;
        break;
      }
      case "end": {
        const { constraints: t33 } = r28, { effectiveLODs: e25, snapToZoom: a37 } = t33;
        if (!a37 || !e25)
          return void n32.end();
        const s30 = t33.snapScale(this._currentScale), o30 = (i37.y > 0 ? Math.max(s30, t33.snapToPreviousScale(this._startScale)) : Math.min(s30, t33.snapToNextScale(this._startScale))) / this._currentScale;
        n32.zoom(o30);
        break;
      }
    }
  }
};

// node_modules/@arcgis/core/views/input/DragEventSeparator.js
var t25 = class {
  constructor(t32) {
    this._callbacks = t32, this._currentCount = 0, this._callbacks.condition || (this._callbacks.condition = () => true);
  }
  handle(t32) {
    const s29 = t32.data, i37 = s29.pointers.size;
    switch (s29.action) {
      case "start":
        this._currentCount = i37, this._emitStart(t32);
        break;
      case "added":
        this._emitEnd(this._previousEvent), this._currentCount = i37, this._emitStart(t32);
        break;
      case "update":
        this._emitUpdate(t32);
        break;
      case "removed":
        this._startEvent && this._emitEnd(this._previousEvent), this._currentCount = i37, this._emitStart(t32);
        break;
      case "end":
        this._emitEnd(t32), this._currentCount = 0;
    }
    this._previousEvent = t32;
  }
  _emitStart(t32) {
    var _a, _b;
    this._startEvent = t32, ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t32)) && this._callbacks.start(this._currentCount, t32, this._startEvent);
  }
  _emitUpdate(t32) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t32)) && this._callbacks.update(this._currentCount, t32, this._startEvent);
  }
  _emitEnd(t32) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t32)) && this._callbacks.end(this._currentCount, t32, this._startEvent), this._startEvent = null;
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DragPan.js
var n26 = class extends i13 {
  constructor(t32, i37, a36) {
    super(true), this.view = t32, this.pointerAction = i37, this.registerIncoming("drag", a36, (t33) => this._handleDrag(t33)), this.registerIncoming("pointer-down", () => this.stopMomentumNavigation());
  }
  onInstall(i37) {
    super.onInstall(i37), this._dragEventSeparator = new t25({ start: (t32, i38) => {
      this.view.mapViewNavigation.pan.begin(this.view, i38.data), i38.stopPropagation();
    }, update: (t32, i38) => {
      this.view.mapViewNavigation.pan.update(this.view, i38.data), i38.stopPropagation();
    }, end: (t32, i38) => {
      this.view.mapViewNavigation.pan.end(this.view, i38.data), i38.stopPropagation();
    }, condition: (t32, i38) => 1 === t32 && t24(i38.data, this.pointerAction) });
  }
  _handleDrag(t32) {
    const i37 = this.view.mapViewNavigation;
    i37.pinch.zoomMomentum || i37.pinch.rotateMomentum ? this.stopMomentumNavigation() : this._dragEventSeparator.handle(t32);
  }
  stopMomentumNavigation() {
    this.view.mapViewNavigation.pan.stopMomentumNavigation();
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DragRotate.js
var o24 = class extends i13 {
  constructor(a36, o30, r28) {
    super(true), this._view = a36, this.pointerAction = o30;
    const e24 = this._view.mapViewNavigation;
    this._dragEventSeparator = new t25({ start: (t32, a37) => {
      e24.rotate.begin(this._view, a37.data), a37.stopPropagation();
    }, update: (t32, a37) => {
      e24.rotate.update(this._view, a37.data), a37.stopPropagation();
    }, end: (t32, a37) => {
      e24.rotate.end(), a37.stopPropagation();
    }, condition: (t32, a37) => 1 === t32 && t24(a37.data, this.pointerAction) }), this.registerIncoming("drag", r28, (t32) => this._dragEventSeparator.handle(t32));
  }
};

// node_modules/@arcgis/core/views/navigation/gamepadAndKeyboardUtils.js
function n27(t32) {
  let n32 = t32 * t32;
  return t32 < 0 && (n32 *= -1), n32;
}
function a26(t32) {
  return t32.translation[0] = 0, t32.translation[1] = 0, t32.translation[2] = 0, t32.heading = 0, t32.tilt = 0, t32;
}
function i30(a36, i37, o30) {
  const s29 = o30, e24 = a36.state, r28 = a36.device, l27 = "forward-down" === i37.tiltDirection ? 1 : -1, c39 = 1;
  return "standard" === r28.deviceType ? (s29.translation[0] = n27(e24.axes[0]), s29.translation[1] = n27(e24.axes[1]), s29.translation[2] = n27(e24.buttons[7]) - n27(e24.buttons[6]), s29.heading = n27(e24.axes[2]), s29.tilt = n27(e24.axes[3])) : "spacemouse" === r28.deviceType && (s29.translation[0] = 1.2 * n27(e24.axes[0]), s29.translation[1] = 1.2 * n27(e24.axes[1]), s29.translation[2] = 2 * -n27(e24.axes[2]), s29.heading = 1.2 * n27(e24.axes[5]), s29.tilt = 1.2 * n27(e24.axes[3])), s29.tilt *= l27, g2(s29.translation, s29.translation, c39), s29;
}
function s24(t32) {
  return 0 === t32.translation[0] && 0 === t32.translation[1] && 0 === t32.translation[2] && 0 === t32.heading && 0 === t32.tilt && 0 === t32.zoom;
}

// node_modules/@arcgis/core/views/2d/input/handlers/GamepadNavigation.js
var d13 = class extends i13 {
  constructor(i37) {
    super(true), this._view = i37, this._frameTask = null, this._watchHandles = new t3(), this._currentDevice = null, this._transformation = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 }, this._handle = this.registerIncoming("gamepad", (t32) => this._handleGamePadEvent(t32)), this._handle.pause();
  }
  onInstall(t32) {
    super.onInstall(t32), this._watchHandles.add([l3(() => {
      var _a;
      return (_a = this._view.navigation.gamepad) == null ? void 0 : _a.enabled;
    }, (t33) => {
      t33 ? (this._handle.resume(), this._frameTask || (this._frameTask = A2({ update: (t34) => this._frameUpdate(t34.deltaTime) }))) : (this._handle.pause(), this._frameTask && (this._frameTask.remove(), this._frameTask = null));
    }, h)]);
  }
  onUninstall() {
    this._watchHandles.removeAll(), this._frameTask && (this._frameTask.remove(), this._frameTask = null), super.onUninstall();
  }
  _handleGamePadEvent(t32) {
    const i37 = this._view.navigation.gamepad.device;
    i37 && t32.data.device !== i37 || this._currentDevice && this._currentDevice !== t32.data.device || ("end" === t32.data.action ? (this._currentDevice = null, a26(this._transformation)) : (this._currentDevice = t32.data.device, i30(t32.data, this._view.navigation.gamepad, this._transformation)));
  }
  _frameUpdate(t32) {
    const i37 = this._transformation;
    if (s24(i37))
      return;
    const e24 = this._view.viewpoint.clone(), a36 = this._view.navigation.gamepad.velocityFactor, r28 = _7 * a36 * t32;
    St(e24, e24, [i37.translation[0] * r28, -i37.translation[1] * r28]);
    const o30 = 1 + i37.translation[2] * c31 * t32, h23 = this._view.constraints.rotationEnabled ? -i37.heading * m22 * t32 : 0, d18 = this._view.size, v16 = [d18[0] / 2, d18[1]];
    Gt(e24, e24, o30, h23, v16, d18);
    const p33 = this._view.constraints.constrain(e24, this._view.viewpoint);
    this._view.viewpoint = p33;
  }
};
var m22 = 0.06;
var _7 = 0.7;
var c31 = 6e-4;

// node_modules/@arcgis/core/views/2d/input/handlers/KeyPan.js
var i31 = class extends i13 {
  constructor(e24, i37, t32) {
    super(true), this.view = e24, this.keys = i37, this._pressed = false, this._keyMap = { [i37.left]: "left", [i37.right]: "right", [i37.up]: "up", [i37.down]: "down" }, this.registerIncoming("key-down", t32, (e25) => this._handleKeyDown(e25)), this.registerIncoming("key-up", t32, (e25) => this._handleKeyUp(e25)), this.registerIncoming("blur", t32, () => this._handleBlur());
  }
  _handleKeyDown(e24) {
    e24.data.repeat || this._handleKey(e24, true);
  }
  _handleKeyUp(e24) {
    this._handleKey(e24, false);
  }
  _handleBlur() {
    this._pressed && (this._pressed = false, this.view.mapViewNavigation.stop());
  }
  _handleKey(e24, i37) {
    const t32 = this._keyMap[e24.data.key];
    if (this._pressed = null != t32, this._pressed) {
      if (i37)
        switch (this.view.mapViewNavigation.begin(), t32) {
          case "left":
            this.view.mapViewNavigation.continousPanLeft();
            break;
          case "right":
            this.view.mapViewNavigation.continousPanRight();
            break;
          case "up":
            this.view.mapViewNavigation.continousPanUp();
            break;
          case "down":
            this.view.mapViewNavigation.continousPanDown();
        }
      else
        this._pressed = false, this.view.mapViewNavigation.stop();
      e24.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/KeyRotate.js
var i32 = class extends i13 {
  constructor(e24, i37, t32) {
    super(true), this.view = e24, this.keys = i37, this._pressed = false, this._keyToDirection = { [i37.clockwiseOption1]: "clockwise", [i37.clockwiseOption2]: "clockwise", [i37.counterClockwiseOption1]: "counterClockwise", [i37.counterClockwiseOption2]: "counterClockwise", [i37.resetOption1]: "reset", [i37.resetOption2]: "reset" }, this.registerIncoming("key-down", t32, (e25) => this._handleKeyDown(e25)), this.registerIncoming("key-up", t32, (e25) => this._handleKeyUp(e25)), this.registerIncoming("blur", t32, () => this._handleBlur());
  }
  _handleKeyDown(e24) {
    e24.data.repeat || this._handleKey(e24, true);
  }
  _handleKeyUp(e24) {
    this._handleKey(e24, false);
  }
  _handleBlur() {
    this._pressed && (this._pressed = false, this.view.mapViewNavigation.stop());
  }
  _handleKey(e24, i37) {
    const t32 = e24.modifiers;
    if (t32.size > 0 && !t32.has("Shift") || !this.view.constraints.rotationEnabled)
      return;
    const s29 = this._keyToDirection[e24.data.key];
    if (this._pressed = null != s29, this._pressed) {
      if (i37)
        switch (this.view.mapViewNavigation.begin(), s29) {
          case "clockwise":
            this.view.mapViewNavigation.continousRotateClockwise();
            break;
          case "counterClockwise":
            this.view.mapViewNavigation.continousRotateCounterclockwise();
            break;
          case "reset":
            this.view.mapViewNavigation.resetRotation();
        }
      else
        this._pressed = false, this.view.mapViewNavigation.stop();
      e24.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/KeyZoom.js
var t26;
!function(o30) {
  o30[o30.IN = 0] = "IN", o30[o30.OUT = 1] = "OUT";
}(t26 || (t26 = {}));
var e19 = class extends i13 {
  constructor(o30, e24, i37) {
    super(true), this.view = o30, this.keys = e24, this._keysToZoomAction = {}, this.registerIncoming("key-down", i37, (o31) => this._handleKeyDown(o31)), e24.zoomIn.forEach((o31) => this._keysToZoomAction[o31] = t26.IN), e24.zoomOut.forEach((o31) => this._keysToZoomAction[o31] = t26.OUT);
  }
  _handleKeyDown(o30) {
    this._handleKey(o30);
  }
  _handleKey(o30) {
    const e24 = o30.modifiers;
    if (e24.size > 0 && !e24.has("Shift"))
      return;
    const { key: i37 } = o30.data;
    if (!(i37 in this._keysToZoomAction))
      return;
    const n32 = this._keysToZoomAction[i37], { mapViewNavigation: s29 } = this.view;
    let r28 = null;
    switch (n32) {
      case t26.IN:
        r28 = s29.zoomIn();
        break;
      case t26.OUT:
        r28 = s29.zoomOut();
        break;
      default:
        return;
    }
    s29.begin(), r28.then(() => s29.end()), o30.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/MouseWheelZoom.js
var t27 = 0.6;
var o25 = class extends i13 {
  constructor(e24, t32) {
    super(true), this._view = e24, this._canZoom = true, this.registerIncoming("mouse-wheel", t32, (e25) => this._handleMouseWheel(e25));
  }
  _handleMouseWheel(e24) {
    if (!this._view.navigation.mouseWheelZoomEnabled)
      return;
    if (e24.preventDefault(), e24.stopPropagation(), !this._canZoom)
      return;
    const o30 = this._view.mapViewNavigation, { x: n32, y: i37, deltaY: s29 } = e24.data, a36 = 1 / t27 ** (1 / 60 * s29), h23 = o30.zoom(a36, [n32, i37]);
    h23 && (this._canZoom = false, h23.catch(() => {
    }).then(() => {
      this._canZoom = true, o30.end();
    }));
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/PinchAction.js
var a27 = class extends i13 {
  constructor(i37) {
    super(true), this.view = i37, this.registerIncoming("drag", (t32) => this._handleDrag(t32)), this.registerIncoming("pointer-down", () => this._stopMomentumNavigation());
    const a36 = this.view.mapViewNavigation;
    this._dragEventSeparator = new t25({ start: (t32, i38) => {
      a36.pinch.begin(this.view, i38.data), i38.stopPropagation();
    }, update: (t32, i38) => {
      a36.pinch.update(this.view, i38.data), i38.stopPropagation();
    }, end: (t32, i38) => {
      a36.pinch.end(this.view), i38.stopPropagation();
    }, condition: (t32) => t32 >= 2 });
  }
  _handleDrag(t32) {
    this._dragEventSeparator.handle(t32);
  }
  _stopMomentumNavigation() {
    this.view.mapViewNavigation.pinch.stopMomentumNavigation();
  }
};

// node_modules/@arcgis/core/views/input/gamepad/GamepadState.js
function t28(t32) {
  const n32 = t32.native;
  return n32 ? { buttons: n32.buttons.map((t33) => t33.pressed ? t33.value ? t33.value : 1 : 0), axes: n32.axes.map((n33) => s25(n33, t32.axisThreshold)) } : { buttons: [], axes: [] };
}
function n28(t32, n32) {
  if (t32.axes.length !== n32.axes.length)
    return false;
  if (t32.buttons.length !== n32.buttons.length)
    return false;
  for (let e24 = 0; e24 < t32.axes.length; e24++)
    if (t32.axes[e24] !== n32.axes[e24])
      return false;
  for (let e24 = 0; e24 < t32.buttons.length; e24++)
    if (t32.buttons[e24] !== n32.buttons[e24])
      return false;
  return true;
}
function e20(t32) {
  for (let n32 = 0; n32 < t32.axes.length; n32++)
    if (0 !== t32.axes[n32])
      return false;
  for (let n32 = 0; n32 < t32.buttons.length; n32++)
    if (0 !== t32.buttons[n32])
      return false;
  return true;
}
function s25(t32, n32) {
  const e24 = Math.abs(t32);
  return e24 < n32 ? 0 : Math.sign(t32) * (e24 - n32) / (1 - n32);
}

// node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js
var a28 = class {
  constructor(e24, t32) {
    this._element = e24, this._input = t32, this._hasEventListeners = false, this._onConnectGamepad = (e25) => {
      this._connectGamepad(e25.gamepad);
    }, this._onDisconnectGamepad = (e25) => {
      const t33 = e25.gamepad, i38 = t33.index, n33 = this._inputDevices[i38];
      n33 && (this._emitGamepadEvent(t33, t28(n33), false), this._inputDevices.splice(i38, 1), this._latestUpdate.splice(i38, 1), this._input.gamepad.devices.remove(n33), this.ensurePollingState());
    }, this._frameTask = null, this._latestUpdate = new Array(), this._inputDevices = new Array(), this._callback = null;
    const i37 = "getGamepads" in window.navigator, n32 = window.isSecureContext;
    this.supported = i37 && n32, this.supported && (this._forEachGamepad((e25) => this._connectGamepad(e25)), window.addEventListener("gamepadconnected", this._onConnectGamepad), window.addEventListener("gamepaddisconnected", this._onDisconnectGamepad), this.ensurePollingState());
  }
  destroy() {
    this.hasEventListeners = false, this.supported && (window.removeEventListener("gamepadconnected", this._onConnectGamepad), window.removeEventListener("gamepaddisconnected", this._onDisconnectGamepad));
  }
  set hasEventListeners(e24) {
    this._hasEventListeners !== e24 && (this._hasEventListeners = e24, this.ensurePollingState());
  }
  get _eventsEnabled() {
    return this.supported && this._inputDevices.length > 0 && this._hasEventListeners;
  }
  set onEvent(e24) {
    this._callback = e24;
  }
  _connectGamepad(e24) {
    const s29 = new a19(e24);
    "unknown" !== s29.deviceType && (this._inputDevices[e24.index] = s29, this._input.gamepad.devices.add(s29)), this.ensurePollingState();
  }
  ensurePollingState() {
    this._eventsEnabled ? this._startPolling() : this._stopPolling();
  }
  _startPolling() {
    null == this._frameTask && (this._frameTask = A2({ update: () => this._readGamepadState() }));
  }
  _stopPolling() {
    null != this._frameTask && (this._frameTask.remove(), this._frameTask = null, this._latestUpdate = new Array());
  }
  _readGamepadState() {
    const e24 = document.hasFocus(), t32 = this._element.contains(document.activeElement), a36 = "document" === this._input.gamepad.enabledFocusMode && !e24 || "view" === this._input.gamepad.enabledFocusMode && !t32;
    this._forEachGamepad((e25) => {
      const t33 = this._inputDevices[e25.index];
      if (!t33)
        return;
      const d18 = this._latestUpdate[e25.index], o30 = t28(t33), r28 = a36 || e20(o30);
      if (d18) {
        if (d18.timestamp === e25.timestamp)
          return;
        if (!d18.active && r28)
          return;
        if (n28(d18.state, o30))
          return;
      }
      this._emitGamepadEvent(e25, o30, !r28);
    });
  }
  _forEachGamepad(e24) {
    const t32 = window.navigator.getGamepads();
    for (let s29 = 0; s29 < t32.length; s29++) {
      const i37 = t32[s29];
      this._validate(i37) && e24(i37);
    }
  }
  _emitGamepadEvent(e24, t32, s29) {
    const i37 = this._latestUpdate[e24.index], n32 = i37 && i37.active;
    if (!n32 && !s29)
      return;
    const a36 = !n32 && s29 ? "start" : n32 && s29 ? "update" : "end";
    this._latestUpdate[e24.index] = { timestamp: e24.timestamp, state: t32, active: s29 }, this._callback && this._callback({ device: this._inputDevices[e24.index], state: t32, action: a36 });
  }
  _validate(e24) {
    if (!e24)
      return false;
    if (!e24.connected)
      return false;
    for (let t32 = 0; t32 < e24.axes.length; t32++)
      if (isNaN(e24.axes[t32]))
        return false;
    return true;
  }
};

// node_modules/@arcgis/core/views/input/BrowserEventSource.js
var o26 = has("edge");
var a29 = has("chrome");
var s26 = has("ff");
var r23 = has("safari");
var h18 = "esri-view-surface";
var l23 = { touchNone: `${h18}--touch-none`, touchPan: `${h18}--touch-pan` };
var c32 = class {
  constructor(e24, t32) {
    this._input = t32, this._active = {}, this._callback = () => {
    }, this._activePointerCaptures = /* @__PURE__ */ new Set(), this._keyDownState = /* @__PURE__ */ new Set(), this._eventId = 1, this._browserTouchPanningEnabled = false, this._element = e24, e24.getAttribute("tabindex") || e24.setAttribute("tabindex", "0"), this._eventHandlers = { "key-down": this._handleKey, "key-up": this._handleKey, "pointer-down": this._handlePointer, "pointer-move": this._handlePointerPreventDefault, "pointer-up": this._handlePointerPreventDefault, "pointer-enter": this._handlePointer, "pointer-leave": this._handlePointer, "pointer-cancel": this._handlePointer, "mouse-wheel": this._handleMouseWheel, "pointer-capture-lost": this._handlePointerCaptureLost }, this._updateTouchAction(), this._element.addEventListener("keydown", this._preventAltKeyDefault), this._gamepadSource = new a28(e24, this._input), this._gamepadSource.onEvent = (e25) => this._callback("gamepad", e25);
  }
  destroy() {
    this._callback = () => {
    }, this.activeEvents = null, this._activePointerCaptures.forEach((e24) => {
      this._releasePointerCaptureSafe(e24);
    }), this._gamepadSource = a(this._gamepadSource), this._activePointerCaptures = null, this._removeTouchAction(), this._element.removeEventListener("keydown", this._preventAltKeyDefault);
  }
  get browserTouchPanningEnabled() {
    return this._browserTouchPanningEnabled;
  }
  set browserTouchPanningEnabled(e24) {
    this._browserTouchPanningEnabled = e24, this._updateTouchAction(), this._updateTouchEventHandling();
  }
  set onEventReceived(e24) {
    this._callback = e24;
  }
  set activeEvents(e24) {
    for (const t32 in this._active)
      if (!e24 || !e24.has(t32)) {
        const e25 = this._active[t32];
        this._element.removeEventListener(u20[t32], e25), delete this._active[t32];
      }
    e24 && e24.forEach((e25) => {
      if (!this._active[e25] && u20[e25]) {
        const t32 = (this._eventHandlers[e25] || this._handleDefault).bind(this, e25);
        this._element.addEventListener(u20[e25], t32), this._active[e25] = t32;
      }
    }), this._gamepadSource.hasEventListeners = (e24 == null ? void 0 : e24.has("gamepad")) ?? false;
  }
  setPointerCapture(e24, t32) {
    t32 ? (this._element.setPointerCapture(e24.pointerId), this._activePointerCaptures.add(e24.pointerId)) : (this._releasePointerCaptureSafe(e24.pointerId), this._activePointerCaptures.delete(e24.pointerId));
  }
  _updateTouchAction() {
    this._element.classList.remove(this._browserTouchPanningEnabled ? l23.touchNone : l23.touchPan), this._element.classList.add(this._browserTouchPanningEnabled ? l23.touchPan : l23.touchNone);
  }
  _updateTouchEventHandling() {
    this._browserTouchPanningEnabled ? this._element.addEventListener("touchmove", this._preventMultiTouchPanning) : this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _removeTouchAction() {
    this._element.classList.remove(l23.touchNone), this._element.classList.remove(l23.touchPan), this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _releasePointerCaptureSafe(e24) {
    try {
      if (this._element.hasPointerCapture && !this._element.hasPointerCapture(e24))
        return;
      this._element.releasePointerCapture(e24);
    } catch (t32) {
    }
  }
  _updateNormalizedPointerLikeEvent(e24, t32) {
    const n32 = i25(this._element, e24);
    return c32.test.disableSubpixelCoordinates && (n32.x = Math.round(n32.x), n32.y = Math.round(n32.y)), t32.x = n32.x, t32.y = n32.y, t32;
  }
  _handleKey(e24, n32) {
    const i37 = o6(n32);
    i37 && "key-up" === e24 && this._keyDownState.delete(i37);
    const o30 = { native: n32, key: i37, repeat: !!i37 && this._keyDownState.has(i37) };
    i37 && "key-down" === e24 && this._keyDownState.add(o30.key), this._callback(e24, o30);
  }
  _handlePointer(e24, t32) {
    const n32 = this._updateNormalizedPointerLikeEvent(t32, { native: t32, x: 0, y: 0, pointerType: t32.pointerType, button: t32.button, buttons: t32.buttons, eventId: this._eventId++ });
    this._callback(e24, n32);
  }
  _handlePointerPreventDefault(e24, t32) {
    const n32 = this._updateNormalizedPointerLikeEvent(t32, { native: t32, x: 0, y: 0, pointerType: t32.pointerType, button: t32.button, buttons: t32.buttons, eventId: this._eventId++ });
    t32.preventDefault(), this._callback(e24, n32);
  }
  _handleMouseWheel(e24, t32) {
    let n32 = t32.deltaY;
    switch (t32.deltaMode) {
      case 0:
        o26 && (n32 = n32 / document.documentElement.clientHeight * 600);
        break;
      case 1:
        n32 *= 30;
        break;
      case 2:
        n32 *= 900;
    }
    o26 ? n32 *= 0.7 : a29 || r23 ? n32 *= 0.6 : s26 && (n32 *= 1.375);
    const i37 = 100, h23 = Math.abs(n32);
    if (h23 > i37) {
      const e25 = 0.02;
      n32 = n32 / h23 * 200 / (1 + Math.exp(-e25 * (h23 - i37)));
    }
    const l27 = this._updateNormalizedPointerLikeEvent(t32, { native: t32, x: 0, y: 0, deltaY: n32 });
    this._callback(e24, l27);
  }
  _handlePointerCaptureLost(e24, t32) {
    this._activePointerCaptures.delete(t32.pointerId), this._handleDefault(e24, t32);
  }
  _handleDefault(e24, t32) {
    const n32 = { native: t32 };
    t32.preventDefault(), this._callback(e24, n32);
  }
  _preventAltKeyDefault(e24) {
    "Alt" === e24.key && e24.preventDefault();
  }
  _preventMultiTouchPanning(e24) {
    e24.touches.length > 1 && e24.preventDefault();
  }
};
c32.test = { disableSubpixelCoordinates: false };
var u20 = { "key-down": "keydown", "key-up": "keyup", "pointer-down": "pointerdown", "pointer-up": "pointerup", "pointer-move": "pointermove", "mouse-wheel": "wheel", "pointer-capture-got": "gotpointercapture", "pointer-capture-lost": "lostpointercapture", "context-menu": "contextmenu", "pointer-enter": "pointerenter", "pointer-leave": "pointerleave", "pointer-cancel": "pointercancel", focus: "focus", blur: "blur" };

// node_modules/@arcgis/core/views/input/handlers/PreventContextMenu.js
var e21 = class extends i13 {
  constructor() {
    super(true), this.registerIncoming("context-menu", (t32) => {
      t32.data.native.preventDefault();
    });
  }
};

// node_modules/@arcgis/core/views/input/recognizers/support.js
function e22(t32, e24) {
  return Math.abs(e24.x - t32.x) + Math.abs(e24.y - t32.y);
}
function n29(t32, e24) {
  const n32 = e24.x - t32.x, r28 = e24.y - t32.y;
  return Math.sqrt(n32 * n32 + r28 * r28);
}
function r24(e24, n32) {
  if (n32 ? (n32.radius = 0, n32.center.x = 0, n32.center.y = 0) : n32 = { radius: 0, center: c2() }, 0 === e24.length)
    return n32;
  if (1 === e24.length)
    return n32.center.x = e24[0].x, n32.center.y = e24[0].y, n32;
  if (2 === e24.length) {
    const [t32, r29] = e24, [c40, o31] = [r29.x - t32.x, r29.y - t32.y];
    return n32.radius = Math.sqrt(c40 * c40 + o31 * o31) / 2, n32.center.x = (t32.x + r29.x) / 2, n32.center.y = (t32.y + r29.y) / 2, n32;
  }
  let r28 = 0, c39 = 0;
  for (let t32 = 0; t32 < e24.length; t32++)
    r28 += e24[t32].x, c39 += e24[t32].y;
  r28 /= e24.length, c39 /= e24.length;
  const o30 = e24.map((t32) => t32.x - r28), s29 = e24.map((t32) => t32.y - c39);
  let u24 = 0, i37 = 0, x4 = 0, y17 = 0, a36 = 0, h23 = 0, l27 = 0;
  for (let t32 = 0; t32 < o30.length; t32++) {
    const e25 = o30[t32], n33 = s29[t32], r29 = e25 * e25, c40 = n33 * n33;
    u24 += r29, i37 += c40, x4 += e25 * n33, y17 += r29 * e25, a36 += c40 * n33, h23 += e25 * c40, l27 += n33 * r29;
  }
  const f19 = 0.5 * (y17 + h23), g18 = 0.5 * (a36 + l27), p33 = u24 * i37 - x4 * x4, d18 = (f19 * i37 - g18 * x4) / p33, m27 = (u24 * g18 - x4 * f19) / p33, M8 = c2(d18 + r28, m27 + c39);
  return { radius: Math.sqrt(d18 * d18 + m27 * m27 + (u24 + i37) / e24.length), center: M8 };
}
function c33(t32) {
  const { native: e24 } = t32, { pointerId: n32, button: r28, pointerType: c39 } = e24;
  return "mouse" === c39 ? `${n32}:${r28}` : `${c39}`;
}

// node_modules/@arcgis/core/views/input/recognizers/SingleAndDoubleClick.js
var l24 = { maximumDoubleClickDelay: 250, maximumDoubleClickDistance: 10, maximumDoubleTouchDelay: 350, maximumDoubleTouchDistance: 35 };
var m23 = class extends i13 {
  constructor(t32 = l24.maximumDoubleClickDelay, i37 = l24.maximumDoubleClickDistance, o30 = l24.maximumDoubleTouchDelay, n32 = l24.maximumDoubleTouchDistance, s29 = t5) {
    super(false), this._maximumDoubleClickDelay = t32, this._maximumDoubleClickDistance = i37, this._maximumDoubleTouchDelay = o30, this._maximumDoubleTouchDistance = n32, this._clock = s29, this._pointerState = /* @__PURE__ */ new Map(), this._click = this.registerOutgoing("click"), this._doubleClick = this.registerOutgoing("double-click"), this.registerIncoming("immediate-click", this._handleImmediateClick.bind(this)), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((e24) => e24.doubleClickTimer = p(e24.doubleClickTimer));
  }
  get hasPendingInputs() {
    return n3(this._pointerState, (e24) => null != e24.doubleClickTimer);
  }
  _clearDoubleClickTimer(e24, t32) {
    const o30 = this._pointerState.get(e24);
    o30 && (o30.doubleClickTimer = p(o30.doubleClickTimer), t32 && this._click.emit(o30.event.data, void 0, o30.event.modifiers), this._pointerState.delete(e24), this.refreshHasPendingInputs());
  }
  _doubleClickTimeoutExceeded(e24) {
    const t32 = this._pointerState.get(e24);
    1 === t32.pointerDownCount && this._click.emit(t32.event.data, void 0, t32.event.modifiers), t32.doubleClickTimer = null, this._pointerState.delete(e24), this.refreshHasPendingInputs();
  }
  _getPointerId(e24) {
    const { pointerId: t32, pointerType: i37, button: o30 } = e24.native;
    return "mouse" === i37 ? `${t32}:${o30}` : `${i37}`;
  }
  _handleImmediateClick(e24) {
    const t32 = e24.data, { pointerType: i37 } = t32.native, o30 = this._getPointerId(t32);
    if (!this._pointerState.has(o30))
      return void this._startClick(e24);
    const s29 = this._pointerState.get(o30), { data: l27, modifiers: m27 } = s29.event, c39 = "touch" === i37 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
    e22(l27, t32) > c39 ? (this._clearDoubleClickTimer(o30, true), this._startClick(e24)) : (this._clearDoubleClickTimer(o30, false), 2 === s29.pointerDownCount && this._doubleClick.emit(l27, void 0, m27));
  }
  _handlePointerDown(e24) {
    const t32 = c33(e24.data), i37 = this._pointerState.get(t32);
    i37 && (i37.pointerDownCount += 1);
  }
  _startClick(e24) {
    const { data: t32 } = e24, { native: { pointerType: i37 } } = t32, o30 = c33(t32), n32 = "touch" === i37 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, l27 = this._clock.setTimeout(() => this._doubleClickTimeoutExceeded(o30), n32), m27 = 1;
    this._pointerState.set(o30, { event: e24, doubleClickTimer: l27, pointerDownCount: m27 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/DoubleTapDrag.js
var p26 = class extends i13 {
  constructor(e24 = l24.maximumDoubleClickDelay, a36 = l24.maximumDoubleClickDistance, r28 = l24.maximumDoubleTouchDelay, n32 = l24.maximumDoubleTouchDistance, u24 = t5) {
    super(false), this._maximumDoubleClickDelay = e24, this._maximumDoubleClickDistance = a36, this._maximumDoubleTouchDelay = r28, this._maximumDoubleTouchDistance = n32, this._clock = u24, this._doubleTapDragReady = false, this._doubleTapDragActive = false, this._dragStartCenter = c2(0, 0), this._pointerState = /* @__PURE__ */ new Map(), this._doubleTapDrag = this.registerOutgoing("double-tap-drag"), this._dragEventSeparator = new t25({ start: (t32, e25) => this._dragStart(t32, e25), update: (t32, e25) => this._dragUpdate(e25), end: (t32, e25) => this._dragEnd(e25) }), this.registerIncoming("drag", (t32) => this._dragEventSeparator.handle(t32)), this.registerIncoming("pointer-down", (t32) => this._handlePointerDown(t32)), this.registerIncoming("pointer-up", () => this._handlePointerUp());
  }
  onUninstall() {
    this._pointerState.forEach((t32) => {
      t32.doubleTapTimeout = p(t32.doubleTapTimeout);
    });
  }
  get hasPendingInputs() {
    return n3(this._pointerState, (t32) => null != t32.doubleTapTimeout);
  }
  _clearPointerDown(t32) {
    const e24 = this._pointerState.get(t32);
    e24 && (e24.doubleTapTimeout = p(e24.doubleTapTimeout), this._pointerState.delete(t32), this.refreshHasPendingInputs());
  }
  _createDoubleTapDragData(t32, e24, a36) {
    const { button: i37, buttons: o30, pointer: r28, pointers: s29, pointerType: n32, timestamp: u24 } = a36;
    return { action: t32, delta: e24, button: i37, buttons: o30, pointer: r28, pointers: s29, pointerType: n32, timestamp: u24 };
  }
  _dragStart(t32, e24) {
    if (!this._doubleTapDragReady || 1 !== t32)
      return;
    this._doubleTapDragReady = false, this._doubleTapDragActive = true;
    const { data: a36, modifiers: o30 } = e24, { center: r28 } = a36;
    this._dragStartCenter = r28;
    const s29 = this._createDoubleTapDragData("begin", c2(0, 0), a36);
    this._doubleTapDrag.emit(s29, void 0, o30), e24.stopPropagation();
  }
  _dragUpdate(t32) {
    if (!this._doubleTapDragActive)
      return;
    const { data: e24, modifiers: a36 } = t32, { center: o30 } = e24, r28 = c2(o30.x - this._dragStartCenter.x, o30.y - this._dragStartCenter.y), s29 = this._createDoubleTapDragData("update", r28, e24);
    this._doubleTapDrag.emit(s29, void 0, a36), t32.stopPropagation();
  }
  _dragEnd(t32) {
    if (!this._doubleTapDragActive)
      return;
    const { data: e24, modifiers: a36 } = t32, { center: o30 } = e24, r28 = c2(o30.x - this._dragStartCenter.x, o30.y - this._dragStartCenter.y), s29 = this._createDoubleTapDragData("end", r28, e24);
    this._doubleTapDrag.emit(s29, void 0, a36), this._doubleTapDragActive = false, t32.stopPropagation();
  }
  _handlePointerDown(t32) {
    const { data: e24 } = t32, a36 = c33(e24), i37 = this._pointerState.get(a36), { pointerType: o30 } = e24.native;
    if (i37) {
      const r28 = "touch" === o30 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
      this._clearPointerDown(a36), e22(i37.event.data, e24) > r28 ? this._storePointerDown(t32) : this._doubleTapDragReady = true;
    } else
      this._storePointerDown(t32);
  }
  _handlePointerUp() {
    this._doubleTapDragReady = false;
  }
  _storePointerDown(t32) {
    const { data: e24 } = t32, { pointerType: a36 } = e24.native, i37 = c33(e24), o30 = "touch" === a36 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, r28 = this._clock.setTimeout(() => this._clearPointerDown(i37), o30);
    this._pointerState.set(i37, { event: t32, doubleTapTimeout: r28 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/Drag.js
var s27 = class extends i13 {
  constructor(t32) {
    super(false), this._navigationTouch = t32, this._startStateModifiers = /* @__PURE__ */ new Set(), this._activePointerMap = /* @__PURE__ */ new Map(), this._isDragging = false, this._isCurrentDragSuppressed = false, this._drag = this.registerOutgoing("drag"), this.registerIncoming("pointer-drag", this._handlePointerDrag.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-capture-lost", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-cancel", this._handlePointerUpAndPointerLost.bind(this));
  }
  _createPayload(t32, e24, i37, n32) {
    return { action: t32, pointerType: this._pointerType, button: this._mouseButton, buttons: e24.buttons, timestamp: n32, pointers: o27(this._activePointerMap), pointer: e24, angle: i37.angle, radius: i37.radius, center: i37.center };
  }
  _addPointer(t32) {
    const e24 = t32.native.pointerId, i37 = a30(this._activePointerMap).angle, n32 = { event: t32, initialAngle: 0, lastAngle: 0 };
    this._activePointerMap.set(e24, n32);
    const s29 = h19(n32, r25(this._activePointerMap));
    n32.initialAngle = s29, n32.lastAngle = s29, this._updatePointerAngles(i37);
  }
  _updatePointer(t32) {
    if (t32 && null == t32.x && null == t32.y)
      return;
    const e24 = t32.native.pointerId, i37 = this._activePointerMap.get(e24);
    i37 ? i37.event = t32 : this._addPointer(t32);
  }
  _removePointer(t32) {
    const e24 = a30(this._activePointerMap).angle;
    this._activePointerMap.delete(t32), this._updatePointerAngles(e24);
  }
  _updatePointerAngles(t32) {
    const e24 = a30(this._activePointerMap);
    this._activePointerMap.forEach((i37) => {
      i37.initialAngle = h19(i37, e24) - t32, i37.lastAngle = h19(i37, e24) - t32;
    });
  }
  _emitEvent(t32, e24, i37) {
    const n32 = a30(this._activePointerMap);
    this._drag.emit(this._createPayload(t32, e24, n32, i37), void 0, this._startStateModifiers);
  }
  _handlePointerUpAndPointerLost(t32) {
    const i37 = t32.data.native.pointerId, n32 = n2(t32.timestamp);
    this._activePointerMap.get(i37) && (1 === this._activePointerMap.size ? (this._updatePointer(t32.data), !this._isCurrentDragSuppressed && this._emitEvent("end", t32.data, n32), this._isDragging = false, this._isCurrentDragSuppressed = false, this._removePointer(i37)) : (this._removePointer(i37), this._emitEvent("removed", t32.data, n2(t32.timestamp))));
  }
  _handlePointerDrag(t32) {
    const i37 = t32.data, n32 = i37.currentEvent, s29 = n2(t32.timestamp);
    switch (i37.action) {
      case "start":
      case "update":
        this._isDragging ? this._activePointerMap.has(n32.native.pointerId) ? (this._updatePointer(n32), !this._isCurrentDragSuppressed && this._emitEvent("update", n32, s29)) : (this._addPointer(n32), this._emitEvent("added", n32, s29), this._isCurrentDragSuppressed = this._isSuppressed) : (this._updatePointer(n32), this._pointerType = t32.data.startEvent.pointerType, this._mouseButton = t32.data.startEvent.button, this._startStateModifiers = t32.modifiers, this._isDragging = true, this._isCurrentDragSuppressed = this._isSuppressed, !this._isCurrentDragSuppressed && this._emitEvent("start", n32, s29));
    }
  }
  get _isSuppressed() {
    return !!this._navigationTouch && !this._navigationTouch.browserTouchPanEnabled && "touch" === this._pointerType && 1 === this._activePointerMap.size;
  }
};
function r25(e24) {
  const i37 = [];
  return e24.forEach((e25) => {
    i37.push(c2(e25.event.x, e25.event.y));
  }), r24(i37);
}
function a30(t32) {
  const e24 = r25(t32);
  let i37 = 0;
  return t32.forEach((t33) => {
    let n32 = h19(t33, e24), s29 = n32 - t33.lastAngle;
    for (; s29 > Math.PI; )
      s29 -= 2 * Math.PI;
    for (; s29 < -Math.PI; )
      s29 += 2 * Math.PI;
    n32 = t33.lastAngle + s29, t33.lastAngle = n32;
    const r28 = n32 - t33.initialAngle;
    i37 += r28;
  }), i37 /= t32.size || 1, { angle: i37, radius: e24.radius, center: e24.center };
}
function o27(t32) {
  const e24 = /* @__PURE__ */ new Map();
  return t32.forEach((t33, i37) => e24.set(i37, t33.event)), e24;
}
function h19(t32, e24) {
  const i37 = t32.event, n32 = i37.x - e24.center.x, s29 = i37.y - e24.center.y;
  return Math.atan2(s29, n32);
}
var p27;
!function(t32) {
  t32[t32.Left = 0] = "Left", t32[t32.Middle = 1] = "Middle", t32[t32.Right = 2] = "Right", t32[t32.Back = 3] = "Back", t32[t32.Forward = 4] = "Forward", t32[t32.Undefined = -1] = "Undefined";
}(p27 || (p27 = {}));

// node_modules/@arcgis/core/views/input/recognizers/ImmediateDoubleClick.js
var m24 = class extends i13 {
  constructor(e24 = l24.maximumDoubleClickDelay, o30 = l24.maximumDoubleClickDistance, a36 = l24.maximumDoubleTouchDelay, m27 = l24.maximumDoubleTouchDistance, n32 = t5) {
    super(false), this._maximumDoubleClickDelay = e24, this._maximumDoubleClickDistance = o30, this._maximumDoubleTouchDelay = a36, this._maximumDoubleTouchDistance = m27, this._clock = n32, this._pointerState = /* @__PURE__ */ new Map(), this._immediateDoubleClick = this.registerOutgoing("immediate-double-click"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUp.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((t32) => {
      t32.immediateDoubleClick && t32.immediateDoubleClick.timeoutHandle.remove();
    }), super.onUninstall();
  }
  _handlePointerDown(t32) {
    const e24 = t32.data, i37 = c33(e24);
    if (!this._pointerState.has(i37)) {
      const t33 = { downButton: e24.native.button, immediateDoubleClick: null };
      this._pointerState.set(i37, t33), this.startCapturingPointer(e24.native);
    }
  }
  _handlePointerUp(t32) {
    const e24 = t32.data, i37 = c33(e24), m27 = this._pointerState.get(i37);
    if (m27 && m27.downButton === e24.native.button) {
      const i38 = m27.immediateDoubleClick;
      if (i38) {
        i38.timeoutHandle.remove();
        const o30 = "touch" === t32.data.native.pointerType ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
        e22(i38, t32.data) > o30 ? this._startImmediateDoubleClick(t32, m27) : (this._immediateDoubleClick.emit(t32.data, void 0, i38.modifiers), this._removeState(e24));
      } else
        this._startImmediateDoubleClick(t32, m27);
    }
  }
  _startImmediateDoubleClick(t32, e24) {
    const i37 = "touch" === t32.data.native.pointerType ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay;
    e24.immediateDoubleClick = { x: t32.data.x, y: t32.data.y, modifiers: t32.modifiers, timeoutHandle: this._clock.setTimeout(() => this._removeState(t32.data), i37) };
  }
  _removeState(t32) {
    const e24 = c33(t32);
    this._pointerState.delete(e24), this.stopCapturingPointer(t32.native), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/PointerClickHoldAndDrag.js
var o28 = { maximumClickDelay: 300, movementUntilMouseDrag: 1.5, movementUntilPenDrag: 6, movementUntilTouchDrag: 6, holdDelay: 500 };
var r26 = class extends i13 {
  constructor(e24 = o28.maximumClickDelay, i37 = o28.movementUntilMouseDrag, n32 = o28.movementUntilPenDrag, r28 = o28.movementUntilTouchDrag, s29 = o28.holdDelay, a36 = t5) {
    super(false), this._maximumClickDelay = e24, this._movementUntilMouseDrag = i37, this._movementUntilPenDrag = n32, this._movementUntilTouchDrag = r28, this._holdDelay = s29, this._clock = a36, this._pointerState = /* @__PURE__ */ new Map(), this._pointerDrag = this.registerOutgoing("pointer-drag"), this._immediateClick = this.registerOutgoing("immediate-click"), this._pointerHold = this.registerOutgoing("hold"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", (t32) => {
      this._handlePointerLoss(t32, "pointer-up");
    }), this.registerIncoming("pointer-capture-lost", (t32) => {
      this._handlePointerLoss(t32, "pointer-capture-lost");
    }), this.registerIncoming("pointer-cancel", (t32) => {
      this._handlePointerLoss(t32, "pointer-cancel");
    }), this._moveHandle = this.registerIncoming("pointer-move", this._handlePointerMove.bind(this)), this._moveHandle.pause();
  }
  onUninstall() {
    this._pointerState.forEach((t32) => {
      t32.holdTimeout = p(t32.holdTimeout);
    }), super.onUninstall();
  }
  _handlePointerDown(t32) {
    const e24 = t32.data, i37 = e24.native.pointerId;
    let n32 = null;
    0 === this._pointerState.size && (n32 = this._clock.setTimeout(() => {
      const e25 = this._pointerState.get(i37);
      if (e25) {
        if (!e25.isDragging) {
          const i38 = e25.previousEvent;
          this._pointerHold.emit(i38, void 0, t32.modifiers), e25.holdEmitted = true;
        }
        e25.holdTimeout = null;
      }
    }, this._holdDelay));
    const o30 = { startEvent: e24, previousEvent: e24, startTimestamp: t32.timestamp, isDragging: false, downButton: e24.native.button, holdTimeout: n32, modifiers: /* @__PURE__ */ new Set() };
    this._pointerState.set(i37, o30), this.startCapturingPointer(e24.native), this._moveHandle.resume(), this._pointerState.size > 1 && this._startDragging(t32);
  }
  _createPointerDragData(t32, e24, i37) {
    return { action: t32, startEvent: e24.startEvent, previousEvent: e24.previousEvent, currentEvent: i37 };
  }
  _handlePointerMove(t32) {
    const e24 = t32.data, i37 = e24.native.pointerId, o30 = this._pointerState.get(i37);
    if (o30) {
      if (o30.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("update", o30, e24), void 0, o30.modifiers);
      else {
        n29(e24, o30.startEvent) > this._getDragThreshold(e24.native.pointerType) && this._startDragging(t32);
      }
      o30.previousEvent = e24;
    }
  }
  _getDragThreshold(t32) {
    switch (t32) {
      case "touch":
        return this._movementUntilTouchDrag;
      case "pen":
        return this._movementUntilPenDrag;
      default:
        return this._movementUntilMouseDrag;
    }
  }
  _startDragging(t32) {
    const e24 = t32.data, i37 = e24.native.pointerId;
    this._pointerState.forEach((n32) => {
      null != n32.holdTimeout && (n32.holdTimeout.remove(), n32.holdTimeout = null), n32.isDragging || (n32.modifiers = t32.modifiers, n32.isDragging = true, i37 === n32.startEvent.native.pointerId ? this._pointerDrag.emit(this._createPointerDragData("start", n32, e24)) : this._pointerDrag.emit(this._createPointerDragData("start", n32, n32.previousEvent), t32.timestamp));
    });
  }
  _handlePointerLoss(t32, e24) {
    const i37 = t32.data, n32 = i37.native.pointerId, o30 = this._pointerState.get(n32);
    if (o30) {
      if (null != o30.holdTimeout && (o30.holdTimeout.remove(), o30.holdTimeout = null), o30.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("end", o30, "pointer-up" === e24 ? i37 : o30.previousEvent), void 0, o30.modifiers);
      else if ("pointer-up" === e24 && o30.downButton === i37.native.button) {
        t32.timestamp - o30.startTimestamp <= this._maximumClickDelay && !o30.holdEmitted && this._immediateClick.emit(i37);
      }
      this._pointerState.delete(n32), this.stopCapturingPointer(i37.native), 0 === this._pointerState.size && this._moveHandle.pause();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/MapViewInputManager.js
var z7 = { counter: "Ctrl", pan: { left: "ArrowLeft", right: "ArrowRight", up: "ArrowUp", down: "ArrowDown" }, zoom: { zoomIn: ["=", "+"], zoomOut: ["-", "_"] }, rotate: { clockwiseOption1: "a", clockwiseOption2: "A", counterClockwiseOption1: "d", counterClockwiseOption2: "D", resetOption1: "n", resetOption2: "N" } };
var k4 = class extends v3 {
  constructor() {
    super(...arguments), this._handles = new t3();
  }
  initialize() {
    const e24 = () => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.ready;
    };
    this._handles.add([f3(() => !e24(), () => this._disconnect()), f3(e24, () => this._connect())]);
  }
  destroy() {
    this._handles = a(this._handles), this._disconnect();
  }
  get latestPointerType() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerType;
  }
  get latestPointerLocation() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerLocation;
  }
  get multiTouchActive() {
    var _a;
    return ((_a = this._inputManager) == null ? void 0 : _a.multiTouchActive) ?? false;
  }
  _disconnect() {
    this.view.viewEvents.disconnect(), this._inputManager = a(this._inputManager);
  }
  _connect() {
    const e24 = this.view.surface, t32 = new c32(e24, this.view.input), o30 = [new m24(), new r26(), new m23(), new s27(this.view.navigation), new p26()], r28 = new u5({ eventSource: t32, recognizers: o30 });
    r28.installHandlers("prevent-context-menu", [new e21()], P.INTERNAL), r28.installHandlers("navigation", [new a27(this.view), new d13(this.view), new o25(this.view), new a25(this.view), new a25(this.view, [z7.counter]), new n26(this.view, "primary"), new i31(this.view, z7.pan), new e19(this.view, z7.zoom), new i32(this.view, z7.rotate), new o24(this.view, "secondary"), new e18(this.view, "touch")], P.INTERNAL), this.view.viewEvents.connect(r28), this._source = t32, this._inputManager = r28, l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.navigation) == null ? void 0 : _b.browserTouchPanEnabled;
    }, (e25) => {
      this._source && (this._source.browserTouchPanningEnabled = !e25);
    }, h);
  }
  get test() {
    return { inputManager: this._inputManager };
  }
};
e2([y2()], k4.prototype, "view", void 0), e2([y2()], k4.prototype, "latestPointerType", null), e2([y2()], k4.prototype, "latestPointerLocation", null), e2([y2()], k4.prototype, "multiTouchActive", null), k4 = e2([a3("esri.views.2d.input.MapViewInputManager")], k4);
var C8 = k4;

// node_modules/@arcgis/core/views/support/createScreenshotPlan.js
function t29(t32, h23, i37, e24, l27, d18, n32, o30) {
  t32.ignorePadding && (e24 = { left: 0, right: 0, top: 0, bottom: 0 });
  let u24 = null;
  null != t32.width && null != t32.height ? u24 = [t32.width, t32.height] : null == t32.width && null != t32.height ? u24 = [t32.height, t32.height] : null != t32.width && null == t32.height ? u24 = [t32.width, t32.width] : null == t32.width && null == t32.height && (u24 = null);
  const r28 = i37[0] - (e24.left + e24.right), a36 = i37[1] - (e24.top + e24.bottom);
  let g18, w18, c39 = t32.area || { x: 0, y: 0, width: r28, height: a36 };
  if (u24) {
    const t33 = r28 / a36, h24 = u24[0] / u24[1];
    if (h24 > t33) {
      const t34 = c39.width / h24;
      c39 = { x: c39.x, y: Math.round(c39.y + (c39.height - t34) / 2), width: c39.width, height: Math.round(t34) };
    } else {
      const t34 = c39.height * h24;
      c39 = { x: Math.round(c39.x + (c39.width - t34) / 2), y: c39.y, width: Math.round(t34), height: c39.height };
    }
  } else
    u24 = [c39.width, c39.height];
  u24[0] > c39.width ? (g18 = Math.min(u24[0] / c39.width, h23), w18 = u24[0] / c39.width / g18) : (g18 = 1, w18 = u24[0] / c39.width);
  return { resolutionScale: g18, cropArea: { x: Math.round((c39.x + e24.left) * g18), y: Math.round((c39.y + e24.top) * g18), width: Math.round(c39.width * g18), height: Math.round(c39.height * g18) }, outputScale: w18, format: l27, quality: d18, children: n32, rotation: o30 };
}

// node_modules/@arcgis/core/views/support/WebGLRequirements.js
function i33(i37) {
  const s29 = l8(i37);
  if (!s29.available)
    return new s3("webgl:required", "WebGL is required but not supported.");
  if ("3d" === i37 && s29.majorPerformanceCaveat)
    return new s3("webgl:major-performance-caveat-detected", "Your WebGL implementation doesn't seem to support hardware accelerated rendering. Check your browser settings or if your GPU is in a blocklist.");
  if (!s29.supportsHighPrecisionFragment)
    return new s3("webgl:high-precision-fragment-required", "WebGL support for high precision fragment shaders is required but not supported.");
  if (!s29.supportsVertexShaderSamplers)
    return new s3("webgl:vertex-shader-samplers-required", "WebGL support for vertex shader samplers is required but not supported.");
  if (s29.type === r11.WEBGL1) {
    if (!s29.supportsElementIndexUint)
      return new s3("webgl:element-index-uint-required", "WebGL support for uint vertex indices is required but not supported.");
    if (!s29.supportsStandardDerivatives)
      return new s3("webgl:standard-derivatives-required", "WebGL support for standard derivatives is required but not supported.");
    if (!s29.supportsInstancedArrays)
      return new s3("webgl:instanced-arrays-required", "WebGL support for instanced rendering is required but not supported.");
  }
  return null;
}

// node_modules/@arcgis/core/views/ui/Component.js
function i34(t32) {
  return t32 && "nodeType" in t32;
}
function d14(t32) {
  return t32 && "function" == typeof t32.render;
}
var c34 = { component: "esri-component" };
var p28 = class extends v3 {
  constructor() {
    super(...arguments), this.widget = null;
  }
  destroy() {
    this.widget && this.widget.destroy(), this.node = null;
  }
  get id() {
    return this.get("widget.id") || this.get("node.id");
  }
  set node(t32) {
    const e24 = this._get("node");
    t32 !== e24 && (t32 && t32.classList.add(c34.component), e24 && e24.classList.remove(c34.component), this._set("node", t32));
  }
  castNode(t32) {
    return t32 ? "string" == typeof t32 || i34(t32) ? (this._set("widget", null), e3(t32)) : (d14(t32) && !t32.domNode && (t32.domNode = document.createElement("div")), this._set("widget", t32), t32.domNode) : (this._set("widget", null), null);
  }
};
e2([y2({ dependsOn: [] })], p28.prototype, "id", null), e2([y2()], p28.prototype, "node", null), e2([s4("node")], p28.prototype, "castNode", null), e2([y2({ readOnly: true })], p28.prototype, "widget", void 0), p28 = e2([a3("esri.views.ui.Component")], p28);
var l25 = p28;

// node_modules/@arcgis/core/views/ui/UI.js
var u21 = { left: 0, top: 0, bottom: 0, right: 0 };
var f17 = { bottom: 30, top: 15, right: 15, left: 15 };
var _8 = "manual";
var g15 = "esri-ui";
var y15 = { ui: g15, corner: `${g15}-corner`, innerContainer: `${g15}-inner-container`, manualContainer: `${g15}-manual-container`, cornerContainer: `${g15}-corner-container`, topLeft: `${g15}-top-left`, topRight: `${g15}-top-right`, bottomLeft: `${g15}-bottom-left`, bottomRight: `${g15}-bottom-right` };
function C9(t32) {
  return t32 && !t32._started && "function" == typeof t32.postMixInProperties && "function" == typeof t32.buildRendering && "function" == typeof t32.postCreate && "function" == typeof t32.startup;
}
function v15(t32) {
  const o30 = t32, i37 = "object" == typeof o30 && null !== o30 && Object.getPrototypeOf(o30);
  return (null === i37 || i37 === Object.prototype) && ("component" in o30 || "index" in o30 || "position" in o30) ? t32 : null;
}
function L7(t32, { top: o30, bottom: i37, left: n32, right: e24 }) {
  t32.style.top = o30, t32.style.bottom = i37, t32.style.left = n32, t32.style.right = e24;
}
var b16 = class extends n4.EventedAccessor {
  constructor(t32) {
    super(t32), this._cornerNameToContainerLookup = {}, this._positionNameToContainerLookup = {}, this._components = new Array(), this._componentToKey = /* @__PURE__ */ new Map(), this._locale = l2(), this.view = null, this._applyViewPadding = () => {
      const t33 = this.container;
      t33 && L7(t33, this._toPxPosition(this._getViewPadding()));
    }, this._applyUIPadding = () => {
      const t33 = this._innerContainer;
      t33 && L7(t33, this._toPxPosition(this.padding));
    }, this._initContainers();
  }
  initialize() {
    this.addHandles([l3(() => {
      var _a;
      return [(_a = this.view) == null ? void 0 : _a.padding, this.container];
    }, this._applyViewPadding, h), l3(() => this.padding, this._applyUIPadding, h), l3(() => [this.container, this._locale], ([t32, o30]) => {
      t32 && t32.setAttribute("lang", o30);
    }, h), s5((t32) => {
      this._locale = t32;
    })]);
  }
  destroy() {
    this.container = null;
    for (const t32 of this._components)
      t32.destroy();
    this._components.length = 0, this._componentToKey.clear();
  }
  set container(t32) {
    const i37 = this._get("container");
    t32 !== i37 && (t32 && (t32.classList.add(y15.ui), n6(t32), this._attachContainers(t32)), i37 && (i37.classList.remove(y15.ui), L7(i37, { top: "", bottom: "", left: "", right: "" }), t7(i37)), this._set("container", t32));
  }
  get height() {
    const t32 = this.get("view.height") || 0;
    if (0 === t32)
      return t32;
    const o30 = this._getViewPadding(), i37 = o30.top + o30.bottom;
    return Math.max(t32 - i37, 0);
  }
  get padding() {
    return this._get("padding");
  }
  set padding(t32) {
    this._overrideIfSome("padding", t32);
  }
  castPadding(t32) {
    return "number" == typeof t32 ? { bottom: t32, top: t32, right: t32, left: t32 } : { ...f17, ...t32 };
  }
  get width() {
    const t32 = this.get("view.width") || 0;
    if (0 === t32)
      return t32;
    const o30 = this._getViewPadding(), i37 = o30.left + o30.right;
    return Math.max(t32 - i37, 0);
  }
  add(t32, o30) {
    let i37, n32;
    if (Array.isArray(t32))
      return void t32.forEach((t33) => this.add(t33, o30));
    const e24 = v15(t32);
    e24 && ({ index: i37, position: o30, component: t32, key: n32 } = e24), o30 && "object" == typeof o30 && ({ index: i37, key: n32, position: o30 } = o30), !t32 || o30 && !this._isValidPosition(o30) || this._add(t32, o30, i37, n32);
  }
  remove(t32, o30) {
    if (!t32)
      return;
    if (Array.isArray(t32))
      return t32.map((t33) => this.remove(t33, o30));
    const i37 = this._find(t32);
    if (i37) {
      const n32 = this._componentToKey;
      if (n32.has(t32) && n32.get(t32) !== o30)
        return;
      const e24 = this._components.indexOf(i37);
      return i37.node.parentNode && i37.node.parentNode.removeChild(i37.node), this._componentToKey.delete(t32), this._components.splice(e24, 1)[0];
    }
  }
  empty(t32) {
    if (Array.isArray(t32))
      return t32.map((t33) => this.empty(t33)).reduce((t33, o30) => t33.concat(o30));
    if ((t32 = t32 || _8) === _8) {
      return Array.prototype.slice.call(this._manualContainer.children).filter((t33) => !t33.classList.contains(y15.corner)).map((t33) => this.remove(t33));
    }
    return this._isValidPosition(t32) ? Array.prototype.slice.call(this._cornerNameToContainerLookup[t32].children).map(this.remove, this) : null;
  }
  move(t32, o30) {
    if (Array.isArray(t32) && t32.forEach((t33) => this.move(t33, o30)), !t32)
      return;
    let i37;
    const n32 = v15(t32) || v15(o30);
    if (n32 && (i37 = n32.index, o30 = n32.position, t32 = n32.component || t32), o30 && !this._isValidPosition(o30))
      return;
    const e24 = this.remove(t32);
    e24 && this.add(e24, { position: o30, index: i37 });
  }
  find(t32) {
    if (!t32)
      return null;
    const o30 = this._findById(t32);
    return o30 && (o30.widget || o30.node);
  }
  getPosition(t32) {
    for (const o30 in this._positionNameToContainerLookup) {
      if (this._positionNameToContainerLookup[o30].contains(t32))
        return o30;
    }
    return null;
  }
  _add(t32, o30, i37, n32) {
    t32 instanceof l25 || (t32 = new l25({ node: t32 })), this._place({ component: t32, position: o30, index: i37 }), this._components.push(t32), n32 && this._componentToKey.set(t32, n32);
  }
  _find(t32) {
    return t32 ? t32 instanceof l25 ? this._findByComponent(t32) : "string" == typeof t32 ? this._findById(t32) : this._findByNode(t32.domNode || t32) : null;
  }
  _getViewPadding() {
    return this.get("view.padding") || u21;
  }
  _attachContainers(t32) {
    t32.appendChild(this._innerContainer), t32.appendChild(this._manualContainer);
  }
  _initContainers() {
    const t32 = document.createElement("div");
    t32.classList.add(y15.innerContainer), t32.classList.add(y15.cornerContainer);
    const o30 = document.createElement("div");
    o30.classList.add(y15.innerContainer), o30.classList.add(y15.manualContainer);
    const i37 = document.createElement("div");
    i37.classList.add(y15.topLeft), i37.classList.add(y15.corner), t32.appendChild(i37);
    const n32 = document.createElement("div");
    n32.classList.add(y15.topRight), n32.classList.add(y15.corner), t32.appendChild(n32);
    const e24 = document.createElement("div");
    e24.classList.add(y15.bottomLeft), e24.classList.add(y15.corner), t32.appendChild(e24);
    const r28 = document.createElement("div");
    r28.classList.add(y15.bottomRight), r28.classList.add(y15.corner), t32.appendChild(r28), this._innerContainer = t32, this._manualContainer = o30;
    const s29 = f4();
    this._cornerNameToContainerLookup = { "top-left": i37, "top-right": n32, "bottom-left": e24, "bottom-right": r28, "top-leading": s29 ? n32 : i37, "top-trailing": s29 ? i37 : n32, "bottom-leading": s29 ? r28 : e24, "bottom-trailing": s29 ? e24 : r28 }, this._positionNameToContainerLookup = { manual: o30, ...this._cornerNameToContainerLookup };
  }
  _isValidPosition(t32) {
    return !!this._positionNameToContainerLookup[t32];
  }
  _place(t32) {
    const o30 = t32.component, n32 = t32.position || _8, e24 = t32.index, r28 = this._positionNameToContainerLookup[n32], s29 = null != e24 && e24 > -1;
    if (C9(o30.widget) && o30.widget.startup(), !s29)
      return void r28.appendChild(o30.node);
    const a36 = Array.prototype.slice.call(r28.children);
    if (0 === e24)
      return void (r28.firstChild ? o4(o30.node, r28.firstChild) : r28.appendChild(o30.node));
    e24 >= a36.length ? r28.appendChild(o30.node) : o4(o30.node, a36[e24]);
  }
  _toPxPosition(t32) {
    return { top: this._toPxUnit(t32.top), left: this._toPxUnit(t32.left), right: this._toPxUnit(t32.right), bottom: this._toPxUnit(t32.bottom) };
  }
  _toPxUnit(t32) {
    return 0 === t32 ? "0" : t32 + "px";
  }
  _findByComponent(t32) {
    let o30, i37 = null;
    return this._components.some((n32) => (o30 = n32 === t32, o30 && (i37 = n32), o30)), i37;
  }
  _findById(t32) {
    let o30, i37 = null;
    return this._components.some((n32) => (o30 = n32.id === t32, o30 && (i37 = n32), o30)), i37;
  }
  _findByNode(t32) {
    let o30, i37 = null;
    return this._components.some((n32) => (o30 = n32.node === t32, o30 && (i37 = n32), o30)), i37;
  }
};
e2([y2()], b16.prototype, "_locale", void 0), e2([y2()], b16.prototype, "container", null), e2([y2()], b16.prototype, "height", null), e2([y2({ value: f17 })], b16.prototype, "padding", null), e2([s4("padding")], b16.prototype, "castPadding", null), e2([y2()], b16.prototype, "view", void 0), e2([y2()], b16.prototype, "width", null), b16 = e2([a3("esri.views.ui.UI")], b16);
var P3 = b16;

// node_modules/@arcgis/core/widgets/Attribution/AttributionViewModel.js
function d15(t32, e24) {
  return t32 && "copyright" in t32 && (!e24 || "function" == typeof t32.originOf && "user" === t32.originOf("copyright"));
}
function m25(t32, e24) {
  return t32.length !== e24.length || t32.some((t33, i37) => t33.text !== e24[i37].text);
}
function f18(t32, e24, i37) {
  if (!i37 || !e24)
    return;
  t32.find((t33) => t33.layerView === e24 && t33.text === i37) || t32.push({ text: i37, layerView: e24 });
}
function y16(t32) {
  return "bing-maps" === t32.type;
}
var b17 = [];
var g16 = class extends d {
  constructor(t32) {
    super(t32), this._clear = () => {
      this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.handles.remove("suspension"), this.notifyChange("state");
    }, this._pendingAttributions = /* @__PURE__ */ new Set(), this._fetchedAttributionData = /* @__PURE__ */ new Map(), this.items = new j2(), this.view = null, this._allLayerViewsChange = (t33) => {
      this.handles.remove("suspension");
      const e24 = this.get("view.allLayerViews");
      e24 && this.handles.add(e24.map((t34) => l3(() => {
        var _a;
        return [t34.suspended, (_a = t34.layer) == null ? void 0 : _a.attributionVisible];
      }, () => this._updateAttributionItems())), "suspension"), t33 && t33.removed && t33.removed.forEach((t34) => {
        this._pendingAttributions.delete(t34), this._fetchedAttributionData.delete(t34);
      }), this._updateAttributionItems();
    }, this.handles.add([a6(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, "change", (t33) => this._allLayerViewsChange(t33), { onListenerAdd: () => this._allLayerViewsChange(), onListenerRemove: this._clear }), f3(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.stationary);
    }, () => this._updateAttributionItems())]);
  }
  destroy() {
    this.view = null, this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.items.removeAll();
  }
  get state() {
    return this.get("view.ready") ? this._pendingAttributions.size > 0 ? "loading" : "ready" : "disabled";
  }
  _updateAttributionItems() {
    const t32 = this.view, e24 = t32 == null ? void 0 : t32.allLayerViews;
    b17.length = 0, t32 && e24 ? (e24.forEach((e25) => {
      var _a;
      if (e25.suspended || !((_a = e25.layer) == null ? void 0 : _a.attributionVisible))
        return;
      const i37 = e25.layer;
      if (d15(i37, "user"))
        return void f18(b17, e25, i37.copyright);
      if (i37.hasAttributionData) {
        if (this._fetchedAttributionData.has(e25)) {
          const r29 = this._fetchedAttributionData.get(e25);
          return void (r29 ? f18(b17, e25, this._getDynamicAttribution(r29, t32, i37)) : d15(i37) && f18(b17, e25, i37.copyright));
        }
        return void this._fetchAttributionData(e25);
      }
      const r28 = i37.get("portalItem.accessInformation");
      f18(b17, e25, r28 || i37.copyright);
    }), m25(this.items, b17) && (this.items.removeAll(), this.items.addMany(b17)), b17.length = 0, this.notifyChange("state")) : this._clear();
  }
  async _fetchAttributionData(t32) {
    if (this._pendingAttributions.has(t32))
      return;
    this._pendingAttributions.add(t32);
    const i37 = await b3(t32.layer.fetchAttributionData());
    if (this._pendingAttributions.has(t32)) {
      const e24 = i37.ok ? this._createContributionIndex(i37.value, y16(t32.layer)) : null;
      this._pendingAttributions.delete(t32), this._fetchedAttributionData.set(t32, e24);
    }
    this._updateAttributionItems();
  }
  _createContributionIndex(t32, e24) {
    const i37 = t32.contributors, r28 = {};
    if (!i37)
      return r28;
    for (let o30 = 0; o30 < i37.length; o30++) {
      const t33 = i37[o30], s29 = t33.coverageAreas;
      if (!s29)
        return;
      for (const i38 of s29) {
        const s30 = i38.bbox, n32 = i38.zoomMin - (e24 && i38.zoomMin ? 1 : 0), a36 = i38.zoomMax - (e24 && i38.zoomMax ? 1 : 0), c39 = { xmin: s30[1], ymin: s30[0], xmax: s30[3], ymax: s30[2], spatialReference: f2.WGS84 }, u24 = { extent: R(c39), attribution: t33.attribution || "", score: null != i38.score ? i38.score : 100, id: o30 };
        for (let t34 = n32; t34 <= a36; t34++)
          r28[t34] = r28[t34] || [], r28[t34].push(u24);
      }
    }
    return r28.maxKey = Math.max.apply(null, Object.keys(r28)), r28;
  }
  _getDynamicAttribution(t32, e24, i37) {
    var _a;
    const { extent: r28, scale: o30 } = e24;
    let s29 = ((_a = i37.tileInfo) == null ? void 0 : _a.scaleToZoom(o30)) ?? 0;
    if (s29 = Math.min(t32.maxKey ?? 0, Math.round(s29)), !r28 || null == s29 || s29 <= -1)
      return "";
    const n32 = t32[s29], a36 = M(r28.center.clone().normalize(), e24.spatialReference), c39 = {};
    return n32 ? n32.filter((t33) => {
      const e25 = t33.id, i38 = !c39[e25] && a36 && t33.extent && r4(t33.extent, a36);
      return i38 && (c39[e25] = true), i38;
    }).sort((t33, e25) => e25.score - t33.score || t33.objectId - e25.objectId).map((t33) => t33.attribution).join(", ") : "";
  }
};
e2([y2({ readOnly: true, type: j2 })], g16.prototype, "items", void 0), e2([y2({ readOnly: true })], g16.prototype, "state", null), e2([y2()], g16.prototype, "view", void 0), g16 = e2([a3("esri.widgets.Attribution.AttributionViewModel")], g16);
var _9 = g16;

// node_modules/@arcgis/core/widgets/Attribution.js
var l26 = "esri-attribution";
var p29 = { base: `${l26} esri-widget`, poweredBy: `${l26}__powered-by`, sources: `${l26}__sources`, open: `${l26}--open`, sourcesOpen: `${l26}__sources--open`, link: `${l26}__link`, widgetIcon: "esri-icon-description", interactive: "esri-interactive" };
var a31 = class extends W {
  constructor(e24, t32) {
    super(e24, t32), this._isOpen = false, this._attributionTextOverflowed = false, this._prevSourceNodeHeight = 0, this._resizeObserver = new ResizeObserver((e25) => e25.forEach(({ target: e26 }) => this._checkSourceTextOverflow(e26))), this.iconClass = p29.widgetIcon, this.itemDelimiter = " | ", this.messages = null, this.viewModel = new _9();
  }
  initialize() {
    this.addHandles(a6(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.items;
    }, "change", () => this.scheduleRender()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get _isInteractive() {
    return this._isOpen || this._attributionTextOverflowed;
  }
  get attributionText() {
    return this.viewModel.items.reduce((e24, t32) => (e24.includes(t32.text) || e24.push(t32.text), e24), []).join(this.itemDelimiter);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e24) {
    this._overrideIfSome("label", e24);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e24) {
    this.viewModel.view = e24;
  }
  render() {
    const e24 = { [p29.open]: this._isOpen };
    return n5("div", { bind: this, class: this.classes(p29.base, e24), dir: "ltr", onclick: this._toggleState, onkeydown: this._toggleState }, this.renderSourcesNode(), this.renderPoweredBy());
  }
  renderPoweredBy() {
    return n5("div", { class: p29.poweredBy }, "Powered by", " ", n5("a", { class: p29.link, href: "http://www.esri.com/", target: "_blank", rel: "noreferrer" }, "Esri"));
  }
  renderSourcesNode() {
    const e24 = this._isOpen, t32 = this._isInteractive, i37 = t32 ? "0" : "", { attributionText: r28 } = this, s29 = { [p29.sourcesOpen]: e24, [p29.interactive]: t32 };
    return n5("div", { afterCreate: this._afterSourcesNodeCreate, bind: this, class: this.classes(p29.sources, s29), innerHTML: r28, tabindex: i37 });
  }
  _afterSourcesNodeCreate(e24) {
    this._prevSourceNodeHeight = e24.clientWidth, this._resizeObserver.observe(e24);
  }
  _checkSourceTextOverflow(e24) {
    let t32 = false;
    const { clientHeight: i37, clientWidth: r28, scrollWidth: s29 } = e24, o30 = s29 > r28, n32 = this._attributionTextOverflowed !== o30;
    if (this._attributionTextOverflowed = o30, n32 && (t32 = true), this._isOpen) {
      const e25 = i37 < this._prevSourceNodeHeight;
      this._prevSourceNodeHeight = i37, e25 && (this._isOpen = false, t32 = true);
    }
    t32 && this.scheduleRender();
  }
  _toggleState() {
    this._isInteractive && (this._isOpen = !this._isOpen);
  }
};
e2([y2()], a31.prototype, "_isOpen", void 0), e2([y2()], a31.prototype, "_isInteractive", null), e2([y2()], a31.prototype, "_attributionTextOverflowed", void 0), e2([y2()], a31.prototype, "_prevSourceNodeHeight", void 0), e2([y2({ readOnly: true, dependsOn: ["viewModel.items.length", "itemDelimiter"] })], a31.prototype, "attributionText", null), e2([y2()], a31.prototype, "iconClass", void 0), e2([y2()], a31.prototype, "itemDelimiter", void 0), e2([y2()], a31.prototype, "label", null), e2([y2(), e4("esri/widgets/Attribution/t9n/Attribution")], a31.prototype, "messages", void 0), e2([y2()], a31.prototype, "view", null), e2([y2({ type: _9 })], a31.prototype, "viewModel", void 0), e2([t8()], a31.prototype, "_toggleState", null), a31 = e2([a3("esri.widgets.Attribution")], a31);
var h20 = a31;

// node_modules/@arcgis/core/widgets/Compass/CompassViewModel.js
var h21 = "esri.widgets.CompassViewModel";
var d16 = class extends t19(v3) {
  constructor(t32) {
    super(t32), this._handles = new t3(), this.orientation = { x: 0, y: 0, z: 0 }, this.view = null, this._updateForCamera = this._updateForCamera.bind(this), this._updateForRotation = this._updateForRotation.bind(this), this._updateRotationWatcher = this._updateRotationWatcher.bind(this);
  }
  initialize() {
    this._handles.add(l3(() => this.view, this._updateRotationWatcher, h));
  }
  destroy() {
    p(this._handles), this.view = null;
  }
  get canShowNorth() {
    const t32 = this.get("view.spatialReference");
    return !(!t32 || !t32.isWebMercator && !t32.isGeographic);
  }
  get state() {
    return this.get("view.ready") ? this.canShowNorth ? "compass" : "rotation" : "disabled";
  }
  reset() {
    var _a;
    if (!this.get("view.ready"))
      return;
    const t32 = {};
    "2d" === ((_a = this.view) == null ? void 0 : _a.type) ? t32.rotation = 0 : t32.heading = 0, this.callGoTo({ target: t32 });
  }
  _updateForRotation(t32) {
    null != t32 && (this.orientation = { z: t32 });
  }
  _updateForCamera(t32) {
    if (!t32)
      return;
    const o30 = -t32.heading;
    this.orientation = { x: 0, y: 0, z: o30 };
  }
  _updateRotationWatcher(t32) {
    this._handles.removeAll(), t32 && this._handles.add("2d" === t32.type ? l3(() => t32 == null ? void 0 : t32.rotation, this._updateForRotation, h) : l3(() => t32 == null ? void 0 : t32.camera, this._updateForCamera, h));
  }
};
e2([y2({ readOnly: true })], d16.prototype, "canShowNorth", null), e2([y2()], d16.prototype, "orientation", void 0), e2([y2({ readOnly: true })], d16.prototype, "state", null), e2([y2()], d16.prototype, "view", void 0), d16 = e2([a3(h21)], d16);
var c35 = d16;

// node_modules/@arcgis/core/widgets/Compass/css.js
var i35 = { base: "esri-compass esri-widget--button esri-widget", text: "esri-icon-font-fallback-text", icon: "esri-compass__icon", rotationIcon: "esri-icon-dial", northIcon: "esri-icon-compass", widgetIcon: "esri-icon-locate-circled", interactive: "esri-interactive", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/Compass.js
var n30 = class extends W {
  constructor(e24, s29) {
    super(e24, s29), this.iconClass = i35.widgetIcon, this.messages = null, this.viewModel = new c35();
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e24) {
    this.viewModel.goToOverride = e24;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e24) {
    this._overrideIfSome("label", e24);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e24) {
    this.viewModel.view = e24;
  }
  reset() {
    return this.viewModel.reset();
  }
  render() {
    const { orientation: e24, state: s29 } = this.viewModel, t32 = "disabled" === s29, o30 = "compass" === ("rotation" === s29 ? "rotation" : "compass"), r28 = t32 ? -1 : 0, a36 = { [i35.disabled]: t32, [i35.interactive]: !t32 }, p33 = { [i35.northIcon]: o30, [i35.rotationIcon]: !o30 }, { messages: n32 } = this;
    return n5("div", { bind: this, class: this.classes(i35.base, a36), onclick: this._reset, onkeydown: this._reset, role: "button", tabIndex: r28, "aria-label": n32.reset, title: n32.reset }, n5("span", { "aria-hidden": "true", class: this.classes(i35.icon, p33), styles: this._toRotationTransform(e24) }), n5("span", { class: i35.text }, n32.reset));
  }
  _reset() {
    this.viewModel.reset();
  }
  _toRotationTransform(e24) {
    return { transform: `rotateZ(${e24.z}deg)` };
  }
};
e2([y2()], n30.prototype, "goToOverride", null), e2([y2()], n30.prototype, "iconClass", void 0), e2([y2()], n30.prototype, "label", null), e2([y2(), e4("esri/widgets/Compass/t9n/Compass")], n30.prototype, "messages", void 0), e2([y2()], n30.prototype, "view", null), e2([y2({ type: c35 })], n30.prototype, "viewModel", void 0), e2([t8()], n30.prototype, "_reset", null), n30 = e2([a3("esri.widgets.Compass")], n30);
var d17 = n30;

// node_modules/@arcgis/core/widgets/NavigationToggle/css.js
var t30 = "esri-navigation-toggle";
var o29 = { base: `${t30} esri-widget`, button: `${t30}__button esri-widget--button`, activeButton: `${t30}__button--active`, panButton: `${t30}__button--pan`, rotateButton: `${t30}__button--rotate`, isLayoutHorizontal: `${t30}--horizontal`, rotationIcon: "esri-icon-rotate", panIcon: "esri-icon-pan", widgetIcon: "esri-icon-pan2", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/NavigationToggle/NavigationToggleViewModel.js
var r27 = class extends v3 {
  constructor(t32) {
    super(t32), this.navigationMode = "pan", this.view = null;
  }
  initialize() {
    this.own(f3(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.inputManager;
    }, () => this._setNavigationMode()));
  }
  destroy() {
    this.view = null;
  }
  get state() {
    var _a;
    return this.get("view.ready") && "3d" === ((_a = this.view) == null ? void 0 : _a.type) ? "ready" : "disabled";
  }
  toggle() {
    "disabled" !== this.state && (this.navigationMode = "pan" !== this.navigationMode ? "pan" : "rotate", this._setNavigationMode());
  }
  _setNavigationMode() {
    this.get("view.inputManager").primaryDragAction = "pan" === this.navigationMode ? "pan" : "rotate";
  }
};
e2([y2({ readOnly: true })], r27.prototype, "state", null), e2([y2()], r27.prototype, "navigationMode", void 0), e2([y2()], r27.prototype, "view", void 0), r27 = e2([a3("esri.widgets.NavigationToggleViewModel")], r27);
var a32 = r27;

// node_modules/@arcgis/core/widgets/NavigationToggle.js
var p30 = class extends W {
  constructor(t32, e24) {
    super(t32, e24), this.iconClass = o29.widgetIcon, this.messages = null, this.viewModel = new a32();
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(t32) {
    this._overrideIfSome("label", t32);
  }
  set layout(t32) {
    "horizontal" !== t32 && (t32 = "vertical"), this._set("layout", t32);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t32) {
    this.viewModel.view = t32;
  }
  toggle() {
    return this.viewModel.toggle();
  }
  render() {
    const t32 = "disabled" === this.get("viewModel.state"), e24 = "pan" === this.get("viewModel.navigationMode"), o30 = { [o29.disabled]: t32, [o29.isLayoutHorizontal]: "horizontal" === this.layout }, s29 = { [o29.activeButton]: e24 }, r28 = { [o29.activeButton]: !e24 }, a36 = t32 ? -1 : 0, l27 = this.messages.toggle;
    return n5("div", { bind: this, class: this.classes(o29.base, o30), onclick: this._toggle, onkeydown: this._toggle, tabIndex: a36, "aria-label": l27, title: l27 }, n5("div", { class: this.classes(o29.button, o29.panButton, s29) }, n5("span", { class: o29.panIcon })), n5("div", { class: this.classes(o29.button, o29.rotateButton, r28) }, n5("span", { class: o29.rotationIcon })));
  }
  _toggle() {
    this.toggle();
  }
};
e2([y2()], p30.prototype, "iconClass", void 0), e2([y2()], p30.prototype, "label", null), e2([y2({ value: "vertical" })], p30.prototype, "layout", null), e2([y2(), e4("esri/widgets/NavigationToggle/t9n/NavigationToggle")], p30.prototype, "messages", void 0), e2([y2()], p30.prototype, "view", null), e2([y2({ type: a32 })], p30.prototype, "viewModel", void 0), e2([t8()], p30.prototype, "_toggle", null), p30 = e2([a3("esri.widgets.NavigationToggle")], p30);
var g17 = p30;

// node_modules/@arcgis/core/widgets/Zoom/IconButton.js
var c36 = { button: "esri-widget--button esri-widget", disabled: "esri-disabled", interactive: "esri-interactive", iconText: "esri-icon-font-fallback-text", icon: "esri-icon" };
var n31 = class extends W {
  constructor() {
    super(...arguments), this.enabled = true, this.iconClass = "", this.title = "";
  }
  render() {
    const t32 = this.enabled ? 0 : -1, s29 = { [c36.disabled]: !this.enabled, [c36.interactive]: this.enabled }, i37 = { [this.iconClass]: !!this.iconClass };
    return n5("div", { bind: this, class: this.classes(c36.button, s29), onclick: this._triggerAction, onkeydown: this._triggerAction, role: "button", tabIndex: t32, title: this.title }, n5("span", { "aria-hidden": "true", role: "presentation", class: this.classes(c36.icon, i37) }), n5("span", { class: c36.iconText }, this.title));
  }
  _triggerAction() {
    this.action.call(this);
  }
};
e2([y2()], n31.prototype, "action", void 0), e2([y2()], n31.prototype, "enabled", void 0), e2([y2()], n31.prototype, "iconClass", void 0), e2([y2()], n31.prototype, "title", void 0), e2([t8()], n31.prototype, "_triggerAction", null), n31 = e2([a3("esri.widgets.IconButton")], n31);
var a33 = n31;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions2D.js
var s28 = class extends v3 {
  get canZoomIn() {
    if (!this.get("view.ready"))
      return false;
    const e24 = this.get("view.animation.target.scale") || this.get("view.scale"), t32 = this.get("view.constraints.effectiveMaxScale");
    return 0 === t32 || e24 > t32;
  }
  get canZoomOut() {
    if (!this.get("view.ready"))
      return false;
    const e24 = this.get("view.animation.target.scale") || this.get("view.scale"), t32 = this.get("view.constraints.effectiveMinScale");
    return 0 === t32 || e24 < t32;
  }
};
e2([y2({ readOnly: true })], s28.prototype, "canZoomIn", null), e2([y2({ readOnly: true })], s28.prototype, "canZoomOut", null), e2([y2()], s28.prototype, "view", void 0), s28 = e2([a3("esri.widgets.Zoom.ZoomConditions2D")], s28);
var i36 = s28;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions3D.js
var t31 = class extends v3 {
  get canZoomIn() {
    return !!this.view.ready;
  }
  get canZoomOut() {
    return !!this.view.ready;
  }
};
e2([y2({ readOnly: true })], t31.prototype, "canZoomIn", null), e2([y2({ readOnly: true })], t31.prototype, "canZoomOut", null), e2([y2()], t31.prototype, "view", void 0), t31 = e2([a3("esri.widgets.Zoom.ZoomConditions3D")], t31);
var c37 = t31;

// node_modules/@arcgis/core/widgets/Zoom/ZoomViewModel.js
var p31 = class extends v3 {
  constructor(o30) {
    super(o30);
  }
  destroy() {
    this.view = null;
  }
  get canZoomIn() {
    return r(this._zoomConditions) && this._zoomConditions.canZoomIn;
  }
  get canZoomOut() {
    var _a;
    return r(this._zoomConditions) && ((_a = this._zoomConditions) == null ? void 0 : _a.canZoomOut);
  }
  get state() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.ready) ? "ready" : "disabled";
  }
  set view(o30) {
    o30 ? "2d" === o30.type ? this._zoomConditions = new i36({ view: o30 }) : "3d" === o30.type && (this._zoomConditions = new c37({ view: o30 })) : this._zoomConditions = null, this._set("view", o30);
  }
  zoomIn() {
    if (!this.canZoomIn)
      return;
    const o30 = this.view;
    "2d" === o30.type ? o30.mapViewNavigation.zoomIn() : g(o30.goTo({ zoomFactor: 2 }));
  }
  zoomOut() {
    if (!this.canZoomOut)
      return;
    const o30 = this.view;
    "2d" === o30.type ? o30.mapViewNavigation.zoomOut() : g(o30.goTo({ zoomFactor: 0.5 }));
  }
};
e2([y2()], p31.prototype, "_zoomConditions", void 0), e2([y2()], p31.prototype, "canZoomIn", null), e2([y2()], p31.prototype, "canZoomOut", null), e2([y2({ readOnly: true })], p31.prototype, "state", null), e2([y2()], p31.prototype, "view", null), p31 = e2([a3("esri.widgets.Zoom.ZoomViewModel")], p31);
var a34 = p31;

// node_modules/@arcgis/core/widgets/Zoom.js
var u22 = { base: "esri-zoom esri-widget", horizontalLayout: "esri-zoom--horizontal", zoomInIcon: "esri-icon-plus", zoomOutIcon: "esri-icon-minus", widgetIcon: "esri-icon-zoom-in-magnifying-glass" };
var a35 = class extends W {
  constructor(o30, t32) {
    super(o30, t32), this.iconClass = u22.widgetIcon, this.messages = null, this.viewModel = new a34();
  }
  initialize() {
    this._zoomInButton = new a33({ action: this.zoomIn.bind(this), iconClass: u22.zoomInIcon }), this._zoomOutButton = new a33({ action: this.zoomOut.bind(this), iconClass: u22.zoomOutIcon });
  }
  destroy() {
    this._zoomInButton = a(this._zoomInButton), this._zoomOutButton = a(this._zoomOutButton);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(o30) {
    this._overrideIfSome("label", o30);
  }
  set layout(o30) {
    "horizontal" !== o30 && (o30 = "vertical"), this._set("layout", o30);
  }
  set view(o30) {
    this.viewModel.view = o30;
  }
  get view() {
    return this.viewModel.view;
  }
  render() {
    const o30 = this.viewModel, t32 = { [u22.horizontalLayout]: "horizontal" === this.layout }, { canZoomIn: s29, canZoomOut: e24 } = o30;
    this._zoomInButton.enabled = s29, this._zoomOutButton.enabled = e24;
    const { zoomIn: i37, zoomOut: r28 } = this.messages;
    return this._zoomInButton.title = i37, this._zoomOutButton.title = r28, n5("div", { class: this.classes(u22.base, t32) }, this._zoomInButton.render(), this._zoomOutButton.render());
  }
  zoomIn() {
    return this.viewModel.zoomIn();
  }
  zoomOut() {
    return this.viewModel.zoomOut();
  }
};
e2([y2()], a35.prototype, "iconClass", void 0), e2([y2()], a35.prototype, "label", null), e2([y2({ value: "vertical" })], a35.prototype, "layout", null), e2([y2(), e4("esri/widgets/Zoom/t9n/Zoom")], a35.prototype, "messages", void 0), e2([y2()], a35.prototype, "view", null), e2([y2({ type: a34 })], a35.prototype, "viewModel", void 0), a35 = e2([a3("esri.widgets.Zoom")], a35);
var c38 = a35;

// node_modules/@arcgis/core/views/ui/DefaultUI.js
function m26(t32) {
  return t32 && void 0 !== t32.view;
}
var h22 = class extends P3 {
  constructor(t32) {
    super(t32), this._defaultPositionLookup = { attribution: "manual", compass: "top-left", "navigation-toggle": "top-left", zoom: "top-left" }, this.components = [];
  }
  initialize() {
    this.addHandles([l3(() => this.components, this._componentsWatcher.bind(this), h), l3(() => this.view, this._updateViewAwareWidgets.bind(this), h)]);
  }
  _add(t32, o30, e24, i37) {
    let s29 = t32;
    if ("string" == typeof t32 && this._defaultPositionLookup[t32]) {
      if (this._find(t32))
        return;
      s29 = this._createComponent(t32);
    }
    super._add(s29, o30, e24, i37);
  }
  _removeComponents(t32) {
    t32.forEach((t33) => {
      const o30 = this._find(t33);
      o30 && (this.remove(o30), o30.destroy());
    });
  }
  _updateViewAwareWidgets(t32) {
    this.components.forEach((o30) => {
      const e24 = this._find(o30), i37 = e24 && e24.widget;
      m26(i37) && (i37.view = t32);
    });
  }
  _componentsWatcher(t32, o30) {
    this._removeComponents(o30), this._addComponents(t32), this._adjustPadding(t32);
  }
  _adjustPadding(t32) {
    if (!t32.includes("attribution") && !this._isOverridden("padding")) {
      const { top: t33 } = this.padding;
      this.padding = t33;
    }
  }
  _addComponents(t32) {
    this.constructed && t32.forEach((t33) => this.add(this._createComponent(t33), this._defaultPositionLookup[t33]));
  }
  _createComponent(t32) {
    const o30 = this._createWidget(t32);
    if (o30)
      return new l25({ id: t32, node: o30 });
  }
  _createWidget(t32) {
    return "attribution" === t32 ? this._createAttribution() : "compass" === t32 ? this._createCompass() : "navigation-toggle" === t32 ? this._createNavigationToggle() : "zoom" === t32 ? this._createZoom() : void 0;
  }
  _createAttribution() {
    return new h20({ view: this.view });
  }
  _createCompass() {
    return new d17({ view: this.view });
  }
  _createNavigationToggle() {
    return new g17({ view: this.view });
  }
  _createZoom() {
    return new c38({ view: this.view });
  }
};
e2([y2()], h22.prototype, "components", void 0), h22 = e2([a3("esri.views.ui.DefaultUI")], h22);
var u23 = h22;

// node_modules/@arcgis/core/views/ui/2d/DefaultUI2D.js
var e23 = class extends u23 {
  constructor(o30) {
    super(o30), this.components = ["attribution", "zoom"];
  }
};
e2([y2()], e23.prototype, "components", void 0), e23 = e2([a3("esri.views.ui.2d.DefaultUI2D")], e23);
var p32 = e23;

// node_modules/@arcgis/core/views/MapView.js
var pe2;
var he3;
var ce2;
var de2;
var ue2;
var ge2;
async function me2() {
  const [, { GraphicsView2D: e24, GraphicContainer: t32, LabelManager: i37, MapViewNavigation: s29, MagnifierView2D: r28, Stage: n32 }] = await Promise.all([import("./webglDeps-XBP6C3TD.js"), import("./mapViewDeps-2X6DPBHL.js")]);
  he3 = e24, ce2 = t32, de2 = i37, ue2 = s29, ge2 = r28, pe2 = n32;
}
var ye2 = 160;
function we(e24) {
  return e24 && "esri.Viewpoint" === e24.declaredClass;
}
var fe2 = class extends w7(z5(a18(A8))) {
  constructor(e24) {
    super(e24), this._magnifierView = null, this._stage = null, this._resolveWhenReady = [], this.rootLayerViews = new l5({ getCollections: () => {
      var _a, _b;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, this.layerViews, (_b = this.basemapView) == null ? void 0 : _b.referenceLayerViews];
    }, getChildrenFunction: () => null }), this.featuresTilingScheme = null, this.fullOpacity = 1, this.graphicsView = null, this.labelManager = null, this.mapViewNavigation = null, this.renderingOptions = { samplingMode: "dynamic", edgeLabelsVisible: true, labelsAnimationTime: 125, labelCollisionsEnabled: true }, this.rendering = false, this.supersampleScreenshotsEnabled = true, this.supportsGround = false, this._stationaryTimer = null, this._gotoTask = null, this.frameTask = new s22(this), this._pePromise = null, this.floors = new j2(), this.highlightOptions = new c10(), this.inputManager = new C8({ view: this }), this.map = null, this.resizeAlign = "center", this.spatialReferenceLocked = false, this.timeline = new e11(), this.type = "2d", this.ui = new p32(), this._pixelFormat = { flipY: true, premultipliedAlpha: true }, this.constraints = new u18(), this.padding = { top: 0, right: 0, bottom: 0, left: 0 }, this.handles.add([l3(() => this.viewpoint, () => {
      this._lastStationaryEventTimestamp = performance.now(), this._flipStationary(ye2);
    }, U2), this.on("resize", (e25) => this._resizeHandler(e25)), l3(() => {
      var _a;
      return (_a = this.animationManager) == null ? void 0 : _a.animation;
    }, (e25) => {
      this.animation = e25;
    })]), c8();
  }
  destroy() {
    this._set("preconditionsReady", false), this._gotoTask = this.frameTask = null, this.rootLayerViews.destroy(), this.inputManager.destroy(), this._set("inputManager", null);
  }
  get graphicsTileStore() {
    return new d4(this.featuresTilingScheme);
  }
  get initialExtentRequired() {
    var _a;
    const { scale: e24, constraints: t32, center: i37, viewpoint: s29, extent: r28 } = this;
    let n32 = this.zoom;
    return !(this.map && "initialViewProperties" in this.map && ((_a = this.map.initialViewProperties) == null ? void 0 : _a.viewpoint)) && (!r28 && ((t32 == null ? void 0 : t32.effectiveLODs) || (n32 = -1), (!i37 || 0 === e24 && -1 === n32) && (!s29 || !r(s29.targetGeometry) || "extent" !== s29.targetGeometry.type && !s29.scale)));
  }
  get resourceManager() {
    return this._stage.resourceManager;
  }
  get textureManager() {
    return this._stage.painter.textureManager;
  }
  get _defaultsFromMapSettings() {
    return { required: { tileInfo: true, heightModelInfo: false, extent: false }, requiresExtentInSpatialReference: this.spatialReferenceLocked };
  }
  get _projectionEngineLoaded() {
    return !!en() || (this._pePromise || (this._pePromise = tn().finally(() => {
      this._pePromise = null;
    })), false);
  }
  get typeSpecificPreconditionsReady() {
    const e24 = this._getDefaultViewpoint();
    if (!e24)
      return false;
    const t32 = this.spatialReference, i37 = e(e24.targetGeometry);
    return !!An(i37.spatialReference, t32) || this._projectionEngineLoaded;
  }
  set animation(e24) {
    const t32 = this._get("animation");
    if (e24 === t32)
      return;
    if (t32 && t32.stop(), !e24 || e24.isFulfilled())
      return void this._set("animation", null);
    this._set("animation", e24), this.frameTask.animationInProgress = true;
    const i37 = () => {
      var _a;
      e24 === this._get("animation") && (this._set("animation", null), (_a = this.frameTask) == null ? void 0 : _a.requestFrame()), this.frameTask && (this.frameTask.animationInProgress = false);
    };
    e24.when(i37, i37);
  }
  get background() {
    return Te(this.map) ? this.map.initialViewProperties.background : null;
  }
  set background(e24) {
    this._override("background", e24);
  }
  get center() {
    if (!this.ready)
      return this._get("center");
    const { center: e24, spatialReference: t32 } = this.state.paddedViewState;
    return new w2({ x: e24[0], y: e24[1], spatialReference: t32 });
  }
  set center(e24) {
    if (null == e24)
      return;
    if (!this.ready)
      return this._set("center", e24), void this.notifyChange("initialExtentRequired");
    let t32;
    try {
      t32 = this._project(e24, this.spatialReference);
    } catch (s29) {
      return void s2.getLogger(this.declaredClass).error(new s3("mapview:invalid-center", "could not project the value in the view's spatial reference", { input: e24, error: s29 }));
    }
    const i37 = this.viewpoint;
    xt(i37, i37, t32), this.viewpoint = i37;
  }
  set constraints(e24) {
    const t32 = this._get("constraints");
    t32 && (this.handles.remove("map-view-constraints"), t32.destroy()), this._set("constraints", e24), e24 && (e24.view = this, this.ready && (this.state.viewpoint = e24.fit(this.state.paddedViewState.viewpoint)), this.handles.add(l3(() => e24.version, () => {
      this.ready && this.state && (this.state.viewpoint = e24.fit(this.state.paddedViewState.viewpoint));
    }, U2), "map-view-constraints"));
  }
  get extent() {
    return this.ready ? this.state.paddedViewState.extent.clone() : this._get("extent");
  }
  set extent(e24) {
    if (null == e24)
      return;
    if (!e24.width || !e24.height)
      return void s2.getLogger(this.declaredClass).error(new s3("mapview:invalid-extent", "invalid extent size"));
    if (!this.ready)
      return this._set("extent", e24), this._set("center", null), this._set("viewpoint", null), this._set("scale", 0), this._set("zoom", -1), void this.notifyChange("initialExtentRequired");
    let t32;
    try {
      t32 = this._project(e24, this.spatialReference);
    } catch (s29) {
      return void s2.getLogger(this.declaredClass).error(new s3("mapview:invalid-extent", "could not project the value in the view's spatial reference", { error: s29 }));
    }
    const i37 = this.viewpoint;
    tt(i37, i37, t32, this.size, { constraints: this.constraints }), this.viewpoint = i37;
  }
  get padding() {
    return this.ready ? this.state.padding : this._get("padding");
  }
  set padding(e24) {
    this.ready ? (this.state.padding = e24, this._set("padding", this.state.padding)) : this._set("padding", e24);
  }
  get resolution() {
    return this.state ? this.state.resolution : 0;
  }
  get rotation() {
    return this.ready ? this.state.rotation : this._get("rotation");
  }
  set rotation(e24) {
    if (isNaN(e24))
      return;
    if (!this.ready)
      return void this._set("rotation", e24);
    const t32 = this.viewpoint;
    wt(t32, t32, e24), this.viewpoint = t32;
  }
  get scale() {
    return this.ready ? this.state.scale : this._get("scale");
  }
  set scale(e24) {
    if (!e24 || isNaN(e24))
      return;
    if (!this.ready) {
      this._set("scale", e24), this._set("zoom", -1);
      const t33 = this._get("extent");
      return t33 && (this._set("extent", null), this._set("center", t33.center)), void this.notifyChange("initialExtentRequired");
    }
    const t32 = this.viewpoint;
    jt(t32, t32, e24), this.viewpoint = t32;
  }
  get stationary() {
    return !(this.animation || this.navigating || this.resizing || this._stationaryTimer);
  }
  get updating() {
    var _a, _b, _c;
    const e24 = !this.destroyed && (!this.layerViewManager || !this.labelManager || !this.graphicsView || true === this.layerViewManager.updating || true === this.labelManager.updating || true === this.graphicsView.updating || this.allLayerViews.some((e25) => !e25.destroyed && !("layerViews" in e25) && true === e25.updating));
    if (has("esri-2d-log-updating")) {
      const t32 = this.allLayerViews.reduce((e25, t33) => ({ ...e25, [t33.layer.id]: !t33.destroyed && !("layerViews" in t33) && t33.updating }), {});
      console.log(`Updating MapView: ${e24}
-> Null LayerViewManager: ${!this.layerViewManager}
-> Null LabelManager: ${!this.labelManager}
-> Null GraphicsView: ${!this.graphicsView}
-> layerViewManager.updating: ${(_a = this.layerViewManager) == null ? void 0 : _a.updating}
-> labelManager.updating: ${(_b = this.labelManager) == null ? void 0 : _b.updating}
-> graphicsView.updating: ${(_c = this.graphicsView) == null ? void 0 : _c.updating}
-> allLayerViews: ${JSON.stringify(t32)}
`);
    }
    return e24;
  }
  get viewpoint() {
    if (!this.ready)
      return this._get("viewpoint");
    const e24 = this.state.paddedViewState;
    return e24 && e24.viewpoint.clone();
  }
  set viewpoint(e24) {
    if (null == e24)
      return;
    if (!this.ready)
      return this._set("viewpoint", e24), this._set("extent", null), this._set("center", null), this._set("zoom", -1), this._set("scale", 0), void this.notifyChange("initialExtentRequired");
    let t32, s29;
    try {
      t32 = this._project(e24, this.spatialReference), !e24.scale || isNaN(e24.scale) ? s29 = new s3("mapview:invalid-viewpoint", `invalid scale value of ${e24.scale}`) : t(e24.targetGeometry) && (s29 = new s3("mapview:invalid-viewpoint", "geometry not defined"));
    } catch (a36) {
      s29 = new s3("mapview:invalid-viewpoint", "could not project the value in the view's spatial reference", { error: a36 });
    }
    if (s29)
      return void s2.getLogger(this.declaredClass).error(s29);
    this._scaleBeforeChangingSpatialReference = null;
    const r28 = new u4({ targetGeometry: new w2(), scale: 0, rotation: 0 });
    Z(r28, t32), this.constraints.constrain(r28, this.state.paddedViewState.viewpoint), this.state.viewpoint = r28, this.frameTask.requestFrame(), this._set("viewpoint", r28);
  }
  get zoom() {
    return this.ready ? this.constraints.scaleToZoom(this.scale) : this._get("zoom");
  }
  set zoom(e24) {
    if (null == e24)
      return;
    if (!this.ready) {
      this._set("zoom", e24), this._set("scale", 0);
      const t33 = this._get("extent");
      return t33 && (this._set("extent", null), this._set("center", t33.center)), void this.notifyChange("initialExtentRequired");
    }
    if (!this.constraints.effectiveLODs)
      return void this._set("zoom", -1);
    const t32 = this.viewpoint;
    jt(t32, t32, this.constraints.zoomToScale(e24)), this.viewpoint = t32, this._set("zoom", this.constraints.scaleToZoom(this.scale));
  }
  get navigating() {
    return !(!this.mapViewNavigation || !this.mapViewNavigation.interacting);
  }
  goTo(e24, t32) {
    if (e24)
      return this.animation && (this.animation = null), this._createAnimation(), j3(() => this.ready, t32).then(() => {
        var _a;
        const i37 = { animate: true, ...t32 }, s29 = Y(e24, this);
        return (_a = this.animation) == null ? void 0 : _a.update(s29), this._gotoTask = {}, i37.animate ? this._gotoAnimated(s29, i37) : this._gotoImmediate(s29, i37);
      });
    s2.getLogger(this.declaredClass).error("#goTo()", "target cannot be null or undefined");
  }
  async hitTest(e24, t32) {
    const i37 = o20(e24) ? r20(this, e24) : e24;
    if (!this.ready || isNaN(i37.x) || isNaN(i37.y))
      return { screenPoint: i37, results: [] };
    let s29 = /* @__PURE__ */ new Set(), r28 = false, n32 = null, a36 = null;
    (t32 == null ? void 0 : t32.include) ? Se(t32.include, Ve(this, (e25) => s29.add(e25), (e25) => {
      n32 || (n32 = /* @__PURE__ */ new Set()), n32.add(e25);
    }, (e25) => s29.add(e25), () => r28 = true)) : (r28 = true, s29 = new Set(this.allLayerViews)), (t32 == null ? void 0 : t32.exclude) && Se(t32.exclude, Ve(this, (e25) => s29.delete(e25), (e25) => {
      a36 || (a36 = /* @__PURE__ */ new Set()), a36.add(e25);
    }));
    const o30 = this.allLayerViews.filter((e25) => !e25.suspended && s29.has(e25)).reverse(), p33 = this.toMap(i37);
    let h23 = [...r28 ? this.graphicsView.hitTest(p33).map((e25) => ({ type: "graphic", graphic: e25, layer: null, mapPoint: p33 })) : [], ...await Promise.all(o30.map((e25) => e25.hitTest(p33, i37)).toArray())].filter(r).flat().filter(r);
    return n32 && (h23 = h23.filter((e25) => !("graphic" in e25) || !e25.graphic || (n32 == null ? void 0 : n32.has(ve(e25.graphic))))), a36 && (h23 = h23.filter((e25) => !("graphic" in e25) || !e25.graphic || (a36 == null ? void 0 : a36.has(ve(e25.graphic))))), { screenPoint: i37, results: h23 };
  }
  async takeScreenshot(e24) {
    const t32 = this._createScreenshotPlan(e24), i37 = await this._stage.takeScreenshot(t32);
    return r13(i37, { format: t32.format, quality: t32.quality, rotation: 0, disableDecorations: false }, this._pixelFormat);
  }
  async _takeScreenshot(e24) {
    const t32 = this._createScreenshotPlan(e24), i37 = await this._stage.takeScreenshot(t32);
    return l9(i37, this._pixelFormat);
  }
  _createScreenshotPlan(e24) {
    e24 = e24 ?? {};
    const t32 = this.supersampleScreenshotsEnabled ? Math.min(4, w6(this.size, Math.min(4096, this._stage.context.parameters.maxTextureSize))) : 1;
    let i37;
    e24.layers ? (i37 = [], e24.layers.forEach((e25) => {
      const t33 = this.allLayerViews.find((t34) => t34.layer.id === e25.id);
      t33 && "container" in t33 && t33.container && i37.push(t33.container);
    })) : i37 = this._stage.children;
    const { format: s29, quality: r28 } = s11(e24.format, e24.quality);
    return t29(e24, t32, this.size, this.padding, s29, r28, i37, e24.rotation);
  }
  get test() {
    return { takeScreenshot: (e24) => this._takeScreenshot(e24) };
  }
  toMap(e24) {
    if (!this.ready)
      return null;
    const t32 = o20(e24) ? r20(this, e24) : e24, i37 = [0, 0], [s29, r28] = this.state.toMap(i37, [t32.x, t32.y]), n32 = this.spatialReference;
    return new w2({ x: s29, y: r28, spatialReference: n32 });
  }
  toScreen(e24) {
    if (!this.ready)
      return null;
    const t32 = this._project(e24, this.spatialReference), i37 = [t32.x, t32.y];
    return this.state.toScreen(i37, i37), c2(i37[0], i37[1]);
  }
  on(e24, t32, i37, s29) {
    const r28 = this.inputManager && this.viewEvents.on(e24, t32, i37, s29);
    return r28 || super.on(e24, t32);
  }
  hasEventListener(e24) {
    return super.hasEventListener(e24) || this.viewEvents.hasHandler(e24);
  }
  whenLayerView(e24) {
    return super.whenLayerView(e24);
  }
  graphicChanged(e24) {
    if (this.graphicsView) {
      this.graphicsView.graphicUpdateHandler(e24);
    }
  }
  whenReady() {
    return new Promise((e24) => {
      this.ready ? e24(this) : this._resolveWhenReady.push(e24);
    });
  }
  forceDOMReadyCycle() {
    this.forceReadyCycle();
  }
  getDefaultSpatialReference() {
    var _a, _b, _c;
    return this.map && "initialViewProperties" in this.map && ((_b = (_a = this.map) == null ? void 0 : _a.initialViewProperties) == null ? void 0 : _b.spatialReference) || ((_c = this.defaultsFromMap) == null ? void 0 : _c.spatialReference) || null;
  }
  hasLayerViewModule(e24) {
    return n23.hasLayerViewModule(e24);
  }
  importLayerView(e24) {
    return n23.importLayerView(e24);
  }
  pixelSizeAt() {
    return this.ready ? this.state.resolution : (s2.getLogger(this.declaredClass).error("#pixelSizeAt()", "Map view cannot be used before it is ready"), null);
  }
  popupHitTest(e24) {
    return this.hitTest(e24).then((t32) => ({ ...t32, mapPoint: this.toMap(e24) }));
  }
  requestUpdate() {
    this.ready && this.frameTask.requestUpdate();
  }
  validate() {
    let e24 = i33(this.type);
    return has("safari") && has("safari") < 9 && (e24 = new s3("mapview:browser-not-supported", "This browser is not supported by MapView (Safari < 9)", { type: "safari", requiredVersion: 9, detectedVersion: has("safari") })), r(e24) ? (s2.getLogger(this.declaredClass).warn("#validate()", e24.message), Promise.reject(e24)) : me2();
  }
  _createAnimation() {
    return this.animation && !this.animation.done || (this.animation = new p24()), this.animation;
  }
  _cancellableGoTo(e24, t32, i37) {
    const s29 = () => e24 === this._gotoTask, r28 = i37.then(() => {
      s29() && (this.animation = null);
    }).catch((e25) => {
      throw s29() && (t32 && !t32.done && (t32.stop(), this.frameTask.animationInProgress = false), this.animation = null), e25;
    }), n32 = new Promise((e25) => e25(r28));
    return t32.when().catch(() => {
      s29() && n32.cancel && n32.cancel();
    }), n32;
  }
  _gotoImmediate(e24, t32) {
    const i37 = this._gotoTask, s29 = this.animation, r28 = e24.then((e25) => {
      if (f(t32), i37 !== this._gotoTask)
        throw new s3("view:goto-interrupted", "Goto was interrupted");
      this.viewpoint = s29.target = e25, s29.finish();
    });
    return this._cancellableGoTo(i37, s29, r28);
  }
  _flipStationary(e24) {
    return null !== this._stationaryTimer || (this._stationaryTimer = setTimeout(() => {
      this._stationaryTimer = null;
      const e25 = performance.now() - this._lastStationaryEventTimestamp;
      e25 < ye2 && (this._stationaryTimer = this._flipStationary(e25));
    }, e24)), this._stationaryTimer;
  }
  _getDefaultViewpoint() {
    var _a, _b, _c, _d;
    const { constraints: e24, initialExtent: t32, map: s29, padding: r28, size: n32 } = this;
    if (!e24)
      return null;
    const a36 = s29 && "initialViewProperties" in s29 ? s29.initialViewProperties : void 0, o30 = { zoom: this._get("zoom"), scale: this._get("scale"), center: this._get("center"), extent: this._get("extent"), rotation: this._get("rotation"), viewpoint: this._get("viewpoint"), spatialReference: this._userSpatialReference };
    e24.effectiveLODs ? -1 !== o30.zoom && (o30.scale = e24.zoomToScale(o30.zoom)) : o30.zoom = -1;
    let h23 = null, c39 = null, d18 = 0;
    const u24 = o30.viewpoint && o30.viewpoint.rotation, g18 = o30.viewpoint && o30.viewpoint.targetGeometry;
    r(g18) && ("extent" === g18.type ? h23 = g18 : "point" === g18.type && (c39 = g18, d18 = o30.viewpoint.scale));
    const m27 = o30.extent || h23 || ((_b = e((_a = a36 == null ? void 0 : a36.viewpoint) == null ? void 0 : _a.targetGeometry)) == null ? void 0 : _b.extent) || t32, y17 = o30.center || c39 || (m27 == null ? void 0 : m27.center), w18 = o30.scale || d18 || ((_c = a36 == null ? void 0 : a36.viewpoint) == null ? void 0 : _c.scale) || m27 && H(m27, [n32[0] - r28.left - r28.right, n32[1] - r28.top - r28.bottom]), f19 = o30.rotation || u24 || ((_d = a36 == null ? void 0 : a36.viewpoint) == null ? void 0 : _d.rotation) || 0;
    return y17 && w18 ? new u4({ targetGeometry: y17, scale: w18, rotation: f19 }) : null;
  }
  _gotoAnimated(e24, t32) {
    const i37 = this._gotoTask, s29 = this.animation;
    if (!s29)
      return Promise.resolve();
    const r28 = e24.then((e25) => {
      if (f(t32), i37 !== this._gotoTask)
        throw new s3("view:goto-interrupted", "Goto was interrupted");
      return s29.update(e25), this.animationManager.animate(s29, this.viewpoint, t32), s29.when().then(() => {
      }, () => {
      });
    });
    return this._cancellableGoTo(i37, s29, r28);
  }
  _project(e24, t32) {
    var _a;
    const i37 = e24 && e24.targetGeometry || e24;
    if (!t32)
      return e24;
    if (!i37)
      return null;
    if (t32.imageCoordinateSystem || ((_a = i37.spatialReference) == null ? void 0 : _a.imageCoordinateSystem))
      return e24;
    if (E2(t32, i37.spatialReference))
      return e24;
    const s29 = rn(i37, t32);
    if (!s29)
      throw new s3("mapview:projection-not-possible", "projecting input geometry to target spatial reference returned a null value", { geometry: i37, spatialReference: t32 });
    return we(e24) ? (e24.targetGeometry = s29, e24) : s29;
  }
  _resizeHandler(e24) {
    if (!this.ready)
      return;
    const t32 = this.state;
    let i37 = this.state.paddedViewState.viewpoint;
    const s29 = this.state.paddedViewState.size.concat();
    t32.size = [e24.width, e24.height], ht(i37, i37, s29, this.state.paddedViewState.size, this.resizeAlign), i37 = this.constraints.constrain(i37, void 0), this.state.viewpoint = i37;
  }
  _startup() {
    var _a, _b;
    this.timeline.begin("MapView Startup");
    const e24 = this._getDefaultViewpoint(), t32 = e24.targetGeometry;
    try {
      this._project(e24, this.spatialReference);
    } catch (l27) {
      s2.getLogger(this.declaredClass).warn(new t6("mapview:startup-projection-error", "projection of initial viewpoint to the view's spatial reference, defaulting to the initial viewpoint.", { center: t32.toJSON(), spatialReference: this.spatialReference, error: l27 })), e24.targetGeometry = ((_a = this.defaultsFromMap.extent) == null ? void 0 : _a.center) || new w2({ x: 0, y: 0, spatialReference: this.spatialReference });
    }
    (_b = this.constraints) == null ? void 0 : _b.fit(e24), this._set("state", new f16({ padding: this._get("padding"), size: this.size, viewpoint: e24 })), this.graphics.owner = this;
    const i37 = new pe2(this.surface, { canvas: this.renderCanvas, supersampleScreenshots: this.supersampleScreenshotsEnabled, contextOptions: { disabledExtensions: this.deactivatedWebGLExtensions, debugWebGLExtensions: this.debugWebGLExtensions }, renderingOptions: this.renderingOptions, timeline: this.timeline });
    this._stage = i37, this._magnifierView = new ge2(), this._magnifierView.magnifier = this.magnifier;
    const s29 = new de2({ view: this });
    this._set("labelManager", s29);
    const r28 = new l19({ view: this });
    this._set("animationManager", r28);
    const n32 = new ue2({ view: this, animationManager: r28 });
    this._set("mapViewNavigation", n32), this._setupSpatialReferenceDependentProperties(), this.handles.add([this.rootLayerViews.on("change", () => this._updateStageChildren()), i37.on("post-render", () => this._set("rendering", i37.renderRequested)), i37.on("will-render", () => this._set("rendering", i37.renderRequested)), i37.on("webgl-error", (e25) => this.fatalError = e25.error), l3(() => this.stationary, (e25) => i37.stationary = e25, w4), l3(() => this.background, (e25) => {
      i37.background = e25, this._magnifierView.background = e25;
    }, w4), l3(() => this.magnifier, (e25) => this._magnifierView.magnifier = e25, w4), l3(() => this.renderingOptions, (e25) => i37.renderingOptions = e25, w4), l3(() => this.highlightOptions, (e25) => i37.highlightOptions = e25, w4), l3(() => this.state.id, () => i37.state = this.state, w4)], "map-view"), this._updateStageChildren();
    const a36 = this._resolveWhenReady;
    this._resolveWhenReady = [], a36.forEach((e25) => e25(this)), this.timeline.end("MapView Startup"), this.frameTask && this.frameTask.start(), this._set("ready", true);
  }
  _teardown() {
    this._destroySpatialReferenceDependentProperties(), this.handles.remove("map-view"), this.mapViewNavigation.destroy(), this._set("mapViewNavigation", null), this.animationManager.destroy(), this._set("animationManager", null), this.layerViewManager.clear(), this.labelManager.destroy(), this._magnifierView.destroy(), this._stage.destroy(), this._stage = null, this._set("graphicsView", null), this._magnifierView = null, this._set("labelManager", null), this._set("mapViewNavigation", null), this.graphics.owner = null, this.frameTask && this.frameTask.stop(), this._stationaryTimer && (clearTimeout(this._stationaryTimer), this._stationaryTimer = null), this._set("ready", false);
    const { center: [e24, t32], spatialReference: i37, rotation: s29, scale: r28 } = this.state.paddedViewState, n32 = new w2({ x: e24, y: t32, spatialReference: i37 });
    this._set("viewpoint", null), this._set("extent", null), this._set("center", n32), this._set("zoom", -1), this._set("rotation", s29), this._set("scale", r28), this._set("spatialReference", i37), this._set("state", null), this.animation = null;
  }
  _updateStageChildren() {
    this._stage.removeAllChildren(), this.rootLayerViews.forEach((e25) => {
      this._stage.addChild(e25.container);
    });
    const e24 = this.graphicsView;
    this._stage.addChild(e24.container), this._stage.addChild(this._magnifierView);
  }
  _setupSpatialReferenceDependentProperties() {
    const e24 = new h4(j5.create({ spatialReference: this.spatialReference, size: 512, numLODs: 36 }));
    this._set("featuresTilingScheme", e24);
    const t32 = new he3({ view: this, graphics: this.graphics, requestUpdateCallback: () => this.requestUpdate(), container: new ce2(e24) });
    this.frameTask.graphicsView = t32, this._set("graphicsView", t32);
  }
  _destroySpatialReferenceDependentProperties() {
    const e24 = this.graphicsView;
    this._set("graphicsView", null), this.frameTask.graphicsView = null, e24.destroy(), this._set("featuresTilingScheme", null);
  }
  _spatialReferenceChanged(e24) {
    if (!this.ready)
      return;
    this.frameTask.stop();
    for (const i37 of this.allLayerViews)
      i37.processDetach();
    this._destroySpatialReferenceDependentProperties();
    const t32 = this.state.paddedViewState.clone();
    if (t(this._scaleBeforeChangingSpatialReference))
      this._scaleBeforeChangingSpatialReference = t32.scale;
    else {
      const e25 = t32.viewpoint.clone();
      e25.scale = this._scaleBeforeChangingSpatialReference, t32.viewpoint = e25;
    }
    const s29 = t32.clone(), [r28, n32] = t32.center;
    let a36 = null;
    try {
      a36 = this._project(new w2({ x: r28, y: n32, spatialReference: t32.spatialReference }), e24);
    } catch (p33) {
      en() || s2.getLogger(this.declaredClass).warn(new t6("mapview:spatial-reference-change", "could not project the view's center to the new spatial reference", { center: a36 == null ? void 0 : a36.toJSON(), spatialReference: e24, error: p33 }));
    }
    a36 || (a36 = new w2({ x: 0, y: 0, spatialReference: e24 }));
    const l27 = xt(new u4({ targetGeometry: new w2(), scale: 0, rotation: 0 }), t32.viewpoint, a36);
    s29.viewpoint = l27;
    try {
      const i37 = 20, r29 = [t32.size[0] / 2, t32.size[1] / 2], n33 = [r29[0] + i37, r29[1]], a37 = t32.toMap([0, 0], n33), { x: o30, y: p33 } = this._project(new w2({ x: a37[0], y: a37[1], spatialReference: t32.spatialReference }), e24);
      a37[0] = o30, a37[1] = p33, s29.toScreen(a37, a37);
      const h23 = pt(r29, a37, n33), c39 = Math.hypot(a37[0] - r29[0], a37[1] - r29[1]) / i37;
      !Number.isFinite(c39) || Math.abs(c39) > 4 ? (l27.rotation = 0, l27.targetGeometry = new w2({ x: 0, y: 0, spatialReference: e24 })) : (l27.scale *= c39, l27.scale > has("mapview-srswitch-adjust-rotation-scale-threshold") ? l27.rotation = 0 : l27.rotation += Number.isFinite(h23) ? h23 : 0);
    } catch {
    }
    this._get("constraints").constrain(l27, void 0), this._get("state").viewpoint = l27, this._stage.state = this.state, this._setupSpatialReferenceDependentProperties();
    for (const i37 of this.allLayerViews)
      i37.processAttach();
    this.frameTask.requestFrame(), this.frameTask.start(), this._updateStageChildren();
  }
};
fe2.type = "2d", e2([y2({ readOnly: true })], fe2.prototype, "animationManager", void 0), e2([y2({ constructOnly: true })], fe2.prototype, "deactivatedWebGLExtensions", void 0), e2([y2({ constructOnly: true })], fe2.prototype, "debugWebGLExtensions", void 0), e2([y2({ readOnly: true })], fe2.prototype, "featuresTilingScheme", void 0), e2([y2({ readOnly: true })], fe2.prototype, "fullOpacity", void 0), e2([y2({ readOnly: true })], fe2.prototype, "graphicsTileStore", null), e2([y2()], fe2.prototype, "graphicsView", void 0), e2([y2({ readOnly: true })], fe2.prototype, "state", void 0), e2([y2()], fe2.prototype, "initialExtentRequired", null), e2([y2()], fe2.prototype, "labelManager", void 0), e2([y2({ readOnly: true })], fe2.prototype, "resourceManager", null), e2([y2({ readOnly: true })], fe2.prototype, "textureManager", null), e2([y2({ readOnly: true })], fe2.prototype, "mapViewNavigation", void 0), e2([y2({ constructOnly: true })], fe2.prototype, "renderCanvas", void 0), e2([y2()], fe2.prototype, "renderingOptions", void 0), e2([y2({ readOnly: true })], fe2.prototype, "rendering", void 0), e2([y2({ constructOnly: true })], fe2.prototype, "supersampleScreenshotsEnabled", void 0), e2([y2({ readOnly: true })], fe2.prototype, "supportsGround", void 0), e2([y2()], fe2.prototype, "_stationaryTimer", void 0), e2([y2()], fe2.prototype, "_defaultsFromMapSettings", null), e2([y2()], fe2.prototype, "_pePromise", void 0), e2([y2({ readOnly: true })], fe2.prototype, "typeSpecificPreconditionsReady", null), e2([y2()], fe2.prototype, "animation", null), e2([y2({ type: m6 })], fe2.prototype, "background", null), e2([y2({ value: null, type: w2, dependsOn: ["state.id", "ready"] })], fe2.prototype, "center", null), e2([y2({ type: u18 })], fe2.prototype, "constraints", null), e2([y2({ value: null, type: w3, dependsOn: ["state.id", "ready"] })], fe2.prototype, "extent", null), e2([y2()], fe2.prototype, "floors", void 0), e2([y2({ type: c10 })], fe2.prototype, "highlightOptions", void 0), e2([y2({ readOnly: true })], fe2.prototype, "inputManager", void 0), e2([y2()], fe2.prototype, "map", void 0), e2([y2({ value: { top: 0, right: 0, bottom: 0, left: 0 }, cast: (e24) => ({ top: 0, right: 0, bottom: 0, left: 0, ...e24 }) })], fe2.prototype, "padding", null), e2([y2()], fe2.prototype, "resizeAlign", void 0), e2([y2({ readOnly: true, dependsOn: ["state.id"] })], fe2.prototype, "resolution", null), e2([y2({ value: 0, type: Number, dependsOn: ["state.id", "ready"] })], fe2.prototype, "rotation", null), e2([y2({ value: 0, type: Number, dependsOn: ["state.id", "ready"] })], fe2.prototype, "scale", null), e2([y2({ constructOnly: true })], fe2.prototype, "spatialReferenceLocked", void 0), e2([y2()], fe2.prototype, "stationary", null), e2([y2({ type: e11, readOnly: true })], fe2.prototype, "timeline", void 0), e2([y2({ readOnly: true })], fe2.prototype, "type", void 0), e2([y2({ readOnly: true })], fe2.prototype, "updating", null), e2([y2({ value: null, type: u4, dependsOn: ["state.id", "ready"] })], fe2.prototype, "viewpoint", null), e2([y2({ value: -1, dependsOn: ["state.id", "ready"] })], fe2.prototype, "zoom", null), e2([y2({ readOnly: true })], fe2.prototype, "navigating", null), e2([y2({ type: p32 })], fe2.prototype, "ui", void 0), fe2 = e2([a3("esri.views.MapView")], fe2);
var _e = fe2;
function ve(e24) {
  var _a, _b;
  const t32 = e24.getObjectId();
  return t32 ? `${((_a = e24.layer) == null ? void 0 : _a.uid) ?? ((_b = e24.sourceLayer) == null ? void 0 : _b.uid) ?? "MapView"}/${t32}` : `"MapView/${e24.uid}`;
}
function Ve(e24, i37, s29, r28, n32) {
  return (a36) => {
    if (a36 instanceof g3) {
      if (a36.layer === e24)
        n32 == null ? void 0 : n32();
      else {
        const t32 = e24.allLayerViews.find((e25) => e25.layer === a36.layer);
        t32 && (r28 == null ? void 0 : r28(t32));
      }
      s29(ve(a36));
    } else {
      const t32 = e24.allLayerViews.find((e25) => e25.layer === a36);
      t32 && i37(t32);
    }
  };
}
function Se(e24, t32) {
  if (e24)
    if (t2(e24))
      for (const i37 of e24)
        if (t2(i37))
          for (const e25 of i37)
            t32(e25);
        else
          t32(i37);
    else
      t32(e24);
}
function Te(e24) {
  return "esri.WebMap" === (e24 == null ? void 0 : e24.declaredClass);
}
export {
  _e as default
};
//# sourceMappingURL=@arcgis_core_views_MapView__js.js.map
