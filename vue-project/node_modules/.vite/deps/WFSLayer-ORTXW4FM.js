import {
  C as C2,
  D,
  W,
  X,
  z
} from "./chunk-E6WEN2WK.js";
import "./chunk-2755SAL2.js";
import "./chunk-L4NKCNNL.js";
import {
  l,
  o as o3
} from "./chunk-RGZRDYL7.js";
import "./chunk-T5ZE4H5E.js";
import "./chunk-MI7FJDLG.js";
import {
  c as c3
} from "./chunk-NQCDYIHT.js";
import {
  n as n3,
  p as p5
} from "./chunk-MXGJESZW.js";
import "./chunk-DNJQQSFB.js";
import "./chunk-XS5XP6X5.js";
import {
  s as s2
} from "./chunk-Z7AKZY4L.js";
import {
  C,
  i
} from "./chunk-RD6VLGGM.js";
import "./chunk-PVSQPGR7.js";
import {
  a as a3
} from "./chunk-Y4NY4HIB.js";
import "./chunk-2YEIG5KK.js";
import {
  o as o4
} from "./chunk-MR5AZ53H.js";
import {
  p as p4
} from "./chunk-Q7J3Z6A4.js";
import {
  x as x3
} from "./chunk-KCW42CAI.js";
import {
  u
} from "./chunk-B536ET7B.js";
import "./chunk-54NTLRPC.js";
import "./chunk-7HK5OJHH.js";
import {
  _
} from "./chunk-Y5U3GPYY.js";
import "./chunk-XFW76F64.js";
import {
  p as p2
} from "./chunk-TXZADL6E.js";
import {
  n
} from "./chunk-72FH64H2.js";
import {
  t
} from "./chunk-XSWH32P3.js";
import {
  c as c2
} from "./chunk-MR6MDWDW.js";
import {
  O
} from "./chunk-TGWKHDFY.js";
import {
  b
} from "./chunk-RLEK6TWZ.js";
import "./chunk-A3YQWDU2.js";
import "./chunk-7WIVOZQ6.js";
import "./chunk-RZLXFQKV.js";
import "./chunk-UBZEFQ76.js";
import "./chunk-D5KVII6M.js";
import "./chunk-G3ZCYHOR.js";
import "./chunk-RZNNSB7A.js";
import "./chunk-5Z6OHN6Z.js";
import "./chunk-TKZTELJQ.js";
import {
  c,
  d,
  f as f2,
  g,
  l as l2,
  m as m2,
  p
} from "./chunk-OXPHYLAY.js";
import "./chunk-JKIHHWKC.js";
import "./chunk-NBVRAQMU.js";
import "./chunk-BLEGKDS6.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-SU4IQNSG.js";
import {
  a as a2
} from "./chunk-ZUCPDNAU.js";
import "./chunk-A4GUE3HH.js";
import "./chunk-ZJBIBQFZ.js";
import "./chunk-HNMSCBZJ.js";
import {
  n as n2,
  p as p3
} from "./chunk-PVXAD5LL.js";
import "./chunk-IKDJIJNE.js";
import "./chunk-CZLGELTA.js";
import "./chunk-OIMP53SC.js";
import "./chunk-43D3HGVY.js";
import "./chunk-DZGHLWSV.js";
import "./chunk-P4V73ZOM.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import "./chunk-Y44VKGHM.js";
import "./chunk-266JJ3A2.js";
import "./chunk-GDTCKTOE.js";
import "./chunk-WPXKVF3K.js";
import "./chunk-EXVE3AJP.js";
import "./chunk-VEZKY6SV.js";
import "./chunk-Y74QPJ3T.js";
import "./chunk-OVUZXV2P.js";
import "./chunk-VTZGYKHD.js";
import "./chunk-MI3ZQEJV.js";
import "./chunk-HRIBADXS.js";
import "./chunk-GPWY2LRL.js";
import "./chunk-3ZZKMNU2.js";
import "./chunk-SXUQWH7K.js";
import "./chunk-WAUZFAX7.js";
import "./chunk-3JPUCMWK.js";
import "./chunk-GCXFCVSM.js";
import "./chunk-CU2KO5NT.js";
import "./chunk-EXL23DF3.js";
import {
  m
} from "./chunk-ECM7B2HV.js";
import "./chunk-L5JOPRWD.js";
import "./chunk-JYFMP3PO.js";
import "./chunk-CBAVHWPY.js";
import "./chunk-OJCBSPLX.js";
import "./chunk-EMRZKKP3.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-SQBJ6KPL.js";
import "./chunk-MKMLHQNH.js";
import "./chunk-PHPHIDTF.js";
import {
  L
} from "./chunk-P6SQPYDS.js";
import {
  k
} from "./chunk-SFT755VT.js";
import "./chunk-GWFG4NRK.js";
import {
  F,
  x as x4
} from "./chunk-YXFIF2O5.js";
import "./chunk-E4MAG7OK.js";
import "./chunk-YVQV6YXG.js";
import "./chunk-3KALZGFA.js";
import "./chunk-M47YTHQ5.js";
import "./chunk-OJKTPYH5.js";
import "./chunk-PEP3ZFMY.js";
import {
  x as x2
} from "./chunk-DXGYZ4HI.js";
import "./chunk-CKHNR7DG.js";
import {
  y as y2
} from "./chunk-FY3NCRRH.js";
import "./chunk-CIPSOFMY.js";
import "./chunk-3U7SS7RC.js";
import "./chunk-UHF3OUQV.js";
import "./chunk-6U5BQYRW.js";
import {
  o as o2
} from "./chunk-LUOENZ4F.js";
import "./chunk-QGRPG4XS.js";
import "./chunk-M73MMEC7.js";
import {
  f2 as f,
  w2 as w
} from "./chunk-A5CTLI5A.js";
import "./chunk-WUBKNERF.js";
import "./chunk-VACYSSCT.js";
import "./chunk-4HXSKBAW.js";
import "./chunk-FFQG5TD2.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-GLDJLPWH.js";
import {
  r as r2
} from "./chunk-GMLVDTS4.js";
import "./chunk-G7CHVXDR.js";
import "./chunk-OAZLVZFS.js";
import "./chunk-CPSZPA6H.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-Y54MR3BP.js";
import "./chunk-6VTYOWNK.js";
import {
  T
} from "./chunk-JY6H6KI3.js";
import {
  E,
  x
} from "./chunk-TTCQP5LX.js";
import {
  s2 as s
} from "./chunk-C2WY74GI.js";
import "./chunk-MCOYI7PX.js";
import "./chunk-EL4OGCJC.js";
import {
  has,
  o
} from "./chunk-XPATKIHO.js";
import "./chunk-MKHZ5X6F.js";
import {
  e as e2,
  r
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js
var F2 = class extends a2(m) {
  constructor() {
    super(...arguments), this._connection = null, this.capabilities = l(false, false), this.type = "wfs", this.refresh = x(async (e3) => {
      await this.load();
      const { extent: t2 } = await this._connection.invoke("refresh", e3);
      return t2 && (this.sourceJSON.extent = t2), { dataChanged: true, updates: { extent: this.sourceJSON.extent } };
    });
  }
  load(e3) {
    const t2 = r(e3) ? e3.signal : null;
    return this.addResolvingPromise(this._startWorker({ signal: t2 })), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  async openPorts() {
    return await this.load(), this._connection.openPorts();
  }
  async queryFeatures(e3, t2 = {}) {
    await this.load(t2);
    const r3 = await this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2);
    return x3.fromJSON(r3);
  }
  async queryFeaturesJSON(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2);
  }
  async queryFeatureCount(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatureCount", e3 ? e3.toJSON() : null, t2);
  }
  async queryObjectIds(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryObjectIds", e3 ? e3.toJSON() : null, t2);
  }
  async queryExtent(e3, t2 = {}) {
    await this.load(t2);
    const r3 = await this._connection.invoke("queryExtent", e3 ? e3.toJSON() : null, t2);
    return { count: r3.count, extent: w.fromJSON(r3.extent) };
  }
  async querySnapping(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("querySnapping", e3, t2);
  }
  async _createLoadOptions(e3) {
    var _a;
    const { url: r3, customParameters: o5, name: s3, namespaceUri: i2, spatialReference: n4, fields: c4, geometryType: p6, swapXY: l3 } = this.layer;
    if (!r3)
      throw new s("wfs-layer:missing-url", "WFSLayer must be created with a url");
    this.wfsCapabilities || (this.wfsCapabilities = await D(r3, { customParameters: o5, ...e3 }));
    const m3 = ["fields", "geometryType", "name", "namespaceUri", "spatialReference", "swapXY"].some((e4) => null == this.layer[e4]), y3 = m3 ? await X(this.wfsCapabilities, s3, i2, { spatialReference: n4, customParameters: o5, signal: e3 == null ? void 0 : e3.signal }) : { ...z(c4 ?? []), geometryType: p6, name: s3, namespaceUri: i2, spatialReference: n4, swapXY: l3 }, g2 = e2(W(this.wfsCapabilities.readFeatureTypes(), y3.name, y3.namespaceUri)), S = o2.toJSON(y3.geometryType);
    return { customParameters: o5, featureType: g2, fields: ((_a = y3.fields) == null ? void 0 : _a.map((e4) => e4.toJSON())) ?? [], geometryField: y3.geometryField, geometryType: S, getFeatureUrl: this.wfsCapabilities.operations.GetFeature.url, getFeatureOutputFormat: this.wfsCapabilities.operations.GetFeature.outputFormat, objectIdField: y3.objectIdField, spatialReference: y3.spatialReference.toJSON(), swapXY: !!y3.swapXY };
  }
  async _startWorker(e3) {
    const [t2, r3] = await E([this._createLoadOptions(e3), u("WFSSourceWorker", { ...e3, strategy: has("feature-layers-workers") ? "dedicated" : "local" })]), o5 = t2.error || r3.error || null, s3 = r3.value || null;
    if (o5)
      throw s3 && s3.close(), o5;
    const a4 = t2.value;
    this._connection = r3.value;
    const i2 = (await this._connection.invoke("load", a4, e3)).extent;
    this.sourceJSON = { extent: i2, fields: a4.fields, geometryType: a4.geometryType, objectIdField: a4.objectIdField, geometryField: a4.geometryField, drawingInfo: o3(a4.geometryType), name: a4.featureType.title, wfsInfo: { name: a4.featureType.name, featureUrl: a4.getFeatureUrl, maxFeatures: 3e3, swapXY: a4.swapXY, supportedSpatialReferences: a4.featureType.supportedSpatialReferences, version: "2.0.0", wfsNamespace: a4.featureType.namespaceUri } };
  }
};
e([y()], F2.prototype, "capabilities", void 0), e([y({ constructOnly: true })], F2.prototype, "layer", void 0), e([y()], F2.prototype, "sourceJSON", void 0), e([y()], F2.prototype, "type", void 0), e([y()], F2.prototype, "wfsCapabilities", void 0), F2 = e([a("esri.layers.graphics.sources.WFSSource")], F2);

// node_modules/@arcgis/core/layers/WFSLayer.js
var B;
var J = s2();
var M = B = class extends c3(o4(n3(p5(n(a3(p2(t(c2(_(O(b))))))))))) {
  static fromWFSLayerInfo(e3) {
    const { customParameters: r3, fields: t2, geometryField: i2, geometryType: o5, name: s3, namespaceUri: n4, objectIdField: p6, spatialReference: a4, swapXY: l3, url: d2, wfsCapabilities: m3 } = e3;
    return new B({ customParameters: r3, fields: t2, geometryField: i2, geometryType: o5, name: s3, namespaceUri: n4, objectIdField: p6, spatialReference: a4, swapXY: l3, url: d2, wfsCapabilities: m3 });
  }
  constructor(e3) {
    super(e3), this.copyright = null, this.customParameters = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.featureUrl = void 0, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "WFS", this.maxFeatures = 3e3, this.mode = 0, this.name = null, this.namespaceUri = null, this.outFields = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new F2({ layer: this }), this.spatialReference = f.WGS84, this.spatialReferences = [4326], this.swapXY = void 0, this.title = "WFS", this.type = "wfs", this.url = null, this.version = void 0;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e3) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WFS"] }, e3).then(() => this.source.load(e3)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo", "spatialReference", "name", "namespaceUri"], "service"), F(this.renderer, this.fieldsIndex), x4(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get capabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.capabilities;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  writeFields(e3, r3, t2) {
    const i2 = e3.filter((e4) => e4.name !== C2);
    this.geometryField && i2.unshift(new y2({ name: this.geometryField, alias: this.geometryField, type: "geometry" })), o(t2, i2.map((e4) => e4.toJSON()), r3);
  }
  get parsedUrl() {
    return L(this.url);
  }
  set renderer(e3) {
    F(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  get wfsCapabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.wfsCapabilities;
  }
  set wfsCapabilities(e3) {
    this.source && (this.source.wfsCapabilities = e3);
  }
  createPopupTemplate(e3) {
    return p4(this, e3);
  }
  createQuery() {
    const e3 = new x2();
    e3.returnGeometry = true, e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1";
    const { timeOffset: r3, timeExtent: t2 } = this;
    return e3.timeExtent = null != r3 && null != t2 ? t2.offset(-r3.value, r3.unit) : t2 || null, e3;
  }
  getFieldDomain(e3, r3) {
    var _a;
    return (_a = this.getField(e3)) == null ? void 0 : _a.domain;
  }
  getField(e3) {
    var _a;
    return (_a = this.fieldsIndex) == null ? void 0 : _a.get(e3);
  }
  queryFeatures(e3, r3) {
    return this.load().then(() => this.source.queryFeatures(x2.from(e3) || this.createQuery(), r3)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const r4 of e4.features)
          r4.layer = r4.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r3) {
    return this.load().then(() => this.source.queryObjectIds(x2.from(e3) || this.createQuery(), r3));
  }
  queryFeatureCount(e3, r3) {
    return this.load().then(() => this.source.queryFeatureCount(x2.from(e3) || this.createQuery(), r3));
  }
  queryExtent(e3, r3) {
    return this.load().then(() => this.source.queryExtent(x2.from(e3) || this.createQuery(), r3));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e3, updates: r3 } = await this.source.refresh(this.customParameters);
      return r(r3) && this.read(r3, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e3;
    } catch {
    }
    return false;
  }
};
e([y({ readOnly: true })], M.prototype, "capabilities", null), e([y({ type: String })], M.prototype, "copyright", void 0), e([y({ readOnly: true })], M.prototype, "createQueryVersion", null), e([y({ json: { name: "wfsInfo.customParameters", write: { overridePolicy: (e3) => ({ enabled: !!(e3 && Object.keys(e3).length > 0), ignoreOrigin: true }) } } })], M.prototype, "customParameters", void 0), e([y({ readOnly: true })], M.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], M.prototype, "definitionExpression", void 0), e([y({ type: String })], M.prototype, "displayField", void 0), e([y(d)], M.prototype, "elevationInfo", void 0), e([y({ type: String, readOnly: true, json: { name: "wfsInfo.featureUrl", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "featureUrl", void 0), e([y({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], M.prototype, "fields", void 0), e([r2("fields")], M.prototype, "writeFields", null), e([y(J.fieldsIndex)], M.prototype, "fieldsIndex", void 0), e([y({ type: w, json: { name: "extent" } })], M.prototype, "fullExtent", void 0), e([y()], M.prototype, "geometryField", void 0), e([y({ type: String, json: { read: { source: "layerDefinition.geometryType", reader: o2.read }, write: { target: "layerDefinition.geometryType", writer: o2.write, ignoreOrigin: true }, origins: { service: { read: o2.read } } } })], M.prototype, "geometryType", void 0), e([y({ type: String })], M.prototype, "id", void 0), e([y(m2)], M.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i }, write: true } })], M.prototype, "labelingInfo", void 0), e([y(c)], M.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], M.prototype, "listMode", void 0), e([y({ type: String })], M.prototype, "objectIdField", void 0), e([y({ type: ["WFS"] })], M.prototype, "operationalLayerType", void 0), e([y({ type: T, json: { name: "wfsInfo.maxFeatures", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "maxFeatures", void 0), e([y({ type: [0], readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true, isRequired: true } } } } })], M.prototype, "mode", void 0), e([y({ type: String, json: { name: "wfsInfo.name", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "name", void 0), e([y({ type: String, json: { name: "wfsInfo.wfsNamespace", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "namespaceUri", void 0), e([y(g)], M.prototype, "opacity", void 0), e([y(J.outFields)], M.prototype, "outFields", void 0), e([y({ readOnly: true })], M.prototype, "parsedUrl", null), e([y(p)], M.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], M.prototype, "popupTemplate", void 0), e([y({ types: p3, json: { origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n2, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: { ignoreOrigin: true } } })], M.prototype, "renderer", null), e([y(l2)], M.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], M.prototype, "source", void 0), e([y({ type: f, json: { name: "layerDefinition.spatialReference", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "extent.spatialReference" } } } })], M.prototype, "spatialReference", void 0), e([y({ readOnly: true, type: [T], json: { name: "wfsInfo.supportedSpatialReferences", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "spatialReferences", void 0), e([y({ type: Boolean, value: false, json: { name: "wfsInfo.swapXY", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "swapXY", void 0), e([y({ json: { write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "name" } } } })], M.prototype, "title", void 0), e([y({ json: { read: false }, readOnly: true })], M.prototype, "type", void 0), e([y(f2)], M.prototype, "url", void 0), e([y({ type: String, readOnly: true, json: { name: "wfsInfo.version", write: { ignoreOrigin: true, isRequired: true } } })], M.prototype, "version", void 0), e([y()], M.prototype, "wfsCapabilities", null), M = B = e([a("esri.layers.WFSLayer")], M);
var _2 = M;
export {
  _2 as default
};
//# sourceMappingURL=WFSLayer-ORTXW4FM.js.map
