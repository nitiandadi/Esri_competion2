import {
  S,
  a as a2
} from "./chunk-JC2ZOSGN.js";
import {
  n
} from "./chunk-H6BK7YGM.js";
import {
  v
} from "./chunk-H2YYXSNY.js";
import {
  a as a3
} from "./chunk-F4LSTMWS.js";
import "./chunk-UZ2MSG7E.js";
import {
  i as i2
} from "./chunk-JS5BBP66.js";
import "./chunk-VCVFTYST.js";
import {
  ae
} from "./chunk-XCS3TAXR.js";
import "./chunk-RF7QBWO2.js";
import "./chunk-LUJI6E4N.js";
import "./chunk-AQNLVOSU.js";
import "./chunk-VAKRQRV6.js";
import "./chunk-WSPTGWUV.js";
import "./chunk-FRHIREEO.js";
import "./chunk-4UIQ3FQB.js";
import "./chunk-TZVXXAQI.js";
import {
  f,
  u
} from "./chunk-B6QNIB4A.js";
import "./chunk-6ZJGGXFT.js";
import "./chunk-AATTIYMG.js";
import "./chunk-NKU7VSVT.js";
import "./chunk-CSXCA65Q.js";
import "./chunk-RPPTWDPP.js";
import "./chunk-ECBW37F4.js";
import "./chunk-RSRGRQCE.js";
import "./chunk-BTELXCWJ.js";
import "./chunk-HCWIAQV3.js";
import "./chunk-JEN3J6RC.js";
import "./chunk-UKMTP4AR.js";
import "./chunk-DEBYWO5M.js";
import "./chunk-37BTU2M3.js";
import "./chunk-ZKGXZZBF.js";
import "./chunk-WVAMROZV.js";
import "./chunk-VBBXLTF2.js";
import "./chunk-QXR6CWAU.js";
import "./chunk-EMUQ7G7L.js";
import "./chunk-46UYDOF4.js";
import "./chunk-E7Q7UFBO.js";
import "./chunk-ZZVUJ6NV.js";
import "./chunk-B4N37FMV.js";
import "./chunk-VGTB7JUJ.js";
import "./chunk-QARJUBJV.js";
import "./chunk-UNKGAJFQ.js";
import "./chunk-DJZ2IN55.js";
import "./chunk-E4XXNNS2.js";
import "./chunk-372CNO3V.js";
import "./chunk-LIDKQETZ.js";
import "./chunk-KKWP7B7A.js";
import {
  c
} from "./chunk-M7CYYMC4.js";
import "./chunk-DZUX232E.js";
import "./chunk-VVVUDKKQ.js";
import "./chunk-OGX6J3DJ.js";
import "./chunk-SX7NW3RK.js";
import "./chunk-RFBUNXCZ.js";
import "./chunk-PFMJX5Q6.js";
import "./chunk-S7QT5QV2.js";
import "./chunk-DJBFAFOP.js";
import "./chunk-QCYWXXBM.js";
import "./chunk-CCKR7UFK.js";
import "./chunk-DNXRTHCH.js";
import "./chunk-OGEJGMAT.js";
import "./chunk-FFQ74L2K.js";
import "./chunk-VQUDNY75.js";
import "./chunk-4S6QYDLW.js";
import "./chunk-6WFGRBCZ.js";
import "./chunk-QDIJO3T2.js";
import "./chunk-6N66PUXI.js";
import "./chunk-VMQMOFVW.js";
import "./chunk-6BFZPJCJ.js";
import "./chunk-7UNBIIZU.js";
import "./chunk-HERKGCCA.js";
import "./chunk-SB6UPWEY.js";
import "./chunk-HWMFYBFS.js";
import "./chunk-JFNJRNZX.js";
import "./chunk-EOF72YID.js";
import "./chunk-SXVHYYSN.js";
import "./chunk-3FNYVRHQ.js";
import "./chunk-66OCZHWI.js";
import {
  i
} from "./chunk-WDFAEPDG.js";
import "./chunk-XEFASELW.js";
import "./chunk-3JVZYYA3.js";
import "./chunk-MWIMWDJV.js";
import "./chunk-LUSFZCEU.js";
import "./chunk-2KKFAUOD.js";
import "./chunk-6VXAAN5J.js";
import "./chunk-M2DTCG2D.js";
import "./chunk-AVTBKAM2.js";
import "./chunk-GK4XSQTX.js";
import "./chunk-LT2MTVPF.js";
import "./chunk-3F26JL34.js";
import "./chunk-KEA4MCOH.js";
import "./chunk-E4FSIE7C.js";
import "./chunk-UZM66DAH.js";
import "./chunk-CFTD44JM.js";
import "./chunk-MI7FJDLG.js";
import "./chunk-BDRIBQHS.js";
import "./chunk-POASDJDE.js";
import "./chunk-UQVFVW24.js";
import "./chunk-FAQPWMFY.js";
import "./chunk-ARRABRN2.js";
import "./chunk-XKQGIVQO.js";
import "./chunk-2LQUYG3Y.js";
import "./chunk-7HK5OJHH.js";
import "./chunk-5XBZ477A.js";
import "./chunk-TKZTELJQ.js";
import {
  b
} from "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import "./chunk-QPSL5BDS.js";
import "./chunk-7WIVOZQ6.js";
import "./chunk-OXCMSIKI.js";
import "./chunk-HWGER6NN.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-ZXEHLMMH.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-G3ZCYHOR.js";
import "./chunk-F6Y6UABE.js";
import "./chunk-5W2WWLX7.js";
import "./chunk-IZJW67TO.js";
import "./chunk-JZSNGIOH.js";
import "./chunk-EXHPOUUQ.js";
import "./chunk-6PNW7TCI.js";
import "./chunk-6UZRMITW.js";
import "./chunk-HSDJ4PR2.js";
import {
  l
} from "./chunk-QP5ZWBKN.js";
import "./chunk-VSUGA5AN.js";
import "./chunk-E3JHIVZP.js";
import "./chunk-G3A2XEXX.js";
import "./chunk-JKBONAYS.js";
import "./chunk-YSJ4W32U.js";
import "./chunk-3EIJOCWD.js";
import "./chunk-HRIBADXS.js";
import "./chunk-CSFUQCFV.js";
import "./chunk-ZUIHAM2A.js";
import "./chunk-SABBLK7S.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-7FGYV4GW.js";
import "./chunk-CXHYHUY6.js";
import "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-UZTIVDTR.js";
import "./chunk-33RBBVRO.js";
import "./chunk-VWOAL3VX.js";
import "./chunk-II3EAW7L.js";
import "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import "./chunk-6XDV3BWZ.js";
import "./chunk-CH2BQDQT.js";
import "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-IMKS3PQX.js";
import "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-TZBBKXOW.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-FSB7TIRN.js";
import "./chunk-UIMO4FGN.js";
import "./chunk-NXJOIK2O.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import "./chunk-E4M4B5ZQ.js";
import "./chunk-JATK7CEQ.js";
import "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-RLEMMDH4.js";
import {
  j
} from "./chunk-6ZUWLK7F.js";
import {
  s2 as s
} from "./chunk-YVZY5LDV.js";
import "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var p = (p2) => {
  let a4 = class extends p2 {
    initialize() {
      this.exportImageParameters = new c({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get floors() {
      var _a;
      return ((_a = this.view) == null ? void 0 : _a.floors) ?? null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), this.commitProperty("floors"), (this._get("exportImageVersion") || 0) + 1;
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
  };
  return e([y()], a4.prototype, "exportImageParameters", void 0), e([y({ readOnly: true })], a4.prototype, "floors", null), e([y({ readOnly: true })], a4.prototype, "exportImageVersion", null), e([y()], a4.prototype, "layer", void 0), e([y()], a4.prototype, "suspended", void 0), e([y(b)], a4.prototype, "timeExtent", void 0), a4 = e([a("esri.views.layers.MapImageLayerView")], a4), a4;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var f2 = class extends p(i2(f(u))) {
  constructor() {
    super(...arguments), this._highlightGraphics = new i(), this._updateHash = "";
  }
  fetchPopupFeatures(t, e2) {
    return this._popupHighlightHelper.fetchPopupFeatures(t, e2);
  }
  update(t) {
    const r = `${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;
    this._updateHash !== r && (this._updateHash = r, this.strategy.update(t).catch((t2) => {
      j(t2) || s.getLogger(this.declaredClass).error(t2);
    }), t.stationary && this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)), this._highlightView.processUpdate(t);
  }
  attach() {
    const { imageMaxWidth: t, imageMaxHeight: e2, version: i3 } = this.layer, s2 = i3 >= 10.3, a4 = i3 >= 10;
    this._bitmapContainer = new a3(), this.container.addChild(this._bitmapContainer), this._highlightView = new ae({ view: this.view, graphics: this._highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new n(this.view.featuresTilingScheme), defaultPointSymbolEnabled: false }), this.container.addChild(this._highlightView.container), this._popupHighlightHelper = new S({ createFetchPopupFeaturesQueryGeometry: (t2, e3) => a2(t2, e3, this.view), highlightGraphics: this._highlightGraphics, highlightGraphicUpdated: (t2, e3) => {
      this._highlightView.graphicUpdateHandler({ graphic: t2, property: e3 });
    }, layerView: this, updatingHandles: this.updatingHandles }), this.strategy = new v({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: t, imageMaxHeight: e2, imageRotationSupported: s2, imageNormalizationSupported: a4, hidpi: true }), this.addAttachHandles(l(() => this.exportImageVersion, () => this.requestUpdate())), this.requestUpdate();
  }
  detach() {
    this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy(), this._popupHighlightHelper.destroy();
  }
  moveStart() {
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  supportsSpatialReference(t) {
    return this.layer.serviceSupportsSpatialReference(t);
  }
  async doRefresh() {
    this._updateHash = "", this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  fetchImage(t, e2, i3, r) {
    return this.layer.fetchImage(t, e2, i3, { timeExtent: this.timeExtent, floors: this.floors, ...r });
  }
  fetchImageBitmap(t, e2, i3, r) {
    return this.layer.fetchImageBitmap(t, e2, i3, { timeExtent: this.timeExtent, floors: this.floors, ...r });
  }
  highlight(t) {
    return this._popupHighlightHelper.highlight(t);
  }
};
e([y()], f2.prototype, "strategy", void 0), e([y()], f2.prototype, "updating", void 0), f2 = e([a("esri.views.2d.layers.MapImageLayerView2D")], f2);
var w = f2;
export {
  w as default
};
//# sourceMappingURL=MapImageLayerView2D-XTHQVX27.js.map
