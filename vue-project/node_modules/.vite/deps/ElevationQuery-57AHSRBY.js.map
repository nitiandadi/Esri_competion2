{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/ElevationSampler.js", "../../@arcgis/core/layers/support/ElevationSamplerData.js", "../../@arcgis/core/layers/support/ElevationTile.js", "../../@arcgis/core/layers/support/ElevationQuery.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport\"../../geometry.js\";import\"../../core/has.js\";import e from\"../../core/Logger.js\";import{isNone as t,unwrapOr as n}from\"../../core/maybe.js\";import{getMetersPerUnitForSR as s}from\"../../core/unitUtils.js\";import{toExtent as i,containsXY as o,create as a}from\"../../geometry/support/aaBoundingRect.js\";import{project as r}from\"../../geometry/support/webMercatorUtils.js\";import l from\"../../geometry/Point.js\";const m=e.getLogger(\"esri.layers.support.ElevationSampler\");class c{queryElevation(e){return h(e.clone(),this)}on(){return g}projectIfRequired(e,t){return f(e,t)}}class u extends c{get spatialReference(){return this.extent.spatialReference}constructor(e,t,n){super(),this.tile=e,this.noDataValue=n;const o=e.tile.extent;this.extent=i(o,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=o;const a=s(t.spatialReference),r=t.lodAt(e.tile.level).resolution*a;this.demResolution={min:r,max:r}}contains(e){const n=this.projectIfRequired(e,this.spatialReference);return!t(n)&&this.containsAt(n.x,n.y)}containsAt(e,t){return o(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const n=this.extent,s=`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;return m.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return n(this.tile.sample(e,t),this.noDataValue)}}class p extends c{get spatialReference(){return this.extent.spatialReference}constructor(e,t,n){let s;super(),\"number\"==typeof t?(this.noDataValue=t,s=null):(s=t,this.noDataValue=n),this.samplers=s?e.map((e=>new u(e,s,this.noDataValue))):e;const o=this.samplers[0];if(o){this.extent=o.extent.clone();const{min:e,max:t}=o.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=i(a(),s.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const n of this.samplers)if(n.containsAt(e,t))return n.elevationAt(e,t);return m.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function h(e,t){const n=f(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":x(e,n,t);break;case\"polyline\":R(e,n,t);break;case\"multipoint\":d(e,n,t)}return e}function f(e,n){if(t(e))return null;const s=e.spatialReference;if(s.equals(n))return e;const i=r(e,n);return i||m.error(`Cannot project geometry spatial reference (wkid:${s.wkid}) to elevation sampler spatial reference (wkid:${n.wkid})`),i}function x(e,t,n){e.z=n.elevationAt(t.x,t.y)}function R(e,t,n){y.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],a=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=a[e];y.x=i[0],y.y=i[1],s&&(t[3]=t[2]),t[2]=n.elevationAt(y.x,y.y)}}e.hasZ=!0}function d(e,t,n){y.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],a=t.points[i];y.x=a[0],y.y=a[1],s&&(o[3]=o[2]),o[2]=n.elevationAt(y.x,y.y)}e.hasZ=!0}const y=new l,g={remove(){}};export{c as ElevationSamplerBase,p as MultiTileElevationSampler,u as TileElevationSampler,h as updateGeometryElevation};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nclass t{constructor(t,h){this.data=t,this.safeWidth=.99999999*(t.width-1),this.dx=(t.width-1)/(h[2]-h[0]),this.dy=(t.width-1)/(h[3]-h[1]),this.x0=h[0],this.y1=h[3]}}export{t as ElevationSamplerData};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport{isSome as a,isNone as t}from\"../../core/maybe.js\";import{ElevationSamplerData as e}from\"./ElevationSamplerData.js\";class r{constructor(t,r=null){if(this.tile=t,a(r)&&a(t)){const a=t.extent;this._samplerData=new e(r,a)}}get zmin(){return a(this._samplerData)?this._samplerData.data.minValue:0}get zmax(){return a(this._samplerData)?this._samplerData.data.maxValue:0}sample(a,e){if(t(this._samplerData))return;const{safeWidth:r,data:i,dx:l,dy:m,y1:n,x0:o}=this._samplerData,{width:h,values:p,noDataValue:u}=i,f=s(m*(n-e),0,r),D=s(l*(a-o),0,r),c=Math.floor(f),d=Math.floor(D),_=c*h+d,x=_+h,y=p[_],V=p[x],g=p[_+1],j=p[x+1];if(y!==u&&V!==u&&g!==u&&j!==u){const a=D-d,t=y+(g-y)*a;return t+(V+(j-V)*a-t)*(f-c)}}}function s(a,t,e){return a<t?t:a>e?e:a}export{r as ElevationTile};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\r\n*/\r\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i,isNone as s,isSome as n}from\"../../core/maybe.js\";import{whenOrAbort as o,throwIfAbortError as l,eachAlways as a}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as r}from\"../../core/unitUtils.js\";import c from\"../../geometry/Multipoint.js\";import u from\"../../geometry/Point.js\";import h from\"../../geometry/Polyline.js\";import{initializeProjection as p,project as m}from\"../../geometry/projection.js\";import{fromExtent as f,create as d,contains as y}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as T}from\"./ElevationSampler.js\";import{ElevationTile as v}from\"./ElevationTile.js\";import{TileKey as w}from\"./TileKey.js\";class g{async queryAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const n=x.fromGeometry(i);let o=!1;s&&s.returnSampleInfo||(o=!0);const l={...A,...s,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,i,s){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const n={...A,...s},o=new R(e,i.spatialReference,n),l=n.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(o,i,l),await this._selectTiles(o,l),await this._populateElevationTiles(o,l),this._sampleGeometryWithElevation(o),this._createQueryResult(o,l)}async createSampler(e,i,s){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...A,...s};return this._createSampler(e,i,n)}async createSamplerAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...A,...s,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],i,n);return this._createSamplerAllContinue(e,i,o,n)}async _createSampler(e,t,i,s){const n=i.signal;await e.load({signal:n});const o=t.spatialReference,l=e.tileInfo.spatialReference;o.equals(l)||(await p([{source:o,dest:l}],{signal:n}),t=m(t,l));const a=new q(e,t,i,s);return await this._selectTiles(a,n),await this._populateElevationTiles(a,n),new T(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map((e=>f(e.extent))),o=await this._createSampler(e[e.length-1],t,s,n);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new T(l,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,s){const n=e.pop(),o=t.geometry.coordinates,l=t.sampleInfo;i(l);const a=[],r=[];for(let i=0;i<o.length;i++){const t=l[i];t.demResolution>=0?t.source||(t.source=n):e.length&&(a.push(o[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,s),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{o[e].z=u.geometry.coordinates[t].z,l[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);i(s);const n={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),n}async _createGeometryDescriptor(e,i,s){let n;const o=e.layer.tileInfo.spatialReference;if(i instanceof x?n=await i.project(o,s):(await p([{source:i.spatialReference,dest:o}],{signal:s}),n=m(i,o)),!n)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=x.fromGeometry(n)}async _selectTiles(e,i){const s=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof s)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===s)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==s)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${s}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(s(e.layer.fullExtent))return;const t=new v(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const s=e.x,n=e.y;(s<i.xmin||s>i.xmax||n<i.ymin||n>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/r(e.spatialReference);let s=e.lods[0],n=0;for(let o=1;o<e.lods.length;o++){const t=e.lods[o];Math.abs(t.resolution-i)<Math.abs(s.resolution-i)&&(s=t,n=o)}return n}async _selectTilesFinestContiguous(e,t){const i=I(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,s){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await o(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},l=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{if(null==i.id)return;const o=`${e.layer.uid}:${i.id}:${r}`,a=n(l)?l.get(o):null,c=n(a)?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});n(l)&&l.put(o,c),s[i.id]=new v(i,c)}));await o(a(c),t),e.populateElevationTiles(s)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const n=new w(null,0,0,0,d()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await o(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=e=>{null!=e.id&&(e.id in s?s[e.id]++:(s[e.id]=1,i++))},o=e=>{if(null==e.id)return;const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1};e.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(o(s),t.upsampleTile(s)&&(l=!0),n(s))}),o),l););}_selectTilesAutoFinest(e){const t=I(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?s=!0:t()})),s&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);n(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=r(t.spatialReference);return e.geometry.coordinates.map((s=>{let n=-1;if(s.elevationTile&&s.elevationTile!==e.outsideExtentTile){n=t.lodAt(s.elevationTile.tile.level).resolution*i}return{demResolution:n}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await p([{source:this.spatialReference,dest:e}],{signal:t});const i=new c({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),s=m(i,e);if(!s)return null;const n=this.coordinates.map(((e,t)=>{const i=e.clone(),n=s.points[t];return i.x=n[0],i.y=n[1],i})),o=this.clone(n);return o.spatialReference=e,o}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case\"point\":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?[new _(i.x,i.y,i.z,i.m)]:s?[new _(i.x,i.y,i.z)]:n?[new _(i.x,i.y,null,i.m)]:[new _(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new u(t[0].x,t[0].y,t[0].z,t[0].m,i):new u(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?i.points.map((e=>new _(e[0],e[1],e[2],e[3]))):s?i.points.map((e=>new _(e[0],e[1],e[2]))):n?i.points.map((e=>new _(e[0],e[1],null,e[2]))):i.points.map((e=>new _(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new c({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new c(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,s=[],n=[],{hasZ:o,hasM:l}=e;let a=0;for(const e of i.paths)if(n.push([a,a+e.length]),a+=e.length,o&&l)for(const t of e)s.push(new _(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)s.push(new _(t[0],t[1],t[2]));else if(l)for(const t of e)s.push(new _(t[0],t[1],null,t[2]));else for(const t of e)s.push(new _(t[0],t[1]));t.coordinates=s,t._exporter=(t,i)=>{const s=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),o=n.map((e=>s.slice(e[0],e[1])));return new h({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class _{constructor(e,t,i=null,s=null,n=null,o=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=n,this.elevationTile=o}clone(){return new _(this.x,this.y,this.z,this.m)}}class E{constructor(e,t){this.layer=e,this.options=t}}class R extends E{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>{e.tile=null}));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;if(!s)continue;const n=i.tile?.id;i.elevationTile||!n||e[n]||(e[n]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class q extends E{constructor(e,t,i,s){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(s(i))return-1;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],o=n.resolution*t.size[0],l=n.resolution*t.size[1];if(Math.ceil(i.width/o)*Math.ceil(i.height/l)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const o of e){const e=o.id;e&&!i[e]?(i[e]=o,s.push(o)):t&&t(o)}const n=s.sort(((e,t)=>e.level-t.level));return n.filter(((e,i)=>{for(let s=0;s<i;s++){const i=n[s].extent;if(i&&e.extent&&y(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(s(t))return;const i=this.layer.tileInfo,n=i.lods[e],o=i.tileAt(n.level,t.xmin,t.ymin),l=o.extent;if(s(l))return;const a=n.resolution*i.size[0],r=n.resolution*i.size[1],c=Math.ceil((t.xmax-l[0])/a),u=Math.ceil((t.ymax-l[1])/r);for(let s=0;s<u;s++)for(let e=0;e<c;e++){const t=new w(null,o.level,o.row-s,o.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&y(t,e.extent)))}}function I(e,t=0){let i=e.lods.length-1;if(t>0){const s=t/r(e.spatialReference),n=e.lods.findIndex((e=>e.resolution<s));0===n?i=0:n>0&&(i=n-1)}return i}const A={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{g as ElevationQuery,x as GeometryDescriptor,I as getFinestLodIndex};\r\n"],
  "mappings": "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",
  "names": ["m", "c", "t", "f", "u", "r", "w", "s", "e", "n", "R", "i", "y", "t", "h", "r", "t", "i", "l", "m", "h", "p", "u", "f", "s", "c", "d", "_", "x", "y", "g", "a", "g", "i", "s", "e", "x", "l", "r", "R", "t", "c", "u", "h", "n", "w", "o", "E"]
}
