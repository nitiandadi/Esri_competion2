import {
  m,
  p as p2
} from "./chunk-A3HP4ESO.js";
import {
  s
} from "./chunk-RDTHWDIE.js";
import {
  o
} from "./chunk-M4BAPJ3L.js";
import {
  s as s2
} from "./chunk-QXPN4D5D.js";
import {
  l
} from "./chunk-KGIB6IYW.js";
import {
  a2 as a,
  e,
  y3 as y
} from "./chunk-3PPVODAA.js";
import {
  T
} from "./chunk-PXVSWY3C.js";
import {
  p
} from "./chunk-PR6SXADK.js";

// node_modules/@arcgis/core/renderers/support/AuthoringInfoClassBreakInfo.js
var t;
var p3 = t = class extends l {
  constructor(r) {
    super(r), this.minValue = 0, this.maxValue = 0;
  }
  clone() {
    return new t({ minValue: this.minValue, maxValue: this.maxValue });
  }
};
e([y({ type: Number, json: { write: true } })], p3.prototype, "minValue", void 0), e([y({ type: Number, json: { write: true } })], p3.prototype, "maxValue", void 0), p3 = t = e([a("esri.renderer.support.AuthoringInfoClassBreakInfo")], p3);

// node_modules/@arcgis/core/renderers/support/AuthoringInfoFieldInfo.js
var n;
var p4 = n = class extends l {
  constructor(o2) {
    super(o2), this.field = "", this.normalizationField = "", this.label = "", this.classBreakInfos = [];
  }
  clone() {
    return new n({ field: this.field, normalizationField: this.normalizationField, label: this.label, classBreakInfos: p(this.classBreakInfos) });
  }
};
e([y({ type: String, json: { write: true } })], p4.prototype, "field", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "normalizationField", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "label", void 0), e([y({ type: [p3], json: { write: true } })], p4.prototype, "classBreakInfos", void 0), p4 = n = e([a("esri.renderers.support.AuthoringInfoFieldInfo")], p4);

// node_modules/@arcgis/core/renderers/support/AuthoringInfoVisualVariable.js
var n2;
var l2 = new s2({ percentTotal: "percent-of-total", ratio: "ratio", percent: "percent" });
var p5 = new s2({ sizeInfo: "size", colorInfo: "color", transparencyInfo: "opacity", rotationInfo: "rotation" });
var a2 = { key: (e2) => "number" == typeof e2 ? "number" : "string", typeMap: { number: Number, string: String }, base: null };
var u = ["high-to-low", "above-and-below", "centered-on", "extremes"];
var m2 = [.../* @__PURE__ */ new Set([...["high-to-low", "above-and-below", "centered-on", "extremes", "90-10", "above", "below"], ...["high-to-low", "above-and-below", "90-10", "above", "below"]])];
var y2 = ["seconds", "minutes", "hours", "days", "months", "years"];
var d = n2 = class extends l {
  constructor(e2) {
    super(e2), this.endTime = null, this.field = null, this.maxSliderValue = null, this.minSliderValue = null, this.startTime = null, this.type = null, this.units = null;
  }
  castEndTime(e2) {
    return "string" == typeof e2 || "number" == typeof e2 ? e2 : null;
  }
  castStartTime(e2) {
    return "string" == typeof e2 || "number" == typeof e2 ? e2 : null;
  }
  get style() {
    return "color" === this.type ? this._get("style") : null;
  }
  set style(e2) {
    this._set("style", e2);
  }
  get theme() {
    return "color" === this.type || "size" === this.type ? this._get("theme") || "high-to-low" : null;
  }
  set theme(e2) {
    this._set("theme", e2);
  }
  clone() {
    return new n2({ endTime: this.endTime, field: this.field, maxSliderValue: this.maxSliderValue, minSliderValue: this.minSliderValue, startTime: this.startTime, style: this.style, theme: this.theme, type: this.type, units: this.units });
  }
};
e([y({ types: a2, json: { write: true } })], d.prototype, "endTime", void 0), e([s("endTime")], d.prototype, "castEndTime", null), e([y({ type: String, json: { write: true } })], d.prototype, "field", void 0), e([y({ type: Number, json: { write: true } })], d.prototype, "maxSliderValue", void 0), e([y({ type: Number, json: { write: true } })], d.prototype, "minSliderValue", void 0), e([y({ types: a2, json: { write: true } })], d.prototype, "startTime", void 0), e([s("startTime")], d.prototype, "castStartTime", null), e([y({ type: l2.apiValues, value: null, json: { type: l2.jsonValues, read: l2.read, write: l2.write } })], d.prototype, "style", null), e([y({ type: m2, value: null, json: { type: m2, origins: { "web-scene": { type: u, write: { writer: (e2, t2) => {
  u.includes(e2) && (t2.theme = e2);
} } } }, write: true } })], d.prototype, "theme", null), e([y({ type: p5.apiValues, json: { type: p5.jsonValues, read: p5.read, write: p5.write } })], d.prototype, "type", void 0), e([y({ type: y2, json: { type: y2, write: true } })], d.prototype, "units", void 0), d = n2 = e([a("esri.renderers.support.AuthoringInfoVisualVariable")], d);
var h = d;

// node_modules/@arcgis/core/renderers/support/AuthoringInfo.js
var c;
var h2 = new s2({ esriClassifyDefinedInterval: "defined-interval", esriClassifyEqualInterval: "equal-interval", esriClassifyManual: "manual", esriClassifyNaturalBreaks: "natural-breaks", esriClassifyQuantile: "quantile", esriClassifyStandardDeviation: "standard-deviation" });
var y3 = new s2({ pieChart: "pie-chart", classedSize: "class-breaks-size", classedColor: "class-breaks-color", univariateColorSize: "univariate-color-size", relationship: "relationship", predominance: "predominance", dotDensity: "dot-density", flow: "flow" });
var m3 = new s2({ classedSize: "class-breaks-size", classedColor: "class-breaks-color", univariateColorSize: "univariate-color-size", relationship: "relationship", predominance: "predominance", dotDensity: "dot-density" });
var f = ["inches", "feet", "yards", "miles", "nautical-miles", "millimeters", "centimeters", "decimeters", "meters", "kilometers", "decimal-degrees"];
var v = ["high-to-low", "above-and-below", "above", "below", "90-10"];
var w = ["flow-line", "wave-front"];
var b = ["caret", "circle-caret", "arrow", "circle-arrow", "plus-minus", "circle-plus-minus", "square", "circle", "triangle", "happy-sad", "thumb", "custom"];
var g = c = class extends l {
  constructor(e2) {
    super(e2), this.colorRamp = null, this.fadeRatio = null, this.isAutoGenerated = false, this.lengthUnit = null, this.maxSliderValue = null, this.minSliderValue = null, this.visualVariables = null;
  }
  get classificationMethod() {
    const e2 = this._get("classificationMethod"), t2 = this.type;
    return t2 && "relationship" !== t2 ? "class-breaks-size" === t2 || "class-breaks-color" === t2 ? e2 || "manual" : null : e2;
  }
  set classificationMethod(e2) {
    this._set("classificationMethod", e2);
  }
  readColorRamp(e2) {
    return e2 ? p2(e2) : void 0;
  }
  get fields() {
    return this.type && "predominance" !== this.type ? null : this._get("fields");
  }
  set fields(e2) {
    this._set("fields", e2);
  }
  get field1() {
    return this.type && "relationship" !== this.type ? null : this._get("field1");
  }
  set field1(e2) {
    this._set("field1", e2);
  }
  get field2() {
    return this.type && "relationship" !== this.type ? null : this._get("field2");
  }
  set field2(e2) {
    this._set("field2", e2);
  }
  get flowTheme() {
    return "flow" === this.type ? this._get("flowTheme") : null;
  }
  set flowTheme(e2) {
    this._set("flowTheme", e2);
  }
  get focus() {
    return this.type && "relationship" !== this.type ? null : this._get("focus");
  }
  set focus(e2) {
    this._set("focus", e2);
  }
  get numClasses() {
    return this.type && "relationship" !== this.type ? null : this._get("numClasses");
  }
  set numClasses(e2) {
    this._set("numClasses", e2);
  }
  get statistics() {
    return "univariate-color-size" === this.type && "above-and-below" === this.univariateTheme ? this._get("statistics") : null;
  }
  set statistics(e2) {
    this._set("statistics", e2);
  }
  get standardDeviationInterval() {
    const e2 = this.type;
    return e2 && "relationship" !== e2 && "class-breaks-size" !== e2 && "class-breaks-color" !== e2 || this.classificationMethod && "standard-deviation" !== this.classificationMethod ? null : this._get("standardDeviationInterval");
  }
  set standardDeviationInterval(e2) {
    this._set("standardDeviationInterval", e2);
  }
  get type() {
    return this._get("type");
  }
  set type(e2) {
    let t2 = e2;
    "classed-size" === e2 ? t2 = "class-breaks-size" : "classed-color" === e2 && (t2 = "class-breaks-color"), this._set("type", t2);
  }
  get univariateSymbolStyle() {
    return "univariate-color-size" === this.type && "above-and-below" === this.univariateTheme ? this._get("univariateSymbolStyle") : null;
  }
  set univariateSymbolStyle(e2) {
    this._set("univariateSymbolStyle", e2);
  }
  get univariateTheme() {
    return "univariate-color-size" === this.type ? this._get("univariateTheme") : null;
  }
  set univariateTheme(e2) {
    this._set("univariateTheme", e2);
  }
  clone() {
    return new c({ classificationMethod: this.classificationMethod, colorRamp: p(this.colorRamp), fadeRatio: p(this.fadeRatio), fields: this.fields && this.fields.slice(0), field1: p(this.field1), field2: p(this.field2), isAutoGenerated: this.isAutoGenerated, focus: this.focus, numClasses: this.numClasses, maxSliderValue: this.maxSliderValue, minSliderValue: this.minSliderValue, lengthUnit: this.lengthUnit, statistics: this.statistics, standardDeviationInterval: this.standardDeviationInterval, type: this.type, visualVariables: this.visualVariables && this.visualVariables.map((e2) => e2.clone()), univariateSymbolStyle: this.univariateSymbolStyle, univariateTheme: this.univariateTheme, flowTheme: this.flowTheme });
  }
};
e([y({ type: h2.apiValues, value: null, json: { type: h2.jsonValues, read: h2.read, write: h2.write, origins: { "web-document": { default: "manual", type: h2.jsonValues, read: h2.read, write: h2.write } } } })], g.prototype, "classificationMethod", null), e([y({ types: m, json: { write: true } })], g.prototype, "colorRamp", void 0), e([o("colorRamp")], g.prototype, "readColorRamp", null), e([y({ json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "fadeRatio", void 0), e([y({ type: [String], value: null, json: { write: true } })], g.prototype, "fields", null), e([y({ type: p4, value: null, json: { write: true } })], g.prototype, "field1", null), e([y({ type: p4, value: null, json: { write: true } })], g.prototype, "field2", null), e([y({ type: w, value: null, json: { write: true, origins: { "web-scene": { write: false } } } })], g.prototype, "flowTheme", null), e([y({ type: ["HH", "HL", "LH", "LL"], value: null, json: { write: true } })], g.prototype, "focus", null), e([y({ type: Boolean, json: { write: true, default: false, origins: { "web-scene": { write: false } } } })], g.prototype, "isAutoGenerated", void 0), e([y({ type: Number, value: null, json: { type: T, write: true } })], g.prototype, "numClasses", null), e([y({ type: f, json: { type: f, read: false, write: false, origins: { "web-scene": { read: true, write: true } } } })], g.prototype, "lengthUnit", void 0), e([y({ type: Number, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "maxSliderValue", void 0), e([y({ type: Number, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "minSliderValue", void 0), e([y({ type: Object, value: null, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], g.prototype, "statistics", null), e([y({ type: [0.25, 0.33, 0.5, 1], value: null, json: { type: [0.25, 0.33, 0.5, 1], write: true } })], g.prototype, "standardDeviationInterval", null), e([y({ type: y3.apiValues, value: null, json: { type: y3.jsonValues, read: y3.read, write: y3.write, origins: { "web-scene": { type: m3.jsonValues, write: { writer: m3.write, overridePolicy: (e2) => ({ enabled: "flow" !== e2 }) } } } } })], g.prototype, "type", null), e([y({ type: [h], json: { write: true } })], g.prototype, "visualVariables", void 0), e([y({ type: b, value: null, json: { write: true, origins: { "web-scene": { write: false } } } })], g.prototype, "univariateSymbolStyle", null), e([y({ type: v, value: null, json: { write: true, origins: { "web-scene": { write: false } } } })], g.prototype, "univariateTheme", null), g = c = e([a("esri.renderers.support.AuthoringInfo")], g);
var j = g;

export {
  j
};
//# sourceMappingURL=chunk-KGIL42MH.js.map
