import {
  A,
  C,
  F,
  I,
  P,
  R,
  T as T2,
  b as b3,
  c as c3,
  d as d2,
  f as f2,
  g as g3,
  h,
  j as j3,
  m as m4,
  p as p8,
  q,
  w as w4,
  y as y4,
  y2 as y5
} from "./chunk-BDQPPSKZ.js";
import {
  n as n5
} from "./chunk-6ZICJ4HF.js";
import {
  t as t5
} from "./chunk-6N2I7LNE.js";
import {
  e as e2
} from "./chunk-ED3H44RD.js";
import {
  i as i4
} from "./chunk-52DUL4NM.js";
import {
  p as p6
} from "./chunk-NNXHBH3J.js";
import {
  c as c4
} from "./chunk-2S24CH2D.js";
import {
  n as n6,
  p as p7
} from "./chunk-WPPPGUVX.js";
import {
  s as s4
} from "./chunk-A2JI2KMD.js";
import {
  n as n7
} from "./chunk-4YR3FESC.js";
import {
  p as p9
} from "./chunk-UWJ3NERY.js";
import {
  C as C2,
  i as i5
} from "./chunk-VEBWU4PY.js";
import {
  n as n4,
  o as o3,
  p as p4,
  p2 as p5
} from "./chunk-OO5RYTED.js";
import {
  a2 as a5,
  v as v4
} from "./chunk-VGIPOM7J.js";
import {
  o as o4
} from "./chunk-VV4LINSF.js";
import {
  p as p10
} from "./chunk-FDEQGLCU.js";
import {
  T
} from "./chunk-MEYRAFYY.js";
import {
  u as u2
} from "./chunk-5VG7Q6SY.js";
import {
  i as i3
} from "./chunk-W55YAZ7T.js";
import {
  a as a4
} from "./chunk-DGWYZRQH.js";
import {
  x as x2
} from "./chunk-J6WWDJVY.js";
import {
  v as v5
} from "./chunk-NBE2OON5.js";
import {
  _
} from "./chunk-KJ3RR72T.js";
import {
  p as p3
} from "./chunk-ITOWSLB4.js";
import {
  n as n2
} from "./chunk-WIR7P2UT.js";
import {
  t as t4
} from "./chunk-N44T6V5D.js";
import {
  c as c2
} from "./chunk-NCRISAUE.js";
import {
  S,
  c,
  g,
  l,
  m as m3,
  p as p2,
  v as v3
} from "./chunk-RDMK4OP2.js";
import {
  O
} from "./chunk-3MIQEU54.js";
import {
  t as t3
} from "./chunk-MSSVX4MF.js";
import {
  b as b2
} from "./chunk-RSFKYEWD.js";
import {
  x
} from "./chunk-G6COWIFJ.js";
import {
  r as r3
} from "./chunk-QF2PMVYK.js";
import {
  K
} from "./chunk-L6EWR437.js";
import {
  a as a3
} from "./chunk-PELFA5QO.js";
import {
  d,
  w as w3,
  y as y3
} from "./chunk-HZKQDRDV.js";
import {
  g as g2
} from "./chunk-NUSLMJR5.js";
import {
  M,
  j2
} from "./chunk-QX5IKXT7.js";
import {
  n as n3
} from "./chunk-WAN4YZSB.js";
import {
  m as m2
} from "./chunk-TNQLNDIQ.js";
import {
  m
} from "./chunk-5CMPUNQG.js";
import {
  U
} from "./chunk-QJXSE36Y.js";
import {
  L,
  V
} from "./chunk-M3KO43BW.js";
import {
  k
} from "./chunk-JT4JPYB6.js";
import {
  j,
  n
} from "./chunk-SZO7ZKE4.js";
import {
  i
} from "./chunk-YMLMMCYX.js";
import {
  F as F2,
  x as x3
} from "./chunk-6TTVNN6M.js";
import {
  i as i2
} from "./chunk-MJFFZ3MM.js";
import {
  v2
} from "./chunk-FC74MT6E.js";
import {
  f2 as f,
  r as r2,
  w2
} from "./chunk-H2ENCYR3.js";
import {
  o as o2
} from "./chunk-SVHG5VY2.js";
import {
  s as s3
} from "./chunk-S47644HM.js";
import {
  a2,
  e,
  t2,
  u2 as u,
  v2 as v,
  y3 as y2
} from "./chunk-7GTATSRF.js";
import {
  b
} from "./chunk-PXVSWY3C.js";
import {
  w,
  y
} from "./chunk-QLY5H3XF.js";
import {
  s,
  s2
} from "./chunk-UG2OEDEE.js";
import {
  has,
  o,
  p
} from "./chunk-PR6SXADK.js";
import {
  a,
  r,
  t
} from "./chunk-WHB7G7RI.js";

// node_modules/@arcgis/core/layers/graphics/sources/MemorySource.js
var b4 = 0;
var T3 = "esri.layers.graphics.sources.MemorySource";
var F3 = s.getLogger(T3);
var G = class extends m2.LoadableMixin(m(a3(j))) {
  constructor(e4) {
    super(e4), this._idToClientGraphic = null, this.type = "memory";
  }
  load(e4) {
    const t6 = r(e4) ? e4.signal : null;
    return this.addResolvingPromise(this._startWorker(t6)), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  get _workerGeometryType() {
    var _a;
    const e4 = (_a = this.layer) == null ? void 0 : _a.geometryType;
    return e4 ? this._geometryTypeRequiresClientGraphicMapping(e4) ? "polygon" : e4 : null;
  }
  applyEdits(e4) {
    return this.load().then(() => this._applyEdits(e4));
  }
  openPorts() {
    return this.load().then(() => this._connection.openPorts());
  }
  async queryFeatures(e4, t6 = {}) {
    await this.load(t6);
    const r4 = await this._connection.invoke("queryFeatures", e4 ? e4.toJSON() : null, t6);
    r3(e4, this.layer.spatialReference, r4);
    const s5 = x2.fromJSON(r4);
    if (!this._requiresClientGraphicMapping())
      return s5;
    const o6 = this.layer.objectIdField;
    for (const i7 of s5.features) {
      const e5 = i7.attributes[o6], t7 = this._idToClientGraphic.get(e5);
      t7 && (i7.geometry = t7.geometry);
    }
    return s5.geometryType = this.layer.geometryType, s5;
  }
  async queryFeaturesJSON(e4, t6 = {}) {
    if (this._requiresClientGraphicMapping())
      throw new s2("query-features-json:unsupported", "Cannot query in JSON format for client only geometry types (mesh and extent)");
    await this.load(t6);
    const r4 = await this._connection.invoke("queryFeatures", e4 ? e4.toJSON() : null, t6);
    return r3(e4, this.layer.spatialReference, r4), r4;
  }
  queryFeatureCount(e4, t6 = {}) {
    return this.load(t6).then(() => this._connection.invoke("queryFeatureCount", e4 ? e4.toJSON() : null, t6));
  }
  queryObjectIds(e4, t6 = {}) {
    return this.load(t6).then(() => this._connection.invoke("queryObjectIds", e4 ? e4.toJSON() : null, t6));
  }
  queryExtent(e4, t6 = {}) {
    return this.load(t6).then(() => this._connection.invoke("queryExtent", e4 ? e4.toJSON() : null, t6)).then((e5) => ({ count: e5.count, extent: w2.fromJSON(e5.extent) }));
  }
  querySnapping(e4, t6 = {}) {
    return this.load(t6).then(() => this._connection.invoke("querySnapping", e4, t6));
  }
  async _applyEdits(e4) {
    if (!this._connection)
      throw new s2("feature-layer-source:edit-failure", "Memory source not loaded");
    const t6 = this.layer.objectIdField;
    let r4 = null;
    const o6 = [], i7 = [];
    await Promise.all([this._prepareClientMapping(e4.addFeatures, null), this._prepareClientMapping(e4.updateFeatures, null)]);
    const n8 = (e5) => "objectId" in e5 && null != e5.objectId ? e5.objectId : "attributes" in e5 && null != e5.attributes[t6] ? e5.attributes[t6] : null;
    if (e4.addFeatures && (r4 = this._prepareAddFeatures(e4.addFeatures)), e4.deleteFeatures)
      for (const s5 of e4.deleteFeatures) {
        const e5 = n8(s5);
        null != e5 && o6.push(e5);
      }
    const a6 = e4.updateFeatures && this._idToClientGraphic ? /* @__PURE__ */ new Map() : null;
    if (e4.updateFeatures) {
      for (const s5 of e4.updateFeatures)
        if (i7.push(this._serializeFeature(s5)), a6) {
          const e5 = n8(s5);
          null != e5 && a6.set(e5, s5);
        }
    }
    i3(r4 ? r4.features : null, i7, this.layer.spatialReference);
    const { fullExtent: l2, featureEditResults: u4 } = await this._connection.invoke("applyEdits", { adds: r4 ? r4.features : [], updates: i7, deletes: o6 });
    return this.fullExtent = l2, r4 && r4.finish(u4.uidToObjectId), this._updateClientGraphicIds(a6, u4), this._createEditsResult(u4);
  }
  async _prepareClientMapping(e4, t6) {
    if ("mesh" !== this._layerOrSourceGeometryType || t(e4))
      return;
    const r4 = [];
    for (const { geometry: s5 } of e4)
      !r(s5) || "mesh" !== s5.type || s5.hasExtent || s5.loaded || r4.push(s5.load({ signal: t6 }));
    r4.length && await Promise.all(r4);
  }
  _updateClientGraphicIds(e4, t6) {
    if (this._idToClientGraphic) {
      if (e4)
        for (const r4 of t6.updateResults) {
          if (!r4.success)
            continue;
          const t7 = e4.get(r4.objectId);
          null != t7 && this._addIdToClientGraphic(t7);
        }
      for (const e5 of t6.deleteResults)
        e5.success && this._idToClientGraphic.delete(e5.objectId);
    }
  }
  _createEditsResult(e4) {
    return { addFeatureResults: e4.addResults ? e4.addResults.map(this._createFeatureEditResult, this) : [], updateFeatureResults: e4.updateResults ? e4.updateResults.map(this._createFeatureEditResult, this) : [], deleteFeatureResults: e4.deleteResults ? e4.deleteResults.map(this._createFeatureEditResult, this) : [], addAttachmentResults: [], updateAttachmentResults: [], deleteAttachmentResults: [] };
  }
  _createFeatureEditResult(e4) {
    const t6 = true === e4.success ? null : e4.error || { code: void 0, description: void 0 };
    return { objectId: e4.objectId, globalId: e4.globalId, error: t6 ? new s2("feature-layer-source:edit-failure", t6.description, { code: t6.code }) : null };
  }
  _prepareAddFeatures(e4) {
    const t6 = /* @__PURE__ */ new Map(), r4 = new Array(e4.length);
    let s5 = null;
    for (let i7 = 0; i7 < e4.length; i7++) {
      const o7 = e4[i7], n8 = this._serializeFeature(o7);
      !s5 && r(o7.geometry) && (s5 = o7.geometry.type), r4[i7] = n8, t6.set(`${n8.uid}`, o7);
    }
    const o6 = this;
    return { features: r4, inferredGeometryType: s5, finish(e5) {
      const r5 = o6.sourceJSON.objectIdField;
      for (const s6 in e5) {
        const i7 = e5[s6], n8 = t6.get(s6);
        n8 && (n8.attributes || (n8.attributes = {}), -1 === i7 ? delete n8.attributes[r5] : n8.attributes[r5] = i7, o6._addIdToClientGraphic(n8));
      }
    } };
  }
  _addIdToClientGraphic(e4) {
    if (!this._idToClientGraphic)
      return;
    const t6 = this.sourceJSON.objectIdField, r4 = e4.attributes && e4.attributes[t6];
    null != r4 && this._idToClientGraphic.set(r4, e4);
  }
  get _layerOrSourceGeometryType() {
    var _a, _b;
    return ((_a = this.layer) == null ? void 0 : _a.geometryType) ?? ((_b = this.sourceJSON) == null ? void 0 : _b.geometryType);
  }
  _requiresClientGraphicMapping() {
    return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType);
  }
  _geometryRequiresClientGraphicMapping(e4) {
    return this._geometryTypeRequiresClientGraphicMapping(e4.type);
  }
  _geometryTypeRequiresClientGraphicMapping(e4) {
    return "mesh" === e4 || "multipatch" === e4 || "extent" === e4;
  }
  _serializeFeature(e4) {
    const { attributes: t6 } = e4, r4 = this._geometryForSerialization(e4), s5 = (b4++).toString();
    return r4 ? { uid: s5, geometry: r4.toJSON(), attributes: t6 } : { uid: s5, attributes: t6 };
  }
  _geometryForSerialization(e4) {
    const { geometry: t6 } = e4;
    if (t(t6))
      return null;
    if (this._geometryRequiresClientGraphicMapping(t6)) {
      return t6.extent ? v2.fromExtent(t6.extent) : null;
    }
    return t6;
  }
  async _startWorker(e4) {
    this._connection = await u2("MemorySourceWorker", { strategy: has("feature-layers-workers") ? "dedicated" : "local", signal: e4 });
    const { fields: t6, spatialReference: r4, objectIdField: s5, hasM: o6, hasZ: i7, timeInfo: n8 } = this.layer, a6 = "defaults" === this.layer.originOf("spatialReference");
    await this._prepareClientMapping(this.items, e4);
    const l2 = this._prepareAddFeatures(this.items);
    this.handles.add(this.on("before-changes", (e5) => {
      F3.error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"), e5.preventDefault();
    }));
    const u4 = { features: l2.features, fields: t6 && t6.map((e5) => e5.toJSON()), geometryType: i2.toJSON(this._workerGeometryType), hasM: "mesh" !== this._layerOrSourceGeometryType && o6, hasZ: "mesh" === this._layerOrSourceGeometryType || i7, objectIdField: s5, spatialReference: a6 ? null : r4 && r4.toJSON(), timeInfo: n8 ? n8.toJSON() : null }, c5 = await this._connection.invoke("load", u4, { signal: e4 });
    for (const p12 of c5.warnings)
      F3.warn(p12.message, { layer: this.layer, warning: p12 });
    c5.featureErrors.length && F3.warn(`Encountered ${c5.featureErrors.length} validation errors while loading features`, c5.featureErrors);
    const d3 = c5.layerDefinition;
    this._geometryTypeRequiresClientGraphicMapping(l2.inferredGeometryType) && (d3.geometryType = i2.toJSON(l2.inferredGeometryType)), this.sourceJSON = d3, this._requiresClientGraphicMapping() && (this._idToClientGraphic = /* @__PURE__ */ new Map()), l2.finish(c5.assignedObjectIds);
  }
};
e([n({ Type: g2, ensureType: b(g2) })], G.prototype, "itemType", void 0), e([y2()], G.prototype, "type", void 0), e([y2({ constructOnly: true })], G.prototype, "layer", void 0), e([y2({ readOnly: true })], G.prototype, "_workerGeometryType", null), e([y2()], G.prototype, "sourceJSON", void 0), G = e([a2(T3)], G);

// node_modules/@arcgis/core/layers/support/PublishingInfo.js
var e3 = class extends v {
  constructor() {
    super(...arguments), this.updating = false, this.status = "unknown";
  }
};
e([y2()], e3.prototype, "updating", void 0), e([y2()], e3.prototype, "status", void 0), e3 = e([a2("esri.layers.support.PublishingInfo")], e3);
var p11 = e3;

// node_modules/@arcgis/core/layers/mixins/PublishableLayer.js
var o5 = "esri.layers.mixins.PublishableLayer";
var i6 = Symbol(o5);
var u3 = (n8) => {
  var u4;
  let c5 = class extends n8 {
    constructor() {
      super(...arguments), this[u4] = true;
    }
    get publishingInfo() {
      if (this.destroyed)
        return null;
      const t6 = this._get("publishingInfo");
      if (t6)
        return t6;
      const s5 = new p11();
      return this._checkPublishingStatus(s5), s5;
    }
    _checkPublishingStatus(t6) {
      const s5 = 250, e4 = 125;
      let r4 = 0;
      const o6 = async (s6) => {
        let n9;
        t6.updating = true;
        try {
          n9 = await this.fetchPublishingStatus();
        } catch (u5) {
          n9 = "unavailable";
        }
        "published" !== n9 && "unavailable" !== n9 || ("publishing" === t6.status && this.refresh(), i7.remove()), t6.status = n9, t6.updating = false, i7.removed || (r4 = setTimeout(o6, s6, s6 + e4));
      }, i7 = { removed: false, remove() {
        this.removed = true, clearTimeout(r4);
      } };
      this.when().catch(() => i7.remove()), o6(s5), this.own(i7);
    }
  };
  return u4 = i6, e([y2({ readOnly: true, clonable: false })], c5.prototype, "publishingInfo", null), c5 = e([a2(o5)], c5), c5;
};

// node_modules/@arcgis/core/layers/FeatureLayer.js
var Ne = "FeatureLayer";
var Ge = "esri.layers.FeatureLayer";
var Je = s.getLogger(Ge);
function $e(e4, r4) {
  return new s2("layer:unsupported", `Layer (${e4.title}, ${e4.id}) of type '${e4.declaredClass}' ${r4}`, { layer: e4 });
}
function We(e4) {
  return e4 && e4 instanceof j;
}
var Be = s4();
function ze(e4, r4, t6) {
  const i7 = !!(t6 == null ? void 0 : t6.writeLayerSchema);
  return { enabled: i7, ignoreOrigin: i7 };
}
var Ze = class extends T2(n6(p7(u3(a4(n2(c4(a5(t4(p3(p6(c2(_(O(o4(i4(i(b2))))))))))))))))) {
  constructor(...e4) {
    super(...e4), this._handles = new t2(), this.charts = null, this.copyright = null, this.displayField = null, this.dynamicDataSource = null, this.fields = null, this.fieldsIndex = null, this.formTemplate = null, this.fullExtent = null, this.geometryType = null, this.hasM = void 0, this.hasZ = void 0, this.infoFor3D = null, this.isTable = false, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.outFields = null, this.path = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.spatialReference = f.WGS84, this.subtypeCode = null, this.templates = null, this.timeInfo = null, this.title = null, this.sublayerTitleMode = "item-title", this.type = "feature", this.typeIdField = null, this.types = null, this.visible = true;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy(), this._handles = a(this._handles);
  }
  normalizeCtorArgs(e4, r4) {
    return "string" == typeof e4 ? { url: e4, ...r4 } : e4;
  }
  load(e4) {
    var _a;
    const r4 = r(e4) ? e4.signal : null;
    if (((_a = this.portalItem) == null ? void 0 : _a.loaded) && this.source)
      return this.addResolvingPromise(this.createGraphicsSource(r4).then((e5) => this.initLayerProperties(e5))), Promise.resolve(this);
    const t6 = this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection"] }, e4).catch(w).then(async () => {
      if (this.url && null == this.layerId && /FeatureServer|MapServer\/*$/i.test(this.url)) {
        const e5 = await this._fetchFirstLayerId(r4);
        null != e5 && (this.layerId = e5);
      }
      if (!this.url && !this._hasMemorySource())
        throw new s2("feature-layer:missing-url-or-source", "Feature layer must be created with either a url or a source");
      return this.initLayerProperties(await this.createGraphicsSource(r4));
    }).then(() => this._setUserPrivileges(this.serviceItemId, e4)).then(() => R(this, e4));
    return this.addResolvingPromise(t6), Promise.resolve(this);
  }
  readCapabilities(e4, r4) {
    return r4 = r4.layerDefinition || r4, n5(r4, this.url);
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("dynamicDataSource"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("gdbVersion"), this.commitProperty("historicMoment"), this.commitProperty("returnZ"), this.commitProperty("capabilities"), this.commitProperty("returnM"), (this._get("createQueryVersion") ?? 0) + 1;
  }
  get editingEnabled() {
    var _a;
    return !(this.loaded && !((_a = this.capabilities) == null ? void 0 : _a.operations.supportsEditing)) && (this._isOverridden("editingEnabled") ? this._get("editingEnabled") : this._hasMemorySource() || this.userHasEditingPrivileges);
  }
  set editingEnabled(e4) {
    this._overrideIfSome("editingEnabled", e4);
  }
  readEditingEnabled(e4, r4) {
    return this._readEditingEnabled(r4, false);
  }
  readEditingEnabledFromWebMap(e4, r4, t6) {
    return this._readEditingEnabled(r4, true, t6);
  }
  writeEditingEnabled(e4, r4) {
    this._writeEditingEnabled(e4, r4, false);
  }
  writeEditingEnabledToWebMap(e4, r4, t6, i7) {
    this._writeEditingEnabled(e4, r4, true, i7);
  }
  get effectiveEditingEnabled() {
    return C(this);
  }
  readIsTable(e4, r4) {
    return "Table" === (r4 = (r4 == null ? void 0 : r4.layerDefinition) ?? r4).type || !r4.geometryType;
  }
  writeIsTable(e4, r4, t6, i7) {
    (i7 == null ? void 0 : i7.writeLayerSchema) && o(t6, e4 ? "Table" : "Feature Layer", r4);
  }
  readGlobalIdField(e4, r4) {
    return P(r4.layerDefinition || r4);
  }
  readObjectIdField(e4, r4) {
    return A(r4.layerDefinition || r4);
  }
  get parsedUrl() {
    const e4 = L(this.url);
    return null != e4 && (null != this.dynamicDataSource ? e4.path = V(e4.path, "dynamicLayer") : null != this.layerId && (e4.path = V(e4.path, this.layerId.toString()))), e4;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e4) {
    F2(e4, this.fieldsIndex), this._set("renderer", e4);
  }
  readRenderer(e4, r4, s5) {
    var _a;
    const a6 = (_a = (r4 = r4.layerDefinition || r4).drawingInfo) == null ? void 0 : _a.renderer;
    if (a6) {
      const e5 = o3(a6, r4, s5) ?? void 0;
      return e5 || Je.error("Failed to create renderer", { rendererDefinition: r4.drawingInfo.renderer, layer: this, context: s5 }), e5;
    }
    if (r4.defaultSymbol)
      return r4.types && r4.types.length ? new T({ defaultSymbol: ke(r4.defaultSymbol, r4, s5), field: r4.typeIdField, uniqueValueInfos: r4.types.map((e5) => ({ id: e5.id, symbol: ke(e5.symbol, e5, s5) })) }) : new p4({ symbol: ke(r4.defaultSymbol, r4, s5) });
  }
  set source(e4) {
    const r4 = this._get("source");
    r4 !== e4 && (We(r4) && this._resetMemorySource(r4), We(e4) && this._initMemorySource(e4), this._set("source", e4));
  }
  castSource(e4) {
    return e4 ? Array.isArray(e4) || e4 instanceof j ? new G({ layer: this, items: e4 }) : e4 : null;
  }
  readSource(e4, r4) {
    const t6 = x2.fromJSON(r4.featureSet);
    return new G({ layer: this, items: (t6 == null ? void 0 : t6.features) ?? [] });
  }
  readTemplates(e4, r4) {
    const t6 = r4.editFieldsInfo, i7 = t6 && t6.creatorField, o6 = t6 && t6.editorField;
    return e4 = e4 && e4.map((e5) => p9.fromJSON(e5)), this._fixTemplates(e4, i7), this._fixTemplates(e4, o6), e4;
  }
  readTitle(e4, r4) {
    var _a;
    const t6 = ((_a = r4.layerDefinition) == null ? void 0 : _a.name) ?? r4.name, i7 = r4.title || r4.layerDefinition && r4.layerDefinition.title;
    if (t6) {
      const e5 = this.portalItem && this.portalItem.title;
      if ("item-title" === this.sublayerTitleMode)
        return this.url ? y3(this.url, t6) : t6;
      let r5 = t6;
      if (!r5 && this.url) {
        const e6 = d(this.url);
        r(e6) && (r5 = e6.title);
      }
      if (!r5)
        return;
      return "item-title-and-service-name" === this.sublayerTitleMode && e5 && e5 !== r5 && (r5 = e5 + " - " + r5), w3(r5);
    }
    if ("item-title" === this.sublayerTitleMode && i7)
      return i7;
  }
  readTitleFromWebMap(e4, r4) {
    return r4.title || r4.layerDefinition && r4.layerDefinition.name;
  }
  readTypeIdField(e4, r4) {
    let t6 = (r4 = r4.layerDefinition || r4).typeIdField;
    if (t6 && r4.fields) {
      t6 = t6.toLowerCase();
      const e5 = r4.fields.find((e6) => e6.name.toLowerCase() === t6);
      e5 && (t6 = e5.name);
    }
    return t6;
  }
  readTypes(e4, r4) {
    e4 = (r4 = r4.layerDefinition || r4).types;
    const t6 = r4.editFieldsInfo, i7 = t6 && t6.creatorField, o6 = t6 && t6.editorField;
    return e4 && e4.map((e5) => (e5 = n7.fromJSON(e5), this._fixTemplates(e5.templates, i7), this._fixTemplates(e5.templates, o6), e5));
  }
  readVisible(e4, r4) {
    return r4.layerDefinition && null != r4.layerDefinition.defaultVisibility ? !!r4.layerDefinition.defaultVisibility : null != r4.visibility ? !!r4.visibility : void 0;
  }
  async addAttachment(e4, r4) {
    return p8(this, e4, r4, Ne);
  }
  async updateAttachment(e4, r4, t6) {
    return y5(this, e4, r4, t6, Ne);
  }
  async applyEdits(e4, r4) {
    return d2(this, e4, r4);
  }
  on(e4, r4) {
    return super.on(e4, r4);
  }
  createPopupTemplate(e4) {
    return p10(this, e4);
  }
  async createGraphicsSource(e4) {
    if (this._hasMemorySource() && this.source)
      return this.source.load({ signal: e4 });
    const { default: r4 } = await y(import("./FeatureLayerSource-NLAK6QIT.js"), e4);
    return new r4({ layer: this }).load({ signal: e4 });
  }
  createQuery() {
    const e4 = I(this);
    e4.dynamicDataSource = this.dynamicDataSource;
    const r4 = r(this.subtypeCode) ? `${this.subtypeField} = ${this.subtypeCode}` : null, t6 = t5(this.definitionExpression, r4);
    return e4.where = t6 || "1=1", e4;
  }
  async deleteAttachments(e4, r4) {
    return f2(this, e4, r4, Ne);
  }
  async fetchRecomputedExtents(e4) {
    return m4(this, e4, Ne);
  }
  getFeatureType(e4) {
    const { typeIdField: r4, types: t6 } = this;
    if (!r4 || !e4)
      return null;
    const i7 = e4.attributes ? e4.attributes[r4] : void 0;
    if (null == i7)
      return null;
    let o6 = null;
    return t6 == null ? void 0 : t6.some((e5) => {
      const { id: r5 } = e5;
      return null != r5 && (r5.toString() === i7.toString() && (o6 = e5), !!o6);
    }), o6;
  }
  getFieldDomain(e4, r4) {
    const t6 = r4 && r4.feature, i7 = this.getFeatureType(t6);
    if (i7) {
      const r5 = i7.domains && i7.domains[e4];
      if (r5 && "inherited" !== r5.type)
        return r5;
    }
    return this._getLayerDomain(e4);
  }
  getField(e4) {
    return this.fieldsIndex.get(e4);
  }
  async queryAttachments(e4, r4) {
    return h(this, e4, r4, Ne);
  }
  async queryFeatures(e4, r4) {
    const t6 = await this.load(), i7 = await t6.source.queryFeatures(x.from(e4) ?? t6.createQuery(), r4);
    if (i7 == null ? void 0 : i7.features)
      for (const o6 of i7.features)
        o6.layer = o6.sourceLayer = t6;
    return i7;
  }
  async queryObjectIds(e4, r4) {
    return w4(this, e4, r4, Ne);
  }
  async queryFeatureCount(e4, r4) {
    return b3(this, e4, r4, Ne);
  }
  async queryExtent(e4, r4) {
    return g3(this, e4, r4, Ne);
  }
  async queryRelatedFeatures(e4, r4) {
    return q(this, e4, r4, Ne);
  }
  async queryRelatedFeaturesCount(e4, r4) {
    return j3(this, e4, r4, Ne);
  }
  async queryTopFeatures(e4, r4) {
    var _a;
    const { source: t6, capabilities: i7 } = await this.load();
    if (!t6.queryTopFeatures || !((_a = i7 == null ? void 0 : i7.query) == null ? void 0 : _a.supportsTopFeaturesQuery))
      throw new s2(Ne, "Layer source does not support queryTopFeatures capability");
    const o6 = await t6.queryTopFeatures(v5.from(e4), r4);
    if (o6 == null ? void 0 : o6.features)
      for (const s5 of o6.features)
        s5.layer = s5.sourceLayer = this;
    return o6;
  }
  async queryTopObjectIds(e4, r4) {
    const { source: t6, capabilities: i7 } = await this.load();
    if (!t6.queryTopObjectIds || !(i7 == null ? void 0 : i7.query.supportsTopFeaturesQuery))
      throw new s2(Ne, "Layer source does not support queryTopObjectIds capability");
    return t6.queryTopObjectIds(v5.from(e4), r4);
  }
  async queryTopFeaturesExtent(e4, r4) {
    var _a;
    const { source: t6, capabilities: i7 } = await this.load();
    if (!t6.queryTopExtents || !((_a = i7 == null ? void 0 : i7.query) == null ? void 0 : _a.supportsTopFeaturesQuery))
      throw new s2(Ne, "Layer source does not support queryTopExtents capability");
    return t6.queryTopExtents(v5.from(e4), r4);
  }
  async queryTopFeatureCount(e4, r4) {
    var _a;
    const { source: t6, capabilities: i7 } = await this.load();
    if (!t6.queryTopCount || !((_a = i7 == null ? void 0 : i7.query) == null ? void 0 : _a.supportsTopFeaturesQuery))
      throw new s2(Ne, "Layer source does not support queryFeatureCount capability");
    return t6.queryTopCount(v5.from(e4), r4);
  }
  read(e4, r4) {
    const t6 = e4.featureCollection;
    if (t6) {
      const e5 = t6.layers;
      e5 && 1 === e5.length && (super.read(e5[0], r4), null != t6.showLegend && super.read({ showLegend: t6.showLegend }, r4));
    }
    super.read(e4, r4), r4 && "service" === r4.origin && (this.revert(["objectIdField", "fields", "timeInfo"], "service"), this.spatialReference || this.revert(["spatialReference"], "service"));
  }
  write(e4, r4) {
    r4 = { ...r4, origin: (r4 == null ? void 0 : r4.origin) ?? void 0, writeLayerSchema: (r4 == null ? void 0 : r4.writeLayerSchema) ?? this._hasMemorySource() };
    const { origin: t6, layerContainerType: i7, messages: o6 } = r4;
    if (this.dynamicDataSource)
      return o6 == null ? void 0 : o6.push($e(this, "using a dynamic data source cannot be written to web scenes, web maps and feature service items")), null;
    if (this.isTable) {
      if ("web-scene" === t6 || "web-map" === t6 && "tables" !== i7)
        return o6 == null ? void 0 : o6.push($e(this, "using a table source cannot be written to web scenes and web maps")), null;
      if (this._hasMemorySource())
        return o6 == null ? void 0 : o6.push($e(this, "using an in-memory table source cannot be written to web scenes and web maps")), null;
    } else if (this.loaded && "web-map" === t6 && "tables" === i7)
      return o6 == null ? void 0 : o6.push($e(this, "using a non-table source cannot be written to tables in web maps")), null;
    return super.write(e4, r4);
  }
  clone() {
    if (this._hasMemorySource())
      throw new s2(Ne, `FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);
    return super.clone();
  }
  serviceSupportsSpatialReference(e4) {
    var _a;
    return !!this.loaded && ("memory" === ((_a = this.source) == null ? void 0 : _a.type) || e2(this, e4));
  }
  async save(e4) {
    return (await import("./featureLayerUtils-HFCKBUVF.js")).save(this, e4);
  }
  async saveAs(e4, r4) {
    return (await import("./featureLayerUtils-HFCKBUVF.js")).saveAs(this, e4, r4);
  }
  _readEditingEnabled(e4, r4, t6) {
    var _a;
    let i7 = (_a = e4.layerDefinition) == null ? void 0 : _a.capabilities;
    return i7 ? this._hasEditingCapability(i7) : (i7 = e4.capabilities, r4 && "web-map" === (t6 == null ? void 0 : t6.origin) && !this._hasMemorySource() && i7 ? this._hasEditingCapability(i7) : void 0);
  }
  _hasEditingCapability(e4) {
    return e4.toLowerCase().split(",").map((e5) => e5.trim()).includes("editing");
  }
  _writeEditingEnabled(e4, r4, t6, i7) {
    var _a, _b;
    if (!e4) {
      const e5 = ((_b = (_a = this.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsSync) ? "Query,Sync" : "Query";
      o("layerDefinition.capabilities", e5, r4), t6 && !(i7 == null ? void 0 : i7.writeLayerSchema) && (r4.capabilities = e5);
    }
  }
  _getLayerDomain(e4) {
    const r4 = this.fieldsIndex.get(e4);
    return r4 ? r4.domain : null;
  }
  _fetchFirstLayerId(e4) {
    return U(this.url, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e4 }).then((e5) => {
      const r4 = e5.data;
      if (r4)
        return Array.isArray(r4.layers) && r4.layers.length > 0 ? r4.layers[0].id : Array.isArray(r4.tables) && r4.tables.length > 0 ? r4.tables[0].id : void 0;
    });
  }
  async initLayerProperties(e4) {
    var _a;
    return this._set("source", e4), e4.sourceJSON && (this.sourceJSON = e4.sourceJSON, this.read(e4.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_a = this.portalItem) == null ? void 0 : _a.portal, url: this.parsedUrl })), this._verifySource(), this._verifyFields(), F2(this.renderer, this.fieldsIndex), x3(this.timeInfo, this.fieldsIndex), t3(this, { origin: "service" });
  }
  async hasDataChanged() {
    return F(this);
  }
  async fetchPublishingStatus() {
    const e4 = this.source;
    return (e4 == null ? void 0 : e4.fetchPublishingStatus) ? e4.fetchPublishingStatus() : "unavailable";
  }
  _verifyFields() {
    var _a, _b;
    const e4 = ((_a = this.parsedUrl) == null ? void 0 : _a.path) ?? "undefined";
    this.objectIdField || console.log("FeatureLayer: 'objectIdField' property is not defined (url: " + e4 + ")"), this.isTable || this._hasMemorySource() || -1 !== e4.search(/\/FeatureServer\//i) || ((_b = this.fields) == null ? void 0 : _b.some((e5) => "geometry" === e5.type)) || console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: " + e4 + ")");
  }
  _fixTemplates(e4, r4) {
    e4 && e4.forEach((e5) => {
      const t6 = e5.prototype && e5.prototype.attributes;
      t6 && r4 && delete t6[r4];
    });
  }
  _verifySource() {
    if (this._hasMemorySource()) {
      if (this.url)
        throw new s2("feature-layer:mixed-source-and-url", "FeatureLayer cannot be created with both an in-memory source and a url");
    } else if (!this.url)
      throw new s2("feature-layer:source-or-url-required", "FeatureLayer requires either a url, a valid portal item or a source");
  }
  _initMemorySource(e4) {
    e4.forEach((e5) => {
      e5.layer = this, e5.sourceLayer = this;
    }), this._handles.add([e4.on("after-add", (e5) => {
      e5.item.layer = this, e5.item.sourceLayer = this;
    }), e4.on("after-remove", (e5) => {
      e5.item.layer = null, e5.item.sourceLayer = null;
    })], "fl-source");
  }
  _resetMemorySource(e4) {
    e4.forEach((e5) => {
      e5.layer = null, e5.sourceLayer = null;
    }), this._handles.remove("fl-source");
  }
  _hasMemorySource() {
    return !(this.url || !this.source);
  }
};
e([o2("service", "capabilities")], Ze.prototype, "readCapabilities", null), e([y2({ json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], Ze.prototype, "charts", void 0), e([y2({ readOnly: true })], Ze.prototype, "createQueryVersion", null), e([y2({ json: { read: { source: "layerDefinition.copyrightText" } } })], Ze.prototype, "copyright", void 0), e([y2({ json: { read: { source: "layerDefinition.displayField" } } })], Ze.prototype, "displayField", void 0), e([y2({ types: j2, readOnly: true })], Ze.prototype, "defaultSymbol", void 0), e([y2({ type: K })], Ze.prototype, "dynamicDataSource", void 0), e([y2({ type: Boolean })], Ze.prototype, "editingEnabled", null), e([o2(["portal-item", "web-scene"], "editingEnabled", ["layerDefinition.capabilities"])], Ze.prototype, "readEditingEnabled", null), e([o2("web-map", "editingEnabled", ["capabilities", "layerDefinition.capabilities"])], Ze.prototype, "readEditingEnabledFromWebMap", null), e([r2(["portal-item", "web-scene"], "editingEnabled", { "layerDefinition.capabilities": { type: String } })], Ze.prototype, "writeEditingEnabled", null), e([r2("web-map", "editingEnabled", { capabilities: { type: String }, "layerDefinition.capabilities": { type: String } })], Ze.prototype, "writeEditingEnabledToWebMap", null), e([y2({ readOnly: true })], Ze.prototype, "effectiveEditingEnabled", null), e([y2({ ...Be.fields, json: { read: { source: "layerDefinition.fields" }, origins: { service: { name: "fields" }, "web-map": { write: { target: "layerDefinition.fields", overridePolicy: ze } } } } })], Ze.prototype, "fields", void 0), e([y2(Be.fieldsIndex)], Ze.prototype, "fieldsIndex", void 0), e([y2({ type: y4, json: { name: "formInfo", write: true, origins: { "web-scene": { read: false, write: false } } } })], Ze.prototype, "formTemplate", void 0), e([y2({ json: { read: { source: "layerDefinition.extent" } } })], Ze.prototype, "fullExtent", void 0), e([y2({ json: { origins: { "web-map": { write: { target: "layerDefinition.geometryType", overridePolicy: ze, writer(e4, r4, t6) {
  const i7 = e4 ? c3.toJSON(e4) : null;
  i7 && o(t6, i7, r4);
} } } }, read: { source: "layerDefinition.geometryType", reader: c3.read } } })], Ze.prototype, "geometryType", void 0), e([y2({ json: { read: { source: "layerDefinition.hasM" } } })], Ze.prototype, "hasM", void 0), e([y2({ json: { read: { source: "layerDefinition.hasZ" } } })], Ze.prototype, "hasZ", void 0), e([y2(v3)], Ze.prototype, "id", void 0), e([y2({ readOnly: true, json: { origins: { service: { read: true } }, read: false } })], Ze.prototype, "infoFor3D", void 0), e([y2({ json: { origins: { "web-map": { write: { target: "layerDefinition.type" } } } } })], Ze.prototype, "isTable", void 0), e([o2("service", "isTable", ["type", "geometryType"]), o2("isTable", ["layerDefinition.type", "layerDefinition.geometryType"])], Ze.prototype, "readIsTable", null), e([r2("web-map", "isTable")], Ze.prototype, "writeIsTable", null), e([y2(m3)], Ze.prototype, "labelsVisible", void 0), e([y2({ type: [C2], json: { origins: { service: { read: { source: "drawingInfo.labelingInfo", reader: i5 }, write: { target: "drawingInfo.labelingInfo", enabled: false } } }, read: { source: "layerDefinition.drawingInfo.labelingInfo", reader: i5 }, write: { target: "layerDefinition.drawingInfo.labelingInfo" } } })], Ze.prototype, "labelingInfo", void 0), e([y2((() => {
  const e4 = p(g);
  return e4.json.origins["portal-item"] = { write: { target: "layerDefinition.drawingInfo.transparency", writer(e5, r4, t6) {
    o(t6, n3(e5), r4);
  } } }, e4;
})())], Ze.prototype, "opacity", void 0), e([y2(c)], Ze.prototype, "legendEnabled", void 0), e([y2({ type: ["show", "hide"], json: (() => {
  const e4 = p(S.json);
  return e4.origins["portal-item"] = { read: false, write: false }, e4;
})() })], Ze.prototype, "listMode", void 0), e([o2("globalIdField", ["layerDefinition.globalIdField", "layerDefinition.fields"])], Ze.prototype, "readGlobalIdField", null), e([y2({ json: { origins: { "web-map": { write: { target: "layerDefinition.objectIdField", overridePolicy: ze } } } } })], Ze.prototype, "objectIdField", void 0), e([o2("objectIdField", ["layerDefinition.objectIdField", "layerDefinition.fields"])], Ze.prototype, "readObjectIdField", null), e([y2({ value: "ArcGISFeatureLayer", type: ["ArcGISFeatureLayer"] })], Ze.prototype, "operationalLayerType", void 0), e([y2(Be.outFields)], Ze.prototype, "outFields", void 0), e([y2({ readOnly: true })], Ze.prototype, "parsedUrl", null), e([y2({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], Ze.prototype, "path", void 0), e([y2(p2)], Ze.prototype, "popupEnabled", void 0), e([y2({ type: k, json: { name: "popupInfo", write: true } })], Ze.prototype, "popupTemplate", void 0), e([y2({ readOnly: true })], Ze.prototype, "defaultPopupTemplate", null), e([y2({ types: p5, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { types: n4, name: "layerDefinition.drawingInfo.renderer", write: { overridePolicy: (e4, r4, t6) => ({ ignoreOrigin: t6 == null ? void 0 : t6.writeLayerSchema }) } } }, write: { target: "layerDefinition.drawingInfo.renderer", overridePolicy: (e4, r4, t6) => ({ ignoreOrigin: t6 == null ? void 0 : t6.writeLayerSchema }) } } })], Ze.prototype, "renderer", null), e([o2("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o2("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], Ze.prototype, "readRenderer", null), e([y2((() => {
  const e4 = p(l);
  return e4.json.origins["portal-item"] = { read: false, write: false }, e4;
})())], Ze.prototype, "screenSizePerspectiveEnabled", void 0), e([y2({ clonable: false })], Ze.prototype, "source", null), e([s3("source")], Ze.prototype, "castSource", null), e([o2("portal-item", "source", ["featureSet"]), o2("web-map", "source", ["featureSet"])], Ze.prototype, "readSource", null), e([y2({ json: { read: { source: "layerDefinition.extent.spatialReference" } } })], Ze.prototype, "spatialReference", void 0), e([y2({ type: Number })], Ze.prototype, "subtypeCode", void 0), e([y2({ type: [p9] })], Ze.prototype, "templates", void 0), e([o2("templates", ["editFieldsInfo", "creatorField", "editorField", "templates"])], Ze.prototype, "readTemplates", null), e([y2({ type: v4 })], Ze.prototype, "timeInfo", void 0), e([y2()], Ze.prototype, "title", void 0), e([o2("service", "title", ["name"]), o2("portal-item", "title", ["layerDefinition.title", "layerDefinition.name", "title"])], Ze.prototype, "readTitle", null), e([o2("web-map", "title", ["layerDefinition.name", "title"])], Ze.prototype, "readTitleFromWebMap", null), e([y2({ type: String })], Ze.prototype, "sublayerTitleMode", void 0), e([y2({ json: { read: false } })], Ze.prototype, "type", void 0), e([y2({ type: String })], Ze.prototype, "typeIdField", void 0), e([o2("service", "typeIdField"), o2("typeIdField", ["layerDefinition.typeIdField"])], Ze.prototype, "readTypeIdField", null), e([y2({ type: [n7] })], Ze.prototype, "types", void 0), e([o2("service", "types", ["types"]), o2("types", ["layerDefinition.types"])], Ze.prototype, "readTypes", null), e([y2({ type: Boolean, json: { origins: { "portal-item": { write: { target: "layerDefinition.defaultVisibility" } } } } })], Ze.prototype, "visible", void 0), e([o2("portal-item", "visible", ["visibility", "layerDefinition.defaultVisibility"])], Ze.prototype, "readVisible", null), Ze = e([a2(Ge)], Ze);
var ke = u({ types: M });
var He = Ze;

export {
  He
};
//# sourceMappingURL=chunk-UV5UXWQM.js.map
