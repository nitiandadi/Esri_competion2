import {
  A as A2,
  a as a2,
  f,
  m as m2,
  p as p2,
  u as u2
} from "./chunk-NIOIEEDL.js";
import "./chunk-S4DOBTPL.js";
import "./chunk-IEBU4QQL.js";
import "./chunk-CPQSD22U.js";
import "./chunk-MNYWPBDW.js";
import "./chunk-4M3AMTD4.js";
import "./chunk-XCHMTTFV.js";
import "./chunk-MJIX5E4D.js";
import {
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  L,
  M,
  O,
  S,
  T,
  U,
  V,
  a,
  b,
  c,
  d,
  g,
  h,
  i,
  j,
  k,
  l,
  m,
  o,
  p,
  q,
  u,
  v,
  w,
  x,
  y,
  z
} from "./chunk-LVBKIX3G.js";
import "./chunk-JGIZLXNQ.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-MGJMBJDY.js";
import "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/views/3d/support/buffer/workerHelper.js
function z2(e, t) {
  return t.push(e.buffer), { buffer: e.buffer, layout: F2(e.layout) };
}
function F2(e) {
  const t = new Array();
  return e.fields.forEach((e2, r) => {
    const o3 = { ...e2, constructor: J(e2.constructor) };
    t.push([r, o3]);
  }), { stride: e.stride, fields: t, fieldNames: e.fieldNames };
}
var H2 = [y, u, i, c, l, p, o, m, T, h, a, b, d, A, O, x, g, w, E, L, B, F, I, U, j, V, M, S, k, q, v, z, C, D, G, H];
function J(e) {
  return `${e.ElementType}_${e.ElementCount}`;
}
var O2 = /* @__PURE__ */ new Map();
H2.forEach((e) => O2.set(J(e), e));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js
var o2 = class {
  async extract(e) {
    const t = c2(e), n = f(t), r = [t.data.buffer];
    return { result: l2(n, r), transferList: r };
  }
  async extractComponentsEdgeLocations(t) {
    const s = c2(t), i2 = u2(s.data, s.skipDeduplicate, s.indices, s.indicesLength), a3 = p2(i2, p3, g2), o3 = [];
    return { result: z2(a3.regular.instancesData, o3), transferList: o3 };
  }
  async extractEdgeLocations(t) {
    const s = c2(t), i2 = u2(s.data, s.skipDeduplicate, s.indices, s.indicesLength), a3 = p2(i2, f2, g2), o3 = [];
    return { result: z2(a3.regular.instancesData, o3), transferList: o3 };
  }
};
function c2(e) {
  return { data: A2.createView(e.dataBuffer), indices: "Uint32Array" === e.indicesType ? new Uint32Array(e.indices) : "Uint16Array" === e.indicesType ? new Uint16Array(e.indices) : e.indices, indicesLength: e.indicesLength, writerSettings: e.writerSettings, skipDeduplicate: e.skipDeduplicate };
}
function l2(t, n) {
  n.push(t.regular.lodInfo.lengths.buffer), n.push(t.silhouette.lodInfo.lengths.buffer);
  return { regular: { instancesData: z2(t.regular.instancesData, n), lodInfo: { lengths: t.regular.lodInfo.lengths.buffer } }, silhouette: { instancesData: z2(t.silhouette.instancesData, n), lodInfo: { lengths: t.silhouette.lodInfo.lengths.buffer } }, averageEdgeLength: t.averageEdgeLength };
}
var u3 = class {
  allocate(e) {
    return a2.createBuffer(e);
  }
  trim(e, t) {
    return e.slice(0, t);
  }
  write(e, t, n) {
    e.position0.setVec(t, n.position0), e.position1.setVec(t, n.position1);
  }
};
var d2 = class {
  allocate(e) {
    return m2.createBuffer(e);
  }
  trim(e, t) {
    return e.slice(0, t);
  }
  write(e, t, n) {
    e.position0.setVec(t, n.position0), e.position1.setVec(t, n.position1), e.componentIndex.set(t, n.componentIndex);
  }
};
var f2 = new u3();
var p3 = new d2();
var g2 = { allocate: () => null, write: () => {
}, trim: () => null };
export {
  o2 as default
};
//# sourceMappingURL=EdgeProcessingWorker-3RGCYXI5.js.map
