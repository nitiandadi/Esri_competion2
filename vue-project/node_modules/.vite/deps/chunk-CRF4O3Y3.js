import {
  a as a5,
  i as i2,
  u as u2
} from "./chunk-ONU3G4LF.js";
import {
  a as a4,
  d
} from "./chunk-KSENJC5Z.js";
import {
  l as l2
} from "./chunk-BHQVXYUV.js";
import {
  n,
  t as t3
} from "./chunk-P26WTKBK.js";
import {
  n as n2,
  r as r3
} from "./chunk-WAN4YZSB.js";
import {
  b
} from "./chunk-YZRPNTZZ.js";
import {
  c,
  f as f2,
  m,
  p as p2
} from "./chunk-LVRAFE6T.js";
import {
  K,
  V,
  W,
  Y,
  it,
  ot,
  tt
} from "./chunk-M3KO43BW.js";
import {
  e as e2,
  o as o4
} from "./chunk-BQXNXAP2.js";
import {
  a as a3
} from "./chunk-JT54I3AY.js";
import {
  j
} from "./chunk-SZO7ZKE4.js";
import {
  i
} from "./chunk-YMLMMCYX.js";
import {
  o as o3
} from "./chunk-7FMLQXIT.js";
import {
  r as r2
} from "./chunk-H2ENCYR3.js";
import {
  o
} from "./chunk-SVHG5VY2.js";
import {
  s as s2
} from "./chunk-S47644HM.js";
import {
  o as o2,
  s as s3
} from "./chunk-QXPN4D5D.js";
import {
  l
} from "./chunk-DLM7WQKI.js";
import {
  a2,
  e,
  t6 as t2,
  u2 as u,
  v2 as v,
  y3 as y
} from "./chunk-7GTATSRF.js";
import {
  S,
  T,
  a
} from "./chunk-PXVSWY3C.js";
import {
  f
} from "./chunk-QLY5H3XF.js";
import {
  s
} from "./chunk-UG2OEDEE.js";
import {
  p
} from "./chunk-PR6SXADK.js";
import {
  r,
  t
} from "./chunk-WHB7G7RI.js";

// node_modules/@arcgis/core/symbols/LineSymbol.js
var i3 = class extends a4 {
  constructor(r6) {
    super(r6), this.type = "simple-line", this.width = 0.75;
  }
  hash() {
    return `${this.type}.${this.width}`;
  }
};
e([o3({ esriSLS: "simple-line" }, { readOnly: true })], i3.prototype, "type", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], i3.prototype, "width", void 0), i3 = e([a2("esri.symbols.LineSymbol")], i3);
var c2 = i3;

// node_modules/@arcgis/core/symbols/support/lineMarkers.js
var e3 = ["begin", "end", "begin-end"];
var n3 = ["arrow", "circle", "square", "diamond", "cross", "x"];

// node_modules/@arcgis/core/symbols/LineSymbolMarker.js
var n4;
var m2 = n4 = class extends l {
  constructor(r6) {
    super(r6), this.placement = "begin-end", this.type = "line-marker", this.style = "arrow";
  }
  writeStyle(r6, o10, e7, t13) {
    o10[e7] = "web-map" === (t13 == null ? void 0 : t13.origin) ? "arrow" : r6;
  }
  set color(r6) {
    this._set("color", r6);
  }
  readColor(r6) {
    return r6 && null != r6[0] ? [r6[0], r6[1], r6[2], r6[3] / 255] : r6;
  }
  writeColor(r6, o10, e7, t13) {
    "web-map" === (t13 == null ? void 0 : t13.origin) || (o10[e7] = r6);
  }
  clone() {
    return new n4({ color: p(this.color), placement: this.placement, style: this.style });
  }
  hash() {
    var _a;
    return `${this.placement}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.style}`;
  }
};
e([y({ type: ["begin", "end", "begin-end"], json: { write: true } })], m2.prototype, "placement", void 0), e([o3({ "line-marker": "line-marker" }, { readOnly: true }), y({ json: { origins: { "web-map": { write: false } } } })], m2.prototype, "type", void 0), e([y({ type: n3 })], m2.prototype, "style", void 0), e([r2("style")], m2.prototype, "writeStyle", null), e([y({ type: l2, value: null, json: { write: { allowNull: true } } })], m2.prototype, "color", null), e([o("color")], m2.prototype, "readColor", null), e([r2("color")], m2.prototype, "writeColor", null), m2 = n4 = e([a2("esri.symbols.LineSymbolMarker")], m2);
var u3 = m2;

// node_modules/@arcgis/core/symbols/SimpleLineSymbol.js
var p3;
var h = new s3({ esriSLSSolid: "solid", esriSLSDash: "dash", esriSLSDot: "dot", esriSLSDashDot: "dash-dot", esriSLSDashDotDot: "long-dash-dot-dot", esriSLSNull: "none", esriSLSInsideFrame: "inside-frame", esriSLSShortDash: "short-dash", esriSLSShortDot: "short-dot", esriSLSShortDashDot: "short-dash-dot", esriSLSShortDashDotDot: "short-dash-dot-dot", esriSLSLongDash: "long-dash", esriSLSLongDashDot: "long-dash-dot" });
var d2 = p3 = class extends c2 {
  constructor(...r6) {
    super(...r6), this.type = "simple-line", this.style = "solid", this.cap = "round", this.join = "round", this.marker = null, this.miterLimit = 2;
  }
  normalizeCtorArgs(r6, o10, e7, s7, i9, n16) {
    if (r6 && "string" != typeof r6)
      return r6;
    const l20 = {};
    return null != r6 && (l20.style = r6), null != o10 && (l20.color = o10), null != e7 && (l20.width = o4(e7)), null != s7 && (l20.cap = s7), null != i9 && (l20.join = i9), null != n16 && (l20.miterLimit = o4(n16)), l20;
  }
  clone() {
    var _a;
    return new p3({ color: p(this.color), style: this.style, width: this.width, cap: this.cap, join: this.join, miterLimit: this.miterLimit, marker: (_a = this.marker) == null ? void 0 : _a.clone() });
  }
  hash() {
    var _a, _b;
    return `${super.hash()}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.style}.${this.cap}.${this.join}.${this.miterLimit}.${(_b = this.marker) == null ? void 0 : _b.hash()}`;
  }
};
e([o3({ esriSLS: "simple-line" }, { readOnly: true })], d2.prototype, "type", void 0), e([y({ type: h.apiValues, json: { read: h.read, write: h.write } })], d2.prototype, "style", void 0), e([y({ type: ["butt", "round", "square"], json: { write: { overridePolicy: (r6, o10, e7) => ({ enabled: "round" !== r6 && (null == e7 || null == e7.origin) }) } } })], d2.prototype, "cap", void 0), e([y({ type: ["miter", "round", "bevel"], json: { write: { overridePolicy: (r6, o10, e7) => ({ enabled: "round" !== r6 && (null == e7 || null == e7.origin) }) } } })], d2.prototype, "join", void 0), e([y({ types: { key: "type", base: null, defaultKeyValue: "line-marker", typeMap: { "line-marker": u3 } }, json: { write: true, origins: { "web-scene": { write: false } } } })], d2.prototype, "marker", void 0), e([y({ type: Number, json: { read: false, write: false } })], d2.prototype, "miterLimit", void 0), d2 = p3 = e([a2("esri.symbols.SimpleLineSymbol")], d2);
var m3 = d2;

// node_modules/@arcgis/core/symbols/support/IconSymbol3DLayerResource.js
var l3;
var d3 = o2()({ circle: "circle", square: "square", cross: "cross", x: "x", kite: "kite", triangle: "triangle" });
var h2 = l3 = class extends l {
  constructor(r6) {
    super(r6);
  }
  readHref(r6, e7, o10) {
    return r6 ? c(r6, o10) : e7.dataURI;
  }
  writeHref(r6, e7, o10, c19) {
    r6 && (tt(r6) ? e7.dataURI = r6 : (e7.href = m(r6, c19), Y(e7.href) && (e7.href = K(e7.href))));
  }
  clone() {
    return new l3({ href: this.href, primitive: this.primitive });
  }
};
e([y({ type: String, json: { write: true, read: { source: ["href", "dataURI"] } } })], h2.prototype, "href", void 0), e([o("href")], h2.prototype, "readHref", null), e([r2("href", { href: { type: String }, dataURI: { type: String } })], h2.prototype, "writeHref", null), e([o3(d3)], h2.prototype, "primitive", void 0), h2 = l3 = e([a2("esri.symbols.support.IconSymbol3DLayerResource")], h2);
var j2 = "circle";

// node_modules/@arcgis/core/symbols/support/ObjectSymbol3DLayerResource.js
var n5;
var a6 = o2()({ sphere: "sphere", cylinder: "cylinder", cube: "cube", cone: "cone", diamond: "diamond", tetrahedron: "tetrahedron", invertedCone: "inverted-cone" });
var m4 = n5 = class extends l {
  clone() {
    return new n5({ href: this.href, primitive: this.primitive });
  }
};
e([y({ type: String, json: { read: p2, write: f2 } })], m4.prototype, "href", void 0), e([o3(a6)], m4.prototype, "primitive", void 0), m4 = n5 = e([a2("esri.symbols.support.ObjectSymbol3DLayerResource")], m4);
var d4 = "sphere";

// node_modules/@arcgis/core/symbols/support/StyleOrigin.js
var p4;
var l4 = p4 = class extends v {
  constructor(t13) {
    super(t13), this.name = null, this.styleUrl = null, this.styleName = null, this.portal = null;
  }
  clone() {
    return new p4({ name: this.name, styleUrl: this.styleUrl, styleName: this.styleName, portal: this.portal });
  }
};
e([y({ type: String })], l4.prototype, "name", void 0), e([y({ type: String })], l4.prototype, "styleUrl", void 0), e([y({ type: String })], l4.prototype, "styleName", void 0), e([y({ type: b })], l4.prototype, "portal", void 0), l4 = p4 = e([a2("esri.symbols.support.StyleOrigin")], l4);
var a7 = l4;

// node_modules/@arcgis/core/symbols/support/Thumbnail.js
var t4;
var p5 = t4 = class extends v {
  constructor() {
    super(...arguments), this.url = "";
  }
  clone() {
    return new t4({ url: this.url });
  }
};
e([y({ type: String })], p5.prototype, "url", void 0), p5 = t4 = e([a2("esri.symbols.support.Thumbnail")], p5);

// node_modules/@arcgis/core/symbols/MarkerSymbol.js
var p6 = class extends a4 {
  constructor(t13) {
    super(t13), this.angle = 0, this.type = null, this.xoffset = 0, this.yoffset = 0, this.size = 9;
  }
  hash() {
    return `${this.type}.${this.angle}.${this.size}.${this.xoffset}.${this.yoffset}`;
  }
};
e([y({ type: Number, json: { read: (t13) => t13 && -1 * t13, write: (t13, e7) => e7.angle = t13 && -1 * t13 } })], p6.prototype, "angle", void 0), e([y({ type: ["simple-marker", "picture-marker"], readOnly: true })], p6.prototype, "type", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], p6.prototype, "xoffset", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], p6.prototype, "yoffset", void 0), e([y({ type: Number, cast: (t13) => "auto" === t13 ? t13 : o4(t13), json: { write: true } })], p6.prototype, "size", void 0), p6 = e([a2("esri.symbols.MarkerSymbol")], p6);
var i4 = p6;

// node_modules/@arcgis/core/symbols/support/urlUtils.js
function o5(a18, r6, t13) {
  return r6.imageData ? it({ mediaType: r6.contentType || "image/png", isBase64: true, data: r6.imageData }) : s4(r6.url, t13);
}
function s4(e7, t13) {
  var _a;
  return p7(t13) && !Y(e7) && ((_a = t13 == null ? void 0 : t13.layer) == null ? void 0 : _a.parsedUrl) ? V(t13.layer.parsedUrl.path, "images", e7) : c(e7, t13);
}
function u4(e7, a18, r6, n16) {
  if (tt(e7)) {
    const t13 = ot(e7);
    if (!t13)
      return;
    a18.contentType = t13.mediaType, a18.imageData = t13.data, r6 && r6.imageData === a18.imageData && r6.url && f2(r6.url, a18, "url", n16);
  } else
    f2(e7, a18, "url", n16);
}
var m5 = { json: { read: { source: ["imageData", "url"], reader: o5 }, write: { writer(e7, a18, r6, t13) {
  u4(e7, a18, this.source, t13);
} } } };
var c3 = { readOnly: true, json: { read: { source: ["imageData", "url"], reader(e7, a18, r6) {
  const t13 = {};
  return a18.imageData && (t13.imageData = a18.imageData), a18.contentType && (t13.contentType = a18.contentType), a18.url && (t13.url = s4(a18.url, r6)), t13;
} } } };
function p7(e7) {
  var _a, _b;
  return !(null == e7 || "service" !== e7.origin && "portal-item" !== e7.origin || "feature" !== ((_a = e7.layer) == null ? void 0 : _a.type) && "stream" !== ((_b = e7.layer) == null ? void 0 : _b.type));
}

// node_modules/@arcgis/core/symbols/PictureMarkerSymbol.js
var l5;
var a8 = l5 = class extends i4 {
  constructor(...r6) {
    super(...r6), this.color = null, this.type = "picture-marker", this.url = null, this.source = null, this.height = 12, this.width = 12, this.size = null;
  }
  normalizeCtorArgs(r6, t13, o10) {
    if (r6 && "string" != typeof r6 && null == r6.imageData)
      return r6;
    const s7 = {};
    return r6 && (s7.url = r6), null != t13 && (s7.width = o4(t13)), null != o10 && (s7.height = o4(o10)), s7;
  }
  readHeight(r6, t13) {
    return t13.size || r6;
  }
  readWidth(r6, t13) {
    return t13.size || r6;
  }
  clone() {
    const r6 = new l5({ angle: this.angle, height: this.height, url: this.url, width: this.width, xoffset: this.xoffset, yoffset: this.yoffset });
    return r6._set("source", p(this.source)), r6;
  }
  hash() {
    return `${super.hash()}.${this.height}.${this.url}.${this.width}`;
  }
};
e([y({ json: { write: false } })], a8.prototype, "color", void 0), e([o3({ esriPMS: "picture-marker" }, { readOnly: true })], a8.prototype, "type", void 0), e([y(m5)], a8.prototype, "url", void 0), e([y(c3)], a8.prototype, "source", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], a8.prototype, "height", void 0), e([o("height", ["height", "size"])], a8.prototype, "readHeight", null), e([y({ type: Number, cast: o4, json: { write: true } })], a8.prototype, "width", void 0), e([y({ json: { write: false } })], a8.prototype, "size", void 0), a8 = l5 = e([a2("esri.symbols.PictureMarkerSymbol")], a8);
var n6 = a8;

// node_modules/@arcgis/core/symbols/FillSymbol.js
var l6 = class extends a4 {
  constructor(e7) {
    super(e7), this.outline = null, this.type = null;
  }
  hash() {
    return `${this.type}.${this.outline && this.outline.hash()}`;
  }
};
e([y({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": m3 } }, json: { default: null, write: true } })], l6.prototype, "outline", void 0), e([y({ type: ["simple-fill", "picture-fill"], readOnly: true })], l6.prototype, "type", void 0), l6 = e([a2("esri.symbols.FillSymbol")], l6);
var p8 = l6;

// node_modules/@arcgis/core/symbols/SimpleFillSymbol.js
var p9;
var c4 = new s3({ esriSFSSolid: "solid", esriSFSNull: "none", esriSFSHorizontal: "horizontal", esriSFSVertical: "vertical", esriSFSForwardDiagonal: "forward-diagonal", esriSFSBackwardDiagonal: "backward-diagonal", esriSFSCross: "cross", esriSFSDiagonalCross: "diagonal-cross" });
var m6 = p9 = class extends p8 {
  constructor(...o10) {
    super(...o10), this.color = new l2([0, 0, 0, 0.25]), this.outline = new m3(), this.type = "simple-fill", this.style = "solid";
  }
  normalizeCtorArgs(o10, r6, s7) {
    if (o10 && "string" != typeof o10)
      return o10;
    const e7 = {};
    return o10 && (e7.style = o10), r6 && (e7.outline = r6), s7 && (e7.color = s7), e7;
  }
  clone() {
    return new p9({ color: p(this.color), outline: this.outline && this.outline.clone(), style: this.style });
  }
  hash() {
    return `${super.hash()}${this.style}.${this.color && this.color.hash()}`;
  }
};
e([y()], m6.prototype, "color", void 0), e([y()], m6.prototype, "outline", void 0), e([o3({ esriSFS: "simple-fill" }, { readOnly: true })], m6.prototype, "type", void 0), e([y({ type: c4.apiValues, json: { read: c4.read, write: c4.write } })], m6.prototype, "style", void 0), m6 = p9 = e([a2("esri.symbols.SimpleFillSymbol")], m6);
var S2 = m6;

// node_modules/@arcgis/core/symbols/SimpleMarkerSymbol.js
var h3;
var m7 = new s3({ esriSMSCircle: "circle", esriSMSSquare: "square", esriSMSCross: "cross", esriSMSX: "x", esriSMSDiamond: "diamond", esriSMSTriangle: "triangle", esriSMSPath: "path" });
var u5 = h3 = class extends i4 {
  constructor(...e7) {
    super(...e7), this.color = new l2([255, 255, 255, 0.25]), this.type = "simple-marker", this.size = 12, this.style = "circle", this.outline = new m3();
  }
  normalizeCtorArgs(e7, o10, r6, t13) {
    if (e7 && "string" != typeof e7)
      return e7;
    const i9 = {};
    return e7 && (i9.style = e7), null != o10 && (i9.size = o4(o10)), r6 && (i9.outline = r6), t13 && (i9.color = t13), i9;
  }
  writeColor(e7, o10) {
    e7 && "x" !== this.style && "cross" !== this.style && (o10.color = e7.toJSON()), null === e7 && (o10.color = null);
  }
  set path(e7) {
    this.style = "path", this._set("path", e7);
  }
  clone() {
    return new h3({ angle: this.angle, color: p(this.color), outline: this.outline && this.outline.clone(), path: this.path, size: this.size, style: this.style, xoffset: this.xoffset, yoffset: this.yoffset });
  }
  hash() {
    var _a;
    return `${super.hash()}.${this.color && this.color.hash()}.${this.path}.${this.style}.${(_a = this.outline) == null ? void 0 : _a.hash()}`;
  }
};
e([y()], u5.prototype, "color", void 0), e([r2("color")], u5.prototype, "writeColor", null), e([o3({ esriSMS: "simple-marker" }, { readOnly: true })], u5.prototype, "type", void 0), e([y()], u5.prototype, "size", void 0), e([y({ type: m7.apiValues, json: { read: m7.read, write: m7.write } })], u5.prototype, "style", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "path", null), e([y({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": m3 } }, json: { default: null, write: true } })], u5.prototype, "outline", void 0), u5 = h3 = e([a2("esri.symbols.SimpleMarkerSymbol")], u5);
var y2 = u5;

// node_modules/@arcgis/core/symbols/support/textUtils.js
var l7 = ["none", "underline", "line-through"];
var t5 = ["normal", "italic", "oblique"];
var r4 = ["normal", "lighter", "bold", "bolder"];
var n7 = { type: Number, cast: (l20) => {
  const t13 = a(l20);
  return 0 === t13 ? 1 : a3(t13, 0.1, 4);
}, nonNullable: true };
var i5 = ["left", "right", "center"];
var a9 = ["baseline", "top", "middle", "bottom"];
var m8 = { type: i5, nonNullable: true };
var p10 = { type: a9, nonNullable: true };

// node_modules/@arcgis/core/symbols/Font.js
var c5;
var l8 = c5 = class extends l {
  constructor(t13) {
    super(t13), this.decoration = "none", this.family = "sans-serif", this.size = 9, this.style = "normal", this.weight = "normal";
  }
  castSize(t13) {
    return o4(t13);
  }
  clone() {
    return new c5({ decoration: this.decoration, family: this.family, size: this.size, style: this.style, weight: this.weight });
  }
  hash() {
    return `${this.decoration}.${this.family}.${this.size}.${this.style}.${this.weight}`;
  }
};
e([y({ type: l7, json: { default: "none", write: true } })], l8.prototype, "decoration", void 0), e([y({ type: String, json: { write: true } })], l8.prototype, "family", void 0), e([y({ type: Number, json: { write: { overridePolicy: (t13, o10, e7) => ({ enabled: !e7 || !e7.textSymbol3D }) } } })], l8.prototype, "size", void 0), e([s2("size")], l8.prototype, "castSize", null), e([y({ type: t5, json: { default: "normal", write: true } })], l8.prototype, "style", void 0), e([y({ type: r4, json: { default: "normal", write: true } })], l8.prototype, "weight", void 0), l8 = c5 = e([a2("esri.symbols.Font")], l8);
var m9 = l8;

// node_modules/@arcgis/core/symbols/TextSymbol.js
var f3;
var g = f3 = class extends a4 {
  constructor(...t13) {
    super(...t13), this.backgroundColor = null, this.borderLineColor = null, this.borderLineSize = null, this.font = new m9(), this.horizontalAlignment = "center", this.kerning = true, this.haloColor = null, this.haloSize = null, this.rightToLeft = null, this.rotated = false, this.text = "", this.type = "text", this.verticalAlignment = "baseline", this.xoffset = 0, this.yoffset = 0, this.angle = 0, this.width = null, this.lineWidth = 192, this.lineHeight = 1;
  }
  normalizeCtorArgs(t13, o10, e7) {
    if (t13 && "string" != typeof t13)
      return t13;
    const i9 = {};
    return t13 && (i9.text = t13), o10 && (i9.font = o10), e7 && (i9.color = e7), i9;
  }
  writeLineWidth(t13, o10, e7, i9) {
    i9 && "string" != typeof i9 ? i9.origin : o10[e7] = t13;
  }
  castLineWidth(t13) {
    return o4(t13);
  }
  writeLineHeight(t13, o10, e7, i9) {
    i9 && "string" != typeof i9 ? i9.origin : o10[e7] = t13;
  }
  clone() {
    return new f3({ angle: this.angle, backgroundColor: p(this.backgroundColor), borderLineColor: p(this.borderLineColor), borderLineSize: this.borderLineSize, color: p(this.color), font: this.font && this.font.clone(), haloColor: p(this.haloColor), haloSize: this.haloSize, horizontalAlignment: this.horizontalAlignment, kerning: this.kerning, lineHeight: this.lineHeight, lineWidth: this.lineWidth, rightToLeft: this.rightToLeft, rotated: this.rotated, text: this.text, verticalAlignment: this.verticalAlignment, width: this.width, xoffset: this.xoffset, yoffset: this.yoffset });
  }
  hash() {
    var _a;
    return `${this.backgroundColor && this.backgroundColor.hash()}.${this.borderLineColor}.${this.borderLineSize}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.font && this.font.hash()}.${this.haloColor && this.haloColor.hash()}.${this.haloSize}.${this.horizontalAlignment}.${this.kerning}.${this.rightToLeft}.${this.rotated}.${this.text}.${this.verticalAlignment}.${this.width}.${this.xoffset}.${this.yoffset}.${this.lineHeight}.${this.lineWidth}.${this.angle}`;
  }
};
e([y({ type: l2, json: { write: true } })], g.prototype, "backgroundColor", void 0), e([y({ type: l2, json: { write: true } })], g.prototype, "borderLineColor", void 0), e([y({ type: Number, json: { write: true }, cast: o4 })], g.prototype, "borderLineSize", void 0), e([y({ type: m9, json: { write: true } })], g.prototype, "font", void 0), e([y({ ...m8, json: { write: true } })], g.prototype, "horizontalAlignment", void 0), e([y({ type: Boolean, json: { write: true } })], g.prototype, "kerning", void 0), e([y({ type: l2, json: { write: true } })], g.prototype, "haloColor", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], g.prototype, "haloSize", void 0), e([y({ type: Boolean, json: { write: true } })], g.prototype, "rightToLeft", void 0), e([y({ type: Boolean, json: { write: true } })], g.prototype, "rotated", void 0), e([y({ type: String, json: { write: true } })], g.prototype, "text", void 0), e([o3({ esriTS: "text" }, { readOnly: true })], g.prototype, "type", void 0), e([y({ ...p10, json: { write: true } })], g.prototype, "verticalAlignment", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], g.prototype, "xoffset", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], g.prototype, "yoffset", void 0), e([y({ type: Number, json: { read: (t13) => t13 && -1 * t13, write: (t13, o10) => o10.angle = t13 && -1 * t13 } })], g.prototype, "angle", void 0), e([y({ type: Number, json: { write: true } })], g.prototype, "width", void 0), e([y({ type: Number })], g.prototype, "lineWidth", void 0), e([r2("lineWidth")], g.prototype, "writeLineWidth", null), e([s2("lineWidth")], g.prototype, "castLineWidth", null), e([y(n7)], g.prototype, "lineHeight", void 0), e([r2("lineHeight")], g.prototype, "writeLineHeight", null), g = f3 = e([a2("esri.symbols.TextSymbol")], g);
var m10 = g;

// node_modules/@arcgis/core/symbols/Symbol3DLayer.js
var p11 = class extends l {
  constructor(e7) {
    super(e7), this.enabled = true, this.type = null;
  }
  writeEnabled(e7, r6, o10) {
    e7 || (r6[o10] = e7);
  }
};
e([y({ type: Boolean, json: { read: { source: "enable" }, write: { target: "enable" } } })], p11.prototype, "enabled", void 0), e([r2("enabled")], p11.prototype, "writeEnabled", null), e([y({ type: ["icon", "object", "line", "path", "fill", "water", "extrude", "text"], readOnly: true })], p11.prototype, "type", void 0), p11 = e([a2("esri.symbols.Symbol3DLayer")], p11);
var a10 = p11;

// node_modules/@arcgis/core/symbols/support/materialUtils.js
function s5(o10, t13) {
  const n16 = null != t13.transparency ? r3(t13.transparency) : 1, s7 = t13.color;
  return s7 && Array.isArray(s7) ? new l2([s7[0] || 0, s7[1] || 0, s7[2] || 0, n16]) : null;
}
function c6(r6, o10) {
  o10.color = r6.toJSON().slice(0, 3);
  const t13 = n2(r6.a);
  0 !== t13 && (o10.transparency = t13);
}
var p12 = { type: l2, json: { type: [T], default: null, read: { source: ["color", "transparency"], reader: s5 }, write: { target: { color: { type: [T] }, transparency: { type: T } }, writer: c6 } } };
var a11 = { type: Number, cast: o4, json: { write: true } };

// node_modules/@arcgis/core/symbols/edges/Edges3D.js
var l9 = class extends l {
  constructor(o10) {
    super(o10), this.color = new l2([0, 0, 0, 1]), this.extensionLength = 0, this.size = e2(1);
  }
  clone() {
  }
  cloneProperties() {
    return { color: p(this.color), size: this.size, extensionLength: this.extensionLength };
  }
};
e([y({ type: ["solid", "sketch"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], l9.prototype, "type", void 0), e([y(p12)], l9.prototype, "color", void 0), e([y({ ...a11, json: { write: { overridePolicy: (o10) => ({ enabled: !!o10 }) } } })], l9.prototype, "extensionLength", void 0), e([y(a11)], l9.prototype, "size", void 0), l9 = e([a2("esri.symbols.edges.Edges3D")], l9);
var m11 = l9;

// node_modules/@arcgis/core/symbols/edges/SketchEdges3D.js
var t6;
var c7 = t6 = class extends m11 {
  constructor(r6) {
    super(r6), this.type = "sketch";
  }
  clone() {
    return new t6(this.cloneProperties());
  }
};
e([o3({ sketch: "sketch" }, { readOnly: true })], c7.prototype, "type", void 0), c7 = t6 = e([a2("esri.symbols.edges.SketchEdges3D")], c7);
var p13 = c7;

// node_modules/@arcgis/core/symbols/edges/SolidEdges3D.js
var t7;
var p14 = t7 = class extends m11 {
  constructor(r6) {
    super(r6), this.type = "solid";
  }
  clone() {
    return new t7(this.cloneProperties());
  }
};
e([o3({ solid: "solid" }, { readOnly: true })], p14.prototype, "type", void 0), p14 = t7 = e([a2("esri.symbols.support.SolidEdges3D")], p14);
var c8 = p14;

// node_modules/@arcgis/core/symbols/edges/utils.js
var t8 = { types: { key: "type", base: m11, typeMap: { solid: c8, sketch: p13 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/Symbol3DMaterial.js
var p15;
var l10 = p15 = class extends l {
  constructor(o10) {
    super(o10), this.color = null;
  }
  clone() {
    const o10 = { color: r(this.color) ? this.color.clone() : null };
    return new p15(o10);
  }
};
e([y(p12)], l10.prototype, "color", void 0), l10 = p15 = e([a2("esri.symbols.support.Symbol3DMaterial")], l10);

// node_modules/@arcgis/core/symbols/ExtrudeSymbol3DLayer.js
var l11;
var c9 = l11 = class extends a10 {
  constructor(e7) {
    super(e7), this.type = "extrude", this.size = 1, this.material = null, this.castShadows = true, this.edges = null;
  }
  clone() {
    return new l11({ edges: this.edges && this.edges.clone(), enabled: this.enabled, material: r(this.material) ? this.material.clone() : null, castShadows: this.castShadows, size: this.size });
  }
};
e([o3({ Extrude: "extrude" }, { readOnly: true })], c9.prototype, "type", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } }, nonNullable: true })], c9.prototype, "size", void 0), e([y({ type: l10, json: { write: true } })], c9.prototype, "material", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], c9.prototype, "castShadows", void 0), e([y(t8)], c9.prototype, "edges", void 0), c9 = l11 = e([a2("esri.symbols.ExtrudeSymbol3DLayer")], c9);
var d5 = c9;

// node_modules/@arcgis/core/symbols/patterns/LinePattern3D.js
var t9 = class extends l {
  constructor(r6) {
    super(r6);
  }
  clone() {
  }
};
e([y({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], t9.prototype, "type", void 0), t9 = e([a2("esri.symbols.patterns.LinePattern3D")], t9);
var p16 = t9;

// node_modules/@arcgis/core/symbols/patterns/lineStyles.js
var o6 = ["dash", "dash-dot", "dot", "long-dash", "long-dash-dot", "long-dash-dot-dot", "none", "short-dash", "short-dash-dot", "short-dash-dot-dot", "short-dot", "solid"];

// node_modules/@arcgis/core/symbols/patterns/LineStylePattern3D.js
var p17;
var h4 = o2()({ dash: "dash", "dash-dot": "dash-dot", "dash-dot-dot": "long-dash-dot-dot", dot: "dot", "long-dash": "long-dash", "long-dash-dot": "long-dash-dot", null: "none", "short-dash": "short-dash", "short-dash-dot": "short-dash-dot", "short-dash-dot-dot": "short-dash-dot-dot", "short-dot": "short-dot", solid: "solid" });
var l12 = p17 = class extends p16 {
  constructor(o10) {
    super(o10), this.type = "style", this.style = "solid";
  }
  clone() {
    const o10 = { style: this.style };
    return new p17(o10);
  }
};
e([y({ type: ["style"] })], l12.prototype, "type", void 0), e([o3(h4), y({ type: o6 })], l12.prototype, "style", void 0), l12 = p17 = e([a2("esri.symbols.patterns.LineStylePattern3D")], l12);
var n8 = l12;

// node_modules/@arcgis/core/symbols/patterns/Pattern3D.js
var t10 = class extends l {
  constructor(r6) {
    super(r6);
  }
  clone() {
  }
};
e([y({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], t10.prototype, "type", void 0), t10 = e([a2("esri.symbols.patterns.Pattern3D")], t10);
var p18 = t10;

// node_modules/@arcgis/core/symbols/patterns/styles.js
var a12 = ["backward-diagonal", "cross", "diagonal-cross", "forward-diagonal", "horizontal", "none", "solid", "vertical"];

// node_modules/@arcgis/core/symbols/patterns/StylePattern3D.js
var p19;
var c10 = p19 = class extends p18 {
  constructor(t13) {
    super(t13), this.type = "style", this.style = "solid";
  }
  clone() {
    const t13 = { style: this.style };
    return new p19(t13);
  }
};
e([y({ type: ["style"] })], c10.prototype, "type", void 0), e([y({ type: a12, json: { read: true, write: true } })], c10.prototype, "style", void 0), c10 = p19 = e([a2("esri.symbols.patterns.StylePattern3D")], c10);
var y3 = c10;

// node_modules/@arcgis/core/symbols/patterns/utils.js
var s6 = { types: { key: "type", base: p18, typeMap: { style: y3 } }, json: { write: true } };
var o7 = { types: { key: "type", base: p16, typeMap: { style: n8 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/colors.js
var o8 = new l2("white");
var r5 = new l2("black");
var e4 = new l2([255, 255, 255, 0]);
function t11(n16) {
  return 0 === n16.r && 0 === n16.g && 0 === n16.b;
}

// node_modules/@arcgis/core/symbols/support/Symbol3DFillMaterial.js
var c11;
var l13 = c11 = class extends l10 {
  constructor(o10) {
    super(o10), this.colorMixMode = null;
  }
  clone() {
    const o10 = { color: r(this.color) ? this.color.clone() : null, colorMixMode: this.colorMixMode };
    return new c11(o10);
  }
};
e([o3({ multiply: "multiply", replace: "replace", tint: "tint" })], l13.prototype, "colorMixMode", void 0), l13 = c11 = e([a2("esri.symbols.support.Symbol3DFillMaterial")], l13);

// node_modules/@arcgis/core/symbols/support/Symbol3DOutline.js
var m12;
var u6 = m12 = class extends l {
  constructor(t13) {
    super(t13), this.color = new l2([0, 0, 0, 1]), this.size = e2(1), this.pattern = null, this.patternCap = "butt";
  }
  clone() {
    const t13 = { color: r(this.color) ? this.color.clone() : null, size: this.size, pattern: r(this.pattern) ? this.pattern.clone() : null, patternCap: this.patternCap };
    return new m12(t13);
  }
};
e([y(p12)], u6.prototype, "color", void 0), e([y(a11)], u6.prototype, "size", void 0), e([y(o7)], u6.prototype, "pattern", void 0), e([y({ type: u2, json: { default: "butt", write: { overridePolicy() {
  return { enabled: r(this.pattern) };
} } } })], u6.prototype, "patternCap", void 0), u6 = m12 = e([a2("esri.symbols.support.Symbol3DOutline")], u6);

// node_modules/@arcgis/core/symbols/FillSymbol3DLayer.js
var d6;
var h5 = d6 = class extends a10 {
  constructor(t13) {
    super(t13), this.type = "fill", this.material = null, this.pattern = null, this.castShadows = true, this.outline = null, this.edges = null;
  }
  clone() {
    const t13 = { edges: r(this.edges) ? this.edges.clone() : null, enabled: this.enabled, material: r(this.material) ? this.material.clone() : null, pattern: r(this.pattern) ? this.pattern.clone() : null, castShadows: this.castShadows, outline: r(this.outline) ? this.outline.clone() : null };
    return new d6(t13);
  }
  static fromSimpleFillSymbol(t13) {
    var _a, _b, _c;
    const e7 = t13.outline && t13.outline.style && "inside-frame" !== t13.outline.style && "solid" !== t13.outline.style ? new n8({ style: t13.outline.style }) : null, o10 = { size: ((_a = t13.outline) == null ? void 0 : _a.width) ?? 0, color: (((_b = t13.outline) == null ? void 0 : _b.color) ?? o8).clone(), pattern: e7 };
    return e7 && ((_c = t13.outline) == null ? void 0 : _c.cap) && (o10.patternCap = t13.outline.cap), new d6({ material: new l13({ color: (t13.color ?? e4).clone() }), pattern: t13.style && "solid" !== t13.style ? new y3({ style: t13.style }) : null, outline: o10 });
  }
};
e([o3({ Fill: "fill" }, { readOnly: true })], h5.prototype, "type", void 0), e([y({ type: l13, json: { write: true } })], h5.prototype, "material", void 0), e([y(s6)], h5.prototype, "pattern", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], h5.prototype, "castShadows", void 0), e([y({ type: u6, json: { write: true } })], h5.prototype, "outline", void 0), e([y(t8)], h5.prototype, "edges", void 0), h5 = d6 = e([a2("esri.symbols.FillSymbol3DLayer")], h5);
var f4 = h5;

// node_modules/@arcgis/core/symbols/support/Symbol3DAnchorPosition2D.js
var e5;
var p20 = e5 = class extends v {
  constructor() {
    super(...arguments), this.x = 0, this.y = 0;
  }
  clone() {
    return new e5({ x: this.x, y: this.y });
  }
};
e([y({ type: Number })], p20.prototype, "x", void 0), e([y({ type: Number })], p20.prototype, "y", void 0), p20 = e5 = e([a2("esri.symbols.support.Symbol3DAnchorPosition2D")], p20);

// node_modules/@arcgis/core/symbols/support/Symbol3DIconOutline.js
var l14;
var a13 = l14 = class extends l {
  constructor(o10) {
    super(o10), this.color = new l2([0, 0, 0, 1]), this.size = e2(1);
  }
  clone() {
    const o10 = { color: r(this.color) ? this.color.clone() : null, size: this.size };
    return new l14(o10);
  }
};
e([y(p12)], a13.prototype, "color", void 0), e([y(a11)], a13.prototype, "size", void 0), a13 = l14 = e([a2("esri.symbols.support.Symbol3DIconOutline")], a13);

// node_modules/@arcgis/core/symbols/IconSymbol3DLayer.js
var f5;
var d7 = "esri.symbols.IconSymbol3DLayer";
var b2 = f5 = class extends a10 {
  constructor(o10) {
    super(o10), this.material = null, this.resource = null, this.type = "icon", this.size = 12, this.anchor = "center", this.anchorPosition = null, this.outline = null;
  }
  clone() {
    return new f5({ anchor: this.anchor, anchorPosition: this.anchorPosition && this.anchorPosition.clone(), enabled: this.enabled, material: r(this.material) ? this.material.clone() : null, outline: r(this.outline) ? this.outline.clone() : null, resource: this.resource && this.resource.clone(), size: this.size });
  }
  static fromSimpleMarkerSymbol(o10) {
    const t13 = o10.color || o8, r6 = j3(o10), e7 = o10.outline && o10.outline.width > 0 ? { size: o10.outline.width, color: (o10.outline.color || o8).clone() } : null;
    return new f5({ size: o10.size, resource: { primitive: w(o10.style) }, material: { color: t13 }, outline: e7, anchor: r6 ? "relative" : void 0, anchorPosition: r6 });
  }
  static fromPictureMarkerSymbol(o10) {
    const t13 = !o10.color || t11(o10.color) ? o8 : o10.color, r6 = j3(o10);
    return new f5({ size: o10.width <= o10.height ? o10.height : o10.width, resource: { href: o10.url }, material: { color: t13.clone() }, anchor: r6 ? "relative" : void 0, anchorPosition: r6 });
  }
  static fromCIMSymbol(o10) {
    return new f5({ resource: { href: it({ mediaType: "application/json", data: JSON.stringify(o10.data) }) } });
  }
};
function j3(o10) {
  const t13 = "width" in o10 ? o10.width : o10.size, r6 = "height" in o10 ? o10.height : o10.size, e7 = g2(o10.xoffset), i9 = g2(o10.yoffset);
  return (e7 || i9) && t13 && r6 ? { x: -e7 / t13, y: i9 / r6 } : null;
}
function g2(o10) {
  return isFinite(o10) ? o10 : 0;
}
e([y({ type: l10, json: { write: true } })], b2.prototype, "material", void 0), e([y({ type: h2, json: { write: true } })], b2.prototype, "resource", void 0), e([o3({ Icon: "icon" }, { readOnly: true })], b2.prototype, "type", void 0), e([y(a11)], b2.prototype, "size", void 0), e([o3({ center: "center", left: "left", right: "right", top: "top", bottom: "bottom", topLeft: "top-left", topRight: "top-right", bottomLeft: "bottom-left", bottomRight: "bottom-right", relative: "relative" }), y({ json: { default: "center" } })], b2.prototype, "anchor", void 0), e([y({ type: p20, json: { type: [Number], read: { reader: (o10) => new p20({ x: o10[0], y: o10[1] }) }, write: { writer: (o10, t13) => {
  t13.anchorPosition = [o10.x, o10.y];
}, overridePolicy() {
  return { enabled: "relative" === this.anchor };
} } } })], b2.prototype, "anchorPosition", void 0), e([y({ type: a13, json: { write: true } })], b2.prototype, "outline", void 0), b2 = f5 = e([a2(d7)], b2);
var v2 = { circle: "circle", cross: "cross", diamond: "kite", square: "square", x: "x", triangle: "triangle", path: null };
function w(o10) {
  const r6 = v2[o10];
  return r6 || (s.getLogger(d7).warn(`${o10} cannot be mapped to Icon symbol. Fallback to "circle"`), "circle");
}
var S3 = b2;

// node_modules/@arcgis/core/symbols/LineStyleMarker3D.js
var m13 = class extends i(l) {
  constructor(o10) {
    super(o10), this.type = "style", this.placement = "begin-end", this.style = "arrow", this.color = null;
  }
  equals(o10) {
    return r(o10) && o10.placement === this.placement && o10.style === this.style && (t(this.color) && t(o10.color) || r(this.color) && r(o10.color) && this.color.toJSON() === o10.color.toJSON());
  }
};
e([y({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], m13.prototype, "type", void 0), e([y({ type: e3, json: { default: "begin-end", write: true } })], m13.prototype, "placement", void 0), e([y({ type: n3, json: { default: "arrow", write: true } })], m13.prototype, "style", void 0), e([y({ type: l2, json: { type: [T], default: null, write: true } })], m13.prototype, "color", void 0), m13 = e([a2("esri.symbols.LineStyleMarker3D")], m13);
var y4 = m13;

// node_modules/@arcgis/core/symbols/LineSymbol3DLayer.js
var d8;
var f6 = d8 = class extends a10 {
  constructor(t13) {
    super(t13), this.material = null, this.type = "line", this.join = "miter", this.cap = "butt", this.size = e2(1), this.pattern = null, this.marker = null;
  }
  clone() {
    const t13 = { enabled: this.enabled, material: r(this.material) ? this.material.clone() : null, size: this.size, join: this.join, cap: this.cap, pattern: r(this.pattern) ? this.pattern.clone() : null, marker: r(this.marker) ? this.marker.clone() : null };
    return new d8(t13);
  }
  static fromSimpleLineSymbol(t13) {
    var _a;
    const e7 = { enabled: true, size: t13.width ?? e2(1), cap: t13.cap || "butt", join: t13.join || "miter", pattern: t13.style && "inside-frame" !== t13.style ? new n8({ style: t13.style }) : null, material: new l10({ color: (t13.color || o8).clone() }), marker: t13.marker ? new y4({ placement: t13.marker.placement, style: t13.marker.style, color: ((_a = t13.marker.color) == null ? void 0 : _a.clone()) ?? null }) : null };
    return new d8(e7);
  }
};
e([y({ type: l10, json: { write: true } })], f6.prototype, "material", void 0), e([o3({ Line: "line" }, { readOnly: true })], f6.prototype, "type", void 0), e([y({ type: a5, json: { write: true, default: "miter" } })], f6.prototype, "join", void 0), e([y({ type: u2, json: { write: true, default: "butt" } })], f6.prototype, "cap", void 0), e([y(a11)], f6.prototype, "size", void 0), e([y(o7)], f6.prototype, "pattern", void 0), e([y({ types: { key: "type", base: y4, typeMap: { style: y4 } }, json: { write: true } })], f6.prototype, "marker", void 0), f6 = d8 = e([a2("esri.symbols.LineSymbol3DLayer")], f6);
var h6 = f6;

// node_modules/@arcgis/core/symbols/support/Symbol3DAnchorPosition3D.js
var e6;
var p21 = e6 = class extends v {
  constructor() {
    super(...arguments), this.x = 0, this.y = 0, this.z = 0;
  }
  clone() {
    return new e6({ x: this.x, y: this.y, z: this.z });
  }
};
e([y({ type: Number })], p21.prototype, "x", void 0), e([y({ type: Number })], p21.prototype, "y", void 0), e([y({ type: Number })], p21.prototype, "z", void 0), p21 = e6 = e([a2("esri.symbols.support.Symbol3DAnchorPosition3D")], p21);

// node_modules/@arcgis/core/symbols/ObjectSymbol3DLayer.js
var n9;
var c12 = n9 = class extends a10 {
  constructor(o10) {
    super(o10), this.material = null, this.castShadows = true, this.resource = null, this.type = "object", this.width = void 0, this.height = void 0, this.depth = void 0, this.anchor = void 0, this.anchorPosition = void 0, this.heading = void 0, this.tilt = void 0, this.roll = void 0;
  }
  clone() {
    return new n9({ heading: this.heading, tilt: this.tilt, roll: this.roll, anchor: this.anchor, anchorPosition: this.anchorPosition && this.anchorPosition.clone(), depth: this.depth, enabled: this.enabled, height: this.height, material: r(this.material) ? this.material.clone() : null, castShadows: this.castShadows, resource: this.resource && this.resource.clone(), width: this.width });
  }
  get isPrimitive() {
    return !this.resource || "string" != typeof this.resource.href;
  }
};
e([y({ type: l10, json: { write: true } })], c12.prototype, "material", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], c12.prototype, "castShadows", void 0), e([y({ type: m4, json: { write: true } })], c12.prototype, "resource", void 0), e([o3({ Object: "object" }, { readOnly: true })], c12.prototype, "type", void 0), e([y({ type: Number, json: { write: true } })], c12.prototype, "width", void 0), e([y({ type: Number, json: { write: true } })], c12.prototype, "height", void 0), e([y({ type: Number, json: { write: true } })], c12.prototype, "depth", void 0), e([o3({ center: "center", top: "top", bottom: "bottom", origin: "origin", relative: "relative" }), y({ json: { default: "origin" } })], c12.prototype, "anchor", void 0), e([y({ type: p21, json: { type: [Number], read: { reader: (o10) => new p21({ x: o10[0], y: o10[1], z: o10[2] }) }, write: { writer: (o10, t13) => {
  t13.anchorPosition = [o10.x, o10.y, o10.z];
}, overridePolicy() {
  return { enabled: "relative" === this.anchor };
} } } })], c12.prototype, "anchorPosition", void 0), e([y({ type: Number, json: { write: true } })], c12.prototype, "heading", void 0), e([y({ type: Number, json: { write: true } })], c12.prototype, "tilt", void 0), e([y({ type: Number, json: { write: true } })], c12.prototype, "roll", void 0), e([y({ readOnly: true })], c12.prototype, "isPrimitive", null), c12 = n9 = e([a2("esri.symbols.ObjectSymbol3DLayer")], c12);
var l15 = c12;

// node_modules/@arcgis/core/symbols/PathSymbol3DLayer.js
var n10;
var d9 = n10 = class extends a10 {
  constructor(t13) {
    super(t13), this.material = null, this.castShadows = true, this.type = "path", this.profile = "circle", this.join = "miter", this.cap = "butt", this.width = void 0, this.height = void 0, this.anchor = "center", this.profileRotation = "all";
  }
  readWidth(t13, e7) {
    return null != t13 ? t13 : null == e7.height && null != e7.size ? e7.size : void 0;
  }
  readHeight(t13, e7) {
    return null != t13 ? t13 : null == e7.width && null != e7.size ? e7.size : void 0;
  }
  clone() {
    return new n10({ enabled: this.enabled, material: r(this.material) ? this.material.clone() : null, castShadows: this.castShadows, profile: this.profile, join: this.join, cap: this.cap, width: this.width, height: this.height, profileRotation: this.profileRotation, anchor: this.anchor });
  }
};
e([y({ type: l10, json: { write: true } })], d9.prototype, "material", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], d9.prototype, "castShadows", void 0), e([o3({ Path: "path" }, { readOnly: true })], d9.prototype, "type", void 0), e([y({ type: ["circle", "quad"], json: { write: true, default: "circle" } })], d9.prototype, "profile", void 0), e([y({ type: a5, json: { write: true, default: "miter" } })], d9.prototype, "join", void 0), e([y({ type: i2, json: { write: true, default: "butt" } })], d9.prototype, "cap", void 0), e([y({ type: Number, json: { write: { enabled: true, target: { width: { type: Number }, size: { type: Number } } } } })], d9.prototype, "width", void 0), e([o("width", ["width", "size", "height"])], d9.prototype, "readWidth", null), e([y({ type: Number, json: { write: true } })], d9.prototype, "height", void 0), e([o("height", ["height", "size", "width"])], d9.prototype, "readHeight", null), e([y({ type: ["center", "bottom", "top"], json: { write: true, default: "center" } })], d9.prototype, "anchor", void 0), e([y({ type: ["heading", "all"], json: { write: true, default: "all" } })], d9.prototype, "profileRotation", void 0), d9 = n10 = e([a2("esri.symbols.PathSymbol3DLayer")], d9);
var c13 = d9;

// node_modules/@arcgis/core/symbols/support/Symbol3DHalo.js
var m14;
var l16 = m14 = class extends l {
  constructor() {
    super(...arguments), this.color = new l2([0, 0, 0, 1]), this.size = 0;
  }
  clone() {
    const o10 = { color: p(this.color), size: this.size };
    return new m14(o10);
  }
};
e([y(p12)], l16.prototype, "color", void 0), e([y(a11)], l16.prototype, "size", void 0), l16 = m14 = e([a2("esri.symbols.support.Symbol3DHalo")], l16);

// node_modules/@arcgis/core/symbols/support/Symbol3DTextBackground.js
var c14 = class extends i(l) {
  constructor(o10) {
    super(o10), this.color = null;
  }
};
e([y(p12)], c14.prototype, "color", void 0), c14 = e([a2("esri.symbols.support.Symbol3DTextBackground")], c14);

// node_modules/@arcgis/core/symbols/TextSymbol3DLayer.js
var g3;
var d10 = g3 = class extends a10 {
  constructor(t13) {
    super(t13), this._userSize = void 0, this.halo = null, this.horizontalAlignment = "center", this.lineHeight = 1, this.material = null, this.background = null, this.text = null, this.type = "text", this.verticalAlignment = "baseline";
  }
  get font() {
    return this._get("font") || null;
  }
  set font(t13) {
    r(t13) && r(this._userSize) && (t13.size = this._userSize), this._set("font", t13);
  }
  writeFont(t13, o10, e7, r6) {
    const i9 = { ...r6, textSymbol3D: true };
    o10.font = t13.write({}, i9), delete o10.font.size;
  }
  get size() {
    return r(this._userSize) ? this._userSize : r(this.font) && null != this.font.size ? this.font.size : 9;
  }
  set size(t13) {
    this._userSize = t13, r(this.font) && (this.font.size = this._userSize), this.notifyChange("size");
  }
  clone() {
    const t13 = new g3({ enabled: this.enabled, font: this.font && p(this.font), halo: this.halo && p(this.halo), horizontalAlignment: this.horizontalAlignment, lineHeight: this.lineHeight, material: r(this.material) ? this.material.clone() : null, text: this.text, verticalAlignment: this.verticalAlignment, background: p(this.background) });
    return t13._userSize = this._userSize, t13;
  }
  static fromTextSymbol(t13) {
    return new g3({ font: r(t13.font) ? t13.font.clone() : new m9(), halo: z(t13.haloColor, t13.haloSize), horizontalAlignment: t13.horizontalAlignment, lineHeight: t13.lineHeight, material: t13.color ? new l10({ color: t13.color.clone() }) : null, text: t13.text, verticalAlignment: t13.verticalAlignment, background: t13.backgroundColor ? new c14({ color: t13.backgroundColor.clone() }) : null });
  }
};
function z(t13, e7) {
  return t13 && null != e7 && e7 > 0 ? new l16({ color: p(t13), size: e7 }) : null;
}
e([y({ type: m9, json: { write: true } })], d10.prototype, "font", null), e([r2("font")], d10.prototype, "writeFont", null), e([y({ type: l16, json: { write: true } })], d10.prototype, "halo", void 0), e([y({ ...m8, json: { default: "center", write: true } })], d10.prototype, "horizontalAlignment", void 0), e([y({ ...n7, json: { default: 1, write: true } })], d10.prototype, "lineHeight", void 0), e([y({ type: l10, json: { write: true } })], d10.prototype, "material", void 0), e([y({ type: c14, json: { write: true } })], d10.prototype, "background", void 0), e([y(a11)], d10.prototype, "size", null), e([y({ type: String, json: { write: true } })], d10.prototype, "text", void 0), e([o3({ Text: "text" }, { readOnly: true })], d10.prototype, "type", void 0), e([y({ ...p10, json: { default: "baseline", write: true } })], d10.prototype, "verticalAlignment", void 0), d10 = g3 = e([a2("esri.symbols.TextSymbol3DLayer")], d10);
var j4 = d10;

// node_modules/@arcgis/core/symbols/WaterSymbol3DLayer.js
var l17;
var c15 = l17 = class extends a10 {
  constructor(e7) {
    super(e7), this.color = m15.clone(), this.type = "water", this.waterbodySize = "medium", this.waveDirection = null, this.waveStrength = "moderate";
  }
  clone() {
    return new l17({ color: p(this.color), waterbodySize: this.waterbodySize, waveDirection: this.waveDirection, waveStrength: this.waveStrength });
  }
};
e([y({ type: l2, nonNullable: true, json: { type: [T], write: (e7, r6, t13) => r6[t13] = e7.toArray(l2.AlphaMode.UNLESS_OPAQUE), default: () => m15.clone(), defaultEquals: (e7) => e7.toCss(true) === m15.toCss(true) } })], c15.prototype, "color", void 0), e([o3({ Water: "water" }, { readOnly: true })], c15.prototype, "type", void 0), e([y({ type: ["small", "medium", "large"], json: { write: true, default: "medium" } })], c15.prototype, "waterbodySize", void 0), e([y({ type: Number, json: { write: true, default: null } })], c15.prototype, "waveDirection", void 0), e([y({ type: ["calm", "rippled", "slight", "moderate"], json: { write: true, default: "moderate" } })], c15.prototype, "waveStrength", void 0), c15 = l17 = e([a2("esri.symbols.WaterSymbol3DLayer")], c15);
var m15 = new l2([0, 119, 190]);
var n11 = c15;

// node_modules/@arcgis/core/symbols/Symbol3D.js
var v3 = { icon: S3, object: l15, line: h6, path: c13, fill: f4, extrude: d5, text: j4, water: n11 };
var C = j.ofType({ base: a10, key: "type", typeMap: v3, errorContext: "symbol-layer" });
var T2 = class extends a4 {
  constructor(e7) {
    super(e7), this.styleOrigin = null, this.thumbnail = null, this.type = null;
    const t13 = this.__accessor__ && this.__accessor__.metadatas && this.__accessor__.metadatas.symbolLayers, o10 = t13 && t13.type || j;
    this._set("symbolLayers", new o10());
  }
  get color() {
    return null;
  }
  set color(e7) {
    this.constructed && s.getLogger(this.declaredClass).error("Symbol3D does not support colors on the symbol level. Colors may be set on individual symbol layer materials instead.");
  }
  set symbolLayers(e7) {
    n(e7, this._get("symbolLayers"));
  }
  readStyleOrigin(e7, r6, t13) {
    if (e7.styleUrl && e7.name) {
      const r7 = c(e7.styleUrl, t13);
      return new a7({ styleUrl: r7, name: e7.name });
    }
    if (e7.styleName && e7.name)
      return new a7({ portal: t13 && t13.portal || b.getDefault(), styleName: e7.styleName, name: e7.name });
    t13 && t13.messages && t13.messages.push(new t2("symbol3d:incomplete-style-origin", "Style origin requires either a 'styleUrl' or 'styleName' and a 'name' property", { context: t13, definition: e7 }));
  }
  writeStyleOrigin(e7, r6, t13, o10) {
    if (e7.styleUrl && e7.name) {
      let t14 = m(e7.styleUrl, o10);
      Y(t14) && (t14 = K(t14)), r6.styleOrigin = { styleUrl: t14, name: e7.name };
    } else
      e7.styleName && e7.name && (e7.portal && o10 && o10.portal && !W(e7.portal.restUrl, o10.portal.restUrl) ? o10 && o10.messages && o10.messages.push(new t2("symbol:cross-portal", "The symbol style origin cannot be persisted because it refers to an item on a different portal than the one being saved to.", { symbol: this })) : r6.styleOrigin = { styleName: e7.styleName, name: e7.name });
  }
  normalizeCtorArgs(e7) {
    return e7 instanceof a10 || e7 && v3[e7.type] ? { symbolLayers: [e7] } : Array.isArray(e7) ? { symbolLayers: e7 } : e7;
  }
};
e([y({ json: { read: false, write: false } })], T2.prototype, "color", null), e([y({ type: C, nonNullable: true, json: { write: true } }), s2(t3)], T2.prototype, "symbolLayers", null), e([y({ type: a7 })], T2.prototype, "styleOrigin", void 0), e([o("styleOrigin")], T2.prototype, "readStyleOrigin", null), e([r2("styleOrigin", { "styleOrigin.styleUrl": { type: String }, "styleOrigin.styleName": { type: String }, "styleOrigin.name": { type: String } })], T2.prototype, "writeStyleOrigin", null), e([y({ type: p5, json: { read: false } })], T2.prototype, "thumbnail", void 0), e([y({ type: ["point-3d", "line-3d", "polygon-3d", "mesh-3d", "label-3d"], readOnly: true })], T2.prototype, "type", void 0), T2 = e([a2("esri.symbols.Symbol3D")], T2);
var k = T2;

// node_modules/@arcgis/core/symbols/callouts/Callout3D.js
var t12 = class extends l {
  constructor(r6) {
    super(r6), this.visible = true;
  }
  clone() {
  }
};
e([y({ type: ["line"], readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], t12.prototype, "type", void 0), e([y({ readOnly: true })], t12.prototype, "visible", void 0), t12 = e([a2("esri.symbols.callouts.Callout3D")], t12);
var p22 = t12;

// node_modules/@arcgis/core/chunks/LineCallout3DBorder.js
var l18;
var a14 = l18 = class extends l {
  constructor() {
    super(...arguments), this.color = new l2("white");
  }
  clone() {
    return new l18({ color: p(this.color) });
  }
};
e([y(p12)], a14.prototype, "color", void 0), a14 = l18 = e([a2("esri.symbols.callouts.LineCallout3DBorder")], a14);
var i6 = a14;
var m16 = Object.freeze(Object.defineProperty({ __proto__: null, default: i6 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/symbols/callouts/LineCallout3D.js
var u7;
var d11 = u7 = class extends p22 {
  constructor(o10) {
    super(o10), this.type = "line", this.color = new l2([0, 0, 0, 1]), this.size = e2(1), this.border = null;
  }
  get visible() {
    return this.size > 0 && r(this.color) && this.color.a > 0;
  }
  clone() {
    return new u7({ color: p(this.color), size: this.size, border: p(this.border) });
  }
};
e([o3({ line: "line" }, { readOnly: true })], d11.prototype, "type", void 0), e([y(p12)], d11.prototype, "color", void 0), e([y(a11)], d11.prototype, "size", void 0), e([y({ type: i6, json: { write: true } })], d11.prototype, "border", void 0), e([y({ readOnly: true })], d11.prototype, "visible", null), d11 = u7 = e([a2("esri.symbols.callouts.LineCallout3D")], d11);
var y5 = d11;

// node_modules/@arcgis/core/symbols/callouts/calloutUtils.js
function n12(e7) {
  if (!e7)
    return false;
  const r6 = e7.verticalOffset;
  return !!r6 && !(r6.screenLength <= 0 || r(r6.maxWorldLength) && r6.maxWorldLength <= 0);
}
function o9(t13) {
  if (!t13)
    return false;
  if (!t13.supportsCallout || !t13.supportsCallout())
    return false;
  const e7 = t13.callout;
  return !!e7 && (!!e7.visible && !!n12(t13));
}
var u8 = { types: { key: "type", base: p22, typeMap: { line: y5 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/Symbol3DVerticalOffset.js
var n13;
var p23 = n13 = class extends l {
  constructor(r6) {
    super(r6), this.screenLength = 0, this.minWorldLength = 0, this.maxWorldLength = null;
  }
  clone() {
    return new n13({ screenLength: this.screenLength, minWorldLength: this.minWorldLength, maxWorldLength: this.maxWorldLength });
  }
};
e([y(a11)], p23.prototype, "screenLength", void 0), e([y({ type: Number, nonNullable: true, json: { write: true, default: 0 } })], p23.prototype, "minWorldLength", void 0), e([y({ type: Number, json: { write: true } })], p23.prototype, "maxWorldLength", void 0), p23 = n13 = e([a2("esri.symbols.support.Symbol3DVerticalOffset")], p23);
var i7 = p23;

// node_modules/@arcgis/core/symbols/LabelSymbol3D.js
var n14;
var u9 = j.ofType({ base: null, key: "type", typeMap: { text: j4 } });
var f7 = n14 = class extends k {
  constructor(t13) {
    super(t13), this.verticalOffset = null, this.callout = null, this.styleOrigin = null, this.symbolLayers = new u9(), this.type = "label-3d";
  }
  supportsCallout() {
    return true;
  }
  hasVisibleCallout() {
    return o9(this);
  }
  hasVisibleVerticalOffset() {
    return n12(this);
  }
  clone() {
    return new n14({ styleOrigin: p(this.styleOrigin), symbolLayers: p(this.symbolLayers), thumbnail: p(this.thumbnail), callout: p(this.callout), verticalOffset: p(this.verticalOffset) });
  }
  static fromTextSymbol(t13) {
    return new n14({ symbolLayers: [j4.fromTextSymbol(t13)] });
  }
};
e([y({ type: i7, json: { write: true } })], f7.prototype, "verticalOffset", void 0), e([y(u8)], f7.prototype, "callout", void 0), e([y({ json: { read: false, write: false } })], f7.prototype, "styleOrigin", void 0), e([y({ type: u9 })], f7.prototype, "symbolLayers", void 0), e([o3({ LabelSymbol3D: "label-3d" }, { readOnly: true })], f7.prototype, "type", void 0), f7 = n14 = e([a2("esri.symbols.LabelSymbol3D")], f7);
var b3 = f7;

// node_modules/@arcgis/core/symbols/LineSymbol3D.js
var l19;
var a15 = j.ofType({ base: null, key: "type", typeMap: { line: h6, path: c13 } });
var n15 = j.ofType({ base: null, key: "type", typeMap: { line: h6, path: c13 } });
var c16 = l19 = class extends k {
  constructor(o10) {
    super(o10), this.symbolLayers = new a15(), this.type = "line-3d";
  }
  clone() {
    return new l19({ styleOrigin: p(this.styleOrigin), symbolLayers: p(this.symbolLayers), thumbnail: p(this.thumbnail) });
  }
  static fromSimpleLineSymbol(o10) {
    return new l19({ symbolLayers: [h6.fromSimpleLineSymbol(o10)] });
  }
};
e([y({ type: a15, json: { type: n15 } })], c16.prototype, "symbolLayers", void 0), e([o3({ LineSymbol3D: "line-3d" }, { readOnly: true })], c16.prototype, "type", void 0), c16 = l19 = e([a2("esri.symbols.LineSymbol3D")], c16);
var b4 = c16;

// node_modules/@arcgis/core/symbols/MeshSymbol3D.js
var i8;
var y6 = j.ofType({ base: null, key: "type", typeMap: { fill: f4 } });
var a16 = i8 = class extends k {
  constructor(o10) {
    super(o10), this.symbolLayers = new y6(), this.type = "mesh-3d";
  }
  clone() {
    return new i8({ styleOrigin: p(this.styleOrigin), symbolLayers: p(this.symbolLayers), thumbnail: p(this.thumbnail) });
  }
  static fromSimpleFillSymbol(o10) {
    return new i8({ symbolLayers: [f4.fromSimpleFillSymbol(o10)] });
  }
};
e([y({ type: y6 })], a16.prototype, "symbolLayers", void 0), e([o3({ MeshSymbol3D: "mesh-3d" }, { readOnly: true })], a16.prototype, "type", void 0), a16 = i8 = e([a2("esri.symbols.MeshSymbol3D")], a16);
var c17 = a16;

// node_modules/@arcgis/core/symbols/PictureFillSymbol.js
var c18;
var u10 = c18 = class extends p8 {
  constructor(...t13) {
    super(...t13), this.type = "picture-fill", this.url = null, this.xscale = 1, this.yscale = 1, this.width = 12, this.height = 12, this.xoffset = 0, this.yoffset = 0, this.source = null;
  }
  normalizeCtorArgs(t13, s7, e7, r6) {
    if (t13 && "string" != typeof t13 && null == t13.imageData)
      return t13;
    const i9 = {};
    return t13 && (i9.url = t13), s7 && (i9.outline = s7), null != e7 && (i9.width = o4(e7)), null != r6 && (i9.height = o4(r6)), i9;
  }
  clone() {
    const t13 = new c18({ color: p(this.color), height: this.height, outline: this.outline && this.outline.clone(), url: this.url, width: this.width, xoffset: this.xoffset, xscale: this.xscale, yoffset: this.yoffset, yscale: this.yscale });
    return t13._set("source", p(this.source)), t13;
  }
  hash() {
    var _a;
    return `${super.hash()}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.height}.${this.url}.${this.width}.${this.xoffset}.${this.xscale}.${this.yoffset}.${this.yscale}`;
  }
};
e([o3({ esriPFS: "picture-fill" }, { readOnly: true })], u10.prototype, "type", void 0), e([y(m5)], u10.prototype, "url", void 0), e([y({ type: Number, json: { write: true } })], u10.prototype, "xscale", void 0), e([y({ type: Number, json: { write: true } })], u10.prototype, "yscale", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], u10.prototype, "width", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], u10.prototype, "height", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], u10.prototype, "xoffset", void 0), e([y({ type: Number, cast: o4, json: { write: true } })], u10.prototype, "yoffset", void 0), e([y(c3)], u10.prototype, "source", void 0), u10 = c18 = e([a2("esri.symbols.PictureFillSymbol")], u10);
var a17 = u10;

// node_modules/@arcgis/core/symbols/PointSymbol3D.js
var b5;
var f8 = j.ofType({ base: null, key: "type", typeMap: { icon: S3, object: l15, text: j4 } });
var S4 = b5 = class extends k {
  constructor(t13) {
    super(t13), this.verticalOffset = null, this.callout = null, this.symbolLayers = new f8(), this.type = "point-3d";
  }
  supportsCallout() {
    if ((this.symbolLayers ? this.symbolLayers.length : 0) < 1)
      return false;
    for (const t13 of this.symbolLayers.items)
      switch (t13.type) {
        case "icon":
        case "text":
        case "object":
          continue;
        default:
          return false;
      }
    return true;
  }
  hasVisibleCallout() {
    return o9(this);
  }
  hasVisibleVerticalOffset() {
    return n12(this);
  }
  clone() {
    return new b5({ verticalOffset: p(this.verticalOffset), callout: p(this.callout), styleOrigin: p(this.styleOrigin), symbolLayers: p(this.symbolLayers), thumbnail: p(this.thumbnail) });
  }
  static fromSimpleMarkerSymbol(t13) {
    return new b5({ symbolLayers: [S3.fromSimpleMarkerSymbol(t13)] });
  }
  static fromPictureMarkerSymbol(t13) {
    return new b5({ symbolLayers: [S3.fromPictureMarkerSymbol(t13)] });
  }
  static fromCIMSymbol(t13) {
    var _a, _b;
    const o10 = (_b = (_a = t13.data) == null ? void 0 : _a.symbol) == null ? void 0 : _b.type;
    if ("CIMPointSymbol" !== o10)
      return null;
    const r6 = t13.data.symbol;
    return new b5((r6 == null ? void 0 : r6.callout) ? { symbolLayers: [S3.fromCIMSymbol(t13)], callout: { type: "line", size: 0.5, color: [0, 0, 0] }, verticalOffset: { screenLength: 40 } } : { symbolLayers: [S3.fromCIMSymbol(t13)] });
  }
  static fromTextSymbol(t13) {
    return new b5({ symbolLayers: [j4.fromTextSymbol(t13)] });
  }
};
e([y({ type: i7, json: { write: true } })], S4.prototype, "verticalOffset", void 0), e([y(u8)], S4.prototype, "callout", void 0), e([y({ type: f8, json: { origins: { "web-scene": { write: true } } } })], S4.prototype, "symbolLayers", void 0), e([o3({ PointSymbol3D: "point-3d" }, { readOnly: true })], S4.prototype, "type", void 0), S4 = b5 = e([a2("esri.symbols.PointSymbol3D")], S4);
var h7 = S4;

// node_modules/@arcgis/core/symbols/PolygonSymbol3D.js
var L;
var u11 = j.ofType({ base: null, key: "type", typeMap: { extrude: d5, fill: f4, icon: S3, line: h6, object: l15, text: j4, water: n11 } });
var j5 = L = class extends k {
  constructor(o10) {
    super(o10), this.symbolLayers = new u11(), this.type = "polygon-3d";
  }
  clone() {
    return new L({ styleOrigin: p(this.styleOrigin), symbolLayers: p(this.symbolLayers), thumbnail: p(this.thumbnail) });
  }
  static fromJSON(o10) {
    const e7 = new L();
    if (e7.read(o10), 2 === e7.symbolLayers.length && "fill" === e7.symbolLayers.getItemAt(0).type && "line" === e7.symbolLayers.getItemAt(1).type) {
      const r6 = e7.symbolLayers.getItemAt(0), s7 = e7.symbolLayers.getItemAt(1);
      !s7.enabled || o10.symbolLayers && o10.symbolLayers[1] && false === o10.symbolLayers[1].enable || (r6.outline = { size: s7.size, color: r(s7.material) ? s7.material.color : null }), e7.symbolLayers.removeAt(1);
    }
    return e7;
  }
  static fromSimpleFillSymbol(o10) {
    return new L({ symbolLayers: [f4.fromSimpleFillSymbol(o10)] });
  }
};
e([y({ type: u11, json: { write: true } })], j5.prototype, "symbolLayers", void 0), e([o3({ PolygonSymbol3D: "polygon-3d" }, { readOnly: true })], j5.prototype, "type", void 0), j5 = L = e([a2("esri.symbols.PolygonSymbol3D")], j5);
var S5 = j5;

// node_modules/@arcgis/core/symbols/WebStyleSymbol.js
var y7;
var h8 = y7 = class extends a4 {
  constructor(t13) {
    super(t13), this.styleName = null, this.portal = null, this.styleUrl = null, this.thumbnail = null, this.name = null, this.type = "web-style";
  }
  get _fetchCacheKey() {
    const t13 = r(this.portal) ? this.portal : b.getDefault(), e7 = t13.user ? t13.user.username : null;
    return `${this.styleName}:${this.styleUrl}:${this.name}:${e7}:${t13.url}`;
  }
  read(t13, e7) {
    this.portal = e7 == null ? void 0 : e7.portal, super.read(t13, e7);
  }
  clone() {
    return new y7({ name: this.name, styleUrl: this.styleUrl, styleName: this.styleName, portal: this.portal });
  }
  fetchSymbol(t13) {
    return this._fetchSymbol("webRef", t13);
  }
  fetchCIMSymbol(t13) {
    return this._fetchSymbol("cimRef", t13);
  }
  async _fetchSymbol(t13, s7) {
    const l20 = r(s7) ? s7.cache : null, i9 = l20 ? this._fetchCacheKey : null;
    if (r(l20)) {
      const t14 = i9 && l20.get(i9);
      if (t14)
        return t14.clone();
    }
    const p24 = await u12();
    f(s7);
    const a18 = p24.resolveWebStyleSymbol(this, { portal: this.portal }, t13, s7);
    a18.catch((t14) => {
      s.getLogger(this.declaredClass).error("#fetchSymbol()", "Failed to create symbol from style", t14);
    });
    const c19 = await a18;
    return "webRef" === t13 && "point-3d" === c19.type || "cimRef" === t13 && "cim" === c19.type ? (r(l20) && l20.set(i9, c19.clone()), c19) : null;
  }
};
function u12() {
  return import("./webStyleSymbolUtils-UPI4T2UM.js");
}
e([y({ json: { write: false } })], h8.prototype, "color", void 0), e([y({ type: String, json: { write: true } })], h8.prototype, "styleName", void 0), e([y({ type: b, json: { write: false } })], h8.prototype, "portal", void 0), e([y({ type: String, json: { read: p2, write: f2 } })], h8.prototype, "styleUrl", void 0), e([y({ type: p5, json: { read: false } })], h8.prototype, "thumbnail", void 0), e([y({ type: String, json: { write: true } })], h8.prototype, "name", void 0), e([o3({ styleSymbolReference: "web-style" }, { readOnly: true })], h8.prototype, "type", void 0), e([y()], h8.prototype, "_fetchCacheKey", null), h8 = y7 = e([a2("esri.symbols.WebStyleSymbol")], h8);
var f9 = h8;

// node_modules/@arcgis/core/symbols.js
function S6(e7) {
  if (!e7)
    return false;
  switch (e7.type) {
    case "picture-fill":
    case "picture-marker":
    case "simple-fill":
    case "simple-line":
    case "simple-marker":
    case "text":
    case "cim":
      return true;
    default:
      return false;
  }
}
function x(e7) {
  if (!e7)
    return false;
  switch (e7.type) {
    case "label-3d":
    case "line-3d":
    case "mesh-3d":
    case "point-3d":
    case "polygon-3d":
      return true;
    default:
      return false;
  }
}
var j6 = { base: a4, key: "type", typeMap: { "simple-fill": S2, "picture-fill": a17, "picture-marker": n6, "simple-line": m3, "simple-marker": y2, text: m10, "label-3d": b3, "line-3d": b4, "mesh-3d": c17, "point-3d": h7, "polygon-3d": S5, "web-style": f9, cim: d }, errorContext: "symbol" };
var D = { base: a4, key: "type", typeMap: { "picture-marker": n6, "simple-marker": y2, text: m10, "web-style": f9, cim: d }, errorContext: "symbol" };
var k2 = u({ types: j6 });
var M = { base: a4, key: "type", typeMap: { "simple-fill": S2, "picture-fill": a17, "picture-marker": n6, "simple-line": m3, "simple-marker": y2, text: m10, "line-3d": b4, "mesh-3d": c17, "point-3d": h7, "polygon-3d": S5, "web-style": f9, cim: d }, errorContext: "symbol" };
var C2 = { base: a4, key: "type", typeMap: { text: m10, "label-3d": b3 }, errorContext: "symbol" };
var F = { base: a4, key: "type", typeMap: { "line-3d": b4, "mesh-3d": c17, "point-3d": h7, "polygon-3d": S5, "web-style": f9, cim: d }, errorContext: "symbol" };
var w2 = { base: a4, key: "type", typeMap: { "label-3d": b3 }, errorContext: "symbol" };
var P = S(j6);

export {
  t8 as t,
  l10 as l,
  m3 as m,
  j2 as j,
  p20 as p,
  d4 as d,
  a7 as a,
  p5 as p2,
  k,
  b3 as b,
  b4 as b2,
  c17 as c,
  n6 as n,
  h7 as h,
  S5 as S,
  S2,
  y2 as y,
  m10 as m2,
  f9 as f,
  S6 as S3,
  x,
  j6 as j2,
  D,
  k2,
  M,
  C2 as C,
  F,
  w2 as w,
  P
};
//# sourceMappingURL=chunk-CRF4O3Y3.js.map
