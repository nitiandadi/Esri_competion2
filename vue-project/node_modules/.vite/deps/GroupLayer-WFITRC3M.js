import {
  a as a2
} from "./chunk-GA6CGE57.js";
import {
  d,
  l as l4,
  t as t2
} from "./chunk-DS5MJ67H.js";
import {
  y as y2
} from "./chunk-L2M6ALW2.js";
import {
  l as l2
} from "./chunk-ITPL42M7.js";
import {
  l as l3
} from "./chunk-55MPB7OZ.js";
import {
  _
} from "./chunk-VRZTCZFJ.js";
import {
  n
} from "./chunk-EJKIE4MZ.js";
import "./chunk-YZ3HZMEM.js";
import "./chunk-5XBZ477A.js";
import {
  t
} from "./chunk-YUXNJDFN.js";
import "./chunk-TKZTELJQ.js";
import {
  c
} from "./chunk-CPJE5ZZA.js";
import "./chunk-LJFFMEVT.js";
import "./chunk-5IWWLTWU.js";
import {
  O
} from "./chunk-74KT22JL.js";
import "./chunk-BQHZXXFC.js";
import {
  b
} from "./chunk-4JB2KWLF.js";
import "./chunk-3MAMOMOP.js";
import "./chunk-QPSL5BDS.js";
import "./chunk-AIOICOJJ.js";
import "./chunk-HWGER6NN.js";
import "./chunk-FI2SN5P7.js";
import "./chunk-ZXEHLMMH.js";
import "./chunk-BHKUW5DD.js";
import "./chunk-5W2WWLX7.js";
import {
  U,
  l
} from "./chunk-QP5ZWBKN.js";
import "./chunk-YSJ4W32U.js";
import "./chunk-2G4WAYFD.js";
import "./chunk-PK5IA5PH.js";
import "./chunk-CXHYHUY6.js";
import "./chunk-CXBJMCKT.js";
import "./chunk-ULOJUU6K.js";
import "./chunk-3CXPBSW5.js";
import "./chunk-PLL74BYO.js";
import "./chunk-AMV7VELH.js";
import "./chunk-33RBBVRO.js";
import "./chunk-II3EAW7L.js";
import "./chunk-JU2WP2RZ.js";
import "./chunk-NI6ENKKR.js";
import "./chunk-6XDV3BWZ.js";
import "./chunk-OTDDRQS2.js";
import "./chunk-W3UIP6CW.js";
import "./chunk-CHJGFW3N.js";
import "./chunk-25GQOVW6.js";
import "./chunk-QLGPYDHY.js";
import "./chunk-5WYME2YP.js";
import "./chunk-PEP3ZFMY.js";
import "./chunk-VOSZ2G24.js";
import "./chunk-YMGINT43.js";
import "./chunk-2WLZX6A7.js";
import "./chunk-M7CMZTD6.js";
import "./chunk-ERJGVLTB.js";
import "./chunk-T5VSOT6T.js";
import "./chunk-OHZM2VYI.js";
import "./chunk-DDRAFOUW.js";
import "./chunk-F4DUNBGT.js";
import "./chunk-BF3T2CWA.js";
import "./chunk-PTCP7EIR.js";
import "./chunk-Z4G4Y7TU.js";
import "./chunk-4TEGWGCF.js";
import {
  r as r2
} from "./chunk-JATK7CEQ.js";
import "./chunk-74TXAD7S.js";
import "./chunk-HIRLBWV3.js";
import "./chunk-AFQAO5F4.js";
import {
  a2 as a,
  e,
  e2,
  y3 as y
} from "./chunk-OA5ES74L.js";
import "./chunk-6VTYOWNK.js";
import "./chunk-RLEMMDH4.js";
import "./chunk-6ZUWLK7F.js";
import "./chunk-YVZY5LDV.js";
import "./chunk-H32MMKAJ.js";
import "./chunk-MKHZ5X6F.js";
import {
  r
} from "./chunk-HVCAHUYB.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var _2 = class extends n(t(c(_(l4(d(O(b))))))) {
  constructor(i) {
    super(i), this._visibilityHandles = {}, this.allLayers = new l3({ getCollections: () => [this.layers], getChildrenFunction: (i2) => "layers" in i2 ? i2.layers : null }), this.allTables = t2(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group";
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles(l(() => this.visible, this._onVisibilityChange.bind(this), U));
  }
  _writeLayers(i, e3, t3, r3) {
    const o = [];
    if (!i)
      return o;
    i.forEach((i2) => {
      const e4 = y2(i2, r3.webmap ? r3.webmap.getLayerJSONFromResourceInfo(i2) : null, r3);
      r(e4) && e4.layerType && o.push(e4);
    }), e3.layers = o;
  }
  set portalItem(i) {
    this._set("portalItem", i);
  }
  set visibilityMode(i) {
    const e3 = this._get("visibilityMode") !== i;
    this._set("visibilityMode", i), e3 && this._enforceVisibility(i, this.visible);
  }
  load(i) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Scene Service"], layerModuleTypeMap: a2 }, i)), Promise.resolve(this);
  }
  async loadAll() {
    return l2(this, (i) => {
      i(this.layers, this.tables);
    });
  }
  layerAdded(i) {
    i.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(i) : "inherited" === this.visibilityMode && (i.visible = this.visible), this._visibilityHandles[i.uid] = l(() => i.visible, (e3) => this._onChildVisibilityChange(i, e3), U);
  }
  layerRemoved(i) {
    const e3 = this._visibilityHandles[i.uid];
    e3 && (e3.remove(), delete this._visibilityHandles[i.uid]), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(i) {
    this.layers.forEach((e3) => {
      e3 !== i && (e3.visible = false);
    });
  }
  _enforceVisibility(i, e3) {
    if (!e2(this).initialized)
      return;
    const t3 = this.layers;
    let s = t3.find((i2) => i2.visible);
    switch (i) {
      case "exclusive":
        t3.length && !s && (s = t3.getItemAt(0), s.visible = true), this._turnOffOtherLayers(s);
        break;
      case "inherited":
        t3.forEach((i2) => {
          i2.visible = e3;
        });
    }
  }
  _onVisibilityChange(i) {
    "inherited" === this.visibilityMode && this.layers.forEach((e3) => {
      e3.visible = i;
    });
  }
  _onChildVisibilityChange(i, e3) {
    switch (this.visibilityMode) {
      case "exclusive":
        e3 ? this._turnOffOtherLayers(i) : this._isAnyLayerVisible() || (i.visible = true);
        break;
      case "inherited":
        i.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((i) => i.visible);
  }
};
e([y({ readOnly: true, dependsOn: [] })], _2.prototype, "allLayers", void 0), e([y({ readOnly: true })], _2.prototype, "allTables", void 0), e([y()], _2.prototype, "fullExtent", void 0), e([y({ json: { read: true, write: true } })], _2.prototype, "blendMode", void 0), e([y({ json: { read: false, write: { ignoreOrigin: true } } })], _2.prototype, "layers", void 0), e([r2("layers")], _2.prototype, "_writeLayers", null), e([y({ type: ["GroupLayer"] })], _2.prototype, "operationalLayerType", void 0), e([y({ json: { origins: { "web-document": { read: false, write: false } } } })], _2.prototype, "portalItem", null), e([y()], _2.prototype, "spatialReference", void 0), e([y({ json: { read: false }, readOnly: true, value: "group" })], _2.prototype, "type", void 0), e([y({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { read: false, write: false } } } })], _2.prototype, "visibilityMode", null), _2 = e([a("esri.layers.GroupLayer")], _2);
var g = _2;
export {
  g as default
};
//# sourceMappingURL=GroupLayer-WFITRC3M.js.map
