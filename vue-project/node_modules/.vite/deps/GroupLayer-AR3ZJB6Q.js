import {
  a as a2
} from "./chunk-JOMEOAZK.js";
import {
  d,
  l as l4,
  t as t2
} from "./chunk-REIKIWGL.js";
import {
  y as y2
} from "./chunk-OUJER2CY.js";
import {
  l as l2
} from "./chunk-DLEEZ5CX.js";
import {
  l as l3
} from "./chunk-BRSYQXRG.js";
import {
  _
} from "./chunk-D47GNCYL.js";
import "./chunk-B4KXWO6Z.js";
import {
  n
} from "./chunk-WIR7P2UT.js";
import "./chunk-4YJQ46TP.js";
import "./chunk-LC5BGIRA.js";
import {
  t
} from "./chunk-N44T6V5D.js";
import "./chunk-ST7DNJJS.js";
import {
  c
} from "./chunk-QSDDU4NM.js";
import "./chunk-FNGJTVTP.js";
import {
  O
} from "./chunk-3MIQEU54.js";
import {
  b
} from "./chunk-Q3FHJWKB.js";
import "./chunk-K7L4V6NL.js";
import "./chunk-763HXOZK.js";
import "./chunk-CVSP2FBZ.js";
import "./chunk-UNUPXPO6.js";
import "./chunk-OF6BJKPA.js";
import "./chunk-FAK3SJAD.js";
import "./chunk-EPJSBV4J.js";
import "./chunk-RCZJUTGU.js";
import "./chunk-REIXEATJ.js";
import "./chunk-YEFLZ2OV.js";
import {
  U,
  l
} from "./chunk-FXMJJBXP.js";
import "./chunk-6YBCJ6DZ.js";
import "./chunk-P26WTKBK.js";
import "./chunk-WAN4YZSB.js";
import "./chunk-DKH5QOVM.js";
import "./chunk-YZRPNTZZ.js";
import "./chunk-EVKJKYHI.js";
import "./chunk-TNQLNDIQ.js";
import "./chunk-FA3YUERM.js";
import "./chunk-LVRAFE6T.js";
import "./chunk-LSUFI7PR.js";
import "./chunk-5CMPUNQG.js";
import "./chunk-YT74S35I.js";
import "./chunk-U5I7FQWJ.js";
import "./chunk-M3KO43BW.js";
import "./chunk-BQXNXAP2.js";
import "./chunk-JT54I3AY.js";
import "./chunk-TNTTCGVB.js";
import "./chunk-DC3QI5ZE.js";
import "./chunk-EGHLQERQ.js";
import "./chunk-7OAHPHOV.js";
import "./chunk-SZO7ZKE4.js";
import "./chunk-I2U7UK6N.js";
import "./chunk-FQ7L63IU.js";
import "./chunk-6K5VVUVI.js";
import "./chunk-YHZVWABO.js";
import "./chunk-WATRS3LJ.js";
import "./chunk-CPUYSXBP.js";
import "./chunk-MJFFZ3MM.js";
import "./chunk-B6GJAETG.js";
import "./chunk-FC74MT6E.js";
import {
  r as r2
} from "./chunk-H2ENCYR3.js";
import "./chunk-SVHG5VY2.js";
import "./chunk-S47644HM.js";
import "./chunk-QXPN4D5D.js";
import "./chunk-DLM7WQKI.js";
import {
  a2 as a,
  e,
  e2,
  y3 as y
} from "./chunk-7GTATSRF.js";
import "./chunk-MTJ2HM2W.js";
import "./chunk-PXVSWY3C.js";
import "./chunk-QLY5H3XF.js";
import "./chunk-UG2OEDEE.js";
import "./chunk-HSFMVUPO.js";
import "./chunk-IOCWNUEO.js";
import "./chunk-PR6SXADK.js";
import "./chunk-MGJMBJDY.js";
import {
  r
} from "./chunk-WHB7G7RI.js";
import "./chunk-DFKQJ226.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var _2 = class extends n(t(c(_(l4(d(O(b))))))) {
  constructor(i) {
    super(i), this._visibilityHandles = {}, this.allLayers = new l3({ getCollections: () => [this.layers], getChildrenFunction: (i2) => "layers" in i2 ? i2.layers : null }), this.allTables = t2(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group";
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles(l(() => this.visible, this._onVisibilityChange.bind(this), U));
  }
  _writeLayers(i, e3, t3, r3) {
    const o = [];
    if (!i)
      return o;
    i.forEach((i2) => {
      const e4 = y2(i2, r3.webmap ? r3.webmap.getLayerJSONFromResourceInfo(i2) : null, r3);
      r(e4) && e4.layerType && o.push(e4);
    }), e3.layers = o;
  }
  set portalItem(i) {
    this._set("portalItem", i);
  }
  set visibilityMode(i) {
    const e3 = this._get("visibilityMode") !== i;
    this._set("visibilityMode", i), e3 && this._enforceVisibility(i, this.visible);
  }
  load(i) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Scene Service"], layerModuleTypeMap: a2 }, i)), Promise.resolve(this);
  }
  async loadAll() {
    return l2(this, (i) => {
      i(this.layers, this.tables);
    });
  }
  layerAdded(i) {
    i.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(i) : "inherited" === this.visibilityMode && (i.visible = this.visible), this._visibilityHandles[i.uid] = l(() => i.visible, (e3) => this._onChildVisibilityChange(i, e3), U);
  }
  layerRemoved(i) {
    const e3 = this._visibilityHandles[i.uid];
    e3 && (e3.remove(), delete this._visibilityHandles[i.uid]), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(i) {
    this.layers.forEach((e3) => {
      e3 !== i && (e3.visible = false);
    });
  }
  _enforceVisibility(i, e3) {
    if (!e2(this).initialized)
      return;
    const t3 = this.layers;
    let s = t3.find((i2) => i2.visible);
    switch (i) {
      case "exclusive":
        t3.length && !s && (s = t3.getItemAt(0), s.visible = true), this._turnOffOtherLayers(s);
        break;
      case "inherited":
        t3.forEach((i2) => {
          i2.visible = e3;
        });
    }
  }
  _onVisibilityChange(i) {
    "inherited" === this.visibilityMode && this.layers.forEach((e3) => {
      e3.visible = i;
    });
  }
  _onChildVisibilityChange(i, e3) {
    switch (this.visibilityMode) {
      case "exclusive":
        e3 ? this._turnOffOtherLayers(i) : this._isAnyLayerVisible() || (i.visible = true);
        break;
      case "inherited":
        i.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((i) => i.visible);
  }
};
e([y({ readOnly: true, dependsOn: [] })], _2.prototype, "allLayers", void 0), e([y({ readOnly: true })], _2.prototype, "allTables", void 0), e([y()], _2.prototype, "fullExtent", void 0), e([y({ json: { read: true, write: true } })], _2.prototype, "blendMode", void 0), e([y({ json: { read: false, write: { ignoreOrigin: true } } })], _2.prototype, "layers", void 0), e([r2("layers")], _2.prototype, "_writeLayers", null), e([y({ type: ["GroupLayer"] })], _2.prototype, "operationalLayerType", void 0), e([y({ json: { origins: { "web-document": { read: false, write: false } } } })], _2.prototype, "portalItem", null), e([y()], _2.prototype, "spatialReference", void 0), e([y({ json: { read: false }, readOnly: true, value: "group" })], _2.prototype, "type", void 0), e([y({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { read: false, write: false } } } })], _2.prototype, "visibilityMode", null), _2 = e([a("esri.layers.GroupLayer")], _2);
var g = _2;
export {
  g as default
};
//# sourceMappingURL=GroupLayer-AR3ZJB6Q.js.map
