import {
  c
} from "./chunk-HSFMVUPO.js";
import {
  s
} from "./chunk-IOCWNUEO.js";
import {
  p,
  t
} from "./chunk-PR6SXADK.js";
import {
  r
} from "./chunk-WHB7G7RI.js";

// node_modules/@arcgis/core/core/Logger.js
var o = { info: 0, warn: 1, error: 2, none: 3 };
var s2 = class {
  constructor(e2) {
    this.level = null, this._module = "", this._parent = null, this.writer = null, this._loggedMessages = { error: /* @__PURE__ */ new Map(), warn: /* @__PURE__ */ new Map(), info: /* @__PURE__ */ new Map() }, null != e2.level && (this.level = e2.level), null != e2.writer && (this.writer = e2.writer), this._module = e2.module, s2._loggers[this.module] = this;
    const t2 = this.module.lastIndexOf(".");
    -1 !== t2 && (this._parent = s2.getLogger(this.module.slice(0, t2)));
  }
  get module() {
    return this._module;
  }
  get parent() {
    return this._parent;
  }
  error(...e2) {
    this._log("error", "always", ...e2);
  }
  warn(...e2) {
    this._log("warn", "always", ...e2);
  }
  info(...e2) {
    this._log("info", "always", ...e2);
  }
  errorOnce(...e2) {
    this._log("error", "once", ...e2);
  }
  warnOnce(...e2) {
    this._log("warn", "once", ...e2);
  }
  infoOnce(...e2) {
    this._log("info", "once", ...e2);
  }
  errorOncePerTick(...e2) {
    this._log("error", "oncePerTick", ...e2);
  }
  warnOncePerTick(...e2) {
    this._log("warn", "oncePerTick", ...e2);
  }
  infoOncePerTick(...e2) {
    this._log("info", "oncePerTick", ...e2);
  }
  get test() {
    const e2 = this;
    return { loggedMessages: e2._loggedMessages, clearLoggedWarnings: () => e2._loggedMessages.warn.clear() };
  }
  static get testSingleton() {
    return { resetLoggers(e2 = {}) {
      const t2 = s2._loggers;
      return s2._loggers = e2, t2;
    }, set throttlingDisabled(e2) {
      s2._throttlingDisabled = e2;
    } };
  }
  static getLogger(e2) {
    let t2 = s2._loggers[e2];
    return t2 || (t2 = new s2({ module: e2 })), t2;
  }
  _log(t2, r3, ...o2) {
    if (!this._matchLevel(t2))
      return;
    if ("always" !== r3 && !s2._throttlingDisabled) {
      const e2 = this._argsToKey(o2), n = this._loggedMessages[t2].get(e2);
      if ("once" === r3 && null != n || "oncePerTick" === r3 && n && n >= s2._tickCounter)
        return;
      this._loggedMessages[t2].set(e2, s2._tickCounter), s2._scheduleTickCounterIncrement();
    }
    for (const s4 of s.log.interceptors)
      if (s4(t2, this.module, ...o2))
        return;
    this._inheritedWriter()(t2, this.module, ...o2);
  }
  _parentWithMember(e2, r3) {
    let o2 = this;
    for (; r(o2); ) {
      const r4 = o2[e2];
      if (r(r4))
        return r4;
      o2 = o2.parent;
    }
    return r3;
  }
  _inheritedWriter() {
    return this._parentWithMember("writer", this._consoleWriter);
  }
  _consoleWriter(e2, t2, ...r3) {
    console[e2](`[${t2}]`, ...r3);
  }
  _matchLevel(t2) {
    const r3 = s.log.level ? s.log.level : "warn";
    return o[this._parentWithMember("level", r3)] <= o[t2];
  }
  _argsToKey(...e2) {
    const t2 = (e3, t3) => "object" != typeof t3 || Array.isArray(t3) ? t3 : "[Object]";
    return c(JSON.stringify(e2, t2));
  }
  static _scheduleTickCounterIncrement() {
    s2._tickCounterScheduled || (s2._tickCounterScheduled = true, Promise.resolve().then(() => {
      s2._tickCounter++, s2._tickCounterScheduled = false;
    }));
  }
};
s2._loggers = {}, s2._tickCounter = 0, s2._tickCounterScheduled = false, s2._throttlingDisabled = false;

// node_modules/@arcgis/core/core/Message.js
function e(e2, r3) {
  return e2.replace(/\$\{([^\s\:\}]*)(?:\:([^\s\:\}]+))?\}/g, (e3, s4) => {
    if ("" === s4)
      return "$";
    const n = t(s4, r3), i = n ?? "";
    if (void 0 === i)
      throw new Error(`could not find key "${s4}" in template`);
    return i.toString();
  });
}
var r2 = class {
  constructor(t2, s4, n) {
    this.name = t2, this.details = n, this instanceof r2 && (this.message = (s4 && e(s4, n)) ?? "");
  }
  toString() {
    return "[" + this.name + "]: " + this.message;
  }
};

// node_modules/@arcgis/core/core/Error.js
var s3 = class extends r2 {
  constructor(e2, t2, r3) {
    if (super(e2, t2, r3), !(this instanceof s3))
      return new s3(e2, t2, r3);
  }
  toJSON() {
    if (null != this.details)
      try {
        return { name: this.name, message: this.message, details: JSON.parse(JSON.stringify(this.details, (t2, r3) => {
          if (r3 && "object" == typeof r3 && "function" == typeof r3.toJSON)
            return r3;
          try {
            return p(r3);
          } catch (s4) {
            return "[object]";
          }
        })) };
      } catch (r3) {
        throw s2.getLogger("esri.core.Error").error(r3), r3;
      }
    return { name: this.name, message: this.message, details: this.details };
  }
  static fromJSON(e2) {
    return new s3(e2.name, e2.message, e2.details);
  }
};
s3.prototype.type = "error";

export {
  s2 as s,
  r2 as r,
  s3 as s2
};
//# sourceMappingURL=chunk-UG2OEDEE.js.map
