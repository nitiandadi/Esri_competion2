import{l as a}from"./index-93a23f67.js";import{bN as y,tm as E,x as _,ez as V,e as n,y as u,bM as D,b as R,v,gE as I,bJ as T,bK as A,t as f,a6 as w,bL as l,r as h,c as Q}from"./mapviewstore-8a6f290e.js";import{n as P,s as L}from"./executeForIds-a8eb83be.js";import{n as q}from"./executeQueryPBF-9fbd9b6f.js";async function j(e,t,r){const o=y(e);return E(o,_.from(t),{...r}).then(s=>({count:s.data.count,extent:V.fromJSON(s.data.extent)}))}let i=class extends v{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return I(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){var d;const r=this._normalizeQuery(e),o=((d=e.outStatistics)==null?void 0:d[0])!=null,s=T("featurelayer-pbf-statistics"),c=!o||s;let p;if(this.pbfSupported&&c)try{p=await q(this.url,r,t)}catch(m){if(m.name!=="query:parsing-pbf")throw m;this.pbfSupported=!1}return this.pbfSupported&&c||(p=await A(this.url,r,t)),this._normalizeFields(p.fields),p}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||f(this.infoFor3D)||!t.assetMaps||!t.features||!t.features.length)return w.fromJSON(t);const{meshFeatureSetFromJSON:o}=await l(a(()=>import("./meshFeatureSet-ca2a3fd1.js"),["assets/meshFeatureSet-ca2a3fd1.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css","assets/georeference-f722bf8f.js"]),r);return o(e,this.infoFor3D,t)}executeForCount(e,t){return P(this.url,this._normalizeQuery(e),t)}executeForExtent(e,t){return j(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return L(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:o}]=await l(Promise.all([a(()=>import("./mapviewstore-8a6f290e.js").then(s=>s.yU),["assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css"]),a(()=>import("./executeRelationshipQuery-b1111782.js"),["assets/executeRelationshipQuery-b1111782.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css"])]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:o}]=await l(Promise.all([a(()=>import("./mapviewstore-8a6f290e.js").then(s=>s.yU),["assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css"]),a(()=>import("./executeRelationshipQuery-b1111782.js"),["assets/executeRelationshipQuery-b1111782.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css"])]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),o(this.url,e,t)}async executeAttachmentQuery(e,t){const{executeAttachmentQuery:r,fetchAttachments:o,processAttachmentQueryResult:s}=await l(a(()=>import("./queryAttachments-04fd23da.js"),["assets/queryAttachments-04fd23da.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css"]),t),c=y(this.url);return s(c,await(this.queryAttachmentsSupported?r(c,e,t):o(c,e,t)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await l(a(()=>import("./executeTopFeaturesQuery-b09281df.js"),["assets/executeTopFeaturesQuery-b09281df.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css","assets/queryTopFeatures-771a54a4.js"]),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await l(a(()=>import("./executeForTopIds-79a69078.js"),["assets/executeForTopIds-79a69078.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css","assets/queryTopFeatures-771a54a4.js"]),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await l(a(()=>import("./executeForTopExtents-30406515.js"),["assets/executeForTopExtents-30406515.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css","assets/queryTopFeatures-771a54a4.js"]),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await l(a(()=>import("./executeForTopCount-c58a66e0.js"),["assets/executeForTopCount-c58a66e0.js","assets/mapviewstore-8a6f290e.js","assets/index-93a23f67.js","assets/index-2d69a2d2.css","assets/queryTopFeatures-771a54a4.js"]),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let t=_.from(e);if(t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?D.from(e.dynamicDataSource):this.dynamicDataSource),h(this.infoFor3D)&&this._queryIs3DObjectFormat(e)){t=t===e?t.clone():t,t.formatOf3DObjects=null;for(const r of this.infoFor3D.queryFormats){if(r==="3D_glb"){t.formatOf3DObjects=r;break}r!=="3D_gltf"||t.formatOf3DObjects||(t.formatOf3DObjects=r)}if(!t.formatOf3DObjects)throw new Q("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(f(t.outFields)||!t.outFields.includes("*")){t=t===e?t.clone():t,f(t.outFields)&&(t.outFields=[]);const{originX:r,originY:o,originZ:s,translationX:c,translationY:p,translationZ:d,scaleX:m,scaleY:S,scaleZ:b,rotationX:F,rotationY:x,rotationZ:O,rotationDeg:g}=this.infoFor3D.transformFieldRoles;t.outFields.push(r,o,s,c,p,d,m,S,b,F,x,O,g)}}return t}_normalizeFields(e){if(h(this.fieldsIndex)&&h(e))for(const t of e){const r=this.fieldsIndex.get(t.name);r&&Object.assign(t,r.toJSON())}}_queryIs3DObjectFormat(e){return h(this.infoFor3D)&&e.returnGeometry===!0&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}};n([u({type:D})],i.prototype,"dynamicDataSource",void 0),n([u()],i.prototype,"fieldsIndex",void 0),n([u()],i.prototype,"gdbVersion",void 0),n([u()],i.prototype,"infoFor3D",void 0),n([u({readOnly:!0})],i.prototype,"parsedUrl",null),n([u()],i.prototype,"pbfSupported",void 0),n([u()],i.prototype,"queryAttachmentsSupported",void 0),n([u()],i.prototype,"sourceSpatialReference",void 0),n([u({type:String})],i.prototype,"url",void 0),i=n([R("esri.tasks.QueryTask")],i);const U=i;export{U as x};
