import{ed as m,D as p,g as n,t as l,e as i,y as o,eb as d,b as h}from"./mapviewstore-8a6f290e.js";import{v as u}from"./I3SMeshView3D-93bcad7b.js";import{n as c}from"./LayerView3D-5ca1a46f.js";import{u as g}from"./LayerView-1a71a07c.js";import"./index-93a23f67.js";import"./I3SOverrides-4d35753f.js";import"./I3SNode-b25788d2.js";import"./I3SUtil-e7249754.js";import"./I3SBinaryReader-61540d2b.js";import"./RenderTexture-da0df617.js";import"./FeatureLayerView3D-4fcff01e.js";import"./FeatureLayerViewBase3D-8513ac94.js";import"./FeatureLikeLayerView3D-11c64dae.js";import"./dehydratedFeatureComparison-baf6aa6d.js";import"./queryForSymbologySnapping-9f2d564f.js";import"./elevationInfoUtils-db1a4384.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-5a654dde.js";import"./rendererConversion-e2be3445.js";import"./optimizedFeatureQueryEngineAdapter-2b234c6e.js";import"./centroid-15f2128f.js";import"./PooledRBush-d915efbf.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-d8795282.js";import"./QueryEngineResult-555e15c4.js";import"./WhereClause-1d488167.js";import"./executionError-fb3f283a.js";import"./utils-da1501b7.js";import"./ClassBreaksDefinition-e0623088.js";import"./projectionSupport-2ac8e0ed.js";import"./json-48e3ea08.js";import"./utils-756c69af.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-592d163d.js";import"./FeatureStore-92853357.js";import"./BoundsStore-ebfef852.js";import"./heatmapTextureUtils-7c84b067.js";import"./projectExtentUtils-e23412a1.js";import"./EventedSet-2690b7ae.js";import"./FeatureLayerView-c73d0326.js";import"./popupUtils-19dc2706.js";import"./RefreshableLayerView-def91771.js";import"./SceneModification-1c51c8db.js";import"./persistable-583a46db.js";import"./resourceExtension-dfbbe1e7.js";import"./SceneLayerWorker-6a57e0a6.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(d)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const nt=r;export{nt as default};
