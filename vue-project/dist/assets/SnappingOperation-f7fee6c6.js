import{t as c,r,p as q,e6 as U,it as A,cv as B,c8 as T,dc as G,cw as J,q as K,a9 as H,e as v,v as Q,y,b as V}from"./mapviewstore-8a6f290e.js";import{i as W}from"./dehydratedFeatureComparison-baf6aa6d.js";import{U as X}from"./InteractiveToolBase-0db68d23.js";import{e as Y}from"./SnappingContext-3f11e741.js";function pt({predicate:t=()=>!0,snappingManager:n,snappingContext:e,updatingHandles:s,useZ:o=!0}){const i=new X;if(c(n))return{snappingStep:[E,i],cancelSnapping:E};let l,d=null,a=null,h=null;const P=()=>{d=T(d),n.doneSnapping(),r(a)&&a.frameTask.remove(),a=null,l=G(l),h=null},x=tt(n,o,i);let f=null,u=null,k=null;return{snappingStep:[p=>{if(!t(p))return p;const{action:S}=p;if(S==="start"){const{info:_}=p,w=nt(n.view);if(a=et(e,p,w),a.context.selfSnappingZ=null,!o&&r(_)){const m=st(e.coordinateHelper,_.handle.component);r(m)&&(a.context.selfSnappingZ={value:m,elevationInfo:e.elevationInfo})}}if(r(a)){const{context:_,originalScenePos:w,originalPos:m}=a,{mapEnd:z,mapStart:$,scenePoints:M}=p,b=N(m,Z(z,$)),I=Z($,m),j={...p,action:"update"},D=a.context,C=ot(w,M),O=n.update({point:b,scenePoint:C,context:_});if(k=O,R(z,O,I,o),f=b,u=C,S!=="end"){const{frameTask:F}=a;c(d)&&(d=new AbortController),h=L=>{s.addPromise(J(x({frameTask:F,event:j,context:D,point:b,scenePoint:C,delta:I,getLastState:()=>({point:f,scenePoint:u,updatePoint:L.forceUpdate?null:k})},K(d).signal)))},h({forceUpdate:!1}),c(l)&&(l=q(()=>n.options.effectiveEnabled,()=>h==null?void 0:h({forceUpdate:!0})))}}return S==="end"&&P(),p},i],cancelSnapping:p=>(P(),p)}}function tt(t,n,e){return H(async({frameTask:s,point:o,scenePoint:i,context:l,event:d,delta:a,getLastState:h},P)=>{const x=await s.schedule(()=>t.snap({point:o,scenePoint:i,context:l,signal:P}),P);if(x.valid){let f=await s.schedule(()=>x.apply(),P);const u=h();r(u.point)&&o!==u.point&&(f=t.update({point:u.point,scenePoint:u.scenePoint,context:l})),!c(u.updatePoint)&&W(f,u.updatePoint)||(R(d.mapEnd,f,a,n),e.execute(d))}})}function nt(t){return t.type==="3d"?t.resourceController.scheduler.registerTask(U.SNAPPING):A}function et(t,n,e){return{context:new Y({editGeometryOperations:t.editGeometryOperations,elevationInfo:t.elevationInfo,pointer:t.pointer,vertexHandle:r(n.info)?n.info.handle:null,excludeFeature:t.excludeFeature,visualizer:t.visualizer}),originalPos:r(n.snapOrigin)?t.coordinateHelper.vectorToDehydratedPoint(n.snapOrigin):n.mapStart,originalScenePos:r(n.scenePoints)?n.scenePoints.sceneStart:null,frameTask:e}}function N(t,[n,e,s]){const o=B(t);return o.x+=n,o.y+=e,o.hasZ&&(o.z+=s),o}function ot(t,n){return c(t)||c(n)?null:N(t,Z(n.sceneEnd,n.sceneStart))}function Z(t,n){const e=t.hasZ&&n.hasZ?t.z-n.z:0;return[t.x-n.x,t.y-n.y,e]}function R(t,n,[e,s,o],i){t.x=n.x+e,t.y=n.y+s,i&&t.hasZ&&n.hasZ&&(t.z=n.z+o)}function st(t,n){if(!t.hasZ())return null;const e=n.vertices;let s=null;for(const o of e){const i=t.getZ(o.pos);if(r(s)&&r(i)&&Math.abs(i-s)>1e-6)return null;c(s)&&(s=i)}return s}function E(t){return t}let g=class extends Q{constructor(t){super(t),this.constrainResult=n=>n,this._snapPoints=null,this._frameTask=null,this._abortController=null,this._stagedPoint=null,this._snap=H(async(n,e,s,o)=>{const i=this._frameTask;if(c(i))return;const l=await i.schedule(()=>e.snap({...n,context:s,signal:o}),o);l.valid&&await i.schedule(()=>{this.stagedPoint=l.apply(),n!==this._snapPoints&&r(this._snapPoints)&&(this.stagedPoint=e.update({...this._snapPoints,context:s}))},o)})}get stagedPoint(){return this._stagedPoint}set stagedPoint(t){this._stagedPoint=this.constrainResult(t)}initialize(){var n,e;const t=this.view.type==="3d"?(e=(n=this.view)==null?void 0:n.resourceController)==null?void 0:e.scheduler:null;this._frameTask=r(t)?t.registerTask(U.SNAPPING):A}destroy(){this._abortController=T(this._abortController),this._frameTask=G(this._frameTask)}update(t,n,e){this._snapPoints=t;const{point:s,scenePoint:o}=t,i=n.update({point:s,scenePoint:o,context:e});return this.stagedPoint=i,i}async snap(t,n,e){const{point:s,scenePoint:o}=t;return this.stagedPoint=n.update({point:s,scenePoint:o,context:e}),this._snapPoints=t,c(this._abortController)&&(this._abortController=new AbortController),this._snap(t,n,e,this._abortController.signal)}async resnap(t,n){c(this._snapPoints)||await this.snap(this._snapPoints,t,n)}abort(){this._abortController=T(this._abortController),this._snapPoints=null}};v([y({constructOnly:!0})],g.prototype,"view",void 0),v([y()],g.prototype,"stagedPoint",null),v([y()],g.prototype,"constrainResult",void 0),v([y()],g.prototype,"_stagedPoint",void 0),g=v([V("esri.views.interactive.snapping.SnappingOperation")],g);export{g as h,pt as m};
