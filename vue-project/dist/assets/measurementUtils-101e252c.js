import{c1 as M,eB as y,cq as c,dy as b,fF as v,g$ as E,fA as k,ht as A,fo as x,hu as d,dd as G,hv as m,hw as h,fE as g,hx as w,ft as R}from"./mapviewstore-8a6f290e.js";import{geodesicArea as S}from"./geometryEngine-31bba3a2.js";import{b as P,v as q}from"./geodesicUtils-0ed15d7f.js";function F(t,n){const e=n.center;b(e,0,0,0);for(let r=0;r<t.length;++r)v(e,e,t[r]);E(e,e,1/t.length);let o=0;for(let r=0;r<t.length;++r)o=Math.max(o,k(e,t[r]));n.radius=Math.sqrt(o)}function W(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");A(t[0],t[1],t[2],n)}function _(t,n){return x(t,n)+t[3]}function j(t,n,e){return d(t,i,e)&&d(n,u,e)?G(i,u):0}function C(t,n){if(!m(t,i)||!m(n,u))return 0;const e=new q;return P(e,[i[0],i[1]],[u[0],u[1]]),e.distance}function D(t,n,e){const o=new q;return P(o,[t[0],t[1]],[n[0],n[1]],e),o.distance}function H(t,n,e,o){const r=T;return h(t,o,i)&&h(n,o,u)&&h(e,o,p)?(r.setPoint(0,0,i),r.setPoint(0,1,u),r.setPoint(0,2,p),Math.abs(S(r,"square-meters"))):0}function I(t,n=null,e=!0){const r=(a,f)=>{if(f[0]===0&&f[1]===0&&f[2]===0)return!1;for(let l=0;l<a.length;++l)if(x(f,a[l])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&g(n,t[0]),!0;b(s,0,0,0);for(let a=0;a<t.length;++a)v(s,s,t[a]);if(w(s,s),r(t,s))return n&&g(n,s),!0;if(!e)return!1;for(let a=0;a<t.length;++a)for(let f=0;f<t.length;++f)if(a!==f&&(R(s,t[a],t[f]),w(s,s),r(t,s)))return n&&g(n,s),!0;return!1}function J(t){return t.pointerType!=="mouse"||t.button===0}const i=c(),u=c(),p=c(),T=new M({rings:[[i,u,p]],spatialReference:y.WGS84}),s=c();export{J as E,_ as M,W as P,j as b,C as k,D as q,H as v,F as w,I as x};
